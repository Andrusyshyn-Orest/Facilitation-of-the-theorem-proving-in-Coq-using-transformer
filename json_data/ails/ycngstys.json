{
    "filename": "ycngstys.v",
    "coq_project": "ails",
    "vernac_cmds": [
        [
            "Section ycngstys.",
            "VernacBeginSection",
            "ffa4330d6c7f8e9d65d4dc3b6d246f07f7fec189"
        ],
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Import trajectory_def.",
            "VernacRequire",
            "2f188c3fa3e05ac565f1158a91cd827c10440d01"
        ],
        [
            "Require Import trajectory_const.",
            "VernacRequire",
            "2389ee65efa36a9e54251476c2bb8cdd2f692ae5"
        ],
        [
            "Require Import constants.",
            "VernacRequire",
            "7f70a36de744c5c16b3a666ff694ba115b3a3696"
        ],
        [
            "Require Import ycngftys.",
            "VernacRequire",
            "1bec4ead62a78494a948261b142be1f49bc369ea"
        ],
        [
            "Require Import rrho.",
            "VernacRequire",
            "b1ddaf030f5c1db5ac37677bcfee62db767aa732"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Variable intr : Trajectory.",
            "VernacAssumption",
            "b885c0ce8988f8b55447b2fef1e9fc76c1d0053c"
        ],
        [
            "Definition thetat : R -> R := theta intr.",
            "VernacDefinition",
            "7dec6bd2bfec6d29d1afbeceabc96458643a217e"
        ],
        [
            "Definition Rs (t : R) : R := sqrt (Rsqr (xi intr t - xi intr 0) + Rsqr (yi intr t - yi intr 0)).",
            "VernacDefinition",
            "cf6de674fcbbfd097d405f1b719f79ff1e76524b"
        ],
        [
            "Axiom alphas_exists : { f : Differential_D2 | forall t : R, xi intr t = (Rs t * cos (f t) + xi intr 0)%R /\\ yi intr t = (Rs t * sin (f t) + yi intr 0)%R }.",
            "VernacAssumption",
            "5362102bf9c9bfecd8f14255cdf1e30c2b2adcc1"
        ],
        [
            "Definition alphas := let (a,_) := alphas_exists in a.",
            "VernacDefinition",
            "d74e17710f91dc1121c9b52875aa265c13766f92"
        ],
        [
            "Lemma alphas_def : forall t : R, xi intr t = (Rs t * cos (alphas t) + xi intr 0)%R /\\ yi intr t = (Rs t * sin (alphas t) + yi intr 0)%R.",
            "VernacStartTheoremProof",
            "cffc382ceffa70bb3b85f7e761563779961a9d57"
        ],
        [
            "unfold alphas in |- *; case alphas_exists; trivial.",
            "VernacExtend",
            "9fc2eaddaabdac189953cfff6562bcc379e401d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rsx : forall t : R, xi intr t = (xi intr 0 + Rs t * cos (alphas t))%R.",
            "VernacStartTheoremProof",
            "7764eafce266a104b807c36f0ea6d0b8aa06651d"
        ],
        [
            "intros; generalize (alphas_def t); intro H; elim H; intros; rewrite Rplus_comm; assumption.",
            "VernacExtend",
            "a41c8eda9ab5c77e8b201200ca88ee679bc17626"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rsy : forall t : R, yi intr t = (yi intr 0 + Rs t * sin (alphas t))%R.",
            "VernacStartTheoremProof",
            "cc729731094f1c296ffe03a2010e15034fbbac3e"
        ],
        [
            "intros; generalize (alphas_def t); intro H; elim H; intros; rewrite Rplus_comm; assumption.",
            "VernacExtend",
            "a41c8eda9ab5c77e8b201200ca88ee679bc17626"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rs_x : forall t : R, cos (alphas t) <> 0%R -> Rs t = ((xi intr t - xi intr 0) / cos (alphas t))%R.",
            "VernacStartTheoremProof",
            "d588633a43ce4cdc6025500c5bcc3495b71c03bc"
        ],
        [
            "intros; rewrite Rsx; unfold Rminus, Rdiv in |- *; rewrite (Rplus_comm (xi intr 0)); rewrite Rplus_assoc; rewrite Rplus_opp_r; rewrite Rplus_0_r; rewrite Rmult_assoc; rewrite <- Rinv_r_sym; [ rewrite Rmult_1_r; reflexivity | assumption ].",
            "VernacExtend",
            "b5e54199b1b3c90f1fbea00c07001cb77279b9cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rs_y : forall t : R, sin (alphas t) <> 0%R -> Rs t = ((yi intr t - yi intr 0) / sin (alphas t))%R.",
            "VernacStartTheoremProof",
            "621fa9ed6752eab0f6ca3c748600cde8cbcd799a"
        ],
        [
            "intros; rewrite Rsy; unfold Rminus, Rdiv in |- *; rewrite (Rplus_comm (yi intr 0)); rewrite Rplus_assoc; rewrite Rplus_opp_r; rewrite Rplus_0_r; rewrite Rmult_assoc; rewrite <- Rinv_r_sym; [ rewrite Rmult_1_r; reflexivity | assumption ].",
            "VernacExtend",
            "d4ed02df176200c0098b56b9056ba2b2a7a4464e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rs_derivable : derivable Rs.",
            "VernacStartTheoremProof",
            "fa1127d44bfc7161715925e90ee58c00124dfe04"
        ],
        [
            "unfold derivable in |- *; intro.",
            "VernacExtend",
            "b6b997024b3aeb2bd86d88f8a2a0d7810613d5fa"
        ],
        [
            "case (total_order_T (cos (alphas x)) 0); intro.",
            "VernacExtend",
            "c5de01b0b341706e44f05126b0127ef72444628b"
        ],
        [
            "elim s; intro.",
            "VernacExtend",
            "dd079e27181883351bde5f69e76eb163523f0a2a"
        ],
        [
            "cut (cos (alphas x) <> 0%R).",
            "VernacExtend",
            "b2226963221cbc7b938d474d20cd984c074a707c"
        ],
        [
            "intro; cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> cos (alphas (x + h)%R) <> 0%R)).",
            "VernacExtend",
            "4dbb172abf33414c561eaf846423f1efb7e6e769"
        ],
        [
            "set (xi_p := fun t : R => xi intr t).",
            "VernacExtend",
            "2ecd8da9c27b3383e69c3ead896f474c4606eeff"
        ],
        [
            "intro; cut (derivable_pt (fun t : R => ((xi_p t - xi_p 0) / cos (alphas t))%R) x).",
            "VernacExtend",
            "c6d8c16557182e5d45a2d69cbf8c2db393207db7"
        ],
        [
            "intro X; unfold derivable_pt in X; elim X; intros l H1.",
            "VernacExtend",
            "3efff2ec85bfc044dd3e6f745eb94c9f39acf532"
        ],
        [
            "unfold derivable_pt in |- *; exists l.",
            "VernacExtend",
            "48abff2c195305123974d5a83dadfa04e1da64fb"
        ],
        [
            "unfold derivable_pt_abs in H1; unfold derivable_pt_lim in H1; unfold derivable_pt_abs in |- *; unfold derivable_pt_lim in |- *; intros.",
            "VernacExtend",
            "ed2e2cf992c57abc002e443994b621e1529293de"
        ],
        [
            "elim (H1 eps H2); intros del H3.",
            "VernacExtend",
            "15fef0e7034a003dd420b990a0bfd7822a3d08d0"
        ],
        [
            "elim H0; intros dom H4.",
            "VernacExtend",
            "df16647b6f23f362d9406195e4b468b1a912aee5"
        ],
        [
            "cut (0 < Rmin del dom)%R.",
            "VernacExtend",
            "6cce55359eb4de39d171a97216382819cfd01cb5"
        ],
        [
            "intro; exists (mkposreal (Rmin del dom) H5); intros.",
            "VernacExtend",
            "56f09f79fda4dc07cc02e426f3a4d9911630663b"
        ],
        [
            "repeat rewrite Rs_x.",
            "VernacExtend",
            "597f159b154e179b87d85e44d9255d11acee14ca"
        ],
        [
            "unfold xi_p in H3; apply H3.",
            "VernacExtend",
            "6b97b645bd483feac7f82d2044a85f7ae7af5944"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_l ].",
            "VernacExtend",
            "11818126b72e25405aae24b56f4a240bada95acf"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H4; apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_r ].",
            "VernacExtend",
            "e45eab5da6af2696d9912f1ad1242ca5b129fbc0"
        ],
        [
            "unfold Rmin in |- *; case (Rle_dec del dom); intro.",
            "VernacExtend",
            "eb0c5459cce3423c7602cf9adb8a20e9e3b2f5ce"
        ],
        [
            "apply (cond_pos del).",
            "VernacExtend",
            "ac01251087d8ed6a52f03fd522df5ae3ad740374"
        ],
        [
            "apply (cond_pos dom).",
            "VernacExtend",
            "671fc8306b40e1ae80285ff1bc3185ed1eaccaf5"
        ],
        [
            "set (alphas_p := d2 alphas); reg.",
            "VernacExtend",
            "d377723a7b390cd745a6d29a809e48f71c9f1abd"
        ],
        [
            "unfold alphas_p in |- *; apply (cond_D1 alphas).",
            "VernacExtend",
            "ac2c09f4eb652273e84daee19785c18fb430df4b"
        ],
        [
            "apply (xi_derivable intr x).",
            "VernacExtend",
            "09b973ba6caf19eb6afe0ece703631d0cd19fdc5"
        ],
        [
            "set (alphas_p := d2 alphas); set (f := fun t : R => cos (alphas_p t)).",
            "VernacExtend",
            "4146cd6cfac6503f5d9d8d10503b69099dd722b9"
        ],
        [
            "cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> f (x + h)%R <> 0%R)).",
            "VernacExtend",
            "aa2481ac65829d249960e1ef845f9c9cd2ddb39b"
        ],
        [
            "intro; elim H0; intros.",
            "VernacExtend",
            "374db79e6482fec65548ecf30bf5c4735e72248c"
        ],
        [
            "exists x0; intros; unfold f in H1; apply H1; assumption.",
            "VernacExtend",
            "f8e3c0a7091ea6990a40cfbacecff23cfbcfefd8"
        ],
        [
            "apply continuous_neq_0.",
            "VernacExtend",
            "cf0cbb8e3e874cb2a892ebca1d5527b353296a25"
        ],
        [
            "unfold f in |- *; reg; apply derivable_continuous_pt; apply (cond_D1 alphas).",
            "VernacExtend",
            "e59429491bfc99c5fbc69d129aded55b2c43723e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "red in |- *; intro; rewrite H in a; elim (Rlt_irrefl _ a).",
            "VernacExtend",
            "13fdeb2c401edf5ddde8025568e096d79d9a9b14"
        ],
        [
            "cut (sin (alphas x) <> 0%R).",
            "VernacExtend",
            "b1b8d21e1512e313a3e4caab2133e3d4b8fb0bff"
        ],
        [
            "intro; cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> sin (alphas (x + h)%R) <> 0%R)).",
            "VernacExtend",
            "1234aa92425c574f55b18c92c9035088a0b22520"
        ],
        [
            "set (yi_p := fun t : R => yi intr t).",
            "VernacExtend",
            "bd012484bdbe57f882903fea0877308d4bcaeb34"
        ],
        [
            "intro; cut (derivable_pt (fun t : R => ((yi_p t - yi_p 0) / sin (alphas t))%R) x).",
            "VernacExtend",
            "8ec3571eaa88adbdc4ca6d79bf40db3c8c3905bb"
        ],
        [
            "intro X; unfold derivable_pt in X.",
            "VernacExtend",
            "e8249a735fd7b0d9d4a4458aad76a2c66035467e"
        ],
        [
            "elim X; intros l H1.",
            "VernacExtend",
            "2e115732b20d604e42cad7df33ed65711f5d3b10"
        ],
        [
            "unfold derivable_pt in |- *; exists l.",
            "VernacExtend",
            "48abff2c195305123974d5a83dadfa04e1da64fb"
        ],
        [
            "unfold derivable_pt_abs in H1; unfold derivable_pt_lim in H1; unfold derivable_pt_abs in |- *; unfold derivable_pt_lim in |- *; intros.",
            "VernacExtend",
            "ed2e2cf992c57abc002e443994b621e1529293de"
        ],
        [
            "elim (H1 eps H2); intros del H3.",
            "VernacExtend",
            "15fef0e7034a003dd420b990a0bfd7822a3d08d0"
        ],
        [
            "elim H0; intros dom H4.",
            "VernacExtend",
            "df16647b6f23f362d9406195e4b468b1a912aee5"
        ],
        [
            "cut (0 < Rmin del dom)%R.",
            "VernacExtend",
            "6cce55359eb4de39d171a97216382819cfd01cb5"
        ],
        [
            "intro; exists (mkposreal (Rmin del dom) H5); intros.",
            "VernacExtend",
            "56f09f79fda4dc07cc02e426f3a4d9911630663b"
        ],
        [
            "repeat rewrite Rs_y.",
            "VernacExtend",
            "9644a16839b74c9d0f2a73d83f261924bede6796"
        ],
        [
            "unfold yi_p in H3; apply H3.",
            "VernacExtend",
            "d06807c37ae72e0c97dd6c5fa56128233ff91610"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_l ].",
            "VernacExtend",
            "11818126b72e25405aae24b56f4a240bada95acf"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H4; apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_r ].",
            "VernacExtend",
            "e45eab5da6af2696d9912f1ad1242ca5b129fbc0"
        ],
        [
            "unfold Rmin in |- *; case (Rle_dec del dom); intro.",
            "VernacExtend",
            "eb0c5459cce3423c7602cf9adb8a20e9e3b2f5ce"
        ],
        [
            "apply (cond_pos del).",
            "VernacExtend",
            "ac01251087d8ed6a52f03fd522df5ae3ad740374"
        ],
        [
            "apply (cond_pos dom).",
            "VernacExtend",
            "671fc8306b40e1ae80285ff1bc3185ed1eaccaf5"
        ],
        [
            "set (alphas_p := d2 alphas); reg.",
            "VernacExtend",
            "d377723a7b390cd745a6d29a809e48f71c9f1abd"
        ],
        [
            "unfold alphas_p in |- *; apply (cond_D1 alphas).",
            "VernacExtend",
            "ac2c09f4eb652273e84daee19785c18fb430df4b"
        ],
        [
            "apply (yi_derivable intr x).",
            "VernacExtend",
            "4bc237c2b4569939a4599eaaeb94e94ef690cc62"
        ],
        [
            "set (alphas_p := d2 alphas); set (f := fun t : R => sin (alphas_p t)).",
            "VernacExtend",
            "db5641096e52a32edadf2f828beb656897837e3e"
        ],
        [
            "cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> f (x + h)%R <> 0%R)).",
            "VernacExtend",
            "aa2481ac65829d249960e1ef845f9c9cd2ddb39b"
        ],
        [
            "intro; elim H0; intros.",
            "VernacExtend",
            "374db79e6482fec65548ecf30bf5c4735e72248c"
        ],
        [
            "exists x0; intros; unfold f in H1; apply H1; assumption.",
            "VernacExtend",
            "f8e3c0a7091ea6990a40cfbacecff23cfbcfefd8"
        ],
        [
            "apply continuous_neq_0.",
            "VernacExtend",
            "cf0cbb8e3e874cb2a892ebca1d5527b353296a25"
        ],
        [
            "unfold f in |- *; reg; apply derivable_continuous_pt; apply (cond_D1 alphas).",
            "VernacExtend",
            "e59429491bfc99c5fbc69d129aded55b2c43723e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assert (H := cos_sin_0_var (alphas x)); elim H; intro.",
            "VernacExtend",
            "e0ba255c5884be767521f3cedc6816c4b4260cb7"
        ],
        [
            "elim H0; assumption.",
            "VernacExtend",
            "f893c02cbb3a00a06056628d1667434bc5c5a86d"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "cut (cos (alphas x) <> 0%R).",
            "VernacExtend",
            "b2226963221cbc7b938d474d20cd984c074a707c"
        ],
        [
            "intro; cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> cos (alphas (x + h)%R) <> 0%R)).",
            "VernacExtend",
            "4dbb172abf33414c561eaf846423f1efb7e6e769"
        ],
        [
            "set (xi_p := fun t : R => xi intr t).",
            "VernacExtend",
            "2ecd8da9c27b3383e69c3ead896f474c4606eeff"
        ],
        [
            "intro; cut (derivable_pt (fun t : R => ((xi_p t - xi_p 0) / cos (alphas t))%R) x).",
            "VernacExtend",
            "c6d8c16557182e5d45a2d69cbf8c2db393207db7"
        ],
        [
            "intro X; unfold derivable_pt in X; elim X; intros l H1.",
            "VernacExtend",
            "3efff2ec85bfc044dd3e6f745eb94c9f39acf532"
        ],
        [
            "unfold derivable_pt in |- *; exists l.",
            "VernacExtend",
            "48abff2c195305123974d5a83dadfa04e1da64fb"
        ],
        [
            "unfold derivable_pt_abs in H1; unfold derivable_pt_lim in H1; unfold derivable_pt_abs in |- *; unfold derivable_pt_lim in |- *; intros.",
            "VernacExtend",
            "ed2e2cf992c57abc002e443994b621e1529293de"
        ],
        [
            "elim (H1 eps H2); intros del H3.",
            "VernacExtend",
            "15fef0e7034a003dd420b990a0bfd7822a3d08d0"
        ],
        [
            "elim H0; intros dom H4.",
            "VernacExtend",
            "df16647b6f23f362d9406195e4b468b1a912aee5"
        ],
        [
            "cut (0 < Rmin del dom)%R.",
            "VernacExtend",
            "6cce55359eb4de39d171a97216382819cfd01cb5"
        ],
        [
            "intro; exists (mkposreal (Rmin del dom) H5); intros.",
            "VernacExtend",
            "56f09f79fda4dc07cc02e426f3a4d9911630663b"
        ],
        [
            "repeat rewrite Rs_x.",
            "VernacExtend",
            "597f159b154e179b87d85e44d9255d11acee14ca"
        ],
        [
            "unfold xi_p in H3; apply H3.",
            "VernacExtend",
            "6b97b645bd483feac7f82d2044a85f7ae7af5944"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_l ].",
            "VernacExtend",
            "11818126b72e25405aae24b56f4a240bada95acf"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H4; apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_r ].",
            "VernacExtend",
            "e45eab5da6af2696d9912f1ad1242ca5b129fbc0"
        ],
        [
            "unfold Rmin in |- *; case (Rle_dec del dom); intro.",
            "VernacExtend",
            "eb0c5459cce3423c7602cf9adb8a20e9e3b2f5ce"
        ],
        [
            "apply (cond_pos del).",
            "VernacExtend",
            "ac01251087d8ed6a52f03fd522df5ae3ad740374"
        ],
        [
            "apply (cond_pos dom).",
            "VernacExtend",
            "671fc8306b40e1ae80285ff1bc3185ed1eaccaf5"
        ],
        [
            "set (alphas_p := d2 alphas); reg.",
            "VernacExtend",
            "d377723a7b390cd745a6d29a809e48f71c9f1abd"
        ],
        [
            "unfold alphas_p in |- *; apply (cond_D1 alphas).",
            "VernacExtend",
            "ac2c09f4eb652273e84daee19785c18fb430df4b"
        ],
        [
            "apply (xi_derivable intr x).",
            "VernacExtend",
            "09b973ba6caf19eb6afe0ece703631d0cd19fdc5"
        ],
        [
            "set (alphas_p := d2 alphas); set (f := fun t : R => cos (alphas_p t)).",
            "VernacExtend",
            "4146cd6cfac6503f5d9d8d10503b69099dd722b9"
        ],
        [
            "cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> f (x + h)%R <> 0%R)).",
            "VernacExtend",
            "aa2481ac65829d249960e1ef845f9c9cd2ddb39b"
        ],
        [
            "intro; elim H0; intros.",
            "VernacExtend",
            "374db79e6482fec65548ecf30bf5c4735e72248c"
        ],
        [
            "exists x0; intros; unfold f in H1; apply H1; assumption.",
            "VernacExtend",
            "f8e3c0a7091ea6990a40cfbacecff23cfbcfefd8"
        ],
        [
            "apply continuous_neq_0.",
            "VernacExtend",
            "cf0cbb8e3e874cb2a892ebca1d5527b353296a25"
        ],
        [
            "unfold f in |- *; reg; apply derivable_continuous_pt; apply (cond_D1 alphas).",
            "VernacExtend",
            "e59429491bfc99c5fbc69d129aded55b2c43723e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "red in |- *; intro; rewrite H in r; elim (Rlt_irrefl _ r).",
            "VernacExtend",
            "aeacf271d61807bf13d3d275acaba92ea348c21a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition alphas_p : R -> R := d2 alphas.",
            "VernacDefinition",
            "d0477f9f26e18cedc2e597680e2efe170812bf65"
        ],
        [
            "Lemma fct_der4 : forall t : R, derivable_pt ((Rs * comp cos alphas_p)%F + fct_cte (xi intr 0)) t.",
            "VernacStartTheoremProof",
            "beb7306a4c6a6229d96a5b9eee2d124a12a884ec"
        ],
        [
            "intro; reg.",
            "VernacExtend",
            "ccf8f7334f322d5297b28e8981b599428495a7a6"
        ],
        [
            "apply (cond_D1 alphas).",
            "VernacExtend",
            "9b0f81c04a8325c8502f4feaaae20faa487b9583"
        ],
        [
            "apply Rs_derivable.",
            "VernacExtend",
            "dece200389edbf8f63e6eb001444c8e6f8bd1d54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Dxi : forall t : R, derive_pt (xi intr) t (xi_derivable intr t) = (derive_pt Rs t (Rs_derivable t) * cos (alphas t) - Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t))%R.",
            "VernacStartTheoremProof",
            "74ae04a64810757dab91742f4833c675b8ddd459"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H := fct_der4).",
            "VernacExtend",
            "df17cddc8585b928f2be8edae49473507f9f81a0"
        ],
        [
            "replace (derive_pt (xi intr) t (xi_derivable intr t)) with (derive_pt ((Rs * comp cos alphas_p)%F + fct_cte (xi intr 0)) t (H t)).",
            "VernacExtend",
            "7832609b7385f519c5e0831b27cc4e5d556c2f2d"
        ],
        [
            "unfold plus_fct, mult_fct, comp, fct_cte in |- *.",
            "VernacExtend",
            "eb92d7f3904fc82fa9c0396aa7d3b93d3e2bb63b"
        ],
        [
            "set (H0 := Rs_derivable t).",
            "VernacExtend",
            "76a06a58fd3c78261379ec638bce02ada7fc6a45"
        ],
        [
            "cut (derivable_pt alphas_p t); [ intro X | apply (cond_D1 alphas) ].",
            "VernacExtend",
            "5076b66a0dec723c93e810df14af8c95d7e7afd6"
        ],
        [
            "replace (derive_pt alphas t (cond_D1 alphas t)) with (derive_pt alphas_p t X); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "82ee97f2ac9498747542e433f31d1e2767cebe34"
        ],
        [
            "reg.",
            "VernacExtend",
            "200773634894b8319f51d08aac98d6835b0db846"
        ],
        [
            "unfold comp, alphas_p in |- *; ring.",
            "VernacExtend",
            "cfe98d94ab70ed1170beab5342d63a3cc55bf25a"
        ],
        [
            "unfold derive_pt in |- *.",
            "VernacExtend",
            "0586c7fdbf62caa7a13fffb86c8a89a360547170"
        ],
        [
            "case (H t).",
            "VernacExtend",
            "73130fb5ff5cb9131256ab70df595074b6793562"
        ],
        [
            "case (xi_derivable intr t).",
            "VernacExtend",
            "26fc83e662e623c284148a5e0a2a69a8ad6f7bfd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply uniqueness_limite.",
            "VernacExtend",
            "d2f1fa0aef9fb38e077bc121d7cc9746f0f75b35"
        ],
        [
            "unfold derivable_pt_abs in d0.",
            "VernacExtend",
            "283bb8b914f2b0327332b6144c1281c4dd7cb1f0"
        ],
        [
            "apply d0.",
            "VernacExtend",
            "2bf4cc473d1b52ecffde5059f9d730fecac5f1b9"
        ],
        [
            "unfold derivable_pt_lim in |- *; intros.",
            "VernacExtend",
            "a20ff8eb80507306544faac85c14ba31dc6809e2"
        ],
        [
            "unfold derivable_pt_abs in d; unfold derivable_pt_lim in d.",
            "VernacExtend",
            "7984b225d7546a76fc08f80a6289a343e86badd6"
        ],
        [
            "elim (d eps H0); intros.",
            "VernacExtend",
            "1376e9decb1da499e7c52c5250d32f513773ea34"
        ],
        [
            "exists x1; intros.",
            "VernacExtend",
            "610abdfde35cc7d198dd8cf63ca1b43d89c9b1f3"
        ],
        [
            "unfold plus_fct, mult_fct, comp, fct_cte in |- *.",
            "VernacExtend",
            "eb92d7f3904fc82fa9c0396aa7d3b93d3e2bb63b"
        ],
        [
            "assert (H4 := H1 _ H2 H3).",
            "VernacExtend",
            "09deb29d09bee3a86f511aa77d12b7d5464cf595"
        ],
        [
            "replace ((Rs (t + h) * cos (alphas_p (t + h)) + xi intr 0 - (Rs t * cos (alphas_p t) + xi intr 0)) / h - x)%R with ((xi intr (t + h) - xi intr t) / h - x)%R.",
            "VernacExtend",
            "105e8a05a61222bb00192fbc3d9fca1969347762"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "rewrite (Rsx t).",
            "VernacExtend",
            "f1ea41f6e4c3e10070841a2995dbb942747e73ea"
        ],
        [
            "rewrite (Rsx (t + h)).",
            "VernacExtend",
            "605c310b266802d4d65d532d54c3ef999463f34d"
        ],
        [
            "replace (xi intr 0 + Rs (t + h) * cos (alphas (t + h)) - (xi intr 0 + Rs t * cos (alphas t)))%R with (Rs (t + h) * cos (alphas_p (t + h)) + xi intr 0 - (Rs t * cos (alphas_p t) + xi intr 0))%R.",
            "VernacExtend",
            "d8e51d92d69a476705cb8b457378baa94d63bcff"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold alphas_p in |- *; ring.",
            "VernacExtend",
            "485eef0610f9972a362b38414a91a3b8fa98ebc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Dyi : forall t : R, derive_pt (yi intr) t (yi_derivable intr t) = (derive_pt Rs t (Rs_derivable t) * sin (alphas t) + Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t))%R.",
            "VernacStartTheoremProof",
            "3019f567dcd430219cca07d83bc1f4fa525e0765"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "set (H := Rs_derivable t).",
            "VernacExtend",
            "cdef3890ed3a347aa42055696feb2dae5090e870"
        ],
        [
            "cut (derivable_pt alphas_p t); [ intro X | apply (cond_D1 alphas) ].",
            "VernacExtend",
            "5076b66a0dec723c93e810df14af8c95d7e7afd6"
        ],
        [
            "cut (derivable_pt ((Rs * comp sin alphas_p)%F + fct_cte (yi intr 0)) t); [ intro X0 | reg ].",
            "VernacExtend",
            "d35e7f604884b86d1ae72e0f626e14467ae83b73"
        ],
        [
            "replace (derive_pt (yi intr) t (yi_derivable intr t)) with (derive_pt ((Rs * comp sin alphas_p)%F + fct_cte (yi intr 0)) t X0).",
            "VernacExtend",
            "ab485a419bf1627941cffda578188aa00c18cb03"
        ],
        [
            "replace (derive_pt alphas t (cond_D1 alphas t)) with (derive_pt alphas_p t X); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "82ee97f2ac9498747542e433f31d1e2767cebe34"
        ],
        [
            "unfold plus_fct, mult_fct, comp, fct_cte in |- *.",
            "VernacExtend",
            "eb92d7f3904fc82fa9c0396aa7d3b93d3e2bb63b"
        ],
        [
            "reg.",
            "VernacExtend",
            "200773634894b8319f51d08aac98d6835b0db846"
        ],
        [
            "unfold comp, alphas_p in |- *; ring.",
            "VernacExtend",
            "cfe98d94ab70ed1170beab5342d63a3cc55bf25a"
        ],
        [
            "unfold derive_pt in |- *.",
            "VernacExtend",
            "0586c7fdbf62caa7a13fffb86c8a89a360547170"
        ],
        [
            "case X0.",
            "VernacExtend",
            "a07b4d18809c7a43bd6ebf2a34fe07fc75783a83"
        ],
        [
            "case (yi_derivable intr t).",
            "VernacExtend",
            "506ccf629d525e677f83053e0e34d9f34359369c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply uniqueness_limite.",
            "VernacExtend",
            "d2f1fa0aef9fb38e077bc121d7cc9746f0f75b35"
        ],
        [
            "unfold derivable_pt_abs in d0.",
            "VernacExtend",
            "283bb8b914f2b0327332b6144c1281c4dd7cb1f0"
        ],
        [
            "apply d0.",
            "VernacExtend",
            "2bf4cc473d1b52ecffde5059f9d730fecac5f1b9"
        ],
        [
            "unfold derivable_pt_lim in |- *; intros.",
            "VernacExtend",
            "a20ff8eb80507306544faac85c14ba31dc6809e2"
        ],
        [
            "unfold derivable_pt_abs in d; unfold derivable_pt_lim in d.",
            "VernacExtend",
            "7984b225d7546a76fc08f80a6289a343e86badd6"
        ],
        [
            "elim (d eps H0); intros.",
            "VernacExtend",
            "1376e9decb1da499e7c52c5250d32f513773ea34"
        ],
        [
            "exists x1; intros.",
            "VernacExtend",
            "610abdfde35cc7d198dd8cf63ca1b43d89c9b1f3"
        ],
        [
            "unfold plus_fct, mult_fct, comp, fct_cte in |- *.",
            "VernacExtend",
            "eb92d7f3904fc82fa9c0396aa7d3b93d3e2bb63b"
        ],
        [
            "assert (H4 := H1 _ H2 H3).",
            "VernacExtend",
            "09deb29d09bee3a86f511aa77d12b7d5464cf595"
        ],
        [
            "replace ((Rs (t + h) * sin (alphas_p (t + h)) + yi intr 0 - (Rs t * sin (alphas_p t) + yi intr 0)) / h - x)%R with ((yi intr (t + h) - yi intr t) / h - x)%R.",
            "VernacExtend",
            "854f110fc5d90ba78b68aea2a748543a32c9f416"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "rewrite (Rsy t).",
            "VernacExtend",
            "a142aaa4377dd4e9fea08895ddd0626fa284c9bb"
        ],
        [
            "rewrite (Rsy (t + h)).",
            "VernacExtend",
            "b0ee018c3fe8c6f1d9c331e5e417b86a19ffd4b0"
        ],
        [
            "replace (yi intr 0 + Rs (t + h) * sin (alphas (t + h)) - (yi intr 0 + Rs t * sin (alphas t)))%R with (Rs (t + h) * sin (alphas_p (t + h)) + yi intr 0 - (Rs t * sin (alphas_p t) + yi intr 0))%R.",
            "VernacExtend",
            "f4cafc3a9656e868fe7b102c70a1d3f01098c5f2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold alphas_p in |- *; ring.",
            "VernacExtend",
            "485eef0610f9972a362b38414a91a3b8fa98ebc7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DRs_cos : forall t : R, (derive_pt Rs t (Rs_derivable t) * cos (alphas t) - Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t))%R = (vi intr * cos (thetat t))%R.",
            "VernacStartTheoremProof",
            "e7881d6efa871f0a5ef8510c25696919afe5829e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H := Dxi t).",
            "VernacExtend",
            "3cf610d91d9a893196961b438e07d41ce579bc3d"
        ],
        [
            "unfold xi in H.",
            "VernacExtend",
            "1188b5e58c78490ed1c2aaf6bd8bb15c325f4fe8"
        ],
        [
            "assert (H0 := cond_x intr t).",
            "VernacExtend",
            "1949fa2aa3d73139ed7ea400cb40c8f342680a73"
        ],
        [
            "cut (derive_pt (x intr) t (xi_derivable intr t) = derive_pt (x intr) t (cond_diff (x intr) t)); [ intro | apply pr_nu ].",
            "VernacExtend",
            "d66498f7f442ea18e9832843bbf0d08bb4142f70"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "unfold vi, thetat in |- *; symmetry in |- *; assumption.",
            "VernacExtend",
            "cd95a6042c3d4eda563a03ec2f0972c60324a291"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DRs_sin : forall t : R, (derive_pt Rs t (Rs_derivable t) * sin (alphas t) + Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t))%R = (vi intr * sin (thetat t))%R.",
            "VernacStartTheoremProof",
            "cbf04f5f0219557f91bb2161efa9dacc293bbb9e"
        ],
        [
            "intro; assert (H := Dyi t).",
            "VernacExtend",
            "107785a562158b7d36d536bc264d6be5e80fd487"
        ],
        [
            "unfold yi in H; assert (H0 := cond_y intr t).",
            "VernacExtend",
            "1454dfbd1422f26a5bae5a1bef3d76104b459e2d"
        ],
        [
            "cut (derive_pt (y intr) t (yi_derivable intr t) = derive_pt (y intr) t (cond_diff (y intr) t)); [ intro | apply pr_nu ].",
            "VernacExtend",
            "62514937a3dd6ca1ce9e90842dcd71d3c7890095"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "unfold vi, thetat in |- *; symmetry in |- *; assumption.",
            "VernacExtend",
            "cd95a6042c3d4eda563a03ec2f0972c60324a291"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_plus_eq_is_eq : forall x y z t : R, x = y -> z = t -> (x + z)%R = (y + t)%R.",
            "VernacStartTheoremProof",
            "7b009a3ab636391429b77b21ec1a0854185cd1ce"
        ],
        [
            "intros; rewrite H; rewrite H0; reflexivity.",
            "VernacExtend",
            "ea9fcc0ce72d54ffdc9e95505eece4d4cafcb97d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma DRs : forall t : R, derive_pt Rs t (Rs_derivable t) = (vi intr * cos (thetat t - alphas t))%R.",
            "VernacStartTheoremProof",
            "8a614d35b005620eaa2bda0b8634a802befb4e1e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H := DRs_cos t).",
            "VernacExtend",
            "b6ed35eee86eb75129e9e8410cc6ae6e33534a60"
        ],
        [
            "assert (H0 := DRs_sin t).",
            "VernacExtend",
            "b8f0dc73f8b557e74d6570c287cc5c876779779a"
        ],
        [
            "assert (H1 := Rmult_eq_compat_l (cos (alphas t)) _ _ H).",
            "VernacExtend",
            "9bef71f9870f5c1af016bd6a8c7b60f80942d769"
        ],
        [
            "assert (H2 := Rmult_eq_compat_l (sin (alphas t)) _ _ H0).",
            "VernacExtend",
            "64fec9975d904acd2f331d3cc600084413c7ae63"
        ],
        [
            "replace (derive_pt Rs t (Rs_derivable t)) with (cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t) - Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t) + Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t)))%R.",
            "VernacExtend",
            "3c698aee987c5eb6d77695a441acd54d55a21955"
        ],
        [
            "replace (vi intr * cos (thetat t - alphas t))%R with (cos (alphas t) * (vi intr * cos (thetat t)) + sin (alphas t) * (vi intr * sin (thetat t)))%R.",
            "VernacExtend",
            "ddafffe18abe845690c6899f049eb85639c852e7"
        ],
        [
            "apply eq_plus_eq_is_eq; assumption.",
            "VernacExtend",
            "bc081286926925de39ab305fc3423dc0fac1509f"
        ],
        [
            "rewrite cos_minus; ring.",
            "VernacExtend",
            "0724719fea967a3a3f599a7faf1d53e8172350fe"
        ],
        [
            "unfold Rminus in |- *.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "repeat rewrite Rmult_plus_distr_l.",
            "VernacExtend",
            "981a4d8e052f6d5141e9c491ab06aa5b04051d58"
        ],
        [
            "replace (cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t)) + cos (alphas t) * - (Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + (sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t)) + sin (alphas t) * (Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t))))%R with (derive_pt Rs t (Rs_derivable t) * (Rsqr (sin (alphas t)) + Rsqr (cos (alphas t))) + cos (alphas t) * - (Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + sin (alphas t) * (Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t)))%R; [ idtac | unfold Rsqr in |- *; ring ].",
            "VernacExtend",
            "5e98e241b97de4501a424de521bad89f8449fa9b"
        ],
        [
            "rewrite sin2_cos2; ring.",
            "VernacExtend",
            "015b779c44abe4bc96314b63ac1238a21bbcd5b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rs_alphas : forall t : R, (Rs t * derive_pt alphas t (cond_D1 alphas t))%R = (vi intr * sin (thetat t - alphas t))%R.",
            "VernacStartTheoremProof",
            "6a919d20fab567b0db205d936053bb456e2d9d3d"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H := DRs_cos t).",
            "VernacExtend",
            "b6ed35eee86eb75129e9e8410cc6ae6e33534a60"
        ],
        [
            "assert (H0 := DRs_sin t).",
            "VernacExtend",
            "b8f0dc73f8b557e74d6570c287cc5c876779779a"
        ],
        [
            "assert (H1 := Rmult_eq_compat_l (- sin (alphas t)) _ _ H).",
            "VernacExtend",
            "a2723abd8af5abaa055a1f26b1b2bc13d44afd04"
        ],
        [
            "assert (H2 := Rmult_eq_compat_l (cos (alphas t)) _ _ H0).",
            "VernacExtend",
            "2cc77c8e5079207b6e11fb640b7b4e457ce3947a"
        ],
        [
            "replace (Rs t * derive_pt alphas t (cond_D1 alphas t))%R with (- sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t) - Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t) + Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t)))%R.",
            "VernacExtend",
            "56612ce660c37127c1c9882563fb1ff471270c2a"
        ],
        [
            "replace (vi intr * sin (thetat t - alphas t))%R with (- sin (alphas t) * (vi intr * cos (thetat t)) + cos (alphas t) * (vi intr * sin (thetat t)))%R.",
            "VernacExtend",
            "f4d060ab68fb86e89a880584b876ffc208277a54"
        ],
        [
            "apply eq_plus_eq_is_eq; assumption.",
            "VernacExtend",
            "bc081286926925de39ab305fc3423dc0fac1509f"
        ],
        [
            "rewrite sin_minus; ring.",
            "VernacExtend",
            "b5c02662e23ca751c53f9b8ac8c97ea9564d4269"
        ],
        [
            "unfold Rminus in |- *.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "repeat rewrite Rmult_plus_distr_l.",
            "VernacExtend",
            "981a4d8e052f6d5141e9c491ab06aa5b04051d58"
        ],
        [
            "replace (- sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t)) + - sin (alphas t) * - (Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + (cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t)) + cos (alphas t) * (Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t))))%R with (Rs t * derive_pt alphas t (cond_D1 alphas t) * (Rsqr (sin (alphas t)) + Rsqr (cos (alphas t))) + cos (alphas t) * - sin (alphas t) * derive_pt Rs t (Rs_derivable t) + sin (alphas t) * cos (alphas t) * derive_pt Rs t (Rs_derivable t))%R; [ idtac | unfold Rsqr in |- *; ring ].",
            "VernacExtend",
            "ab9a6f4f637b39bb4961e0d7b5587ca583d3d55e"
        ],
        [
            "rewrite sin2_cos2; ring.",
            "VernacExtend",
            "015b779c44abe4bc96314b63ac1238a21bbcd5b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fct_der5 : forall t : R, derivable_pt (fun y : R => (Rs y * derive_pt alphas y (cond_D1 alphas y))%R) t.",
            "VernacStartTheoremProof",
            "f4cc8d0cfca66f5fee6bac928052e3f2b1ad9d4d"
        ],
        [
            "intro; set (alpha_p := d2 alphas); set (f := fun x : R => derive_pt alpha_p x (cond_D1 alphas x)).",
            "VernacExtend",
            "73aeb38cd21c811f96100fb5bae7dea0dbd4f6cb"
        ],
        [
            "change (derivable_pt (fun y : R => (Rs y * f y)%R) t) in |- *.",
            "VernacExtend",
            "ffa0246d54da1a72de95ce035648eea4fcfc4f79"
        ],
        [
            "reg.",
            "VernacExtend",
            "200773634894b8319f51d08aac98d6835b0db846"
        ],
        [
            "apply (cond_D2 alphas).",
            "VernacExtend",
            "79ea73b1cf1333e5d78713ccb29c64f9d3023a23"
        ],
        [
            "apply Rs_derivable.",
            "VernacExtend",
            "dece200389edbf8f63e6eb001444c8e6f8bd1d54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_Rs_alphas1 : forall t : R, derive_pt (fun y : R => (Rs y * derive_pt alphas y (cond_D1 alphas y))%R) t (fct_der5 t) = (derive_pt Rs t (Rs_derivable t) * derive_pt alphas t (cond_D1 alphas t) + Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t))%R.",
            "VernacStartTheoremProof",
            "370a14fe0158faa12a44c06c1510d37a4d47c144"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "set (f := fun x : R => derive_pt alphas x (cond_D1 alphas x)).",
            "VernacExtend",
            "0e5cd60d9efc28edf6c655566c67c71b0f87da0c"
        ],
        [
            "replace (derive_pt (fun y : R => (Rs y * derive_pt alphas y (cond_D1 alphas y))%R) t (fct_der5 t)) with (derive_pt (fun y : R => (Rs y * f y)%R) t (fct_der5 t)); [ idtac | reflexivity ].",
            "VernacExtend",
            "a3f3c0156e1a89d54822a01fefe8c85ef3f9cc9a"
        ],
        [
            "replace (derive_pt alphas t (cond_D1 alphas t)) with (f t); [ idtac | reflexivity ].",
            "VernacExtend",
            "3b38834dc0f25599bd4e6794344d366df94fcf4a"
        ],
        [
            "replace (derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t)) with (derive_pt f t (cond_D2 alphas t)); [ idtac | reflexivity ].",
            "VernacExtend",
            "b5d6135bd37a4052d7b333d05d2c58b1a7db534b"
        ],
        [
            "cut (derivable_pt Rs t); [ intro X | apply Rs_derivable ].",
            "VernacExtend",
            "1522c037c14e204069a802c00efe3d7246127cfa"
        ],
        [
            "cut (derivable_pt f t); [ intro X0 | apply (cond_D2 alphas) ].",
            "VernacExtend",
            "0e0fadb619502de6c3a7583f5281387109126fd3"
        ],
        [
            "reg.",
            "VernacExtend",
            "200773634894b8319f51d08aac98d6835b0db846"
        ],
        [
            "replace (derive_pt f t (cond_D2 alphas t)) with (derive_pt f t X0); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "3342b508476d5e6c2ff622d0d1a913d863d40f6b"
        ],
        [
            "replace (derive_pt Rs t (Rs_derivable t)) with (derive_pt Rs t X); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "c68d569c2c87963d56a175179760d26459b4f246"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma thetat_derivable : derivable thetat.",
            "VernacStartTheoremProof",
            "7bcfc5ff680ecda19ef6b990f92fa277a0334217"
        ],
        [
            "unfold thetat in |- *; apply (cond_diff (theta intr)).",
            "VernacExtend",
            "dda50b4eac637ec659d128e1392ead64e8984b85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_Rs_alphas2 : forall t : R, derive_pt (fun y : R => (Rs y * derive_pt alphas y (cond_D1 alphas y))%R) t (fct_der5 t) = (vi intr * cos (thetat t - alphas t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)))%R.",
            "VernacStartTheoremProof",
            "dcf029980329e6600bdfb7df4687de436491b647"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (derivable_pt (fun x : R => (vi intr * sin (thetat x - alphas x))%R) t).",
            "VernacExtend",
            "7885c611db059cf0932899c671ff2d87afbb4958"
        ],
        [
            "intro X.",
            "VernacExtend",
            "c93bbb51ef8637991b4239865469e36d8e520337"
        ],
        [
            "replace (derive_pt (fun y : R => (Rs y * derive_pt alphas y (cond_D1 alphas y))%R) t (fct_der5 t)) with (derive_pt (fun x : R => (vi intr * sin (thetat x - alphas x))%R) t X).",
            "VernacExtend",
            "590f061a4769cea8ca8150f53591b0aa33cb1a6d"
        ],
        [
            "set (f := d2 alphas).",
            "VernacExtend",
            "dae7875aaa4177529f5418a7e277425231fb2978"
        ],
        [
            "cut (derivable_pt f t); [ intro X0 | apply (cond_D1 alphas) ].",
            "VernacExtend",
            "6d8a0a21e26570d596ab0c3c44731d00019d8ea8"
        ],
        [
            "cut (derivable_pt thetat t); [ intro X1 | apply thetat_derivable ].",
            "VernacExtend",
            "073da3868e34ae09bfd96a6b5dcf6a87b5f73a2c"
        ],
        [
            "reg.",
            "VernacExtend",
            "200773634894b8319f51d08aac98d6835b0db846"
        ],
        [
            "unfold fct_cte, minus_fct in |- *.",
            "VernacExtend",
            "494861187b49b14f4815a1c5ee205238822b5ecb"
        ],
        [
            "replace (derive_pt f t (cond_D1 alphas t)) with (derive_pt f t X0); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "f5c143e85f31629afc826788f5344662a8dcf209"
        ],
        [
            "replace (derive_pt thetat t (thetat_derivable t)) with (derive_pt thetat t X1); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "e6dd50200300e9eab47c6f84caecb6a8e9d7695e"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold derive_pt in |- *.",
            "VernacExtend",
            "0586c7fdbf62caa7a13fffb86c8a89a360547170"
        ],
        [
            "case X; case (fct_der5 t); simpl; intros.",
            "VernacExtend",
            "8609f23cd4a18b9913b77b63bdf0caaf6229a1c0"
        ],
        [
            "eapply uniqueness_limite.",
            "VernacExtend",
            "d2f1fa0aef9fb38e077bc121d7cc9746f0f75b35"
        ],
        [
            "unfold derivable_pt_abs in d0; apply d0.",
            "VernacExtend",
            "933a56d617855c829ac0422075b2238f9d506826"
        ],
        [
            "unfold derivable_pt_lim in |- *; intros.",
            "VernacExtend",
            "a20ff8eb80507306544faac85c14ba31dc6809e2"
        ],
        [
            "unfold derivable_pt_abs in d; unfold derivable_pt_lim in d; elim (d eps H); intros.",
            "VernacExtend",
            "542fc269dab71c91812b7ea1cb486dcae2193374"
        ],
        [
            "exists x1; intros.",
            "VernacExtend",
            "610abdfde35cc7d198dd8cf63ca1b43d89c9b1f3"
        ],
        [
            "do 2 rewrite <- Rs_alphas.",
            "VernacExtend",
            "51d3c5ce410da651f85b0cbcdb461956ef855956"
        ],
        [
            "apply H0; assumption.",
            "VernacExtend",
            "6b55086dea19d45e0fd04d897d6b583689aff105"
        ],
        [
            "fold alphas_p in |- *; reg.",
            "VernacExtend",
            "90cbeed8a448d7acaf884396b82d368c741d327b"
        ],
        [
            "apply (cond_D1 alphas).",
            "VernacExtend",
            "9b0f81c04a8325c8502f4feaaae20faa487b9583"
        ],
        [
            "apply thetat_derivable.",
            "VernacExtend",
            "fd3e6934ffd094b723c17b2c2db5e5f090d4e0ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_Rs_2 : forall t : R, (derive_pt Rs t (Rs_derivable t) * (2 * derive_pt alphas t (cond_D1 alphas t) - derive_pt thetat t (thetat_derivable t)))%R = (- Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t))%R.",
            "VernacStartTheoremProof",
            "994c39a3535b2305ba12f4dc2e3ef3744b9718a2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H := D_Rs_alphas1 t).",
            "VernacExtend",
            "342e973d9bc0738042dab5719f601aebe9845345"
        ],
        [
            "assert (H0 := D_Rs_alphas2 t).",
            "VernacExtend",
            "126e6e18bf5fc19fc12bb19e3e616b00faf83e6a"
        ],
        [
            "assert (H1 := DRs t).",
            "VernacExtend",
            "4145da3c21da92e5fe2d6be0bdf8dd213c05a404"
        ],
        [
            "rewrite H in H0; rewrite <- H1 in H0.",
            "VernacExtend",
            "8333066357762b73924405997c03f4f22b000c33"
        ],
        [
            "assert (H2 := Rplus_eq_compat_l (- derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)) + - Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t)) _ _ H0).",
            "VernacExtend",
            "05eb51b067117c21cc0cc66930a5a4760bf28362"
        ],
        [
            "cut ((- derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)) + - Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t) + (derive_pt Rs t (Rs_derivable t) * derive_pt alphas t (cond_D1 alphas t) + Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t)))%R = (derive_pt Rs t (Rs_derivable t) * (2 * derive_pt alphas t (cond_D1 alphas t) - derive_pt thetat t (thetat_derivable t)))%R); [ intro | ring ].",
            "VernacExtend",
            "19c0c5ec6d1f0783a3ab19f7d93a1334483aace9"
        ],
        [
            "cut ((- derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)) + - Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t) + derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)))%R = (- Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t))%R); [ intro | ring ].",
            "VernacExtend",
            "bd5c2757d512653fa515c35a218dfafa5860078a"
        ],
        [
            "rewrite H3 in H2; rewrite H4 in H2.",
            "VernacExtend",
            "7a2ea329f4f7d982c3e9133b0a82c724f7ba1629"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rsqr_DRs : forall t : R, (Rsqr (derive_pt Rs t (Rs_derivable t)) + Rsqr (Rs t) * Rsqr (derive_pt alphas t (cond_D1 alphas t)))%R = Rsqr (vi intr).",
            "VernacStartTheoremProof",
            "608081bfd6a94996c06a3070d87c55229eb32f4b"
        ],
        [
            "intro; rewrite <- Rsqr_mult; rewrite DRs; rewrite Rs_alphas; repeat rewrite Rsqr_mult; rewrite Rplus_comm; rewrite <- (Rmult_comm (Rsqr (cos (thetat t - alphas t)))); rewrite <- (Rmult_comm (Rsqr (sin (thetat t - alphas t)))); rewrite <- Rmult_plus_distr_r; rewrite sin2_cos2; rewrite Rmult_1_l; reflexivity.",
            "VernacExtend",
            "690a4b72f702553f8bd1780cb426754fcbcd8e7a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rs_pos : forall t : R, (0 <= Rs t)%R.",
            "VernacStartTheoremProof",
            "ea24a2223679bd41d8dd6d026287c72218272251"
        ],
        [
            "intro; unfold Rs in |- *; apply sqrt_positivity; apply Rplus_le_le_0_compat; apply Rle_0_sqr.",
            "VernacExtend",
            "64128f1553f32d0efdcf0fab86947039b368a69c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rs_0 : Rs 0 = 0%R.",
            "VernacStartTheoremProof",
            "0ffcca5fda567c1aae8ea8ba3611f3d715a0bfa6"
        ],
        [
            "unfold Rs in |- *; unfold Rminus in |- *; repeat rewrite Rplus_opp_r; repeat rewrite Rsqr_0; rewrite Rplus_0_r; rewrite sqrt_0; reflexivity.",
            "VernacExtend",
            "a01516f5aa7610ca60ab7634073b88ef156cc68a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_Rs_0 : (0 <= derive_pt Rs 0 (Rs_derivable 0))%R.",
            "VernacStartTheoremProof",
            "aa2444738b61296b35fdcd8d75a4e988bde95d76"
        ],
        [
            "case (Rtotal_order 0 (derive_pt Rs 0 (Rs_derivable 0%R))); intro.",
            "VernacExtend",
            "f8662621e3317a9e6382e50bc656157f3bd5eb3a"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "elim H; intro.",
            "VernacExtend",
            "f72f8bb994653bc377ef4f37626cba5f2cab4c8b"
        ],
        [
            "right; assumption.",
            "VernacExtend",
            "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
        ],
        [
            "generalize (derivable_derive Rs 0 (Rs_derivable 0%R)); intro; elim H1; intros l H2; rewrite H2 in H0.",
            "VernacExtend",
            "3c86a74a39b5aca183333f7ca2da282f8afb753c"
        ],
        [
            "generalize (derive_pt_eq_1 Rs 0 l (Rs_derivable 0%R) H2); intros; cut (0 < - (l / 2))%R.",
            "VernacExtend",
            "8019dd9258ece02159e3ee8da26b3a578bd32ada"
        ],
        [
            "intro H4; elim (H3 (- (l / 2))%R H4).",
            "VernacExtend",
            "79c5aa7f7b44b3b65e7b0a1ca6af3ed46a35de77"
        ],
        [
            "intros; cut ((x / 2)%R <> 0%R).",
            "VernacExtend",
            "e539d8d28d942d6fc696a709757435d616bfa991"
        ],
        [
            "intro H6; cut (Rabs (x / 2) < x)%R.",
            "VernacExtend",
            "0471109793ad033de02588638207c916542bfbf1"
        ],
        [
            "intro H7; generalize (H5 (x / 2)%R H6 H7); intro H8; rewrite Rs_0 in H8; rewrite Rplus_0_l in H8; unfold Rminus in H8; rewrite Ropp_0 in H8; rewrite Rplus_0_r in H8; generalize (Rabs_def2 (Rs (x / 2) / (x / 2) + - l) (- (l / 2)) H8); intro H9; elim H9; intros; generalize (Rplus_lt_compat_r l (Rs (x / 2) / (x / 2) + - l) (- (l / 2)) H10); rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; replace (- (l / 2) + l)%R with (l / 2)%R.",
            "VernacExtend",
            "b5eef667b33cd2ad2103cda23b6f72b2bcad5649"
        ],
        [
            "intro H12; cut (l / 2 < 0)%R.",
            "VernacExtend",
            "cbde637d723c1342781e41a407832cf9ca68a1fb"
        ],
        [
            "intro H13; generalize (Rlt_trans (Rs (x / 2) / (x / 2)) (l / 2) 0 H12 H13); intro H14; unfold Rdiv in H14; cut (0 < x * / 2)%R.",
            "VernacExtend",
            "cd6461fae98f47490f9650a193e074702b82835e"
        ],
        [
            "intro H15; generalize (Rmult_lt_compat_r (x * / 2) (Rs (x * / 2) * / (x * / 2)) 0 H15 H14); rewrite Rmult_0_l; rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "5f44b45e5369981e6e5d922681f912b19ba9d5a3"
        ],
        [
            "rewrite Rmult_1_r; intro H16; elim (Rlt_irrefl 0 (Rle_lt_trans 0 (Rs (x * / 2)) 0 (Rs_pos (x * / 2)) H16)).",
            "VernacExtend",
            "c87d5391286215811142c13c5f825af94bd7712b"
        ],
        [
            "apply prod_neq_R0.",
            "VernacExtend",
            "4e401b99cc3c24b61ca502aa7107071c427501ea"
        ],
        [
            "generalize (cond_pos x); intro H16; red in |- *; intro H17; rewrite H17 in H16; elim (Rlt_irrefl 0 H16).",
            "VernacExtend",
            "595f9e3f3f7588a8677edcfae4163b0daf6ee586"
        ],
        [
            "apply Rinv_neq_0_compat; discrR.",
            "VernacExtend",
            "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
        ],
        [
            "apply Rmult_lt_0_compat; [ apply (cond_pos x) | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "b1495b1e8a4cd2660af2a823a996380a6c97d671"
        ],
        [
            "assert (Hyp : (0 < 2)%R).",
            "VernacExtend",
            "d7c9281a4466f1fbc5c70497125c201b3766bd07"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "unfold Rdiv in |- *; generalize (Rmult_lt_compat_r (/ 2) l 0 (Rinv_0_lt_compat 2 Hyp) H0); rewrite Rmult_0_l; intro H13; exact H13.",
            "VernacExtend",
            "6d5d88bb15ddf22b4e478eca4180c6b1484cfcd7"
        ],
        [
            "pattern l at 3 in |- *; rewrite double_var.",
            "VernacExtend",
            "d25254082c5ffe1044ba1bed05f1a15d645f0aa5"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "cut (0 < x / 2)%R.",
            "VernacExtend",
            "fc44853b91e16b7e47c3189f3d4ee448716a6686"
        ],
        [
            "intro H7; apply Rabs_def1.",
            "VernacExtend",
            "bee5417b4c3cc958711081ae5bbbafbc7ed25f01"
        ],
        [
            "pattern x at 1 in |- *; replace (pos x) with (2 * (x / 2))%R.",
            "VernacExtend",
            "b59b117fbb92687198ac405cac8318f848dbaf99"
        ],
        [
            "pattern (x / 2)%R at 1 in |- *; replace (x / 2)%R with (x / 2 + 0)%R.",
            "VernacExtend",
            "39ab5c60f297fb787fc1e800af8e895cb044a453"
        ],
        [
            "replace (2 * (x / 2))%R with (x / 2 + x / 2)%R.",
            "VernacExtend",
            "2ebed9f5139185f29ba02e43a40af69a3e68c7a2"
        ],
        [
            "apply Rplus_lt_compat_l; assumption.",
            "VernacExtend",
            "44ce99cd422bdcc117c49c3d0f1b9cfdbe5e3579"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Rplus_0_r.",
            "VernacExtend",
            "c92685166837d4e0d69b0a5ef9f020e1b5f0a32d"
        ],
        [
            "pattern (pos x) at 2 in |- *; rewrite double_var.",
            "VernacExtend",
            "112b6a1d8dc1be6e8f71f25a74d04de93342b6fc"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Rlt_trans with 0%R.",
            "VernacExtend",
            "c5df96511ac56b2579e529e471722dd538fa045d"
        ],
        [
            "rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; apply (cond_pos x).",
            "VernacExtend",
            "f728899e9dd3c30285ba35046c3d0fca586492ca"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ apply (cond_pos x) | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "ba81246412c87a6056178da195df91b0b07ad48e"
        ],
        [
            "unfold Rdiv in |- *; apply prod_neq_R0.",
            "VernacExtend",
            "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
        ],
        [
            "generalize (cond_pos x); intro H6; red in |- *; intro H7; rewrite H7 in H6; elim (Rlt_irrefl 0 H6).",
            "VernacExtend",
            "83604856788d6858470e3889c075090e83a80314"
        ],
        [
            "apply Rinv_neq_0_compat; discrR.",
            "VernacExtend",
            "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
        ],
        [
            "assert (Hyp : (0 < 2)%R).",
            "VernacExtend",
            "d7c9281a4466f1fbc5c70497125c201b3766bd07"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "unfold Rdiv in |- *; rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; generalize (Rmult_lt_compat_r (/ 2) l 0 (Rinv_0_lt_compat 2 Hyp) H0); rewrite Rmult_0_l; intro H4; assumption.",
            "VernacExtend",
            "8fe67a5851cbe24fe37001618d0c159ce9867df3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_sym : forall x y : R, x = y -> y = x.",
            "VernacStartTheoremProof",
            "d940886ea74b04341eda1ec439f6cefa0fde5803"
        ],
        [
            "intros; rewrite H; reflexivity.",
            "VernacExtend",
            "56d8ebe070934265219de9b6580d0d60c2fadceb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_Rs_0_strong : (0 < derive_pt Rs 0 (Rs_derivable 0))%R.",
            "VernacStartTheoremProof",
            "b07b7879750d82bcbd74873fbcd4686569a34597"
        ],
        [
            "case (Rtotal_order 0 (derive_pt Rs 0 (Rs_derivable 0%R))); intro.",
            "VernacExtend",
            "f8662621e3317a9e6382e50bc656157f3bd5eb3a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H; intro.",
            "VernacExtend",
            "f72f8bb994653bc377ef4f37626cba5f2cab4c8b"
        ],
        [
            "generalize (Rsqr_DRs 0); intro H1; rewrite <- H0 in H1; rewrite Rs_0 in H1; repeat rewrite Rsqr_0 in H1; rewrite Rplus_0_l in H1; rewrite Rmult_0_l in H1; generalize (eq_sym 0 (Rsqr (vi intr)) H1).",
            "VernacExtend",
            "158a9711f695f71174171aaf84ff1be3b0296a4c"
        ],
        [
            "clear H1; intro H1; generalize (Rsqr_eq_0 (vi intr) H1).",
            "VernacExtend",
            "d2019ec01b09ee4834c03d69f478a44e060847a5"
        ],
        [
            "intro H2; generalize (TypeSpeed_pos (vi intr)); intro H3; rewrite H2 in H3; elim (Rlt_irrefl 0 H3).",
            "VernacExtend",
            "43c95f98e93c0c1f89426b9c6cbda534c9179f67"
        ],
        [
            "generalize D_Rs_0; intro H1; elim (Rlt_irrefl 0 (Rle_lt_trans 0 (derive_pt Rs 0 (Rs_derivable 0%R)) 0 H1 H0)).",
            "VernacExtend",
            "b0594aa3b3dfd2a285c87293a52effe3b9942cc4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_alphas_0 : (2 * derive_pt alphas 0 (cond_D1 alphas 0))%R = derive_pt thetat 0 (thetat_derivable 0%R).",
            "VernacStartTheoremProof",
            "9640c82f804f420915a852cd3a585f8ffe55f3ee"
        ],
        [
            "generalize (D_Rs_2 0); intro; rewrite Rs_0 in H; rewrite Ropp_0 in H; rewrite Rmult_0_l in H; generalize (Rmult_integral (derive_pt Rs 0 (Rs_derivable 0%R)) (2 * derive_pt alphas 0 (cond_D1 alphas 0%R) - derive_pt thetat 0 (thetat_derivable 0%R)) H); intro H1; elim H1; intro; generalize D_Rs_0_strong; intro.",
            "VernacExtend",
            "95dc5f234b1a7c586b0b2e82c2384589165ecf42"
        ],
        [
            "rewrite H0 in H2; elim (Rlt_irrefl 0 H2).",
            "VernacExtend",
            "48c505eddfdd58a92e075d2736e96f08ced009a8"
        ],
        [
            "generalize (Rminus_diag_uniq_sym (derive_pt thetat 0 (thetat_derivable 0%R)) (2 * derive_pt alphas 0 (cond_D1 alphas 0%R)) H0); intro; symmetry in |- *; assumption.",
            "VernacExtend",
            "fa55027bbde858cc66d7d77a8ab06e9bc3093fd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_Rs_pos_non_null : forall t : R, (0 < t)%R -> (forall x : R, (0 < x < t)%R -> (0 < derive_pt Rs x (Rs_derivable x))%R) -> (0 < Rs t)%R.",
            "VernacStartTheoremProof",
            "e78a22ca61a9bf1697a22b60d855b36acf69e950"
        ],
        [
            "intros; generalize (derive_increasing_interv 0 t Rs Rs_derivable H H0); intros; cut (0 <= 0 <= t)%R; [ cut (0 <= t <= t)%R; [ intros; rewrite <- Rs_0; apply (H1 0%R t H3 H2 H) | split; [ left; assumption | right; reflexivity ] ] | split; [ right; reflexivity | left; assumption ] ].",
            "VernacExtend",
            "be5207806f0464ffbeeb3bd81d46af098ff1d57f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom D_Rs_pos : forall t : R, (0 <= t)%R -> (t < 2 / rho (vi intr))%R -> (0 < derive_pt Rs t (Rs_derivable t))%R.",
            "VernacAssumption",
            "17bddf5491586a9abde470f1e54c4481e3c170be"
        ],
        [
            "Axiom D_abs_alpha : forall t : R, (0 <= t)%R -> (t < 2 / rho (vi intr))%R -> (- rho (vi intr) / 2 <= derive_pt alphas t (cond_D1 alphas t))%R /\\ (derive_pt alphas t (cond_D1 alphas t) <= rho (vi intr) / 2)%R.",
            "VernacAssumption",
            "d9ce2c2b7f93ff44062b6a62810db57ce2d76648"
        ],
        [
            "Definition F (t : R) : R := (2 * (vi intr / rho (vi intr)) * sin (rho (vi intr) * (t / 2)))%R.",
            "VernacDefinition",
            "e843332d839503cc26d8f2d91d71de5afb671463"
        ],
        [
            "Lemma F_derivable : derivable F.",
            "VernacStartTheoremProof",
            "b53c3b0dbbbf9654ec63d4a40182a69cff09127f"
        ],
        [
            "unfold F in |- *; reg.",
            "VernacExtend",
            "b9fb5bf8c3f7f7458282ed59d73f18f51d9c0ae4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_F : forall t : R, derive_pt F t (F_derivable t) = (vi intr * cos (rho (vi intr) * (t / 2)))%R.",
            "VernacStartTheoremProof",
            "18677818a819fdac5e9b6d7121920ec05cf3fbdd"
        ],
        [
            "intro; unfold F in |- *; reg.",
            "VernacExtend",
            "462b4419d8c48a396ebe87af7b24bddd7414910e"
        ],
        [
            "unfold Rdiv in |- *; field.",
            "VernacExtend",
            "7d032f065991c9470adfa51cb7e156ea00c9f139"
        ],
        [
            "assert (H0 := rho_pos (vi intr)); red in |- *; intro; rewrite H in H0; elim (Rlt_irrefl 0 H0).",
            "VernacExtend",
            "89a296dc249cc79dea71a13a858b55c45311e7e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_F_Rsqr_v : forall t : R, (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (rho (vi intr) / 2) * Rsqr (F t))%R = Rsqr (vi intr).",
            "VernacStartTheoremProof",
            "43f5aea06d07c97659006e66aabad4cc107b3e9e"
        ],
        [
            "intro; rewrite (D_F t); rewrite <- Rsqr_mult; cut ((rho (vi intr) / 2 * F t)%R = (vi intr * sin (rho (vi intr) * (t / 2)))%R).",
            "VernacExtend",
            "a2f38947f59092aab48e362a3f1866ba15e5b6e0"
        ],
        [
            "intro H; rewrite H; repeat rewrite Rsqr_mult; replace (Rsqr (vi intr) * Rsqr (cos (rho (vi intr) * (t / 2))) + Rsqr (vi intr) * Rsqr (sin (rho (vi intr) * (t / 2))))%R with (Rsqr (vi intr) * (Rsqr (sin (rho (vi intr) * (t / 2))) + Rsqr (cos (rho (vi intr) * (t / 2)))))%R.",
            "VernacExtend",
            "4950d27f0270dbc036a8f8f2e8bb91436227509c"
        ],
        [
            "rewrite sin2_cos2; rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "bc5de4970db91c99ef3aa215a9b3bce9219b333d"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold F in |- *; unfold Rdiv in |- *; rewrite <- Rmult_assoc; replace (rho (vi intr) * / 2 * (2 * (vi intr * / rho (vi intr))))%R with (2 * / 2 * (rho (vi intr) * / rho (vi intr)) * vi intr)%R.",
            "VernacExtend",
            "1df28ead1be72785294761c1f9fe274f6e696f07"
        ],
        [
            "repeat rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "aae49efd20d6d574ee1c8aae171bff8f3d77260f"
        ],
        [
            "repeat rewrite Rmult_1_l; reflexivity.",
            "VernacExtend",
            "02a14230bc0fdf974ce38184a0c55bda5536e15d"
        ],
        [
            "generalize (rho_pos (vi intr)); intro; red in |- *; intro; rewrite H0 in H; elim (Rlt_irrefl 0 H).",
            "VernacExtend",
            "52147498ba5776b9570918c322482e7013f84779"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition G (t : R) : R := (Rs t - F t)%R.",
            "VernacDefinition",
            "1a020170b664fe34532403db4e775af2f6471961"
        ],
        [
            "Lemma G_derivable : derivable G.",
            "VernacStartTheoremProof",
            "5e5f358c16cbd5b44ba5eeba4d17a989ed6ad6f4"
        ],
        [
            "unfold G in |- *; reg.",
            "VernacExtend",
            "912a2dfda86d33dcd75b7282de80e8175d969bb9"
        ],
        [
            "apply F_derivable.",
            "VernacExtend",
            "9b6a5a715c121485d22cf795451133f79211a94f"
        ],
        [
            "apply Rs_derivable.",
            "VernacExtend",
            "dece200389edbf8f63e6eb001444c8e6f8bd1d54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_G_alphas : forall t : R, (derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t)))%R = (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * G t * (Rs t + F t) + Rsqr (F t) * (Rsqr (rho (vi intr) / 2) - Rsqr (derive_pt alphas t (cond_D1 alphas t))))%R.",
            "VernacStartTheoremProof",
            "0c60e06e42d3e98913d7a262b09f6df0c0c012da"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (derive_pt G t (G_derivable t) = (derive_pt Rs t (Rs_derivable t) - derive_pt F t (F_derivable t))%R).",
            "VernacExtend",
            "150adb2227b851bc94223599b1429394e4a03f8f"
        ],
        [
            "intro; rewrite H; rewrite (Rsqr_minus_plus (derive_pt Rs t (Rs_derivable t)) (derive_pt F t (F_derivable t))); unfold G in |- *; repeat rewrite Rmult_assoc; rewrite (Rsqr_minus_plus (Rs t) (F t)).",
            "VernacExtend",
            "eca274910abbe0bbcd596f8304ca420332ce6bed"
        ],
        [
            "replace (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * (Rsqr (Rs t) - Rsqr (F t)) + Rsqr (F t) * (Rsqr (rho (vi intr) / 2) - Rsqr (derive_pt alphas t (cond_D1 alphas t))))%R with (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + Rsqr (F t) * Rsqr (rho (vi intr) / 2))%R.",
            "VernacExtend",
            "8fb0d534bf66aee28e18569ea542bf33f4d19db5"
        ],
        [
            "apply Rplus_eq_reg_l with (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t))%R.",
            "VernacExtend",
            "be3b7bba861b1a5fc84dba61de7f5c0c34ec687e"
        ],
        [
            "replace (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + (Rsqr (derive_pt Rs t (Rs_derivable t)) - Rsqr (derive_pt F t (F_derivable t))))%R with (Rsqr (derive_pt Rs t (Rs_derivable t)) + Rsqr (Rs t) * Rsqr (derive_pt alphas t (cond_D1 alphas t)))%R.",
            "VernacExtend",
            "82ba532c2dcfc7da5ff17b434d2409693e13f0c5"
        ],
        [
            "replace (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + Rsqr (F t) * Rsqr (rho (vi intr) / 2)))%R with (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (rho (vi intr) / 2) * Rsqr (F t))%R.",
            "VernacExtend",
            "f7bedd9f8f30f3cd64319b487b684236bb77cd3b"
        ],
        [
            "rewrite Rsqr_DRs; rewrite D_F_Rsqr_v; reflexivity.",
            "VernacExtend",
            "b999209ada3d955a352d40164a35c4579ef8a91f"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold G in |- *.",
            "VernacExtend",
            "ff39da39f3ba21f96e7114ca5af788dda7a94c87"
        ],
        [
            "cut (derivable_pt Rs t); [ intro X | apply Rs_derivable ].",
            "VernacExtend",
            "1522c037c14e204069a802c00efe3d7246127cfa"
        ],
        [
            "cut (derivable_pt F t); [ intro X0 | apply F_derivable ].",
            "VernacExtend",
            "5f85634969217481a6d3929dfbe3e640daaeb7cb"
        ],
        [
            "reg.",
            "VernacExtend",
            "200773634894b8319f51d08aac98d6835b0db846"
        ],
        [
            "replace (derive_pt F t (F_derivable t)) with (derive_pt F t X0); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "7c367c8a3a702c9c47c3bf02b6d1f4c7feb7bbc2"
        ],
        [
            "replace (derive_pt Rs t (Rs_derivable t)) with (derive_pt Rs t X); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "c68d569c2c87963d56a175179760d26459b4f246"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rlt_1_PI2 : (1 < PI / 2)%R.",
            "VernacStartTheoremProof",
            "ddd8e00d3f1681f7ec62658598c3f528e298f79e"
        ],
        [
            "generalize PI_approx; intro; elim H; intros.",
            "VernacExtend",
            "031fd6513005291cb8168d64cd9591005cbfe104"
        ],
        [
            "apply Rlt_le_trans with (PI_lb / 2)%R.",
            "VernacExtend",
            "3ea041d10c7a69b9e79ae13ed20ce7897b9f2127"
        ],
        [
            "unfold PI_lb in |- *; unfold Rdiv in |- *; apply Rmult_lt_reg_l with 2%R.",
            "VernacExtend",
            "88a80983e1dc37ad2e4617508c1279f882c13bc3"
        ],
        [
            "prove_sup.",
            "VernacExtend",
            "57e294f00a65db3fc7f5dddeca8e78f99f4a4330"
        ],
        [
            "rewrite Rmult_1_r; rewrite <- Rmult_assoc; rewrite Rinv_r_simpl_m; [ prove_sup | discrR ].",
            "VernacExtend",
            "0705f6c29d00ceb2959eb9dad6389a9d13f6f74f"
        ],
        [
            "left; unfold Rdiv in |- *; repeat rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l; [ apply Rinv_0_lt_compat; prove_sup | assumption ].",
            "VernacExtend",
            "cada688bafcda9a09f463753981dc21d75e99e37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_G_pos : forall t : R, (0 <= t)%R -> (t < 2 / rho (vi intr))%R -> (G t <= 0)%R -> (0 <= derive_pt G t (G_derivable t))%R.",
            "VernacStartTheoremProof",
            "372692da69e4b850b1988b0ff46c64f05b594829"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (Rcase_abs (derive_pt G t (G_derivable t))); intro.",
            "VernacExtend",
            "a13e5d6efdc3532c62b30009d4c53ba6b0c2760f"
        ],
        [
            "generalize (D_G_alphas t); intro.",
            "VernacExtend",
            "beba21eec809591ab66bd177dcf7c983be6eeb05"
        ],
        [
            "generalize (D_Rs_pos t H H0); intro.",
            "VernacExtend",
            "13d295f9fb50bdd026b677760f1fc88315f20c82"
        ],
        [
            "cut (0 <= derive_pt F t (F_derivable t))%R.",
            "VernacExtend",
            "f5755c1b0cef1b48dc6c9ff2ee695ea10544b600"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (Rs_pos t); intro.",
            "VernacExtend",
            "5e0eed6f808e4f00ad518240705d622b31b1588e"
        ],
        [
            "cut (0 <= F t)%R.",
            "VernacExtend",
            "49387acef4e7357a13bcdb3cc44de4f8b28a8d34"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t)) < 0)%R.",
            "VernacExtend",
            "edc2fcd2be3a314c4ff2997959c890ee52c68f08"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (0 <= - Rsqr (derive_pt alphas t (cond_D1 alphas t)) * G t * (Rs t + F t) + Rsqr (F t) * (Rsqr (rho (vi intr) / 2) - Rsqr (derive_pt alphas t (cond_D1 alphas t))))%R.",
            "VernacExtend",
            "8409192761780585b3ea7fb4da0c852eb0c691b4"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite <- H2 in H8.",
            "VernacExtend",
            "3598516d9208172bf391b9fe265367ea48ff67ce"
        ],
        [
            "elim (Rlt_irrefl 0 (Rle_lt_trans 0 (derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t))) 0 H8 H7)).",
            "VernacExtend",
            "0e036f55a6f23daadbdf4342a280c26a39f18b7f"
        ],
        [
            "apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
        ],
        [
            "replace (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * G t * (Rs t + F t))%R with (Rsqr (derive_pt alphas t (cond_D1 alphas t)) * - G t * (Rs t + F t))%R.",
            "VernacExtend",
            "bf546319765ba95a64c51ff0d655d98a772fd5be"
        ],
        [
            "repeat simple apply Rmult_le_pos.",
            "VernacExtend",
            "8eec10d0618f809b648ba22789f01aa215dec9ce"
        ],
        [
            "apply Rle_0_sqr.",
            "VernacExtend",
            "dab150eb3bf9ea450741d52bf434375cb024aaf1"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_ge_le_contravar.",
            "VernacExtend",
            "2445c11f217e81db53e7f4c9cd6785fe138d34b0"
        ],
        [
            "apply Rle_ge; assumption.",
            "VernacExtend",
            "c27a21368652da47eed6ddb4de9c567783a51975"
        ],
        [
            "apply Rplus_le_le_0_compat; assumption.",
            "VernacExtend",
            "1726baef67fe0c3f7d55674968ad524b9ca14d50"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply Rle_0_sqr.",
            "VernacExtend",
            "dab150eb3bf9ea450741d52bf434375cb024aaf1"
        ],
        [
            "apply Rplus_le_reg_l with (Rsqr (derive_pt alphas t (cond_D1 alphas t))).",
            "VernacExtend",
            "bf2b55894da3b2dd00a73cad1a4a88286032ab04"
        ],
        [
            "rewrite Rplus_0_r.",
            "VernacExtend",
            "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
        ],
        [
            "unfold Rminus in |- *.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "repeat rewrite Rplus_assoc.",
            "VernacExtend",
            "3e4d560f9364fe46fca6cfe96a5270dde8732236"
        ],
        [
            "rewrite Rplus_opp_l.",
            "VernacExtend",
            "55e9f717c5b98ad065802667fa3fb1cf9124328a"
        ],
        [
            "rewrite Rplus_0_r.",
            "VernacExtend",
            "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
        ],
        [
            "generalize (D_abs_alpha t H H0); intro.",
            "VernacExtend",
            "3433d3f64a4ee84cc49c29b1305a0c24b03d1a5f"
        ],
        [
            "elim H8; intros.",
            "VernacExtend",
            "54bacf1a2e9fa49626cbb57c551336659e39bf7a"
        ],
        [
            "case (Rtotal_order 0 (derive_pt alphas t (cond_D1 alphas t))); intro.",
            "VernacExtend",
            "e99b0eb520bc99ec94af8fa7081e38d721226c9d"
        ],
        [
            "apply Rsqr_incr_1.",
            "VernacExtend",
            "64ae3af2603c81607c9a07cf7aa8ad1285eefc50"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "unfold Rdiv in |- *; left; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "a5c0d123553c8c5d1219d42002d15a8e2acdad31"
        ],
        [
            "apply rho_pos.",
            "VernacExtend",
            "435b5840ac187cfec1dac893ecbe6e8ee533b451"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "elim H11; intros.",
            "VernacExtend",
            "a7cf45caa907d3df786f8024a77c860939c2444d"
        ],
        [
            "rewrite <- H12.",
            "VernacExtend",
            "535d97bd150861302e54cffeb5719d00d6f597bb"
        ],
        [
            "rewrite Rsqr_0.",
            "VernacExtend",
            "3ca5d0e1b11e8ab92eb9bb2841c82e89196ffb1d"
        ],
        [
            "apply Rle_0_sqr.",
            "VernacExtend",
            "dab150eb3bf9ea450741d52bf434375cb024aaf1"
        ],
        [
            "rewrite (Rsqr_neg (derive_pt alphas t (cond_D1 alphas t))).",
            "VernacExtend",
            "43b9dc9fcfbfe2218b26be3a1e812c618f20fe10"
        ],
        [
            "apply Rsqr_incr_1.",
            "VernacExtend",
            "64ae3af2603c81607c9a07cf7aa8ad1285eefc50"
        ],
        [
            "rewrite <- (Ropp_involutive (rho (vi intr) / 2)).",
            "VernacExtend",
            "8ffa2155a90d22c315446e5cbcfa39be2e3ef157"
        ],
        [
            "apply Ropp_ge_le_contravar.",
            "VernacExtend",
            "2445c11f217e81db53e7f4c9cd6785fe138d34b0"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "replace (- (rho (vi intr) / 2))%R with (- rho (vi intr) / 2)%R.",
            "VernacExtend",
            "7312ae248cedc2c6602750604821fbf5953a6949"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Rdiv in |- *; ring.",
            "VernacExtend",
            "c3a49fbaad57b642408a849290bec67d6d720029"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_ge_le_contravar; apply Rle_ge; left; assumption.",
            "VernacExtend",
            "39aaa75a2a4cadea48f21fa59713695b62704858"
        ],
        [
            "unfold Rdiv in |- *; left; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "a5c0d123553c8c5d1219d42002d15a8e2acdad31"
        ],
        [
            "apply rho_pos.",
            "VernacExtend",
            "435b5840ac187cfec1dac893ecbe6e8ee533b451"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "rewrite <- (Ropp_involutive 0).",
            "VernacExtend",
            "5b63f7ed03c8b9447bfdf10f4b8a4c66d9cf01d6"
        ],
        [
            "replace (derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t)))%R with (- (- derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t))))%R.",
            "VernacExtend",
            "9f5f65908776dcef279c698dd01acb42d6682319"
        ],
        [
            "apply Ropp_lt_gt_contravar.",
            "VernacExtend",
            "1f2b80da142820b364e7a9330a3a9a0c402521ce"
        ],
        [
            "rewrite Ropp_0.",
            "VernacExtend",
            "9db22f1ea38a12245c17fb1a0e93c5f55b418530"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; assumption.",
            "VernacExtend",
            "4ce8e866b38a86eeaa291d3f36269de10621fe4f"
        ],
        [
            "apply Rplus_lt_le_0_compat; assumption.",
            "VernacExtend",
            "12113fdd7b51d0edde97b5a6eb5733fe5b5a12ee"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold F in |- *.",
            "VernacExtend",
            "66ac246af1db766a34d2cfc9def814a9ee83af70"
        ],
        [
            "repeat simple apply Rmult_le_pos.",
            "VernacExtend",
            "8eec10d0618f809b648ba22789f01aa215dec9ce"
        ],
        [
            "left; prove_sup0.",
            "VernacExtend",
            "0496d8f7fedff100b2a6a6c475d34e4594f44524"
        ],
        [
            "unfold Rdiv in |- *; left; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "a5c0d123553c8c5d1219d42002d15a8e2acdad31"
        ],
        [
            "apply TypeSpeed_pos.",
            "VernacExtend",
            "c0a4e037872b3b3184905ebd4d019a4d0738c7fb"
        ],
        [
            "apply Rinv_0_lt_compat; apply rho_pos.",
            "VernacExtend",
            "292330e1a8e0ae33071884c109482163940a79d4"
        ],
        [
            "apply sin_ge_0.",
            "VernacExtend",
            "5a0c3f6b4390aeefe14444e688488f5ebf38607b"
        ],
        [
            "unfold Rdiv in |- *; repeat simple apply Rmult_le_pos.",
            "VernacExtend",
            "7d4f279a3b70726663a0cfe01db37eb2cc279faf"
        ],
        [
            "left; apply rho_pos.",
            "VernacExtend",
            "e5821a33b207431e0f87bc802b3280f5bca391f7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
        ],
        [
            "left; apply Rlt_trans with 1%R.",
            "VernacExtend",
            "0ab482278eeb0186d3b697c4766acf766f137915"
        ],
        [
            "unfold Rdiv in |- *.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "apply Rmult_lt_reg_l with (2 * / rho (vi intr))%R.",
            "VernacExtend",
            "b7034d3470aa98c3da216c353f3b96c4ad657fef"
        ],
        [
            "apply Rmult_lt_0_compat; [ prove_sup0 | apply Rinv_0_lt_compat; apply rho_pos ].",
            "VernacExtend",
            "71dc765402682111d0cedd70d47aa0db67ae4fdc"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "replace (2 * / rho (vi intr) * (rho (vi intr) * (t * / 2)))%R with t.",
            "VernacExtend",
            "763b962f28180c0314708fa42ab1d7c0ac1210d0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "repeat rewrite <- Rmult_assoc.",
            "VernacExtend",
            "645aebe2c3685a4f868a05a2372130cedecea85e"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r; symmetry in |- *; apply Rmult_1_l.",
            "VernacExtend",
            "21fcbcc9056f4429645848e43b9fa3543d57d4cc"
        ],
        [
            "red in |- *; generalize (rho_pos (vi intr)); intros; rewrite H7 in H6; elim (Rlt_irrefl 0 H6).",
            "VernacExtend",
            "5b77a1cc4d247af58d85df0ea6f6f27b8976cd48"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply Rlt_trans with (PI / 2)%R.",
            "VernacExtend",
            "f4f4a78fc3b650da6f99bbd5d34bf6982715e567"
        ],
        [
            "apply Rlt_1_PI2.",
            "VernacExtend",
            "4106852e23ee1bd5bd5c05c826159b1523409ae5"
        ],
        [
            "apply PI2_Rlt_PI.",
            "VernacExtend",
            "1b685202b02c297dfadbc1dd4615f4770ce42d5f"
        ],
        [
            "rewrite D_F.",
            "VernacExtend",
            "d728347c2caae0fdabda69380de07dc3f2499349"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "left; apply TypeSpeed_pos.",
            "VernacExtend",
            "f714f475ed1413a5948e0a9b5fddabccb6b6661e"
        ],
        [
            "apply cos_ge_0.",
            "VernacExtend",
            "d0a1aba51341e8d2cd5821406c1c68a9b8c7c649"
        ],
        [
            "left; apply Rlt_le_trans with 0%R.",
            "VernacExtend",
            "24140bdc47e4c3bbfcc94eeb064b8f12a0631246"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_lt_gt_contravar.",
            "VernacExtend",
            "1f2b80da142820b364e7a9330a3a9a0c402521ce"
        ],
        [
            "apply PI2_RGT_0.",
            "VernacExtend",
            "129c99672333cb8d1a5f5a45529d52329e916914"
        ],
        [
            "unfold Rdiv in |- *; repeat simple apply Rmult_le_pos.",
            "VernacExtend",
            "7d4f279a3b70726663a0cfe01db37eb2cc279faf"
        ],
        [
            "left; apply rho_pos.",
            "VernacExtend",
            "e5821a33b207431e0f87bc802b3280f5bca391f7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
        ],
        [
            "left; apply Rlt_le_trans with 1%R.",
            "VernacExtend",
            "f02d22db638170a4806d49e9c068e034e9ba34dd"
        ],
        [
            "apply Rmult_lt_reg_l with (2 / rho (vi intr))%R.",
            "VernacExtend",
            "c4b788a03da88c3ca5e9424feeb29edd3c25e1b4"
        ],
        [
            "unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ prove_sup0 | apply Rinv_0_lt_compat; apply rho_pos ].",
            "VernacExtend",
            "10347c3b7aaee5ede4f206c8071584db7804d362"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "replace (2 / rho (vi intr) * (rho (vi intr) * (t / 2)))%R with t.",
            "VernacExtend",
            "eb7925417f56c7a7c168b56c28d4180425fa7455"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Rdiv in |- *.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite (Rmult_comm 2).",
            "VernacExtend",
            "fa06fc35a43a455b406d76e181d26b3606a0680c"
        ],
        [
            "repeat rewrite <- Rmult_assoc.",
            "VernacExtend",
            "645aebe2c3685a4f868a05a2372130cedecea85e"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r; rewrite Rmult_1_l.",
            "VernacExtend",
            "dec98a2cdef344dd37511de9a481fcea7033c7f7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "red in |- *; generalize (rho_pos (vi intr)); intros; rewrite H5 in H4; elim (Rlt_irrefl 0 H4).",
            "VernacExtend",
            "9c3728001d88f3a16cea5db05bbb41161497c6c3"
        ],
        [
            "left; apply Rlt_1_PI2.",
            "VernacExtend",
            "b6d7870281b977f53dd82f5f9cfef2ca338ae8d5"
        ],
        [
            "apply Rge_le.",
            "VernacExtend",
            "eae8ed3f063c0c64fc52ba03563e73be950936a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma G_0 : G 0 = 0%R.",
            "VernacStartTheoremProof",
            "f7744c46c3cd7368714d3dfbd301fed973c032da"
        ],
        [
            "unfold G in |- *; rewrite Rs_0; unfold Rminus, F in |- *; unfold Rdiv in |- *; rewrite Rmult_0_l; rewrite Rmult_0_r; rewrite sin_0; repeat rewrite Rmult_0_r; rewrite Rplus_0_l; apply Ropp_0.",
            "VernacExtend",
            "2c0ec93372b575b8b918dcc89995db5372dbaaae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom G_pos : forall t : R, (0 <= t)%R -> (t < 2 / rho (vi intr))%R -> (0 <= G t)%R.",
            "VernacAssumption",
            "8e5c69a9f9b113b8657bdf5f6cea97028ccd72ae"
        ],
        [
            "Theorem YCNGSTYS : forall t : R, (0 <= t)%R -> (rho (vi intr) * t < 2)%R -> (2 * r (vi intr) * sin (rho (vi intr) * (t / 2)) <= sqrt (Rsqr (xi intr t - xi intr 0) + Rsqr (yi intr t - yi intr 0)))%R.",
            "VernacStartTheoremProof",
            "038d296cb535c0dbe83df20d170ff5bf4e9bfea1"
        ],
        [
            "intros; generalize (rho_pos (vi intr)); intro H1; generalize (Rinv_0_lt_compat (rho (vi intr)) H1); intro H2; generalize (Rmult_lt_compat_l (/ rho (vi intr)) (rho (vi intr) * t) 2 H2 H0); intro H3; rewrite <- Rmult_assoc in H3; rewrite <- Rinv_l_sym in H3.",
            "VernacExtend",
            "1fef5067cb7594c113bded923bcbd7452f19062e"
        ],
        [
            "rewrite Rmult_1_l in H3; rewrite Rmult_comm in H3; generalize (G_pos t H H3); unfold G in |- *; intro H4; generalize (Rplus_le_compat_l (F t) 0 (Rs t - F t) H4); rewrite Rplus_0_r; intro H5; unfold Rminus in H5; rewrite <- Rplus_assoc in H5; rewrite Rplus_comm in H5; rewrite <- Rplus_assoc in H5; rewrite Rplus_opp_l in H5; rewrite Rplus_0_l in H5; unfold Rs, F in H5; unfold r in |- *; assumption.",
            "VernacExtend",
            "71c7a9b68575ae5ae67058135202154c6c0be9f2"
        ],
        [
            "red in |- *; intro H4; rewrite H4 in H1; elim (Rlt_irrefl 0 H1).",
            "VernacExtend",
            "a5811aa2760195dc728b6d8ccc1a5365ac0c483a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ycngstys.",
            "VernacEndSegment",
            "9ed3ede72b8cfec5e859d0f21417ec4adc453584"
        ]
    ],
    "proofs": [
        {
            "name": "alphas_def",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold alphas in |- *; case alphas_exists; trivial.",
                        "VernacExtend",
                        "9fc2eaddaabdac189953cfff6562bcc379e401d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsx",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros; generalize (alphas_def t); intro H; elim H; intros; rewrite Rplus_comm; assumption.",
                        "VernacExtend",
                        "a41c8eda9ab5c77e8b201200ca88ee679bc17626"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsy",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; generalize (alphas_def t); intro H; elim H; intros; rewrite Rplus_comm; assumption.",
                        "VernacExtend",
                        "a41c8eda9ab5c77e8b201200ca88ee679bc17626"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rs_x",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Rsx; unfold Rminus, Rdiv in |- *; rewrite (Rplus_comm (xi intr 0)); rewrite Rplus_assoc; rewrite Rplus_opp_r; rewrite Rplus_0_r; rewrite Rmult_assoc; rewrite <- Rinv_r_sym; [ rewrite Rmult_1_r; reflexivity | assumption ].",
                        "VernacExtend",
                        "b5e54199b1b3c90f1fbea00c07001cb77279b9cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rs_y",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Rsy; unfold Rminus, Rdiv in |- *; rewrite (Rplus_comm (yi intr 0)); rewrite Rplus_assoc; rewrite Rplus_opp_r; rewrite Rplus_0_r; rewrite Rmult_assoc; rewrite <- Rinv_r_sym; [ rewrite Rmult_1_r; reflexivity | assumption ].",
                        "VernacExtend",
                        "d4ed02df176200c0098b56b9056ba2b2a7a4464e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rs_derivable",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold derivable in |- *; intro.",
                        "VernacExtend",
                        "b6b997024b3aeb2bd86d88f8a2a0d7810613d5fa"
                    ]
                },
                {
                    "command": [
                        "case (total_order_T (cos (alphas x)) 0); intro.",
                        "VernacExtend",
                        "c5de01b0b341706e44f05126b0127ef72444628b"
                    ]
                },
                {
                    "command": [
                        "elim s; intro.",
                        "VernacExtend",
                        "dd079e27181883351bde5f69e76eb163523f0a2a"
                    ]
                },
                {
                    "command": [
                        "cut (cos (alphas x) <> 0%R).",
                        "VernacExtend",
                        "b2226963221cbc7b938d474d20cd984c074a707c"
                    ]
                },
                {
                    "command": [
                        "intro; cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> cos (alphas (x + h)%R) <> 0%R)).",
                        "VernacExtend",
                        "4dbb172abf33414c561eaf846423f1efb7e6e769"
                    ]
                },
                {
                    "command": [
                        "set (xi_p := fun t : R => xi intr t).",
                        "VernacExtend",
                        "2ecd8da9c27b3383e69c3ead896f474c4606eeff"
                    ]
                },
                {
                    "command": [
                        "intro; cut (derivable_pt (fun t : R => ((xi_p t - xi_p 0) / cos (alphas t))%R) x).",
                        "VernacExtend",
                        "c6d8c16557182e5d45a2d69cbf8c2db393207db7"
                    ]
                },
                {
                    "command": [
                        "intro X; unfold derivable_pt in X; elim X; intros l H1.",
                        "VernacExtend",
                        "3efff2ec85bfc044dd3e6f745eb94c9f39acf532"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt in |- *; exists l.",
                        "VernacExtend",
                        "48abff2c195305123974d5a83dadfa04e1da64fb"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt_abs in H1; unfold derivable_pt_lim in H1; unfold derivable_pt_abs in |- *; unfold derivable_pt_lim in |- *; intros.",
                        "VernacExtend",
                        "ed2e2cf992c57abc002e443994b621e1529293de"
                    ]
                },
                {
                    "command": [
                        "elim (H1 eps H2); intros del H3.",
                        "VernacExtend",
                        "15fef0e7034a003dd420b990a0bfd7822a3d08d0"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros dom H4.",
                        "VernacExtend",
                        "df16647b6f23f362d9406195e4b468b1a912aee5"
                    ]
                },
                {
                    "command": [
                        "cut (0 < Rmin del dom)%R.",
                        "VernacExtend",
                        "6cce55359eb4de39d171a97216382819cfd01cb5"
                    ]
                },
                {
                    "command": [
                        "intro; exists (mkposreal (Rmin del dom) H5); intros.",
                        "VernacExtend",
                        "56f09f79fda4dc07cc02e426f3a4d9911630663b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rs_x.",
                        "VernacExtend",
                        "597f159b154e179b87d85e44d9255d11acee14ca"
                    ]
                },
                {
                    "command": [
                        "unfold xi_p in H3; apply H3.",
                        "VernacExtend",
                        "6b97b645bd483feac7f82d2044a85f7ae7af5944"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_l ].",
                        "VernacExtend",
                        "11818126b72e25405aae24b56f4a240bada95acf"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply H4; apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_r ].",
                        "VernacExtend",
                        "e45eab5da6af2696d9912f1ad1242ca5b129fbc0"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin in |- *; case (Rle_dec del dom); intro.",
                        "VernacExtend",
                        "eb0c5459cce3423c7602cf9adb8a20e9e3b2f5ce"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos del).",
                        "VernacExtend",
                        "ac01251087d8ed6a52f03fd522df5ae3ad740374"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos dom).",
                        "VernacExtend",
                        "671fc8306b40e1ae80285ff1bc3185ed1eaccaf5"
                    ]
                },
                {
                    "command": [
                        "set (alphas_p := d2 alphas); reg.",
                        "VernacExtend",
                        "d377723a7b390cd745a6d29a809e48f71c9f1abd"
                    ]
                },
                {
                    "command": [
                        "unfold alphas_p in |- *; apply (cond_D1 alphas).",
                        "VernacExtend",
                        "ac2c09f4eb652273e84daee19785c18fb430df4b"
                    ]
                },
                {
                    "command": [
                        "apply (xi_derivable intr x).",
                        "VernacExtend",
                        "09b973ba6caf19eb6afe0ece703631d0cd19fdc5"
                    ]
                },
                {
                    "command": [
                        "set (alphas_p := d2 alphas); set (f := fun t : R => cos (alphas_p t)).",
                        "VernacExtend",
                        "4146cd6cfac6503f5d9d8d10503b69099dd722b9"
                    ]
                },
                {
                    "command": [
                        "cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> f (x + h)%R <> 0%R)).",
                        "VernacExtend",
                        "aa2481ac65829d249960e1ef845f9c9cd2ddb39b"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intros.",
                        "VernacExtend",
                        "374db79e6482fec65548ecf30bf5c4735e72248c"
                    ]
                },
                {
                    "command": [
                        "exists x0; intros; unfold f in H1; apply H1; assumption.",
                        "VernacExtend",
                        "f8e3c0a7091ea6990a40cfbacecff23cfbcfefd8"
                    ]
                },
                {
                    "command": [
                        "apply continuous_neq_0.",
                        "VernacExtend",
                        "cf0cbb8e3e874cb2a892ebca1d5527b353296a25"
                    ]
                },
                {
                    "command": [
                        "unfold f in |- *; reg; apply derivable_continuous_pt; apply (cond_D1 alphas).",
                        "VernacExtend",
                        "e59429491bfc99c5fbc69d129aded55b2c43723e"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intro; rewrite H in a; elim (Rlt_irrefl _ a).",
                        "VernacExtend",
                        "13fdeb2c401edf5ddde8025568e096d79d9a9b14"
                    ]
                },
                {
                    "command": [
                        "cut (sin (alphas x) <> 0%R).",
                        "VernacExtend",
                        "b1b8d21e1512e313a3e4caab2133e3d4b8fb0bff"
                    ]
                },
                {
                    "command": [
                        "intro; cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> sin (alphas (x + h)%R) <> 0%R)).",
                        "VernacExtend",
                        "1234aa92425c574f55b18c92c9035088a0b22520"
                    ]
                },
                {
                    "command": [
                        "set (yi_p := fun t : R => yi intr t).",
                        "VernacExtend",
                        "bd012484bdbe57f882903fea0877308d4bcaeb34"
                    ]
                },
                {
                    "command": [
                        "intro; cut (derivable_pt (fun t : R => ((yi_p t - yi_p 0) / sin (alphas t))%R) x).",
                        "VernacExtend",
                        "8ec3571eaa88adbdc4ca6d79bf40db3c8c3905bb"
                    ]
                },
                {
                    "command": [
                        "intro X; unfold derivable_pt in X.",
                        "VernacExtend",
                        "e8249a735fd7b0d9d4a4458aad76a2c66035467e"
                    ]
                },
                {
                    "command": [
                        "elim X; intros l H1.",
                        "VernacExtend",
                        "2e115732b20d604e42cad7df33ed65711f5d3b10"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt in |- *; exists l.",
                        "VernacExtend",
                        "48abff2c195305123974d5a83dadfa04e1da64fb"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt_abs in H1; unfold derivable_pt_lim in H1; unfold derivable_pt_abs in |- *; unfold derivable_pt_lim in |- *; intros.",
                        "VernacExtend",
                        "ed2e2cf992c57abc002e443994b621e1529293de"
                    ]
                },
                {
                    "command": [
                        "elim (H1 eps H2); intros del H3.",
                        "VernacExtend",
                        "15fef0e7034a003dd420b990a0bfd7822a3d08d0"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros dom H4.",
                        "VernacExtend",
                        "df16647b6f23f362d9406195e4b468b1a912aee5"
                    ]
                },
                {
                    "command": [
                        "cut (0 < Rmin del dom)%R.",
                        "VernacExtend",
                        "6cce55359eb4de39d171a97216382819cfd01cb5"
                    ]
                },
                {
                    "command": [
                        "intro; exists (mkposreal (Rmin del dom) H5); intros.",
                        "VernacExtend",
                        "56f09f79fda4dc07cc02e426f3a4d9911630663b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rs_y.",
                        "VernacExtend",
                        "9644a16839b74c9d0f2a73d83f261924bede6796"
                    ]
                },
                {
                    "command": [
                        "unfold yi_p in H3; apply H3.",
                        "VernacExtend",
                        "d06807c37ae72e0c97dd6c5fa56128233ff91610"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_l ].",
                        "VernacExtend",
                        "11818126b72e25405aae24b56f4a240bada95acf"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply H4; apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_r ].",
                        "VernacExtend",
                        "e45eab5da6af2696d9912f1ad1242ca5b129fbc0"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin in |- *; case (Rle_dec del dom); intro.",
                        "VernacExtend",
                        "eb0c5459cce3423c7602cf9adb8a20e9e3b2f5ce"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos del).",
                        "VernacExtend",
                        "ac01251087d8ed6a52f03fd522df5ae3ad740374"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos dom).",
                        "VernacExtend",
                        "671fc8306b40e1ae80285ff1bc3185ed1eaccaf5"
                    ]
                },
                {
                    "command": [
                        "set (alphas_p := d2 alphas); reg.",
                        "VernacExtend",
                        "d377723a7b390cd745a6d29a809e48f71c9f1abd"
                    ]
                },
                {
                    "command": [
                        "unfold alphas_p in |- *; apply (cond_D1 alphas).",
                        "VernacExtend",
                        "ac2c09f4eb652273e84daee19785c18fb430df4b"
                    ]
                },
                {
                    "command": [
                        "apply (yi_derivable intr x).",
                        "VernacExtend",
                        "4bc237c2b4569939a4599eaaeb94e94ef690cc62"
                    ]
                },
                {
                    "command": [
                        "set (alphas_p := d2 alphas); set (f := fun t : R => sin (alphas_p t)).",
                        "VernacExtend",
                        "db5641096e52a32edadf2f828beb656897837e3e"
                    ]
                },
                {
                    "command": [
                        "cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> f (x + h)%R <> 0%R)).",
                        "VernacExtend",
                        "aa2481ac65829d249960e1ef845f9c9cd2ddb39b"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intros.",
                        "VernacExtend",
                        "374db79e6482fec65548ecf30bf5c4735e72248c"
                    ]
                },
                {
                    "command": [
                        "exists x0; intros; unfold f in H1; apply H1; assumption.",
                        "VernacExtend",
                        "f8e3c0a7091ea6990a40cfbacecff23cfbcfefd8"
                    ]
                },
                {
                    "command": [
                        "apply continuous_neq_0.",
                        "VernacExtend",
                        "cf0cbb8e3e874cb2a892ebca1d5527b353296a25"
                    ]
                },
                {
                    "command": [
                        "unfold f in |- *; reg; apply derivable_continuous_pt; apply (cond_D1 alphas).",
                        "VernacExtend",
                        "e59429491bfc99c5fbc69d129aded55b2c43723e"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assert (H := cos_sin_0_var (alphas x)); elim H; intro.",
                        "VernacExtend",
                        "e0ba255c5884be767521f3cedc6816c4b4260cb7"
                    ]
                },
                {
                    "command": [
                        "elim H0; assumption.",
                        "VernacExtend",
                        "f893c02cbb3a00a06056628d1667434bc5c5a86d"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "cut (cos (alphas x) <> 0%R).",
                        "VernacExtend",
                        "b2226963221cbc7b938d474d20cd984c074a707c"
                    ]
                },
                {
                    "command": [
                        "intro; cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> cos (alphas (x + h)%R) <> 0%R)).",
                        "VernacExtend",
                        "4dbb172abf33414c561eaf846423f1efb7e6e769"
                    ]
                },
                {
                    "command": [
                        "set (xi_p := fun t : R => xi intr t).",
                        "VernacExtend",
                        "2ecd8da9c27b3383e69c3ead896f474c4606eeff"
                    ]
                },
                {
                    "command": [
                        "intro; cut (derivable_pt (fun t : R => ((xi_p t - xi_p 0) / cos (alphas t))%R) x).",
                        "VernacExtend",
                        "c6d8c16557182e5d45a2d69cbf8c2db393207db7"
                    ]
                },
                {
                    "command": [
                        "intro X; unfold derivable_pt in X; elim X; intros l H1.",
                        "VernacExtend",
                        "3efff2ec85bfc044dd3e6f745eb94c9f39acf532"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt in |- *; exists l.",
                        "VernacExtend",
                        "48abff2c195305123974d5a83dadfa04e1da64fb"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt_abs in H1; unfold derivable_pt_lim in H1; unfold derivable_pt_abs in |- *; unfold derivable_pt_lim in |- *; intros.",
                        "VernacExtend",
                        "ed2e2cf992c57abc002e443994b621e1529293de"
                    ]
                },
                {
                    "command": [
                        "elim (H1 eps H2); intros del H3.",
                        "VernacExtend",
                        "15fef0e7034a003dd420b990a0bfd7822a3d08d0"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros dom H4.",
                        "VernacExtend",
                        "df16647b6f23f362d9406195e4b468b1a912aee5"
                    ]
                },
                {
                    "command": [
                        "cut (0 < Rmin del dom)%R.",
                        "VernacExtend",
                        "6cce55359eb4de39d171a97216382819cfd01cb5"
                    ]
                },
                {
                    "command": [
                        "intro; exists (mkposreal (Rmin del dom) H5); intros.",
                        "VernacExtend",
                        "56f09f79fda4dc07cc02e426f3a4d9911630663b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rs_x.",
                        "VernacExtend",
                        "597f159b154e179b87d85e44d9255d11acee14ca"
                    ]
                },
                {
                    "command": [
                        "unfold xi_p in H3; apply H3.",
                        "VernacExtend",
                        "6b97b645bd483feac7f82d2044a85f7ae7af5944"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_l ].",
                        "VernacExtend",
                        "11818126b72e25405aae24b56f4a240bada95acf"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply H4; apply Rlt_le_trans with (Rmin del dom); [ apply H7 | apply Rmin_r ].",
                        "VernacExtend",
                        "e45eab5da6af2696d9912f1ad1242ca5b129fbc0"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin in |- *; case (Rle_dec del dom); intro.",
                        "VernacExtend",
                        "eb0c5459cce3423c7602cf9adb8a20e9e3b2f5ce"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos del).",
                        "VernacExtend",
                        "ac01251087d8ed6a52f03fd522df5ae3ad740374"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos dom).",
                        "VernacExtend",
                        "671fc8306b40e1ae80285ff1bc3185ed1eaccaf5"
                    ]
                },
                {
                    "command": [
                        "set (alphas_p := d2 alphas); reg.",
                        "VernacExtend",
                        "d377723a7b390cd745a6d29a809e48f71c9f1abd"
                    ]
                },
                {
                    "command": [
                        "unfold alphas_p in |- *; apply (cond_D1 alphas).",
                        "VernacExtend",
                        "ac2c09f4eb652273e84daee19785c18fb430df4b"
                    ]
                },
                {
                    "command": [
                        "apply (xi_derivable intr x).",
                        "VernacExtend",
                        "09b973ba6caf19eb6afe0ece703631d0cd19fdc5"
                    ]
                },
                {
                    "command": [
                        "set (alphas_p := d2 alphas); set (f := fun t : R => cos (alphas_p t)).",
                        "VernacExtend",
                        "4146cd6cfac6503f5d9d8d10503b69099dd722b9"
                    ]
                },
                {
                    "command": [
                        "cut (exists eps : posreal, (forall h : R, (Rabs h < eps)%R -> f (x + h)%R <> 0%R)).",
                        "VernacExtend",
                        "aa2481ac65829d249960e1ef845f9c9cd2ddb39b"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intros.",
                        "VernacExtend",
                        "374db79e6482fec65548ecf30bf5c4735e72248c"
                    ]
                },
                {
                    "command": [
                        "exists x0; intros; unfold f in H1; apply H1; assumption.",
                        "VernacExtend",
                        "f8e3c0a7091ea6990a40cfbacecff23cfbcfefd8"
                    ]
                },
                {
                    "command": [
                        "apply continuous_neq_0.",
                        "VernacExtend",
                        "cf0cbb8e3e874cb2a892ebca1d5527b353296a25"
                    ]
                },
                {
                    "command": [
                        "unfold f in |- *; reg; apply derivable_continuous_pt; apply (cond_D1 alphas).",
                        "VernacExtend",
                        "e59429491bfc99c5fbc69d129aded55b2c43723e"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intro; rewrite H in r; elim (Rlt_irrefl _ r).",
                        "VernacExtend",
                        "aeacf271d61807bf13d3d275acaba92ea348c21a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fct_der4",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intro; reg.",
                        "VernacExtend",
                        "ccf8f7334f322d5297b28e8981b599428495a7a6"
                    ]
                },
                {
                    "command": [
                        "apply (cond_D1 alphas).",
                        "VernacExtend",
                        "9b0f81c04a8325c8502f4feaaae20faa487b9583"
                    ]
                },
                {
                    "command": [
                        "apply Rs_derivable.",
                        "VernacExtend",
                        "dece200389edbf8f63e6eb001444c8e6f8bd1d54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DRs_cos",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (H := Dxi t).",
                        "VernacExtend",
                        "3cf610d91d9a893196961b438e07d41ce579bc3d"
                    ]
                },
                {
                    "command": [
                        "unfold xi in H.",
                        "VernacExtend",
                        "1188b5e58c78490ed1c2aaf6bd8bb15c325f4fe8"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := cond_x intr t).",
                        "VernacExtend",
                        "1949fa2aa3d73139ed7ea400cb40c8f342680a73"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt (x intr) t (xi_derivable intr t) = derive_pt (x intr) t (cond_diff (x intr) t)); [ intro | apply pr_nu ].",
                        "VernacExtend",
                        "d66498f7f442ea18e9832843bbf0d08bb4142f70"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H.",
                        "VernacExtend",
                        "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
                    ]
                },
                {
                    "command": [
                        "unfold vi, thetat in |- *; symmetry in |- *; assumption.",
                        "VernacExtend",
                        "cd95a6042c3d4eda563a03ec2f0972c60324a291"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DRs_sin",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intro; assert (H := Dyi t).",
                        "VernacExtend",
                        "107785a562158b7d36d536bc264d6be5e80fd487"
                    ]
                },
                {
                    "command": [
                        "unfold yi in H; assert (H0 := cond_y intr t).",
                        "VernacExtend",
                        "1454dfbd1422f26a5bae5a1bef3d76104b459e2d"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt (y intr) t (yi_derivable intr t) = derive_pt (y intr) t (cond_diff (y intr) t)); [ intro | apply pr_nu ].",
                        "VernacExtend",
                        "62514937a3dd6ca1ce9e90842dcd71d3c7890095"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H.",
                        "VernacExtend",
                        "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
                    ]
                },
                {
                    "command": [
                        "unfold vi, thetat in |- *; symmetry in |- *; assumption.",
                        "VernacExtend",
                        "cd95a6042c3d4eda563a03ec2f0972c60324a291"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_plus_eq_is_eq",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "intros; rewrite H; rewrite H0; reflexivity.",
                        "VernacExtend",
                        "ea9fcc0ce72d54ffdc9e95505eece4d4cafcb97d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "DRs",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (H := DRs_cos t).",
                        "VernacExtend",
                        "b6ed35eee86eb75129e9e8410cc6ae6e33534a60"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := DRs_sin t).",
                        "VernacExtend",
                        "b8f0dc73f8b557e74d6570c287cc5c876779779a"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := Rmult_eq_compat_l (cos (alphas t)) _ _ H).",
                        "VernacExtend",
                        "9bef71f9870f5c1af016bd6a8c7b60f80942d769"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := Rmult_eq_compat_l (sin (alphas t)) _ _ H0).",
                        "VernacExtend",
                        "64fec9975d904acd2f331d3cc600084413c7ae63"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt Rs t (Rs_derivable t)) with (cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t) - Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t) + Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t)))%R.",
                        "VernacExtend",
                        "3c698aee987c5eb6d77695a441acd54d55a21955"
                    ]
                },
                {
                    "command": [
                        "replace (vi intr * cos (thetat t - alphas t))%R with (cos (alphas t) * (vi intr * cos (thetat t)) + sin (alphas t) * (vi intr * sin (thetat t)))%R.",
                        "VernacExtend",
                        "ddafffe18abe845690c6899f049eb85639c852e7"
                    ]
                },
                {
                    "command": [
                        "apply eq_plus_eq_is_eq; assumption.",
                        "VernacExtend",
                        "bc081286926925de39ab305fc3423dc0fac1509f"
                    ]
                },
                {
                    "command": [
                        "rewrite cos_minus; ring.",
                        "VernacExtend",
                        "0724719fea967a3a3f599a7faf1d53e8172350fe"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in |- *.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_plus_distr_l.",
                        "VernacExtend",
                        "981a4d8e052f6d5141e9c491ab06aa5b04051d58"
                    ]
                },
                {
                    "command": [
                        "replace (cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t)) + cos (alphas t) * - (Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + (sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t)) + sin (alphas t) * (Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t))))%R with (derive_pt Rs t (Rs_derivable t) * (Rsqr (sin (alphas t)) + Rsqr (cos (alphas t))) + cos (alphas t) * - (Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + sin (alphas t) * (Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t)))%R; [ idtac | unfold Rsqr in |- *; ring ].",
                        "VernacExtend",
                        "5e98e241b97de4501a424de521bad89f8449fa9b"
                    ]
                },
                {
                    "command": [
                        "rewrite sin2_cos2; ring.",
                        "VernacExtend",
                        "015b779c44abe4bc96314b63ac1238a21bbcd5b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rs_alphas",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (H := DRs_cos t).",
                        "VernacExtend",
                        "b6ed35eee86eb75129e9e8410cc6ae6e33534a60"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := DRs_sin t).",
                        "VernacExtend",
                        "b8f0dc73f8b557e74d6570c287cc5c876779779a"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := Rmult_eq_compat_l (- sin (alphas t)) _ _ H).",
                        "VernacExtend",
                        "a2723abd8af5abaa055a1f26b1b2bc13d44afd04"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := Rmult_eq_compat_l (cos (alphas t)) _ _ H0).",
                        "VernacExtend",
                        "2cc77c8e5079207b6e11fb640b7b4e457ce3947a"
                    ]
                },
                {
                    "command": [
                        "replace (Rs t * derive_pt alphas t (cond_D1 alphas t))%R with (- sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t) - Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t) + Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t)))%R.",
                        "VernacExtend",
                        "56612ce660c37127c1c9882563fb1ff471270c2a"
                    ]
                },
                {
                    "command": [
                        "replace (vi intr * sin (thetat t - alphas t))%R with (- sin (alphas t) * (vi intr * cos (thetat t)) + cos (alphas t) * (vi intr * sin (thetat t)))%R.",
                        "VernacExtend",
                        "f4d060ab68fb86e89a880584b876ffc208277a54"
                    ]
                },
                {
                    "command": [
                        "apply eq_plus_eq_is_eq; assumption.",
                        "VernacExtend",
                        "bc081286926925de39ab305fc3423dc0fac1509f"
                    ]
                },
                {
                    "command": [
                        "rewrite sin_minus; ring.",
                        "VernacExtend",
                        "b5c02662e23ca751c53f9b8ac8c97ea9564d4269"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in |- *.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_plus_distr_l.",
                        "VernacExtend",
                        "981a4d8e052f6d5141e9c491ab06aa5b04051d58"
                    ]
                },
                {
                    "command": [
                        "replace (- sin (alphas t) * (derive_pt Rs t (Rs_derivable t) * cos (alphas t)) + - sin (alphas t) * - (Rs t * sin (alphas t) * derive_pt alphas t (cond_D1 alphas t)) + (cos (alphas t) * (derive_pt Rs t (Rs_derivable t) * sin (alphas t)) + cos (alphas t) * (Rs t * cos (alphas t) * derive_pt alphas t (cond_D1 alphas t))))%R with (Rs t * derive_pt alphas t (cond_D1 alphas t) * (Rsqr (sin (alphas t)) + Rsqr (cos (alphas t))) + cos (alphas t) * - sin (alphas t) * derive_pt Rs t (Rs_derivable t) + sin (alphas t) * cos (alphas t) * derive_pt Rs t (Rs_derivable t))%R; [ idtac | unfold Rsqr in |- *; ring ].",
                        "VernacExtend",
                        "ab9a6f4f637b39bb4961e0d7b5587ca583d3d55e"
                    ]
                },
                {
                    "command": [
                        "rewrite sin2_cos2; ring.",
                        "VernacExtend",
                        "015b779c44abe4bc96314b63ac1238a21bbcd5b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fct_der5",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "intro; set (alpha_p := d2 alphas); set (f := fun x : R => derive_pt alpha_p x (cond_D1 alphas x)).",
                        "VernacExtend",
                        "73aeb38cd21c811f96100fb5bae7dea0dbd4f6cb"
                    ]
                },
                {
                    "command": [
                        "change (derivable_pt (fun y : R => (Rs y * f y)%R) t) in |- *.",
                        "VernacExtend",
                        "ffa0246d54da1a72de95ce035648eea4fcfc4f79"
                    ]
                },
                {
                    "command": [
                        "reg.",
                        "VernacExtend",
                        "200773634894b8319f51d08aac98d6835b0db846"
                    ]
                },
                {
                    "command": [
                        "apply (cond_D2 alphas).",
                        "VernacExtend",
                        "79ea73b1cf1333e5d78713ccb29c64f9d3023a23"
                    ]
                },
                {
                    "command": [
                        "apply Rs_derivable.",
                        "VernacExtend",
                        "dece200389edbf8f63e6eb001444c8e6f8bd1d54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_Rs_alphas1",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "set (f := fun x : R => derive_pt alphas x (cond_D1 alphas x)).",
                        "VernacExtend",
                        "0e5cd60d9efc28edf6c655566c67c71b0f87da0c"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt (fun y : R => (Rs y * derive_pt alphas y (cond_D1 alphas y))%R) t (fct_der5 t)) with (derive_pt (fun y : R => (Rs y * f y)%R) t (fct_der5 t)); [ idtac | reflexivity ].",
                        "VernacExtend",
                        "a3f3c0156e1a89d54822a01fefe8c85ef3f9cc9a"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt alphas t (cond_D1 alphas t)) with (f t); [ idtac | reflexivity ].",
                        "VernacExtend",
                        "3b38834dc0f25599bd4e6794344d366df94fcf4a"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t)) with (derive_pt f t (cond_D2 alphas t)); [ idtac | reflexivity ].",
                        "VernacExtend",
                        "b5d6135bd37a4052d7b333d05d2c58b1a7db534b"
                    ]
                },
                {
                    "command": [
                        "cut (derivable_pt Rs t); [ intro X | apply Rs_derivable ].",
                        "VernacExtend",
                        "1522c037c14e204069a802c00efe3d7246127cfa"
                    ]
                },
                {
                    "command": [
                        "cut (derivable_pt f t); [ intro X0 | apply (cond_D2 alphas) ].",
                        "VernacExtend",
                        "0e0fadb619502de6c3a7583f5281387109126fd3"
                    ]
                },
                {
                    "command": [
                        "reg.",
                        "VernacExtend",
                        "200773634894b8319f51d08aac98d6835b0db846"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt f t (cond_D2 alphas t)) with (derive_pt f t X0); [ idtac | apply pr_nu ].",
                        "VernacExtend",
                        "3342b508476d5e6c2ff622d0d1a913d863d40f6b"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt Rs t (Rs_derivable t)) with (derive_pt Rs t X); [ idtac | apply pr_nu ].",
                        "VernacExtend",
                        "c68d569c2c87963d56a175179760d26459b4f246"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "thetat_derivable",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "unfold thetat in |- *; apply (cond_diff (theta intr)).",
                        "VernacExtend",
                        "dda50b4eac637ec659d128e1392ead64e8984b85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_Rs_2",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (H := D_Rs_alphas1 t).",
                        "VernacExtend",
                        "342e973d9bc0738042dab5719f601aebe9845345"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := D_Rs_alphas2 t).",
                        "VernacExtend",
                        "126e6e18bf5fc19fc12bb19e3e616b00faf83e6a"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := DRs t).",
                        "VernacExtend",
                        "4145da3c21da92e5fe2d6be0bdf8dd213c05a404"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0; rewrite <- H1 in H0.",
                        "VernacExtend",
                        "8333066357762b73924405997c03f4f22b000c33"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := Rplus_eq_compat_l (- derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)) + - Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t)) _ _ H0).",
                        "VernacExtend",
                        "05eb51b067117c21cc0cc66930a5a4760bf28362"
                    ]
                },
                {
                    "command": [
                        "cut ((- derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)) + - Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t) + (derive_pt Rs t (Rs_derivable t) * derive_pt alphas t (cond_D1 alphas t) + Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t)))%R = (derive_pt Rs t (Rs_derivable t) * (2 * derive_pt alphas t (cond_D1 alphas t) - derive_pt thetat t (thetat_derivable t)))%R); [ intro | ring ].",
                        "VernacExtend",
                        "19c0c5ec6d1f0783a3ab19f7d93a1334483aace9"
                    ]
                },
                {
                    "command": [
                        "cut ((- derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)) + - Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t) + derive_pt Rs t (Rs_derivable t) * (derive_pt thetat t (thetat_derivable t) - derive_pt alphas t (cond_D1 alphas t)))%R = (- Rs t * derive_pt (derive alphas (cond_D1 alphas)) t (cond_D2 alphas t))%R); [ intro | ring ].",
                        "VernacExtend",
                        "bd5c2757d512653fa515c35a218dfafa5860078a"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H2; rewrite H4 in H2.",
                        "VernacExtend",
                        "7a2ea329f4f7d982c3e9133b0a82c724f7ba1629"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsqr_DRs",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "intro; rewrite <- Rsqr_mult; rewrite DRs; rewrite Rs_alphas; repeat rewrite Rsqr_mult; rewrite Rplus_comm; rewrite <- (Rmult_comm (Rsqr (cos (thetat t - alphas t)))); rewrite <- (Rmult_comm (Rsqr (sin (thetat t - alphas t)))); rewrite <- Rmult_plus_distr_r; rewrite sin2_cos2; rewrite Rmult_1_l; reflexivity.",
                        "VernacExtend",
                        "690a4b72f702553f8bd1780cb426754fcbcd8e7a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rs_pos",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intro; unfold Rs in |- *; apply sqrt_positivity; apply Rplus_le_le_0_compat; apply Rle_0_sqr.",
                        "VernacExtend",
                        "64128f1553f32d0efdcf0fab86947039b368a69c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rs_0",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "unfold Rs in |- *; unfold Rminus in |- *; repeat rewrite Rplus_opp_r; repeat rewrite Rsqr_0; rewrite Rplus_0_r; rewrite sqrt_0; reflexivity.",
                        "VernacExtend",
                        "a01516f5aa7610ca60ab7634073b88ef156cc68a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_Rs_0",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "case (Rtotal_order 0 (derive_pt Rs 0 (Rs_derivable 0%R))); intro.",
                        "VernacExtend",
                        "f8662621e3317a9e6382e50bc656157f3bd5eb3a"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "elim H; intro.",
                        "VernacExtend",
                        "f72f8bb994653bc377ef4f37626cba5f2cab4c8b"
                    ]
                },
                {
                    "command": [
                        "right; assumption.",
                        "VernacExtend",
                        "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
                    ]
                },
                {
                    "command": [
                        "generalize (derivable_derive Rs 0 (Rs_derivable 0%R)); intro; elim H1; intros l H2; rewrite H2 in H0.",
                        "VernacExtend",
                        "3c86a74a39b5aca183333f7ca2da282f8afb753c"
                    ]
                },
                {
                    "command": [
                        "generalize (derive_pt_eq_1 Rs 0 l (Rs_derivable 0%R) H2); intros; cut (0 < - (l / 2))%R.",
                        "VernacExtend",
                        "8019dd9258ece02159e3ee8da26b3a578bd32ada"
                    ]
                },
                {
                    "command": [
                        "intro H4; elim (H3 (- (l / 2))%R H4).",
                        "VernacExtend",
                        "79c5aa7f7b44b3b65e7b0a1ca6af3ed46a35de77"
                    ]
                },
                {
                    "command": [
                        "intros; cut ((x / 2)%R <> 0%R).",
                        "VernacExtend",
                        "e539d8d28d942d6fc696a709757435d616bfa991"
                    ]
                },
                {
                    "command": [
                        "intro H6; cut (Rabs (x / 2) < x)%R.",
                        "VernacExtend",
                        "0471109793ad033de02588638207c916542bfbf1"
                    ]
                },
                {
                    "command": [
                        "intro H7; generalize (H5 (x / 2)%R H6 H7); intro H8; rewrite Rs_0 in H8; rewrite Rplus_0_l in H8; unfold Rminus in H8; rewrite Ropp_0 in H8; rewrite Rplus_0_r in H8; generalize (Rabs_def2 (Rs (x / 2) / (x / 2) + - l) (- (l / 2)) H8); intro H9; elim H9; intros; generalize (Rplus_lt_compat_r l (Rs (x / 2) / (x / 2) + - l) (- (l / 2)) H10); rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; replace (- (l / 2) + l)%R with (l / 2)%R.",
                        "VernacExtend",
                        "b5eef667b33cd2ad2103cda23b6f72b2bcad5649"
                    ]
                },
                {
                    "command": [
                        "intro H12; cut (l / 2 < 0)%R.",
                        "VernacExtend",
                        "cbde637d723c1342781e41a407832cf9ca68a1fb"
                    ]
                },
                {
                    "command": [
                        "intro H13; generalize (Rlt_trans (Rs (x / 2) / (x / 2)) (l / 2) 0 H12 H13); intro H14; unfold Rdiv in H14; cut (0 < x * / 2)%R.",
                        "VernacExtend",
                        "cd6461fae98f47490f9650a193e074702b82835e"
                    ]
                },
                {
                    "command": [
                        "intro H15; generalize (Rmult_lt_compat_r (x * / 2) (Rs (x * / 2) * / (x * / 2)) 0 H15 H14); rewrite Rmult_0_l; rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "5f44b45e5369981e6e5d922681f912b19ba9d5a3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; intro H16; elim (Rlt_irrefl 0 (Rle_lt_trans 0 (Rs (x * / 2)) 0 (Rs_pos (x * / 2)) H16)).",
                        "VernacExtend",
                        "c87d5391286215811142c13c5f825af94bd7712b"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0.",
                        "VernacExtend",
                        "4e401b99cc3c24b61ca502aa7107071c427501ea"
                    ]
                },
                {
                    "command": [
                        "generalize (cond_pos x); intro H16; red in |- *; intro H17; rewrite H17 in H16; elim (Rlt_irrefl 0 H16).",
                        "VernacExtend",
                        "595f9e3f3f7588a8677edcfae4163b0daf6ee586"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; discrR.",
                        "VernacExtend",
                        "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; [ apply (cond_pos x) | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "b1495b1e8a4cd2660af2a823a996380a6c97d671"
                    ]
                },
                {
                    "command": [
                        "assert (Hyp : (0 < 2)%R).",
                        "VernacExtend",
                        "d7c9281a4466f1fbc5c70497125c201b3766bd07"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; generalize (Rmult_lt_compat_r (/ 2) l 0 (Rinv_0_lt_compat 2 Hyp) H0); rewrite Rmult_0_l; intro H13; exact H13.",
                        "VernacExtend",
                        "6d5d88bb15ddf22b4e478eca4180c6b1484cfcd7"
                    ]
                },
                {
                    "command": [
                        "pattern l at 3 in |- *; rewrite double_var.",
                        "VernacExtend",
                        "d25254082c5ffe1044ba1bed05f1a15d645f0aa5"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "cut (0 < x / 2)%R.",
                        "VernacExtend",
                        "fc44853b91e16b7e47c3189f3d4ee448716a6686"
                    ]
                },
                {
                    "command": [
                        "intro H7; apply Rabs_def1.",
                        "VernacExtend",
                        "bee5417b4c3cc958711081ae5bbbafbc7ed25f01"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1 in |- *; replace (pos x) with (2 * (x / 2))%R.",
                        "VernacExtend",
                        "b59b117fbb92687198ac405cac8318f848dbaf99"
                    ]
                },
                {
                    "command": [
                        "pattern (x / 2)%R at 1 in |- *; replace (x / 2)%R with (x / 2 + 0)%R.",
                        "VernacExtend",
                        "39ab5c60f297fb787fc1e800af8e895cb044a453"
                    ]
                },
                {
                    "command": [
                        "replace (2 * (x / 2))%R with (x / 2 + x / 2)%R.",
                        "VernacExtend",
                        "2ebed9f5139185f29ba02e43a40af69a3e68c7a2"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l; assumption.",
                        "VernacExtend",
                        "44ce99cd422bdcc117c49c3d0f1b9cfdbe5e3579"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_0_r.",
                        "VernacExtend",
                        "c92685166837d4e0d69b0a5ef9f020e1b5f0a32d"
                    ]
                },
                {
                    "command": [
                        "pattern (pos x) at 2 in |- *; rewrite double_var.",
                        "VernacExtend",
                        "112b6a1d8dc1be6e8f71f25a74d04de93342b6fc"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with 0%R.",
                        "VernacExtend",
                        "c5df96511ac56b2579e529e471722dd538fa045d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; apply (cond_pos x).",
                        "VernacExtend",
                        "f728899e9dd3c30285ba35046c3d0fca586492ca"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ apply (cond_pos x) | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "ba81246412c87a6056178da195df91b0b07ad48e"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; apply prod_neq_R0.",
                        "VernacExtend",
                        "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
                    ]
                },
                {
                    "command": [
                        "generalize (cond_pos x); intro H6; red in |- *; intro H7; rewrite H7 in H6; elim (Rlt_irrefl 0 H6).",
                        "VernacExtend",
                        "83604856788d6858470e3889c075090e83a80314"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; discrR.",
                        "VernacExtend",
                        "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
                    ]
                },
                {
                    "command": [
                        "assert (Hyp : (0 < 2)%R).",
                        "VernacExtend",
                        "d7c9281a4466f1fbc5c70497125c201b3766bd07"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; generalize (Rmult_lt_compat_r (/ 2) l 0 (Rinv_0_lt_compat 2 Hyp) H0); rewrite Rmult_0_l; intro H4; assumption.",
                        "VernacExtend",
                        "8fe67a5851cbe24fe37001618d0c159ce9867df3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_sym",
            "line_nb": 365,
            "steps": [
                {
                    "command": [
                        "intros; rewrite H; reflexivity.",
                        "VernacExtend",
                        "56d8ebe070934265219de9b6580d0d60c2fadceb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_Rs_0_strong",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "case (Rtotal_order 0 (derive_pt Rs 0 (Rs_derivable 0%R))); intro.",
                        "VernacExtend",
                        "f8662621e3317a9e6382e50bc656157f3bd5eb3a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H; intro.",
                        "VernacExtend",
                        "f72f8bb994653bc377ef4f37626cba5f2cab4c8b"
                    ]
                },
                {
                    "command": [
                        "generalize (Rsqr_DRs 0); intro H1; rewrite <- H0 in H1; rewrite Rs_0 in H1; repeat rewrite Rsqr_0 in H1; rewrite Rplus_0_l in H1; rewrite Rmult_0_l in H1; generalize (eq_sym 0 (Rsqr (vi intr)) H1).",
                        "VernacExtend",
                        "158a9711f695f71174171aaf84ff1be3b0296a4c"
                    ]
                },
                {
                    "command": [
                        "clear H1; intro H1; generalize (Rsqr_eq_0 (vi intr) H1).",
                        "VernacExtend",
                        "d2019ec01b09ee4834c03d69f478a44e060847a5"
                    ]
                },
                {
                    "command": [
                        "intro H2; generalize (TypeSpeed_pos (vi intr)); intro H3; rewrite H2 in H3; elim (Rlt_irrefl 0 H3).",
                        "VernacExtend",
                        "43c95f98e93c0c1f89426b9c6cbda534c9179f67"
                    ]
                },
                {
                    "command": [
                        "generalize D_Rs_0; intro H1; elim (Rlt_irrefl 0 (Rle_lt_trans 0 (derive_pt Rs 0 (Rs_derivable 0%R)) 0 H1 H0)).",
                        "VernacExtend",
                        "b0594aa3b3dfd2a285c87293a52effe3b9942cc4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_alphas_0",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "generalize (D_Rs_2 0); intro; rewrite Rs_0 in H; rewrite Ropp_0 in H; rewrite Rmult_0_l in H; generalize (Rmult_integral (derive_pt Rs 0 (Rs_derivable 0%R)) (2 * derive_pt alphas 0 (cond_D1 alphas 0%R) - derive_pt thetat 0 (thetat_derivable 0%R)) H); intro H1; elim H1; intro; generalize D_Rs_0_strong; intro.",
                        "VernacExtend",
                        "95dc5f234b1a7c586b0b2e82c2384589165ecf42"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H2; elim (Rlt_irrefl 0 H2).",
                        "VernacExtend",
                        "48c505eddfdd58a92e075d2736e96f08ced009a8"
                    ]
                },
                {
                    "command": [
                        "generalize (Rminus_diag_uniq_sym (derive_pt thetat 0 (thetat_derivable 0%R)) (2 * derive_pt alphas 0 (cond_D1 alphas 0%R)) H0); intro; symmetry in |- *; assumption.",
                        "VernacExtend",
                        "fa55027bbde858cc66d7d77a8ab06e9bc3093fd6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_Rs_pos_non_null",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros; generalize (derive_increasing_interv 0 t Rs Rs_derivable H H0); intros; cut (0 <= 0 <= t)%R; [ cut (0 <= t <= t)%R; [ intros; rewrite <- Rs_0; apply (H1 0%R t H3 H2 H) | split; [ left; assumption | right; reflexivity ] ] | split; [ right; reflexivity | left; assumption ] ].",
                        "VernacExtend",
                        "be5207806f0464ffbeeb3bd81d46af098ff1d57f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_derivable",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "unfold F in |- *; reg.",
                        "VernacExtend",
                        "b9fb5bf8c3f7f7458282ed59d73f18f51d9c0ae4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_F",
            "line_nb": 391,
            "steps": [
                {
                    "command": [
                        "intro; unfold F in |- *; reg.",
                        "VernacExtend",
                        "462b4419d8c48a396ebe87af7b24bddd7414910e"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; field.",
                        "VernacExtend",
                        "7d032f065991c9470adfa51cb7e156ea00c9f139"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := rho_pos (vi intr)); red in |- *; intro; rewrite H in H0; elim (Rlt_irrefl 0 H0).",
                        "VernacExtend",
                        "89a296dc249cc79dea71a13a858b55c45311e7e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_F_Rsqr_v",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "intro; rewrite (D_F t); rewrite <- Rsqr_mult; cut ((rho (vi intr) / 2 * F t)%R = (vi intr * sin (rho (vi intr) * (t / 2)))%R).",
                        "VernacExtend",
                        "a2f38947f59092aab48e362a3f1866ba15e5b6e0"
                    ]
                },
                {
                    "command": [
                        "intro H; rewrite H; repeat rewrite Rsqr_mult; replace (Rsqr (vi intr) * Rsqr (cos (rho (vi intr) * (t / 2))) + Rsqr (vi intr) * Rsqr (sin (rho (vi intr) * (t / 2))))%R with (Rsqr (vi intr) * (Rsqr (sin (rho (vi intr) * (t / 2))) + Rsqr (cos (rho (vi intr) * (t / 2)))))%R.",
                        "VernacExtend",
                        "4950d27f0270dbc036a8f8f2e8bb91436227509c"
                    ]
                },
                {
                    "command": [
                        "rewrite sin2_cos2; rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "bc5de4970db91c99ef3aa215a9b3bce9219b333d"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "unfold F in |- *; unfold Rdiv in |- *; rewrite <- Rmult_assoc; replace (rho (vi intr) * / 2 * (2 * (vi intr * / rho (vi intr))))%R with (2 * / 2 * (rho (vi intr) * / rho (vi intr)) * vi intr)%R.",
                        "VernacExtend",
                        "1df28ead1be72785294761c1f9fe274f6e696f07"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "aae49efd20d6d574ee1c8aae171bff8f3d77260f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_1_l; reflexivity.",
                        "VernacExtend",
                        "02a14230bc0fdf974ce38184a0c55bda5536e15d"
                    ]
                },
                {
                    "command": [
                        "generalize (rho_pos (vi intr)); intro; red in |- *; intro; rewrite H0 in H; elim (Rlt_irrefl 0 H).",
                        "VernacExtend",
                        "52147498ba5776b9570918c322482e7013f84779"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "G_derivable",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "unfold G in |- *; reg.",
                        "VernacExtend",
                        "912a2dfda86d33dcd75b7282de80e8175d969bb9"
                    ]
                },
                {
                    "command": [
                        "apply F_derivable.",
                        "VernacExtend",
                        "9b6a5a715c121485d22cf795451133f79211a94f"
                    ]
                },
                {
                    "command": [
                        "apply Rs_derivable.",
                        "VernacExtend",
                        "dece200389edbf8f63e6eb001444c8e6f8bd1d54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_G_alphas",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt G t (G_derivable t) = (derive_pt Rs t (Rs_derivable t) - derive_pt F t (F_derivable t))%R).",
                        "VernacExtend",
                        "150adb2227b851bc94223599b1429394e4a03f8f"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H; rewrite (Rsqr_minus_plus (derive_pt Rs t (Rs_derivable t)) (derive_pt F t (F_derivable t))); unfold G in |- *; repeat rewrite Rmult_assoc; rewrite (Rsqr_minus_plus (Rs t) (F t)).",
                        "VernacExtend",
                        "eca274910abbe0bbcd596f8304ca420332ce6bed"
                    ]
                },
                {
                    "command": [
                        "replace (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * (Rsqr (Rs t) - Rsqr (F t)) + Rsqr (F t) * (Rsqr (rho (vi intr) / 2) - Rsqr (derive_pt alphas t (cond_D1 alphas t))))%R with (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + Rsqr (F t) * Rsqr (rho (vi intr) / 2))%R.",
                        "VernacExtend",
                        "8fb0d534bf66aee28e18569ea542bf33f4d19db5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_reg_l with (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t))%R.",
                        "VernacExtend",
                        "be3b7bba861b1a5fc84dba61de7f5c0c34ec687e"
                    ]
                },
                {
                    "command": [
                        "replace (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + (Rsqr (derive_pt Rs t (Rs_derivable t)) - Rsqr (derive_pt F t (F_derivable t))))%R with (Rsqr (derive_pt Rs t (Rs_derivable t)) + Rsqr (Rs t) * Rsqr (derive_pt alphas t (cond_D1 alphas t)))%R.",
                        "VernacExtend",
                        "82ba532c2dcfc7da5ff17b434d2409693e13f0c5"
                    ]
                },
                {
                    "command": [
                        "replace (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * Rsqr (Rs t) + Rsqr (F t) * Rsqr (rho (vi intr) / 2)))%R with (Rsqr (derive_pt F t (F_derivable t)) + Rsqr (rho (vi intr) / 2) * Rsqr (F t))%R.",
                        "VernacExtend",
                        "f7bedd9f8f30f3cd64319b487b684236bb77cd3b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqr_DRs; rewrite D_F_Rsqr_v; reflexivity.",
                        "VernacExtend",
                        "b999209ada3d955a352d40164a35c4579ef8a91f"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "unfold G in |- *.",
                        "VernacExtend",
                        "ff39da39f3ba21f96e7114ca5af788dda7a94c87"
                    ]
                },
                {
                    "command": [
                        "cut (derivable_pt Rs t); [ intro X | apply Rs_derivable ].",
                        "VernacExtend",
                        "1522c037c14e204069a802c00efe3d7246127cfa"
                    ]
                },
                {
                    "command": [
                        "cut (derivable_pt F t); [ intro X0 | apply F_derivable ].",
                        "VernacExtend",
                        "5f85634969217481a6d3929dfbe3e640daaeb7cb"
                    ]
                },
                {
                    "command": [
                        "reg.",
                        "VernacExtend",
                        "200773634894b8319f51d08aac98d6835b0db846"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt F t (F_derivable t)) with (derive_pt F t X0); [ idtac | apply pr_nu ].",
                        "VernacExtend",
                        "7c367c8a3a702c9c47c3bf02b6d1f4c7feb7bbc2"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt Rs t (Rs_derivable t)) with (derive_pt Rs t X); [ idtac | apply pr_nu ].",
                        "VernacExtend",
                        "c68d569c2c87963d56a175179760d26459b4f246"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_1_PI2",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "generalize PI_approx; intro; elim H; intros.",
                        "VernacExtend",
                        "031fd6513005291cb8168d64cd9591005cbfe104"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (PI_lb / 2)%R.",
                        "VernacExtend",
                        "3ea041d10c7a69b9e79ae13ed20ce7897b9f2127"
                    ]
                },
                {
                    "command": [
                        "unfold PI_lb in |- *; unfold Rdiv in |- *; apply Rmult_lt_reg_l with 2%R.",
                        "VernacExtend",
                        "88a80983e1dc37ad2e4617508c1279f882c13bc3"
                    ]
                },
                {
                    "command": [
                        "prove_sup.",
                        "VernacExtend",
                        "57e294f00a65db3fc7f5dddeca8e78f99f4a4330"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; rewrite <- Rmult_assoc; rewrite Rinv_r_simpl_m; [ prove_sup | discrR ].",
                        "VernacExtend",
                        "0705f6c29d00ceb2959eb9dad6389a9d13f6f74f"
                    ]
                },
                {
                    "command": [
                        "left; unfold Rdiv in |- *; repeat rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l; [ apply Rinv_0_lt_compat; prove_sup | assumption ].",
                        "VernacExtend",
                        "cada688bafcda9a09f463753981dc21d75e99e37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_G_pos",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (Rcase_abs (derive_pt G t (G_derivable t))); intro.",
                        "VernacExtend",
                        "a13e5d6efdc3532c62b30009d4c53ba6b0c2760f"
                    ]
                },
                {
                    "command": [
                        "generalize (D_G_alphas t); intro.",
                        "VernacExtend",
                        "beba21eec809591ab66bd177dcf7c983be6eeb05"
                    ]
                },
                {
                    "command": [
                        "generalize (D_Rs_pos t H H0); intro.",
                        "VernacExtend",
                        "13d295f9fb50bdd026b677760f1fc88315f20c82"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= derive_pt F t (F_derivable t))%R.",
                        "VernacExtend",
                        "f5755c1b0cef1b48dc6c9ff2ee695ea10544b600"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (Rs_pos t); intro.",
                        "VernacExtend",
                        "5e0eed6f808e4f00ad518240705d622b31b1588e"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= F t)%R.",
                        "VernacExtend",
                        "49387acef4e7357a13bcdb3cc44de4f8b28a8d34"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t)) < 0)%R.",
                        "VernacExtend",
                        "edc2fcd2be3a314c4ff2997959c890ee52c68f08"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= - Rsqr (derive_pt alphas t (cond_D1 alphas t)) * G t * (Rs t + F t) + Rsqr (F t) * (Rsqr (rho (vi intr) / 2) - Rsqr (derive_pt alphas t (cond_D1 alphas t))))%R.",
                        "VernacExtend",
                        "8409192761780585b3ea7fb4da0c852eb0c691b4"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2 in H8.",
                        "VernacExtend",
                        "3598516d9208172bf391b9fe265367ea48ff67ce"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl 0 (Rle_lt_trans 0 (derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t))) 0 H8 H7)).",
                        "VernacExtend",
                        "0e036f55a6f23daadbdf4342a280c26a39f18b7f"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat.",
                        "VernacExtend",
                        "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
                    ]
                },
                {
                    "command": [
                        "replace (- Rsqr (derive_pt alphas t (cond_D1 alphas t)) * G t * (Rs t + F t))%R with (Rsqr (derive_pt alphas t (cond_D1 alphas t)) * - G t * (Rs t + F t))%R.",
                        "VernacExtend",
                        "bf546319765ba95a64c51ff0d655d98a772fd5be"
                    ]
                },
                {
                    "command": [
                        "repeat simple apply Rmult_le_pos.",
                        "VernacExtend",
                        "8eec10d0618f809b648ba22789f01aa215dec9ce"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_sqr.",
                        "VernacExtend",
                        "dab150eb3bf9ea450741d52bf434375cb024aaf1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_ge_le_contravar.",
                        "VernacExtend",
                        "2445c11f217e81db53e7f4c9cd6785fe138d34b0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; assumption.",
                        "VernacExtend",
                        "c27a21368652da47eed6ddb4de9c567783a51975"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat; assumption.",
                        "VernacExtend",
                        "1726baef67fe0c3f7d55674968ad524b9ca14d50"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_sqr.",
                        "VernacExtend",
                        "dab150eb3bf9ea450741d52bf434375cb024aaf1"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (Rsqr (derive_pt alphas t (cond_D1 alphas t))).",
                        "VernacExtend",
                        "bf2b55894da3b2dd00a73cad1a4a88286032ab04"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r.",
                        "VernacExtend",
                        "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in |- *.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_assoc.",
                        "VernacExtend",
                        "3e4d560f9364fe46fca6cfe96a5270dde8732236"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l.",
                        "VernacExtend",
                        "55e9f717c5b98ad065802667fa3fb1cf9124328a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r.",
                        "VernacExtend",
                        "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
                    ]
                },
                {
                    "command": [
                        "generalize (D_abs_alpha t H H0); intro.",
                        "VernacExtend",
                        "3433d3f64a4ee84cc49c29b1305a0c24b03d1a5f"
                    ]
                },
                {
                    "command": [
                        "elim H8; intros.",
                        "VernacExtend",
                        "54bacf1a2e9fa49626cbb57c551336659e39bf7a"
                    ]
                },
                {
                    "command": [
                        "case (Rtotal_order 0 (derive_pt alphas t (cond_D1 alphas t))); intro.",
                        "VernacExtend",
                        "e99b0eb520bc99ec94af8fa7081e38d721226c9d"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_incr_1.",
                        "VernacExtend",
                        "64ae3af2603c81607c9a07cf7aa8ad1285eefc50"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; left; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "a5c0d123553c8c5d1219d42002d15a8e2acdad31"
                    ]
                },
                {
                    "command": [
                        "apply rho_pos.",
                        "VernacExtend",
                        "435b5840ac187cfec1dac893ecbe6e8ee533b451"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "elim H11; intros.",
                        "VernacExtend",
                        "a7cf45caa907d3df786f8024a77c860939c2444d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H12.",
                        "VernacExtend",
                        "535d97bd150861302e54cffeb5719d00d6f597bb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqr_0.",
                        "VernacExtend",
                        "3ca5d0e1b11e8ab92eb9bb2841c82e89196ffb1d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_sqr.",
                        "VernacExtend",
                        "dab150eb3bf9ea450741d52bf434375cb024aaf1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rsqr_neg (derive_pt alphas t (cond_D1 alphas t))).",
                        "VernacExtend",
                        "43b9dc9fcfbfe2218b26be3a1e812c618f20fe10"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_incr_1.",
                        "VernacExtend",
                        "64ae3af2603c81607c9a07cf7aa8ad1285eefc50"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive (rho (vi intr) / 2)).",
                        "VernacExtend",
                        "8ffa2155a90d22c315446e5cbcfa39be2e3ef157"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_ge_le_contravar.",
                        "VernacExtend",
                        "2445c11f217e81db53e7f4c9cd6785fe138d34b0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "replace (- (rho (vi intr) / 2))%R with (- rho (vi intr) / 2)%R.",
                        "VernacExtend",
                        "7312ae248cedc2c6602750604821fbf5953a6949"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; ring.",
                        "VernacExtend",
                        "c3a49fbaad57b642408a849290bec67d6d720029"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_ge_le_contravar; apply Rle_ge; left; assumption.",
                        "VernacExtend",
                        "39aaa75a2a4cadea48f21fa59713695b62704858"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; left; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "a5c0d123553c8c5d1219d42002d15a8e2acdad31"
                    ]
                },
                {
                    "command": [
                        "apply rho_pos.",
                        "VernacExtend",
                        "435b5840ac187cfec1dac893ecbe6e8ee533b451"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive 0).",
                        "VernacExtend",
                        "5b63f7ed03c8b9447bfdf10f4b8a4c66d9cf01d6"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t)))%R with (- (- derive_pt G t (G_derivable t) * (derive_pt Rs t (Rs_derivable t) + derive_pt F t (F_derivable t))))%R.",
                        "VernacExtend",
                        "9f5f65908776dcef279c698dd01acb42d6682319"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_gt_contravar.",
                        "VernacExtend",
                        "1f2b80da142820b364e7a9330a3a9a0c402521ce"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0.",
                        "VernacExtend",
                        "9db22f1ea38a12245c17fb1a0e93c5f55b418530"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; assumption.",
                        "VernacExtend",
                        "4ce8e866b38a86eeaa291d3f36269de10621fe4f"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_le_0_compat; assumption.",
                        "VernacExtend",
                        "12113fdd7b51d0edde97b5a6eb5733fe5b5a12ee"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "unfold F in |- *.",
                        "VernacExtend",
                        "66ac246af1db766a34d2cfc9def814a9ee83af70"
                    ]
                },
                {
                    "command": [
                        "repeat simple apply Rmult_le_pos.",
                        "VernacExtend",
                        "8eec10d0618f809b648ba22789f01aa215dec9ce"
                    ]
                },
                {
                    "command": [
                        "left; prove_sup0.",
                        "VernacExtend",
                        "0496d8f7fedff100b2a6a6c475d34e4594f44524"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; left; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "a5c0d123553c8c5d1219d42002d15a8e2acdad31"
                    ]
                },
                {
                    "command": [
                        "apply TypeSpeed_pos.",
                        "VernacExtend",
                        "c0a4e037872b3b3184905ebd4d019a4d0738c7fb"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply rho_pos.",
                        "VernacExtend",
                        "292330e1a8e0ae33071884c109482163940a79d4"
                    ]
                },
                {
                    "command": [
                        "apply sin_ge_0.",
                        "VernacExtend",
                        "5a0c3f6b4390aeefe14444e688488f5ebf38607b"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; repeat simple apply Rmult_le_pos.",
                        "VernacExtend",
                        "7d4f279a3b70726663a0cfe01db37eb2cc279faf"
                    ]
                },
                {
                    "command": [
                        "left; apply rho_pos.",
                        "VernacExtend",
                        "e5821a33b207431e0f87bc802b3280f5bca391f7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
                    ]
                },
                {
                    "command": [
                        "left; apply Rlt_trans with 1%R.",
                        "VernacExtend",
                        "0ab482278eeb0186d3b697c4766acf766f137915"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (2 * / rho (vi intr))%R.",
                        "VernacExtend",
                        "b7034d3470aa98c3da216c353f3b96c4ad657fef"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; [ prove_sup0 | apply Rinv_0_lt_compat; apply rho_pos ].",
                        "VernacExtend",
                        "71dc765402682111d0cedd70d47aa0db67ae4fdc"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "replace (2 * / rho (vi intr) * (rho (vi intr) * (t * / 2)))%R with t.",
                        "VernacExtend",
                        "763b962f28180c0314708fa42ab1d7c0ac1210d0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "645aebe2c3685a4f868a05a2372130cedecea85e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; symmetry in |- *; apply Rmult_1_l.",
                        "VernacExtend",
                        "21fcbcc9056f4429645848e43b9fa3543d57d4cc"
                    ]
                },
                {
                    "command": [
                        "red in |- *; generalize (rho_pos (vi intr)); intros; rewrite H7 in H6; elim (Rlt_irrefl 0 H6).",
                        "VernacExtend",
                        "5b77a1cc4d247af58d85df0ea6f6f27b8976cd48"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (PI / 2)%R.",
                        "VernacExtend",
                        "f4f4a78fc3b650da6f99bbd5d34bf6982715e567"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_1_PI2.",
                        "VernacExtend",
                        "4106852e23ee1bd5bd5c05c826159b1523409ae5"
                    ]
                },
                {
                    "command": [
                        "apply PI2_Rlt_PI.",
                        "VernacExtend",
                        "1b685202b02c297dfadbc1dd4615f4770ce42d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite D_F.",
                        "VernacExtend",
                        "d728347c2caae0fdabda69380de07dc3f2499349"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "left; apply TypeSpeed_pos.",
                        "VernacExtend",
                        "f714f475ed1413a5948e0a9b5fddabccb6b6661e"
                    ]
                },
                {
                    "command": [
                        "apply cos_ge_0.",
                        "VernacExtend",
                        "d0a1aba51341e8d2cd5821406c1c68a9b8c7c649"
                    ]
                },
                {
                    "command": [
                        "left; apply Rlt_le_trans with 0%R.",
                        "VernacExtend",
                        "24140bdc47e4c3bbfcc94eeb064b8f12a0631246"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_gt_contravar.",
                        "VernacExtend",
                        "1f2b80da142820b364e7a9330a3a9a0c402521ce"
                    ]
                },
                {
                    "command": [
                        "apply PI2_RGT_0.",
                        "VernacExtend",
                        "129c99672333cb8d1a5f5a45529d52329e916914"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; repeat simple apply Rmult_le_pos.",
                        "VernacExtend",
                        "7d4f279a3b70726663a0cfe01db37eb2cc279faf"
                    ]
                },
                {
                    "command": [
                        "left; apply rho_pos.",
                        "VernacExtend",
                        "e5821a33b207431e0f87bc802b3280f5bca391f7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
                    ]
                },
                {
                    "command": [
                        "left; apply Rlt_le_trans with 1%R.",
                        "VernacExtend",
                        "f02d22db638170a4806d49e9c068e034e9ba34dd"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (2 / rho (vi intr))%R.",
                        "VernacExtend",
                        "c4b788a03da88c3ca5e9424feeb29edd3c25e1b4"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ prove_sup0 | apply Rinv_0_lt_compat; apply rho_pos ].",
                        "VernacExtend",
                        "10347c3b7aaee5ede4f206c8071584db7804d362"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "replace (2 / rho (vi intr) * (rho (vi intr) * (t / 2)))%R with t.",
                        "VernacExtend",
                        "eb7925417f56c7a7c168b56c28d4180425fa7455"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm 2).",
                        "VernacExtend",
                        "fa06fc35a43a455b406d76e181d26b3606a0680c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "645aebe2c3685a4f868a05a2372130cedecea85e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; rewrite Rmult_1_l.",
                        "VernacExtend",
                        "dec98a2cdef344dd37511de9a481fcea7033c7f7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "red in |- *; generalize (rho_pos (vi intr)); intros; rewrite H5 in H4; elim (Rlt_irrefl 0 H4).",
                        "VernacExtend",
                        "9c3728001d88f3a16cea5db05bbb41161497c6c3"
                    ]
                },
                {
                    "command": [
                        "left; apply Rlt_1_PI2.",
                        "VernacExtend",
                        "b6d7870281b977f53dd82f5f9cfef2ca338ae8d5"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le.",
                        "VernacExtend",
                        "eae8ed3f063c0c64fc52ba03563e73be950936a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "G_0",
            "line_nb": 573,
            "steps": [
                {
                    "command": [
                        "unfold G in |- *; rewrite Rs_0; unfold Rminus, F in |- *; unfold Rdiv in |- *; rewrite Rmult_0_l; rewrite Rmult_0_r; rewrite sin_0; repeat rewrite Rmult_0_r; rewrite Rplus_0_l; apply Ropp_0.",
                        "VernacExtend",
                        "2c0ec93372b575b8b918dcc89995db5372dbaaae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "YCNGSTYS",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "intros; generalize (rho_pos (vi intr)); intro H1; generalize (Rinv_0_lt_compat (rho (vi intr)) H1); intro H2; generalize (Rmult_lt_compat_l (/ rho (vi intr)) (rho (vi intr) * t) 2 H2 H0); intro H3; rewrite <- Rmult_assoc in H3; rewrite <- Rinv_l_sym in H3.",
                        "VernacExtend",
                        "1fef5067cb7594c113bded923bcbd7452f19062e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l in H3; rewrite Rmult_comm in H3; generalize (G_pos t H H3); unfold G in |- *; intro H4; generalize (Rplus_le_compat_l (F t) 0 (Rs t - F t) H4); rewrite Rplus_0_r; intro H5; unfold Rminus in H5; rewrite <- Rplus_assoc in H5; rewrite Rplus_comm in H5; rewrite <- Rplus_assoc in H5; rewrite Rplus_opp_l in H5; rewrite Rplus_0_l in H5; unfold Rs, F in H5; unfold r in |- *; assumption.",
                        "VernacExtend",
                        "71c7a9b68575ae5ae67058135202154c6c0be9f2"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intro H4; rewrite H4 in H1; elim (Rlt_irrefl 0 H1).",
                        "VernacExtend",
                        "a5811aa2760195dc728b6d8ccc1a5365ac0c483a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}