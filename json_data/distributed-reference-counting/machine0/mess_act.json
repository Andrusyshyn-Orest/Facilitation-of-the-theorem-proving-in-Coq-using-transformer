{
    "filename": "machine0/mess_act.v",
    "coq_project": "distributed-reference-counting",
    "vernac_cmds": [
        [
            "Require Export counting.",
            "VernacRequire",
            "b817be94ce23b5498eafaf231930312d0772a9ec"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Section M_ACTION.",
            "VernacBeginSection",
            "7e4bcf0c3348d384d374bf76acd2dbae6d27205b"
        ],
        [
            "Definition Post_message (m0 : Message) (b0 : Bag_of_message) (s0 s1 : Site) := change_queue (queue Message) b0 s0 s1 (input Message m0 (b0 s0 s1)).",
            "VernacDefinition",
            "d982948572f09b9ed3e78721f86917fe8e1d6aef"
        ],
        [
            "Definition Collect_message (b0 : Bag_of_message) (s0 s1 : Site) := change_queue (queue Message) b0 s0 s1 (first_out Message (b0 s0 s1)).",
            "VernacDefinition",
            "5ef3069eb7c5c683491abdedb3a2b718d02ce9c2"
        ],
        [
            "Lemma post_here : forall (b0 : Bag_of_message) (m0 : Message) (s0 s1 : Site), Post_message m0 b0 s0 s1 s0 s1 = input Message m0 (b0 s0 s1).",
            "VernacStartTheoremProof",
            "e2138be339dab0dffd2260925dacd6f754540e92"
        ],
        [
            "intros; unfold Post_message in |- *; apply that_queue.",
            "VernacExtend",
            "312dc767aa86b64a8890fcd4b0afe980602dfefa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma post_elsewhere : forall (b0 : Bag_of_message) (m0 : Message) (s0 s1 s2 s3 : Site), s0 <> s2 \\/ s1 <> s3 -> Post_message m0 b0 s0 s1 s2 s3 = b0 s2 s3.",
            "VernacStartTheoremProof",
            "629b2e8356b1ea01bf1f84853832a0554b71fc4b"
        ],
        [
            "intros; unfold Post_message in |- *; apply other_queue; elim H; auto.",
            "VernacExtend",
            "6d20aa8ffcccdf6af06717f8b254c182ba5634e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma collect_here : forall (b0 : Bag_of_message) (s0 s1 : Site), Collect_message b0 s0 s1 s0 s1 = first_out Message (b0 s0 s1).",
            "VernacStartTheoremProof",
            "4d4c953120e8e9ccc9cad21dfe1a5f2209c7ee1b"
        ],
        [
            "intros; unfold Collect_message in |- *; apply that_queue.",
            "VernacExtend",
            "2229ad72345c9068a3480236a5590259e190a9a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma collect_elsewhere : forall (b0 : Bag_of_message) (s0 s1 s2 s3 : Site), s0 <> s2 \\/ s1 <> s3 -> Collect_message b0 s0 s1 s2 s3 = b0 s2 s3.",
            "VernacStartTheoremProof",
            "7889c685b01a56def8de8fe9d05d796eee9c3a52"
        ],
        [
            "intros; unfold Collect_message in |- *; apply other_queue; elim H; auto.",
            "VernacExtend",
            "68fc688eadba8fd01ea3a4f90acc6d63c33fd67b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End M_ACTION.",
            "VernacEndSegment",
            "ca98bd37d6d54056eb38708a3a931471ad351688"
        ],
        [
            "Section IN_Q_EFFECT.",
            "VernacBeginSection",
            "3499ad6c125f7169bdeaecbad8e0947e8b6cd850"
        ],
        [
            "Lemma in_post : forall (m m' : Message) (bom : Bag_of_message) (s1 s2 s3 s4 : Site), m <> m' -> In_queue Message m (Post_message m' bom s1 s2 s3 s4) -> In_queue Message m (bom s3 s4).",
            "VernacStartTheoremProof",
            "b4378638a892f2ca7699dae41a34f8ce87482c76"
        ],
        [
            "intros m m' bom s1 s2 s3 s4; case (eq_queue_dec s1 s3 s2 s4); intro.",
            "VernacExtend",
            "8d9ca350c2960ef90d0ccc1e45b43a20c802ed9c"
        ],
        [
            "decompose [and] a; rewrite H; rewrite H0.",
            "VernacExtend",
            "18cd064c78b3c1c1effe2c0ca3a309694d1e16b9"
        ],
        [
            "rewrite post_here.",
            "VernacExtend",
            "03d251b582897cf202586893796e7130bba75657"
        ],
        [
            "intros; apply in_q_input with (d' := m'); trivial.",
            "VernacExtend",
            "b01c1def88c54ad036ba499711955448977816c7"
        ],
        [
            "rewrite post_elsewhere; auto.",
            "VernacExtend",
            "b85763a970270130074268d475535c5f2f6516e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_collect : forall (m : Message) (bom : Bag_of_message) (s1 s2 s3 s4 : Site), In_queue Message m (Collect_message bom s1 s2 s3 s4) -> In_queue Message m (bom s3 s4).",
            "VernacStartTheoremProof",
            "5922512a66d936bfd2a00d3a5b6c76178ab21b6f"
        ],
        [
            "intros m bom s1 s2 s3 s4; case (eq_queue_dec s1 s3 s2 s4); intro.",
            "VernacExtend",
            "218c0142cf62035439967275eed6f98908f45cce"
        ],
        [
            "decompose [and] a; rewrite H; rewrite H0.",
            "VernacExtend",
            "18cd064c78b3c1c1effe2c0ca3a309694d1e16b9"
        ],
        [
            "rewrite collect_here; intros; apply in_q_output; trivial.",
            "VernacExtend",
            "4c4e90c04ae33fb1cfdb2b82cc54f9959ec582ac"
        ],
        [
            "rewrite collect_elsewhere; auto.",
            "VernacExtend",
            "eb9ff4676b9a20898f6ba50eba0a8125ab95d0b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IN_Q_EFFECT.",
            "VernacEndSegment",
            "f2f473a0c8cb59138afd04af1c4537fecfd27476"
        ],
        [
            "Section CARD_EFFECT.",
            "VernacBeginSection",
            "ad86be519f0abdec6f39f0087ceb00799ec866a8"
        ],
        [
            "Lemma post_card_mess : forall (m : Message) (s1 s2 : Site) (b : Bag_of_message), card_mess m (Post_message m b s1 s2 s1 s2) = (card_mess m (b s1 s2) + 1)%Z.",
            "VernacStartTheoremProof",
            "0f900a3fdff72ca9b9a31d5a4cd721e956543db9"
        ],
        [
            "intros; unfold card_mess in |- *; rewrite post_here; apply input_S_card; trivial.",
            "VernacExtend",
            "d03c56115815ba6b896c9a296e361e3cab314e6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_post_card_mess : forall (m m' : Message) (s1 s2 s3 s4 : Site) (b : Bag_of_message), m <> m' \\/ s1 <> s3 \\/ s2 <> s4 -> card_mess m (Post_message m' b s3 s4 s1 s2) = card_mess m (b s1 s2).",
            "VernacStartTheoremProof",
            "bb907bb3ba70f531e0e84e88014497a7061dba1d"
        ],
        [
            "intros; unfold card_mess in |- *; elim H; intros.",
            "VernacExtend",
            "dd9033ffad8b6f251ca99d18abe7b5ce19d4bc80"
        ],
        [
            "case (eq_queue_dec s1 s3 s2 s4); intro.",
            "VernacExtend",
            "598f820b88df835396fdcf270543685f47da8c9b"
        ],
        [
            "decompose [and] a; rewrite H1; rewrite H2; rewrite post_here; apply input_diff_card; trivial.",
            "VernacExtend",
            "dd234f545dd5cdfefbbc24f80de62cbcf4326b7e"
        ],
        [
            "rewrite post_elsewhere; elim o; auto.",
            "VernacExtend",
            "36a546c2a9137ab18e8d6f87d97d7666028c180b"
        ],
        [
            "rewrite post_elsewhere; elim H0; auto.",
            "VernacExtend",
            "cad5ab3080addc4bb71da06431f383df47789efa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma collect_card_mess : forall (m : Message) (s1 s2 : Site) (b : Bag_of_message), first Message (b s1 s2) = value Message m -> card_mess m (Collect_message b s1 s2 s1 s2) = (card_mess m (b s1 s2) - 1)%Z.",
            "VernacStartTheoremProof",
            "f1dc2cacd7212d9647335dbe8111ddd3b7983ab7"
        ],
        [
            "intros; unfold card_mess in |- *; rewrite collect_here; apply firstout_pred_card; trivial.",
            "VernacExtend",
            "89807037f09c1c234ed3b8e00239a51e5a9dac7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_collect_card_mess : forall (m : Message) (s1 s2 s3 s4 : Site) (b : Bag_of_message), first Message (b s1 s2) <> value Message m \\/ s1 <> s3 \\/ s2 <> s4 -> card_mess m (Collect_message b s3 s4 s1 s2) = card_mess m (b s1 s2).",
            "VernacStartTheoremProof",
            "27f1190cf9d5fa1f2e2f7b1cb7edad18a126a0a9"
        ],
        [
            "intros; unfold card_mess in |- *; elim H; intros.",
            "VernacExtend",
            "dd9033ffad8b6f251ca99d18abe7b5ce19d4bc80"
        ],
        [
            "case (eq_queue_dec s1 s3 s2 s4); intro.",
            "VernacExtend",
            "598f820b88df835396fdcf270543685f47da8c9b"
        ],
        [
            "decompose [and] a; rewrite <- H1; rewrite <- H2; rewrite collect_here.",
            "VernacExtend",
            "bcd6bbc0f0482219337cc5ec40a573b1d1db3381"
        ],
        [
            "apply firstout_diff_card; auto.",
            "VernacExtend",
            "f6391e447b645cd69652dd8875766d79fbdf8248"
        ],
        [
            "rewrite collect_elsewhere; elim o; auto.",
            "VernacExtend",
            "cfa9193b4757ce5c4126c4aafd78b000206f4032"
        ],
        [
            "rewrite collect_elsewhere; elim H0; auto.",
            "VernacExtend",
            "71436d514b5846942a359caddb5dc224f835baa2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CARD_EFFECT.",
            "VernacEndSegment",
            "3aeb6c3ddd128062b8b2ac7f36307689f7342e18"
        ],
        [
            "Section MESS_ALT.",
            "VernacBeginSection",
            "e04c36e426a0cf9636091bec8bdf4682dc9441da"
        ],
        [
            "Variable b0 : Bag_of_message.",
            "VernacAssumption",
            "68cb7d8171130705cc1fe7f4bddeae02bf6d8d2f"
        ],
        [
            "Variable s0 : Site.",
            "VernacAssumption",
            "0a02227b4f29783d409fcef0d1a1c1d730e7c8f0"
        ],
        [
            "Lemma D_collect : forall s1 s2 : Site, D_queue (b0 s0 owner) -> D_queue (Collect_message b0 s1 s2 s0 owner).",
            "VernacStartTheoremProof",
            "d46bb84bc313ee024ca2b4959dac2ac3d3775e8a"
        ],
        [
            "intros; case (eq_queue_dec s1 s0 s2 owner); intro.",
            "VernacExtend",
            "5d682d1b84236751270fbbadb5dbf4c1ef8e617c"
        ],
        [
            "decompose [and] a; rewrite H0; rewrite H1.",
            "VernacExtend",
            "9c539e512b3b49bdc7548bf7ae0775dee872d600"
        ],
        [
            "rewrite collect_here; apply D_first_out; trivial.",
            "VernacExtend",
            "acb138fd175f7b2af2274d056256ade667576912"
        ],
        [
            "rewrite collect_elsewhere; auto.",
            "VernacExtend",
            "eb9ff4676b9a20898f6ba50eba0a8125ab95d0b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_post_elsewhere : forall (s1 s2 : Site) (m : Message), s1 <> s0 \\/ s2 <> owner -> D_queue (b0 s0 owner) -> D_queue (Post_message m b0 s1 s2 s0 owner).",
            "VernacStartTheoremProof",
            "063f2c54e4bc436d7953c08602ea0c2af8b821be"
        ],
        [
            "intros; rewrite post_elsewhere; trivial.",
            "VernacExtend",
            "66fbb8818ae5144d5a4f3f92461fae3787ce8ea7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_post_dec : D_queue (Post_message dec b0 s0 owner s0 owner).",
            "VernacStartTheoremProof",
            "6b9f8b737de47bdf9d0d140fb0b978592e9b3887"
        ],
        [
            "intros; rewrite post_here; apply D_dec; trivial.",
            "VernacExtend",
            "0e082e530bda750b029fd925790615771fa4fc0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_collect : forall s1 s2 : Site, alternate (b0 s0 owner) -> alternate (Collect_message b0 s1 s2 s0 owner).",
            "VernacStartTheoremProof",
            "d3a2aeeb698c04195ff7b10b9d303e1dd1d50d1f"
        ],
        [
            "intros; case (eq_queue_dec s1 s0 s2 owner); intro.",
            "VernacExtend",
            "5d682d1b84236751270fbbadb5dbf4c1ef8e617c"
        ],
        [
            "decompose [and] a; rewrite H0; rewrite H1.",
            "VernacExtend",
            "9c539e512b3b49bdc7548bf7ae0775dee872d600"
        ],
        [
            "rewrite collect_here; apply alt_first_out; trivial.",
            "VernacExtend",
            "5e2941940321e59a892aa8f66c39253e2823b7fb"
        ],
        [
            "rewrite collect_elsewhere; auto.",
            "VernacExtend",
            "eb9ff4676b9a20898f6ba50eba0a8125ab95d0b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_post_elsewhere : forall (s1 s2 : Site) (m : Message), s1 <> s0 \\/ s2 <> owner -> alternate (b0 s0 owner) -> alternate (Post_message m b0 s1 s2 s0 owner).",
            "VernacStartTheoremProof",
            "be1d1a010e314295c60db55ff587efc2f66b9e5e"
        ],
        [
            "intros; rewrite post_elsewhere; trivial.",
            "VernacExtend",
            "66fbb8818ae5144d5a4f3f92461fae3787ce8ea7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_post_dec : alternate (b0 s0 owner) -> alternate (Post_message dec b0 s0 owner s0 owner).",
            "VernacStartTheoremProof",
            "e03eb83f3952f32a9ce9bc67d45be871db02f3f7"
        ],
        [
            "intros; rewrite post_here; apply alt_dec_alt; trivial.",
            "VernacExtend",
            "b9a88087eb9d4fb46a2cc268925f4d016e664a27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_post_inc : forall s1 : Site, alternate (b0 s0 owner) -> b0 s0 owner = empty Message \\/ last Message (b0 s0 owner) = value Message dec -> alternate (Post_message (inc_dec s1) b0 s0 owner s0 owner).",
            "VernacStartTheoremProof",
            "f3578c9771b39c41d6e228e7e1abef472684e06d"
        ],
        [
            "intros s1 H; rewrite post_here; inversion H; simpl in |- *; intros.",
            "VernacExtend",
            "bb3eeaa4e1cb39aa3984bc7370591a88ab6ef233"
        ],
        [
            "apply alt_single_inc.",
            "VernacExtend",
            "475d7ca61283d9832167ff09c2d7089549742f0b"
        ],
        [
            "decompose [or] H0; discriminate H2.",
            "VernacExtend",
            "7edfb927c9db732d1940532c11fe105493796c81"
        ],
        [
            "apply alt_inc_dec; trivial.",
            "VernacExtend",
            "b21029372df9068922d1c2cfa0e34264e9493147"
        ],
        [
            "decompose [or] H2; discriminate H3.",
            "VernacExtend",
            "138b67490f8eea799927337aadf1461626fbc145"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MESS_ALT.",
            "VernacEndSegment",
            "f3eb38954e9387a5dd9f40fc540ba821f3bb41eb"
        ]
    ],
    "proofs": [
        {
            "name": "post_here",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros; unfold Post_message in |- *; apply that_queue.",
                        "VernacExtend",
                        "312dc767aa86b64a8890fcd4b0afe980602dfefa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "post_elsewhere",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros; unfold Post_message in |- *; apply other_queue; elim H; auto.",
                        "VernacExtend",
                        "6d20aa8ffcccdf6af06717f8b254c182ba5634e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "collect_here",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros; unfold Collect_message in |- *; apply that_queue.",
                        "VernacExtend",
                        "2229ad72345c9068a3480236a5590259e190a9a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "collect_elsewhere",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros; unfold Collect_message in |- *; apply other_queue; elim H; auto.",
                        "VernacExtend",
                        "68fc688eadba8fd01ea3a4f90acc6d63c33fd67b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_post",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros m m' bom s1 s2 s3 s4; case (eq_queue_dec s1 s3 s2 s4); intro.",
                        "VernacExtend",
                        "8d9ca350c2960ef90d0ccc1e45b43a20c802ed9c"
                    ]
                },
                {
                    "command": [
                        "decompose [and] a; rewrite H; rewrite H0.",
                        "VernacExtend",
                        "18cd064c78b3c1c1effe2c0ca3a309694d1e16b9"
                    ]
                },
                {
                    "command": [
                        "rewrite post_here.",
                        "VernacExtend",
                        "03d251b582897cf202586893796e7130bba75657"
                    ]
                },
                {
                    "command": [
                        "intros; apply in_q_input with (d' := m'); trivial.",
                        "VernacExtend",
                        "b01c1def88c54ad036ba499711955448977816c7"
                    ]
                },
                {
                    "command": [
                        "rewrite post_elsewhere; auto.",
                        "VernacExtend",
                        "b85763a970270130074268d475535c5f2f6516e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_collect",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros m bom s1 s2 s3 s4; case (eq_queue_dec s1 s3 s2 s4); intro.",
                        "VernacExtend",
                        "218c0142cf62035439967275eed6f98908f45cce"
                    ]
                },
                {
                    "command": [
                        "decompose [and] a; rewrite H; rewrite H0.",
                        "VernacExtend",
                        "18cd064c78b3c1c1effe2c0ca3a309694d1e16b9"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_here; intros; apply in_q_output; trivial.",
                        "VernacExtend",
                        "4c4e90c04ae33fb1cfdb2b82cc54f9959ec582ac"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_elsewhere; auto.",
                        "VernacExtend",
                        "eb9ff4676b9a20898f6ba50eba0a8125ab95d0b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "post_card_mess",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; rewrite post_here; apply input_S_card; trivial.",
                        "VernacExtend",
                        "d03c56115815ba6b896c9a296e361e3cab314e6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_post_card_mess",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; elim H; intros.",
                        "VernacExtend",
                        "dd9033ffad8b6f251ca99d18abe7b5ce19d4bc80"
                    ]
                },
                {
                    "command": [
                        "case (eq_queue_dec s1 s3 s2 s4); intro.",
                        "VernacExtend",
                        "598f820b88df835396fdcf270543685f47da8c9b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] a; rewrite H1; rewrite H2; rewrite post_here; apply input_diff_card; trivial.",
                        "VernacExtend",
                        "dd234f545dd5cdfefbbc24f80de62cbcf4326b7e"
                    ]
                },
                {
                    "command": [
                        "rewrite post_elsewhere; elim o; auto.",
                        "VernacExtend",
                        "36a546c2a9137ab18e8d6f87d97d7666028c180b"
                    ]
                },
                {
                    "command": [
                        "rewrite post_elsewhere; elim H0; auto.",
                        "VernacExtend",
                        "cad5ab3080addc4bb71da06431f383df47789efa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "collect_card_mess",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; rewrite collect_here; apply firstout_pred_card; trivial.",
                        "VernacExtend",
                        "89807037f09c1c234ed3b8e00239a51e5a9dac7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_collect_card_mess",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; elim H; intros.",
                        "VernacExtend",
                        "dd9033ffad8b6f251ca99d18abe7b5ce19d4bc80"
                    ]
                },
                {
                    "command": [
                        "case (eq_queue_dec s1 s3 s2 s4); intro.",
                        "VernacExtend",
                        "598f820b88df835396fdcf270543685f47da8c9b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] a; rewrite <- H1; rewrite <- H2; rewrite collect_here.",
                        "VernacExtend",
                        "bcd6bbc0f0482219337cc5ec40a573b1d1db3381"
                    ]
                },
                {
                    "command": [
                        "apply firstout_diff_card; auto.",
                        "VernacExtend",
                        "f6391e447b645cd69652dd8875766d79fbdf8248"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_elsewhere; elim o; auto.",
                        "VernacExtend",
                        "cfa9193b4757ce5c4126c4aafd78b000206f4032"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_elsewhere; elim H0; auto.",
                        "VernacExtend",
                        "71436d514b5846942a359caddb5dc224f835baa2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_collect",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros; case (eq_queue_dec s1 s0 s2 owner); intro.",
                        "VernacExtend",
                        "5d682d1b84236751270fbbadb5dbf4c1ef8e617c"
                    ]
                },
                {
                    "command": [
                        "decompose [and] a; rewrite H0; rewrite H1.",
                        "VernacExtend",
                        "9c539e512b3b49bdc7548bf7ae0775dee872d600"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_here; apply D_first_out; trivial.",
                        "VernacExtend",
                        "acb138fd175f7b2af2274d056256ade667576912"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_elsewhere; auto.",
                        "VernacExtend",
                        "eb9ff4676b9a20898f6ba50eba0a8125ab95d0b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_post_elsewhere",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros; rewrite post_elsewhere; trivial.",
                        "VernacExtend",
                        "66fbb8818ae5144d5a4f3f92461fae3787ce8ea7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_post_dec",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros; rewrite post_here; apply D_dec; trivial.",
                        "VernacExtend",
                        "0e082e530bda750b029fd925790615771fa4fc0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_collect",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros; case (eq_queue_dec s1 s0 s2 owner); intro.",
                        "VernacExtend",
                        "5d682d1b84236751270fbbadb5dbf4c1ef8e617c"
                    ]
                },
                {
                    "command": [
                        "decompose [and] a; rewrite H0; rewrite H1.",
                        "VernacExtend",
                        "9c539e512b3b49bdc7548bf7ae0775dee872d600"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_here; apply alt_first_out; trivial.",
                        "VernacExtend",
                        "5e2941940321e59a892aa8f66c39253e2823b7fb"
                    ]
                },
                {
                    "command": [
                        "rewrite collect_elsewhere; auto.",
                        "VernacExtend",
                        "eb9ff4676b9a20898f6ba50eba0a8125ab95d0b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_post_elsewhere",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros; rewrite post_elsewhere; trivial.",
                        "VernacExtend",
                        "66fbb8818ae5144d5a4f3f92461fae3787ce8ea7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_post_dec",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros; rewrite post_here; apply alt_dec_alt; trivial.",
                        "VernacExtend",
                        "b9a88087eb9d4fb46a2cc268925f4d016e664a27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_post_inc",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros s1 H; rewrite post_here; inversion H; simpl in |- *; intros.",
                        "VernacExtend",
                        "bb3eeaa4e1cb39aa3984bc7370591a88ab6ef233"
                    ]
                },
                {
                    "command": [
                        "apply alt_single_inc.",
                        "VernacExtend",
                        "475d7ca61283d9832167ff09c2d7089549742f0b"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H0; discriminate H2.",
                        "VernacExtend",
                        "7edfb927c9db732d1940532c11fe105493796c81"
                    ]
                },
                {
                    "command": [
                        "apply alt_inc_dec; trivial.",
                        "VernacExtend",
                        "b21029372df9068922d1c2cfa0e34264e9493147"
                    ]
                },
                {
                    "command": [
                        "decompose [or] H2; discriminate H3.",
                        "VernacExtend",
                        "138b67490f8eea799927337aadf1461626fbc145"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}