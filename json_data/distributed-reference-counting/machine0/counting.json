{
    "filename": "machine0/counting.v",
    "coq_project": "distributed-reference-counting",
    "vernac_cmds": [
        [
            "Require Export DistributedReferenceCounting.machine0.machine.",
            "VernacRequire",
            "02d02cb90c2a9394fc6dd25974defda9191b41b3"
        ],
        [
            "Section CONTROL.",
            "VernacBeginSection",
            "a0afaee848741b94a44c8eb32126294c60d64c16"
        ],
        [
            "Variable s0 : Site.",
            "VernacAssumption",
            "0a02227b4f29783d409fcef0d1a1c1d730e7c8f0"
        ],
        [
            "Definition ctrl_copy (s1 : Site) (bom : Bag_of_message) := card_mess copy (bom s0 s1).",
            "VernacDefinition",
            "6ab89b3e90b5b53f82c2602dd24e52d1f052ac9d"
        ],
        [
            "Definition ctrl_dec (s1 : Site) (bom : Bag_of_message) := card_mess dec (bom s1 s0).",
            "VernacDefinition",
            "f24b379b91da85ee8326cc107c76c87f16437af6"
        ],
        [
            "Definition ctrl_inc (s1 : Site) (bom : Bag_of_message) := card_mess (inc_dec s0) (bom s1 owner).",
            "VernacDefinition",
            "6259661e20264843d427b3f1d51d172035b865a2"
        ],
        [
            "Definition sigma_ctrl_copy (bom : Bag_of_message) := sigma Site LS (fun si : Site => ctrl_copy si bom).",
            "VernacDefinition",
            "3ea1872d382d684eb6a7cc8217439f20a7ff6d75"
        ],
        [
            "Definition sigma_ctrl_dec (bom : Bag_of_message) := sigma Site LS (fun si : Site => ctrl_dec si bom).",
            "VernacDefinition",
            "0c273463ea5de9fbd8e92f69eaec278436535747"
        ],
        [
            "Definition sigma_ctrl_inc (bom : Bag_of_message) := sigma Site LS (fun si : Site => ctrl_inc si bom).",
            "VernacDefinition",
            "4978590812635d42cebcbfb4258f45c1563bdc31"
        ],
        [
            "Definition sigma_ctrl (bom : Bag_of_message) := (sigma_ctrl_copy bom + sigma_ctrl_dec bom + sigma_ctrl_inc bom)%Z.",
            "VernacDefinition",
            "30360b0dfab3e805fce4a6c985c0b03b393e8635"
        ],
        [
            "End CONTROL.",
            "VernacEndSegment",
            "53798dfdddffeac0cacfe7a5810ed41953d0d9b5"
        ],
        [
            "Section CONTROL_POS.",
            "VernacBeginSection",
            "492a18022f1e4c5bb314b44892c0539c7ccffdbf"
        ],
        [
            "Variable bom : Bag_of_message.",
            "VernacAssumption",
            "ba0e065461b1cf6ee27406d4af1a1f111dafc452"
        ],
        [
            "Lemma ctrl_copy_pos : forall s0 s1 : Site, (ctrl_copy s0 s1 bom >= 0)%Z.",
            "VernacStartTheoremProof",
            "276e0012fe2f4d09ebc921f8550f60e3ad68fc9e"
        ],
        [
            "intros; unfold ctrl_copy in |- *; apply pos_card_mess.",
            "VernacExtend",
            "c30b52193c5dffd5966ac62a7aa0fd4750885437"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ctrl_dec_pos : forall s0 s1 : Site, (ctrl_dec s0 s1 bom >= 0)%Z.",
            "VernacStartTheoremProof",
            "93ec36d77eca6c8ea8aef47aad6cd4ce31a73998"
        ],
        [
            "intros; unfold ctrl_dec in |- *; apply pos_card_mess.",
            "VernacExtend",
            "8bd7c71c0df5c5afb891145c26787f1c707a1083"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark ctrl_inc_pos : forall s0 s1 : Site, (ctrl_inc s0 s1 bom >= 0)%Z.",
            "VernacStartTheoremProof",
            "94aa5de9c15f7c3fa947ea3d9ee14b91d00b203b"
        ],
        [
            "intros; unfold ctrl_inc in |- *; apply pos_card_mess.",
            "VernacExtend",
            "4043c1ace8873a64de1981816a06f73ea48172bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark ctrl_inc_strct_pos : forall s0 s1 : Site, In_queue Message (inc_dec s0) (bom s1 owner) -> (ctrl_inc s0 s1 bom > 0)%Z.",
            "VernacStartTheoremProof",
            "bf6707c80360fb096ad996d8f3e26ddb64aa778d"
        ],
        [
            "unfold ctrl_inc in |- *; intros; apply strct_pos_card_mess; trivial.",
            "VernacExtend",
            "38901225fa78a6de2a051235994c640887fd3599"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark sigma_ctrl_copy_pos : forall s0 : Site, (sigma_ctrl_copy s0 bom >= 0)%Z.",
            "VernacStartTheoremProof",
            "0b926d2ed9f0d65de84b3bea89ac1b4493effe6d"
        ],
        [
            "intro; unfold sigma_ctrl_copy in |- *; apply sigma_pos; intro; apply ctrl_copy_pos.",
            "VernacExtend",
            "2c66b04892e0d0627651aabf8d98c89962068818"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark sigma_ctrl_dec_pos : forall s0 : Site, (sigma_ctrl_dec s0 bom >= 0)%Z.",
            "VernacStartTheoremProof",
            "cb3c862f64a29b56e0e48b1a66bdeb77a7d03da5"
        ],
        [
            "intro; unfold sigma_ctrl_dec in |- *; apply sigma_pos; intro; apply ctrl_dec_pos.",
            "VernacExtend",
            "52bfc43eeace5def3c84d6de71e023a67f20b08a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark sigma_ctrl_inc_strct_pos : forall s0 s1 : Site, In_queue Message (inc_dec s0) (bom s1 owner) -> (sigma_ctrl_inc s0 bom > 0)%Z.",
            "VernacStartTheoremProof",
            "774e286c7ee73aa1a8cd6dc564f48e606dfe4117"
        ],
        [
            "intros; unfold sigma_ctrl_inc in |- *.",
            "VernacExtend",
            "928aeb8f6b1416ef90f495e5c306cde7855e5a22"
        ],
        [
            "generalize (le_sigma Site LS (fun si : Site => ctrl_inc s0 si bom) s1 (ctrl_inc_pos s0) (in_s_LS s1)); intros.",
            "VernacExtend",
            "46b357e9bbdab8c6fd929ba867c9269213409d5f"
        ],
        [
            "generalize (ctrl_inc_strct_pos s0 s1 H); intro; omega.",
            "VernacExtend",
            "b4fc7ab683e252bc967d9358921cfe66d12ac8b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sigma_ctrl_strct_pos : forall s0 s1 : Site, In_queue Message (inc_dec s0) (bom s1 owner) -> (sigma_ctrl s0 bom > 0)%Z.",
            "VernacStartTheoremProof",
            "e805b2bf89ad882eb45684c689b2b32601f6cbe4"
        ],
        [
            "intros; unfold sigma_ctrl in |- *.",
            "VernacExtend",
            "8fdf3c67055335bf906f5c7ff2715b99aaee9be0"
        ],
        [
            "generalize (sigma_ctrl_copy_pos s0); intro.",
            "VernacExtend",
            "a468a8889a66e73873b274d08ca613892858beba"
        ],
        [
            "generalize (sigma_ctrl_dec_pos s0); intro.",
            "VernacExtend",
            "517b26fc9065771e25df33ff633fa240d9f9c27a"
        ],
        [
            "generalize (sigma_ctrl_inc_strct_pos s0 s1 H); intro.",
            "VernacExtend",
            "c645244693ce8737d47b314fdeb981ce61e4b3e7"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CONTROL_POS.",
            "VernacEndSegment",
            "3c34d60095fabb8e1273aba1fe73fbfc1ad17d12"
        ],
        [
            "Section XY.",
            "VernacBeginSection",
            "ea3f19a2ff5ad56912df64b0d26a126dd47f709e"
        ],
        [
            "Variable c0 : Config.",
            "VernacAssumption",
            "c7a02d67abcf243788e196bb00e83e77a1c6457d"
        ],
        [
            "Definition xi (s0 : Site) := (Int (rt c0 s0) + ctrl_copy owner s0 (bm c0) + ctrl_dec owner s0 (bm c0))%Z.",
            "VernacDefinition",
            "f04c6d530096fdafa2c3e660380f6852dbba93a5"
        ],
        [
            "Definition yi (s0 : Site) := sigma Site LS (fun s' : Site => ctrl_inc s' s0 (bm c0)).",
            "VernacDefinition",
            "9b046aabd7f33f8112b4d6cd8cd3eed4cffd3dcb"
        ],
        [
            "Definition sigma_xi := sigma Site LS (fun s' : Site => xi s').",
            "VernacDefinition",
            "41246c799ca123226121aea68c5a008c414ce084"
        ],
        [
            "Definition sigma_yi := sigma Site LS (fun s' : Site => yi s').",
            "VernacDefinition",
            "e069da618656d32be952d226c08ac500e5228108"
        ],
        [
            "End XY.",
            "VernacEndSegment",
            "060ea4cfa8c83c0be2dde5880e518fcd22e3f0e0"
        ],
        [
            "Section ALT_CTRL.",
            "VernacBeginSection",
            "b079b7f2d5e2990cb02ae306029c9a3c05a504d0"
        ],
        [
            "Remark S_card_mess : forall (q0 : queue Message) (m : Message), card_mess m (input Message m q0) = (card_mess m q0 + 1)%Z.",
            "VernacStartTheoremProof",
            "44fd51498d90b97aab178c41262ebc8ba486d9e6"
        ],
        [
            "intros; unfold card_mess in |- *; apply input_S_card; trivial.",
            "VernacExtend",
            "5b65b6fccd2ee0ff437d4cc28fc7a4c34f6127ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark card_mess_diff : forall (q0 : queue Message) (m m' : Message), m <> m' -> card_mess m (input Message m' q0) = card_mess m q0.",
            "VernacStartTheoremProof",
            "cec85e594533e1e45bff2903585d7035196c0a2b"
        ],
        [
            "intros; unfold card_mess in |- *; apply input_diff_card; trivial.",
            "VernacExtend",
            "91708353b00152cb93afb63ea6ab9a7d900c32ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark S_sigma_card_inc : forall (s0 : Site) (q0 : queue Message), sigma Site LS (fun s' : Site => card_mess (inc_dec s') (input Message (inc_dec s0) q0)) = (sigma Site LS (fun s' : Site => card_mess (inc_dec s') q0) + 1)%Z.",
            "VernacStartTheoremProof",
            "9544d3d5be061fe216079b5da029312292d64339"
        ],
        [
            "intros; apply sigma__S with (eq_E_dec := eq_site_dec) (x0 := s0).",
            "VernacExtend",
            "44e2291539ddc841d491852671a288726c109054"
        ],
        [
            "exact finite_site.",
            "VernacExtend",
            "8fa725edc657e5b2faf78256b647f13ef1ff3f87"
        ],
        [
            "apply S_card_mess.",
            "VernacExtend",
            "b2d972aecd3200e8bd3611217499a3bba458142a"
        ],
        [
            "intros; apply card_mess_diff; injection; auto.",
            "VernacExtend",
            "92fd860876e58b889f3e0a24e5cfa6bb38e30839"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark diff_sigma_card_inc : forall q0 : queue Message, sigma Site LS (fun s' : Site => card_mess (inc_dec s') (input Message dec q0)) = sigma Site LS (fun s' : Site => card_mess (inc_dec s') q0).",
            "VernacStartTheoremProof",
            "d5612368c03fc93596b9596613725beb8e92cd8b"
        ],
        [
            "intros; apply sigma_simpl.",
            "VernacExtend",
            "832e608f35430fae374d8aa944b4172e3e503c61"
        ],
        [
            "intros; apply card_mess_diff.",
            "VernacExtend",
            "d277ba9f9d979a3588bac459cf9dc2b087985229"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_dec_inc : forall q0 : queue Message, alternate q0 -> (card_mess dec q0 + 1 >= sigma Site LS (fun s' : Site => card_mess (inc_dec s') q0))%Z.",
            "VernacStartTheoremProof",
            "9dc78fb35f9ad54b7516729af748440ae4ac3752"
        ],
        [
            "intros; elim H; intros.",
            "VernacExtend",
            "7976bbf43ebfe586ca0578874a14f70f58098753"
        ],
        [
            "simpl in |- *; rewrite sigma_null; omega.",
            "VernacExtend",
            "a5272a7f8ab295c4280f24563eaf1fa6e6cbfe91"
        ],
        [
            "rewrite card_mess_diff.",
            "VernacExtend",
            "7ef89835dc4b694b5ef3e91a3e9ceaf5cbbfb603"
        ],
        [
            "rewrite S_sigma_card_inc.",
            "VernacExtend",
            "b9a3560722f905fc9bd9185f5d707beb6587848f"
        ],
        [
            "simpl in |- *; rewrite sigma_null; omega.",
            "VernacExtend",
            "a5272a7f8ab295c4280f24563eaf1fa6e6cbfe91"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "rewrite S_card_mess.",
            "VernacExtend",
            "b5104c5fdbb5337eb629b8502fb766d796c6a007"
        ],
        [
            "rewrite diff_sigma_card_inc.",
            "VernacExtend",
            "3f742355e3bb9652af6132b5e029c85703089f4a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite card_mess_diff.",
            "VernacExtend",
            "7ef89835dc4b694b5ef3e91a3e9ceaf5cbbfb603"
        ],
        [
            "rewrite S_card_mess.",
            "VernacExtend",
            "b5104c5fdbb5337eb629b8502fb766d796c6a007"
        ],
        [
            "rewrite S_sigma_card_inc.",
            "VernacExtend",
            "b9a3560722f905fc9bd9185f5d707beb6587848f"
        ],
        [
            "rewrite diff_sigma_card_inc.",
            "VernacExtend",
            "3f742355e3bb9652af6132b5e029c85703089f4a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_dec_inc : forall q0 : queue Message, alternate q0 -> D_queue q0 -> (card_mess dec q0 >= sigma Site LS (fun s' : Site => card_mess (inc_dec s') q0))%Z.",
            "VernacStartTheoremProof",
            "27085733b44d344942fda5e07c8833282a5359ea"
        ],
        [
            "intros q0 H; elim H; intros.",
            "VernacExtend",
            "867bfceeb91281e425cfb242680bafcda63f9249"
        ],
        [
            "simpl in |- *; rewrite sigma_null; omega.",
            "VernacExtend",
            "a5272a7f8ab295c4280f24563eaf1fa6e6cbfe91"
        ],
        [
            "absurd (D_queue (input Message (inc_dec s0) (empty Message))).",
            "VernacExtend",
            "42b9a70b7b1959bda967d7297eaa132cef3dd441"
        ],
        [
            "apply not_D_queue.",
            "VernacExtend",
            "ee13b3d2657bae579a9b6b1fae90f4064c4b875b"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite S_card_mess.",
            "VernacExtend",
            "b5104c5fdbb5337eb629b8502fb766d796c6a007"
        ],
        [
            "rewrite diff_sigma_card_inc.",
            "VernacExtend",
            "3f742355e3bb9652af6132b5e029c85703089f4a"
        ],
        [
            "apply alt_dec_inc; trivial.",
            "VernacExtend",
            "de1f81ab0bd514188bf3a63bd729fb7e7eb27768"
        ],
        [
            "absurd (D_queue (input Message (inc_dec s0) (input Message dec qm))).",
            "VernacExtend",
            "c723813a23b23a9d26c92cc3da5d78cd66a8be01"
        ],
        [
            "apply not_D_queue.",
            "VernacExtend",
            "ee13b3d2657bae579a9b6b1fae90f4064c4b875b"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ALT_CTRL.",
            "VernacEndSegment",
            "067c36905bac0789b308d738bf92f9df946125eb"
        ]
    ],
    "proofs": [
        {
            "name": "ctrl_copy_pos",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros; unfold ctrl_copy in |- *; apply pos_card_mess.",
                        "VernacExtend",
                        "c30b52193c5dffd5966ac62a7aa0fd4750885437"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ctrl_dec_pos",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros; unfold ctrl_dec in |- *; apply pos_card_mess.",
                        "VernacExtend",
                        "8bd7c71c0df5c5afb891145c26787f1c707a1083"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ctrl_inc_pos",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; unfold ctrl_inc in |- *; apply pos_card_mess.",
                        "VernacExtend",
                        "4043c1ace8873a64de1981816a06f73ea48172bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ctrl_inc_strct_pos",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "unfold ctrl_inc in |- *; intros; apply strct_pos_card_mess; trivial.",
                        "VernacExtend",
                        "38901225fa78a6de2a051235994c640887fd3599"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sigma_ctrl_copy_pos",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intro; unfold sigma_ctrl_copy in |- *; apply sigma_pos; intro; apply ctrl_copy_pos.",
                        "VernacExtend",
                        "2c66b04892e0d0627651aabf8d98c89962068818"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sigma_ctrl_dec_pos",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intro; unfold sigma_ctrl_dec in |- *; apply sigma_pos; intro; apply ctrl_dec_pos.",
                        "VernacExtend",
                        "52bfc43eeace5def3c84d6de71e023a67f20b08a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sigma_ctrl_inc_strct_pos",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros; unfold sigma_ctrl_inc in |- *.",
                        "VernacExtend",
                        "928aeb8f6b1416ef90f495e5c306cde7855e5a22"
                    ]
                },
                {
                    "command": [
                        "generalize (le_sigma Site LS (fun si : Site => ctrl_inc s0 si bom) s1 (ctrl_inc_pos s0) (in_s_LS s1)); intros.",
                        "VernacExtend",
                        "46b357e9bbdab8c6fd929ba867c9269213409d5f"
                    ]
                },
                {
                    "command": [
                        "generalize (ctrl_inc_strct_pos s0 s1 H); intro; omega.",
                        "VernacExtend",
                        "b4fc7ab683e252bc967d9358921cfe66d12ac8b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sigma_ctrl_strct_pos",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros; unfold sigma_ctrl in |- *.",
                        "VernacExtend",
                        "8fdf3c67055335bf906f5c7ff2715b99aaee9be0"
                    ]
                },
                {
                    "command": [
                        "generalize (sigma_ctrl_copy_pos s0); intro.",
                        "VernacExtend",
                        "a468a8889a66e73873b274d08ca613892858beba"
                    ]
                },
                {
                    "command": [
                        "generalize (sigma_ctrl_dec_pos s0); intro.",
                        "VernacExtend",
                        "517b26fc9065771e25df33ff633fa240d9f9c27a"
                    ]
                },
                {
                    "command": [
                        "generalize (sigma_ctrl_inc_strct_pos s0 s1 H); intro.",
                        "VernacExtend",
                        "c645244693ce8737d47b314fdeb981ce61e4b3e7"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S_card_mess",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; apply input_S_card; trivial.",
                        "VernacExtend",
                        "5b65b6fccd2ee0ff437d4cc28fc7a4c34f6127ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_mess_diff",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; apply input_diff_card; trivial.",
                        "VernacExtend",
                        "91708353b00152cb93afb63ea6ab9a7d900c32ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "S_sigma_card_inc",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros; apply sigma__S with (eq_E_dec := eq_site_dec) (x0 := s0).",
                        "VernacExtend",
                        "44e2291539ddc841d491852671a288726c109054"
                    ]
                },
                {
                    "command": [
                        "exact finite_site.",
                        "VernacExtend",
                        "8fa725edc657e5b2faf78256b647f13ef1ff3f87"
                    ]
                },
                {
                    "command": [
                        "apply S_card_mess.",
                        "VernacExtend",
                        "b2d972aecd3200e8bd3611217499a3bba458142a"
                    ]
                },
                {
                    "command": [
                        "intros; apply card_mess_diff; injection; auto.",
                        "VernacExtend",
                        "92fd860876e58b889f3e0a24e5cfa6bb38e30839"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_sigma_card_inc",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros; apply sigma_simpl.",
                        "VernacExtend",
                        "832e608f35430fae374d8aa944b4172e3e503c61"
                    ]
                },
                {
                    "command": [
                        "intros; apply card_mess_diff.",
                        "VernacExtend",
                        "d277ba9f9d979a3588bac459cf9dc2b087985229"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_dec_inc",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros; elim H; intros.",
                        "VernacExtend",
                        "7976bbf43ebfe586ca0578874a14f70f58098753"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite sigma_null; omega.",
                        "VernacExtend",
                        "a5272a7f8ab295c4280f24563eaf1fa6e6cbfe91"
                    ]
                },
                {
                    "command": [
                        "rewrite card_mess_diff.",
                        "VernacExtend",
                        "7ef89835dc4b694b5ef3e91a3e9ceaf5cbbfb603"
                    ]
                },
                {
                    "command": [
                        "rewrite S_sigma_card_inc.",
                        "VernacExtend",
                        "b9a3560722f905fc9bd9185f5d707beb6587848f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite sigma_null; omega.",
                        "VernacExtend",
                        "a5272a7f8ab295c4280f24563eaf1fa6e6cbfe91"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "rewrite S_card_mess.",
                        "VernacExtend",
                        "b5104c5fdbb5337eb629b8502fb766d796c6a007"
                    ]
                },
                {
                    "command": [
                        "rewrite diff_sigma_card_inc.",
                        "VernacExtend",
                        "3f742355e3bb9652af6132b5e029c85703089f4a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite card_mess_diff.",
                        "VernacExtend",
                        "7ef89835dc4b694b5ef3e91a3e9ceaf5cbbfb603"
                    ]
                },
                {
                    "command": [
                        "rewrite S_card_mess.",
                        "VernacExtend",
                        "b5104c5fdbb5337eb629b8502fb766d796c6a007"
                    ]
                },
                {
                    "command": [
                        "rewrite S_sigma_card_inc.",
                        "VernacExtend",
                        "b9a3560722f905fc9bd9185f5d707beb6587848f"
                    ]
                },
                {
                    "command": [
                        "rewrite diff_sigma_card_inc.",
                        "VernacExtend",
                        "3f742355e3bb9652af6132b5e029c85703089f4a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_dec_inc",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros q0 H; elim H; intros.",
                        "VernacExtend",
                        "867bfceeb91281e425cfb242680bafcda63f9249"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite sigma_null; omega.",
                        "VernacExtend",
                        "a5272a7f8ab295c4280f24563eaf1fa6e6cbfe91"
                    ]
                },
                {
                    "command": [
                        "absurd (D_queue (input Message (inc_dec s0) (empty Message))).",
                        "VernacExtend",
                        "42b9a70b7b1959bda967d7297eaa132cef3dd441"
                    ]
                },
                {
                    "command": [
                        "apply not_D_queue.",
                        "VernacExtend",
                        "ee13b3d2657bae579a9b6b1fae90f4064c4b875b"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite S_card_mess.",
                        "VernacExtend",
                        "b5104c5fdbb5337eb629b8502fb766d796c6a007"
                    ]
                },
                {
                    "command": [
                        "rewrite diff_sigma_card_inc.",
                        "VernacExtend",
                        "3f742355e3bb9652af6132b5e029c85703089f4a"
                    ]
                },
                {
                    "command": [
                        "apply alt_dec_inc; trivial.",
                        "VernacExtend",
                        "de1f81ab0bd514188bf3a63bd729fb7e7eb27768"
                    ]
                },
                {
                    "command": [
                        "absurd (D_queue (input Message (inc_dec s0) (input Message dec qm))).",
                        "VernacExtend",
                        "c723813a23b23a9d26c92cc3da5d78cd66a8be01"
                    ]
                },
                {
                    "command": [
                        "apply not_D_queue.",
                        "VernacExtend",
                        "ee13b3d2657bae579a9b6b1fae90f4064c4b875b"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}