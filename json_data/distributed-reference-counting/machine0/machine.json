{
    "filename": "machine0/machine.v",
    "coq_project": "distributed-reference-counting",
    "vernac_cmds": [
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Require Export fifo.",
            "VernacRequire",
            "9f750d8e7632d5d2f0ef4af62c1f7a78eef61901"
        ],
        [
            "Require Export table.",
            "VernacRequire",
            "59a172ce1371531ae42f8c5034ac72062058cab5"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Section MACHINE.",
            "VernacBeginSection",
            "2a4c33abdd1bd8c6414dba913e058d2264cca83c"
        ],
        [
            "Parameter Site : Set.",
            "VernacAssumption",
            "aa4e9d691891e818e89b58f5b1cf1220bc5048c2"
        ],
        [
            "Parameter owner : Site.",
            "VernacAssumption",
            "579643637eb4886cacf1dc53e6190c7873e79faf"
        ],
        [
            "Axiom eq_site_dec : eq_dec Site.",
            "VernacAssumption",
            "8ff51039c70ec97359776f4a96cd90f5e2c25e18"
        ],
        [
            "Definition change_site (E : Set) := change_x0 Site E eq_site_dec.",
            "VernacDefinition",
            "3a409c50654614bd433d73092c27949d88fdd457"
        ],
        [
            "Lemma that_site : forall (E : Set) (f : Site -> E) (s0 : Site) (x : E), change_site E f s0 x s0 = x.",
            "VernacStartTheoremProof",
            "092882e4b2d2ea5ff8f9765195ce9e7f9452bb3b"
        ],
        [
            "intros; unfold change_site in |- *; apply here.",
            "VernacExtend",
            "b2fd00df89e1e303cae40e971813d6edcd2a3eb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma other_site : forall (E : Set) (f : Site -> E) (s0 s1 : Site) (x : E), s0 <> s1 -> change_site E f s0 x s1 = f s1.",
            "VernacStartTheoremProof",
            "7fa3a54b055f22d3d9baa05650bf05e29bc07a87"
        ],
        [
            "intros; unfold change_site in |- *; apply elsewhere; trivial.",
            "VernacExtend",
            "ab2a869c7d9b4d1d423dc1077a1203d70307967b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq_queue_dec := eq_couple_dec Site Site eq_site_dec eq_site_dec.",
            "VernacDefinition",
            "963eb246e0fadb4d74c7cddba726e9e4251bac84"
        ],
        [
            "Definition change_queue (Q : Set) := change_x0y0 Site Site Q eq_site_dec eq_site_dec.",
            "VernacDefinition",
            "e50f96848d7df6cc371cc19f3130679ade1b4fe6"
        ],
        [
            "Lemma that_queue : forall (E : Set) (f : Site -> Site -> E) (s0 s1 : Site) (x : E), change_queue E f s0 s1 x s0 s1 = x.",
            "VernacStartTheoremProof",
            "700cb76b70465e5bd98a66c0deddf737e27a6f3b"
        ],
        [
            "intros; unfold change_queue in |- *; apply here2.",
            "VernacExtend",
            "9e35b3a7ada9dbfed545e994c29892ddcbe8a533"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma other_queue : forall (E : Set) (f : Site -> Site -> E) (s0 s1 s2 s3 : Site) (x : E), s2 <> s0 \\/ s3 <> s1 -> change_queue E f s0 s1 x s2 s3 = f s2 s3.",
            "VernacStartTheoremProof",
            "1e590a18f9e728cd566b63fbad1a41fe1419ff63"
        ],
        [
            "intros; unfold change_queue in |- *; apply elsewhere2; trivial.",
            "VernacExtend",
            "657af6e38cd95bb5a8a15f270a2ccbcd0350cef4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Parameter LS : list Site.",
            "VernacAssumption",
            "1fabffc4b6c2ce871fbf1fa20aa217898d76daaf"
        ],
        [
            "Axiom finite_site : list_of_elements Site eq_site_dec LS.",
            "VernacAssumption",
            "b5d38f6daadae1ce7e650789139a02265aeee0c1"
        ],
        [
            "Lemma in_s_LS : forall s : Site, In s LS.",
            "VernacStartTheoremProof",
            "5efd090f8df6ecd3d75b7d88c8c9a42c47ca8177"
        ],
        [
            "intros; apply only_once_in with (eq_E_dec := eq_site_dec); exact (finite_site s).",
            "VernacExtend",
            "431e2140576f2edee1c05b26fd9ddcd7bf660beb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MACHINE.",
            "VernacEndSegment",
            "6d85b4d126df11713d8d0b2111ddfeb0dad41215"
        ],
        [
            "Section MESSAGES.",
            "VernacBeginSection",
            "f65c1bba02c3aa4dfde03a05dded9c5ecc533612"
        ],
        [
            "Inductive Message : Set := | dec : Message | inc_dec : Site -> Message | copy : Message.",
            "VernacInductive",
            "616a76ec3be32eef0cef8045708f8d435ec853bb"
        ],
        [
            "Theorem eq_message_dec : eq_dec Message.",
            "VernacStartTheoremProof",
            "a274a5cff7fa9c4f1c2db8c7e11d45c88485aa69"
        ],
        [
            "unfold eq_dec in |- *; double induction a b; intros.",
            "VernacExtend",
            "bd9c4300c9ed5477e66b4475976568fab6a6c2f5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "case (eq_site_dec s0 s); intros.",
            "VernacExtend",
            "7ef4229d185cd5459e3e62fe843395019d5a8eac"
        ],
        [
            "rewrite e; auto.",
            "VernacExtend",
            "485a49d71ef49f65ae1d9302c55b3a0ac9ac277b"
        ],
        [
            "right; injection; auto.",
            "VernacExtend",
            "9bbd49e380c50aca5b3879430fa7b84337d98d58"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MESSAGES.",
            "VernacEndSegment",
            "016237ce2798be2ea0d634b0a74857db314e2fe5"
        ],
        [
            "Section TABLES.",
            "VernacBeginSection",
            "8689d97599697a2d66a88f3e8d8dc3da53b9bcfc"
        ],
        [
            "Definition Date_table := Site -> nat.",
            "VernacDefinition",
            "88fd8db892bc49c979f209c0bbd6197ac9f63d7d"
        ],
        [
            "Definition Send_table := Site -> Z.",
            "VernacDefinition",
            "4cd25c9f7f4e33cac87d0394d1c807974065c5d2"
        ],
        [
            "Definition Rec_table := Site -> bool.",
            "VernacDefinition",
            "18d55cdf8ae16dadcec255876223267bf872fc7c"
        ],
        [
            "End TABLES.",
            "VernacEndSegment",
            "aacccb3996e4c0076839ed855ac5f03812921426"
        ],
        [
            "Section BAG.",
            "VernacBeginSection",
            "f5ac295bb869a9428b4e2afd9d18437e5cec3571"
        ],
        [
            "Definition Bag_of_message := Site -> Site -> queue Message.",
            "VernacDefinition",
            "2dd77a619117ddc6967dbde11b197ff477dc2ac6"
        ],
        [
            "Definition card_mess (m : Message) (q : queue Message) := card Message eq_message_dec m q.",
            "VernacDefinition",
            "6926c2e21fb4afd3e149cb6211612349cfcc440d"
        ],
        [
            "Lemma pos_card_mess : forall (m : Message) (q : queue Message), (card_mess m q >= 0)%Z.",
            "VernacStartTheoremProof",
            "5e6fe4fcf7dd5fb739a140379bbb815909434552"
        ],
        [
            "intros; unfold card_mess in |- *; apply card_pos.",
            "VernacExtend",
            "9723ce933b0ae5af9e3dfd5a0b80a76cb55fa04d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma strct_pos_card_mess : forall (m : Message) (q : queue Message), In_queue Message m q -> (card_mess m q > 0)%Z.",
            "VernacStartTheoremProof",
            "6fcdc554cb0182d700282bac6eade4451ed910ec"
        ],
        [
            "intros; unfold card_mess in |- *; apply card_strct_pos; trivial.",
            "VernacExtend",
            "ccb74766a3e1167c6bb6105cf1cc28bd4be98def"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_or_elsewhere : forall (m m' : Message) (bom : Bag_of_message) (s1 s2 s3 s4 : Site), first Message (bom s3 s4) = value Message m -> m <> m' -> first Message (bom s1 s2) <> value Message m' \\/ s1 <> s3 \\/ s2 <> s4.",
            "VernacStartTheoremProof",
            "6429b2a073aa3194ed5416da57e13ab83334f049"
        ],
        [
            "intros; case (eq_queue_dec s1 s3 s2 s4); intro.",
            "VernacExtend",
            "c1b52780a3813fe6ea0fb3d6c3f0b8d5a9c4c00e"
        ],
        [
            "decompose [and] a; rewrite H1; rewrite H2; rewrite H; left; injection; auto.",
            "VernacExtend",
            "32d0feba7fa37c6c4605176c15ccb04a2f1b7bd2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BAG.",
            "VernacEndSegment",
            "e5ec20f8a4f9d7d78ef62abb2c471ec070ff02eb"
        ],
        [
            "Section CONFIGURATION.",
            "VernacBeginSection",
            "feafbcc462e3c3b873a35b9fb8d76c444d95932e"
        ],
        [
            "Definition access (s : Site) (rt : Rec_table) := s = owner \\/ rt s = true.",
            "VernacDefinition",
            "1d58c91015900ebdf8413a684a01a975bc310db3"
        ],
        [
            "Record Config : Set := mkconfig {time : nat; dt : Date_table; st : Send_table; rt : Rec_table; bm : Bag_of_message}.",
            "VernacInductive",
            "9207249689d0887a883c2b6b9f5718beb8aa7592"
        ],
        [
            "End CONFIGURATION.",
            "VernacEndSegment",
            "4da66302e0154e0ca053eaa1430344113b1ef725"
        ],
        [
            "Section ALT_DEF.",
            "VernacBeginSection",
            "0b6fdfcb1ba81d3551a2c1ebf64b06361f1483bd"
        ],
        [
            "Inductive D_queue : queue Message -> Prop := | D_empty : D_queue (empty Message) | D_dec : forall qm : queue Message, D_queue (input Message dec qm).",
            "VernacInductive",
            "6a0b8ed3ae440b4ba5441fa960a21b466b7aae66"
        ],
        [
            "Inductive alternate : queue Message -> Prop := | alt_null : alternate (empty Message) | alt_single_inc : forall s0 : Site, alternate (input Message (inc_dec s0) (empty Message)) | alt_dec_alt : forall qm : queue Message, alternate qm -> alternate (input Message dec qm) | alt_inc_dec : forall (qm : queue Message) (s0 : Site), alternate qm -> alternate (input Message (inc_dec s0) (input Message dec qm)).",
            "VernacInductive",
            "83212b28a596bbc7c8543d458b683e336f61eaf2"
        ],
        [
            "Lemma not_D_queue : forall (q0 : queue Message) (s0 : Site), ~ D_queue (input Message (inc_dec s0) q0).",
            "VernacStartTheoremProof",
            "73a0f648f1e0b39e31f7c8fc6f778b41689d5f16"
        ],
        [
            "intros; red in |- *; intro.",
            "VernacExtend",
            "8efb0e8eb13e9c212c108e6c3da452eb08ee81d1"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma D_first_out : forall q0 : queue Message, D_queue q0 -> D_queue (first_out Message q0).",
            "VernacStartTheoremProof",
            "3cfcedc6f55727daf497202b5009582ff638ce1b"
        ],
        [
            "intros; elim H; simpl in |- *.",
            "VernacExtend",
            "2ef132a2d18e61b4d3aa135ab5851aa0061f2802"
        ],
        [
            "apply D_empty.",
            "VernacExtend",
            "b2f80f16e7e50c5837da9888403ee3f17ff33118"
        ],
        [
            "simple destruct qm.",
            "VernacExtend",
            "0df8a9e450b2843c14da9717c26f15f66a3b6866"
        ],
        [
            "apply D_empty.",
            "VernacExtend",
            "b2f80f16e7e50c5837da9888403ee3f17ff33118"
        ],
        [
            "intros; apply D_dec.",
            "VernacExtend",
            "f8d9dbc12d471f791b58e7a25dbdf4c57bc0e8cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alt_first_out : forall q0 : queue Message, alternate q0 -> alternate (first_out Message q0).",
            "VernacStartTheoremProof",
            "28f337e2773642c01fbb035e153875746190edbf"
        ],
        [
            "intros; elim H; simpl in |- *.",
            "VernacExtend",
            "2ef132a2d18e61b4d3aa135ab5851aa0061f2802"
        ],
        [
            "apply alt_null.",
            "VernacExtend",
            "4339aeb9057509357fe733f4e53cf87570cb95a3"
        ],
        [
            "intro; apply alt_null.",
            "VernacExtend",
            "d77c8e010cfb7f16f01eae5a7be71e0dbd0e8ba4"
        ],
        [
            "simple induction qm; intros.",
            "VernacExtend",
            "6b6cebb49c52ec1f967c59635f187fb4feb89eca"
        ],
        [
            "apply alt_null.",
            "VernacExtend",
            "4339aeb9057509357fe733f4e53cf87570cb95a3"
        ],
        [
            "apply alt_dec_alt; trivial.",
            "VernacExtend",
            "bbbed2b869783fa6ce051832b8beadd64fe7fd66"
        ],
        [
            "simple induction qm; intros.",
            "VernacExtend",
            "6b6cebb49c52ec1f967c59635f187fb4feb89eca"
        ],
        [
            "apply alt_single_inc.",
            "VernacExtend",
            "475d7ca61283d9832167ff09c2d7089549742f0b"
        ],
        [
            "apply alt_inc_dec; trivial.",
            "VernacExtend",
            "b21029372df9068922d1c2cfa0e34264e9493147"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ALT_DEF.",
            "VernacEndSegment",
            "bb3b9b09ef5b7c312a331541bae06ebc365c162a"
        ],
        [
            "Section RELAT_DEF.",
            "VernacBeginSection",
            "9946233e33964c4004fb34a7679f33e5b2b8bba4"
        ],
        [
            "Variable c0 : Config.",
            "VernacAssumption",
            "c7a02d67abcf243788e196bb00e83e77a1c6457d"
        ],
        [
            "Inductive parent : Site -> Site -> Prop := parent_intro : forall s1 s0 : Site, In_queue Message (inc_dec s1) (bm c0 s0 owner) -> parent s1 s0.",
            "VernacInductive",
            "dee73b0bcac175a713a8d9f98124c49eb677fcc0"
        ],
        [
            "Inductive ancestor : Site -> Site -> Prop := | short : forall s1 s0 : Site, parent s1 s0 -> ancestor s1 s0 | long : forall s2 s1 s0 : Site, parent s2 s1 -> ancestor s1 s0 -> ancestor s2 s0.",
            "VernacInductive",
            "6d7c465c2e78efd1ec98430c39bd6453528b1aac"
        ],
        [
            "End RELAT_DEF.",
            "VernacEndSegment",
            "3cc8dcbe22fb29baade8eb2ad85ca49875db08cc"
        ]
    ],
    "proofs": [
        {
            "name": "that_site",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros; unfold change_site in |- *; apply here.",
                        "VernacExtend",
                        "b2fd00df89e1e303cae40e971813d6edcd2a3eb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "other_site",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros; unfold change_site in |- *; apply elsewhere; trivial.",
                        "VernacExtend",
                        "ab2a869c7d9b4d1d423dc1077a1203d70307967b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "that_queue",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros; unfold change_queue in |- *; apply here2.",
                        "VernacExtend",
                        "9e35b3a7ada9dbfed545e994c29892ddcbe8a533"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "other_queue",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros; unfold change_queue in |- *; apply elsewhere2; trivial.",
                        "VernacExtend",
                        "657af6e38cd95bb5a8a15f270a2ccbcd0350cef4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_s_LS",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros; apply only_once_in with (eq_E_dec := eq_site_dec); exact (finite_site s).",
                        "VernacExtend",
                        "431e2140576f2edee1c05b26fd9ddcd7bf660beb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_message_dec",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "unfold eq_dec in |- *; double induction a b; intros.",
                        "VernacExtend",
                        "bd9c4300c9ed5477e66b4475976568fab6a6c2f5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "case (eq_site_dec s0 s); intros.",
                        "VernacExtend",
                        "7ef4229d185cd5459e3e62fe843395019d5a8eac"
                    ]
                },
                {
                    "command": [
                        "rewrite e; auto.",
                        "VernacExtend",
                        "485a49d71ef49f65ae1d9302c55b3a0ac9ac277b"
                    ]
                },
                {
                    "command": [
                        "right; injection; auto.",
                        "VernacExtend",
                        "9bbd49e380c50aca5b3879430fa7b84337d98d58"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_card_mess",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; apply card_pos.",
                        "VernacExtend",
                        "9723ce933b0ae5af9e3dfd5a0b80a76cb55fa04d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "strct_pos_card_mess",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros; unfold card_mess in |- *; apply card_strct_pos; trivial.",
                        "VernacExtend",
                        "ccb74766a3e1167c6bb6105cf1cc28bd4be98def"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_or_elsewhere",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros; case (eq_queue_dec s1 s3 s2 s4); intro.",
                        "VernacExtend",
                        "c1b52780a3813fe6ea0fb3d6c3f0b8d5a9c4c00e"
                    ]
                },
                {
                    "command": [
                        "decompose [and] a; rewrite H1; rewrite H2; rewrite H; left; injection; auto.",
                        "VernacExtend",
                        "32d0feba7fa37c6c4605176c15ccb04a2f1b7bd2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_D_queue",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros; red in |- *; intro.",
                        "VernacExtend",
                        "8efb0e8eb13e9c212c108e6c3da452eb08ee81d1"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "D_first_out",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros; elim H; simpl in |- *.",
                        "VernacExtend",
                        "2ef132a2d18e61b4d3aa135ab5851aa0061f2802"
                    ]
                },
                {
                    "command": [
                        "apply D_empty.",
                        "VernacExtend",
                        "b2f80f16e7e50c5837da9888403ee3f17ff33118"
                    ]
                },
                {
                    "command": [
                        "simple destruct qm.",
                        "VernacExtend",
                        "0df8a9e450b2843c14da9717c26f15f66a3b6866"
                    ]
                },
                {
                    "command": [
                        "apply D_empty.",
                        "VernacExtend",
                        "b2f80f16e7e50c5837da9888403ee3f17ff33118"
                    ]
                },
                {
                    "command": [
                        "intros; apply D_dec.",
                        "VernacExtend",
                        "f8d9dbc12d471f791b58e7a25dbdf4c57bc0e8cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alt_first_out",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros; elim H; simpl in |- *.",
                        "VernacExtend",
                        "2ef132a2d18e61b4d3aa135ab5851aa0061f2802"
                    ]
                },
                {
                    "command": [
                        "apply alt_null.",
                        "VernacExtend",
                        "4339aeb9057509357fe733f4e53cf87570cb95a3"
                    ]
                },
                {
                    "command": [
                        "intro; apply alt_null.",
                        "VernacExtend",
                        "d77c8e010cfb7f16f01eae5a7be71e0dbd0e8ba4"
                    ]
                },
                {
                    "command": [
                        "simple induction qm; intros.",
                        "VernacExtend",
                        "6b6cebb49c52ec1f967c59635f187fb4feb89eca"
                    ]
                },
                {
                    "command": [
                        "apply alt_null.",
                        "VernacExtend",
                        "4339aeb9057509357fe733f4e53cf87570cb95a3"
                    ]
                },
                {
                    "command": [
                        "apply alt_dec_alt; trivial.",
                        "VernacExtend",
                        "bbbed2b869783fa6ce051832b8beadd64fe7fd66"
                    ]
                },
                {
                    "command": [
                        "simple induction qm; intros.",
                        "VernacExtend",
                        "6b6cebb49c52ec1f967c59635f187fb4feb89eca"
                    ]
                },
                {
                    "command": [
                        "apply alt_single_inc.",
                        "VernacExtend",
                        "475d7ca61283d9832167ff09c2d7089549742f0b"
                    ]
                },
                {
                    "command": [
                        "apply alt_inc_dec; trivial.",
                        "VernacExtend",
                        "b21029372df9068922d1c2cfa0e34264e9493147"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}