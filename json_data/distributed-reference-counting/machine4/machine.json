{
    "filename": "machine4/machine.v",
    "coq_project": "distributed-reference-counting",
    "vernac_cmds": [
        [
            "Require Export abstract_machine.",
            "VernacRequire",
            "53b0069671e258ec26d40ccaccc7cf1adb561ccb"
        ],
        [
            "Unset Standard Proposition Elimination Names.",
            "VernacUnsetOption",
            "911574cdf91989455d0d3d11c7a9b0ca10fd1ae6"
        ],
        [
            "Section MESSAGES.",
            "VernacBeginSection",
            "f65c1bba02c3aa4dfde03a05dded9c5ecc533612"
        ],
        [
            "Inductive Message : Set := | dec : Message | inc_dec : Site -> Message | copy : Message.",
            "VernacInductive",
            "616a76ec3be32eef0cef8045708f8d435ec853bb"
        ],
        [
            "Theorem eq_message_dec : eq_dec Message.",
            "VernacStartTheoremProof",
            "a274a5cff7fa9c4f1c2db8c7e11d45c88485aa69"
        ],
        [
            "unfold eq_dec in |- *; double induction a b; intros.",
            "VernacExtend",
            "bd9c4300c9ed5477e66b4475976568fab6a6c2f5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "case (eq_site_dec s0 s); intros.",
            "VernacExtend",
            "7ef4229d185cd5459e3e62fe843395019d5a8eac"
        ],
        [
            "rewrite e; auto.",
            "VernacExtend",
            "485a49d71ef49f65ae1d9302c55b3a0ac9ac277b"
        ],
        [
            "right; injection; auto.",
            "VernacExtend",
            "9bbd49e380c50aca5b3879430fa7b84337d98d58"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "right; discriminate.",
            "VernacExtend",
            "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MESSAGES.",
            "VernacEndSegment",
            "016237ce2798be2ea0d634b0a74857db314e2fe5"
        ],
        [
            "Section CONFIGURATION.",
            "VernacBeginSection",
            "feafbcc462e3c3b873a35b9fb8d76c444d95932e"
        ],
        [
            "Definition Date_table := Site -> nat.",
            "VernacDefinition",
            "88fd8db892bc49c979f209c0bbd6197ac9f63d7d"
        ],
        [
            "Definition Send_table := Site -> Z.",
            "VernacDefinition",
            "4cd25c9f7f4e33cac87d0394d1c807974065c5d2"
        ],
        [
            "Definition Rec_table := Site -> bool.",
            "VernacDefinition",
            "18d55cdf8ae16dadcec255876223267bf872fc7c"
        ],
        [
            "Definition Bag_of_message := Bag_of_Data Message.",
            "VernacDefinition",
            "3085560e0ad24827347aa8761126cd5aba8b66c6"
        ],
        [
            "Record Config : Set := mkconfig {st : Send_table; rt : Rec_table; bm : Bag_of_message}.",
            "VernacInductive",
            "50b9c3584137d11102871f34f51ff933fa8b47f3"
        ],
        [
            "End CONFIGURATION.",
            "VernacEndSegment",
            "4da66302e0154e0ca053eaa1430344113b1ef725"
        ],
        [
            "Section INITIALIZATION.",
            "VernacBeginSection",
            "ca9a7e5973a459cc65ceed19ce933e5993dc4bb9"
        ],
        [
            "Definition send_init : Send_table := fun _ : Site => 0%Z.",
            "VernacDefinition",
            "b2350b68e3330bfd6a2df93f37b68010caa56b65"
        ],
        [
            "Definition rec_init : Rec_table := fun s : Site => if eq_site_dec s owner then true else false.",
            "VernacDefinition",
            "b7a55fecbf958919410eecae78014d482f4202f8"
        ],
        [
            "Definition bag_init : Bag_of_message := fun _ _ : Site => empty Message.",
            "VernacDefinition",
            "bf271ee655fc37e3c1e4a42ae3d9ecb597316411"
        ],
        [
            "Definition config_init : Config := mkconfig send_init rec_init bag_init.",
            "VernacDefinition",
            "aff3e1ffd87453be6157e4ca61e1a1d40b97d300"
        ],
        [
            "End INITIALIZATION.",
            "VernacEndSegment",
            "afb1ef666d1e3c575ed77d17ac57d3c4d8760e8b"
        ],
        [
            "Section TRANSITIONS.",
            "VernacBeginSection",
            "c5f05aaa2facbcc2f57d0e0d84e3762da972ed83"
        ],
        [
            "Definition delete_trans (c : Config) (s : Site) := mkconfig (st c) (Reset_rec_table (rt c) s) (Post_message Message dec (bm c) s owner).",
            "VernacDefinition",
            "42946c64f2f83b9b05c440920efdf363038d9b9a"
        ],
        [
            "Definition copy_trans (c : Config) (s1 s2 : Site) := mkconfig (Inc_send_table (st c) s1) (rt c) (Post_message Message copy (bm c) s1 s2).",
            "VernacDefinition",
            "489e0f9ec294f9ae8aa5c5d867d60fbc444b0a81"
        ],
        [
            "Definition rec_copy1_trans (c : Config) (s1 s2 : Site) := mkconfig (st c) (rt c) (Post_message Message dec (Collect_message Message (bm c) s1 s2) s2 s1).",
            "VernacDefinition",
            "1c165d581555ddcb0347d97008f81367cdfbe6f0"
        ],
        [
            "Definition rec_copy2_trans (c : Config) (s2 : Site) := mkconfig (st c) (Set_rec_table (rt c) s2) (Collect_message Message (bm c) owner s2).",
            "VernacDefinition",
            "46146d17d730915954c40f2feb644c94a2da2404"
        ],
        [
            "Definition rec_copy3_trans (c : Config) (s1 s2 : Site) := mkconfig (st c) (Set_rec_table (rt c) s2) (Post_message Message (inc_dec s1) (Collect_message Message (bm c) s1 s2) s2 owner).",
            "VernacDefinition",
            "c0edba82f7bff46ccce1a999155c8db0a9e885dd"
        ],
        [
            "Definition rec_dec_trans (c : Config) (s1 s2 : Site) := mkconfig (Dec_send_table (st c) s2) (rt c) (Collect_message Message (bm c) s1 s2).",
            "VernacDefinition",
            "697fa6bc800c0e20623a41667ddc3ec3d1d12e0c"
        ],
        [
            "Definition rec_inc_trans (c : Config) (s1 s3 : Site) := mkconfig (Inc_send_table (st c) owner) (rt c) (Post_message Message dec (Collect_message Message (bm c) s1 owner) owner s3).",
            "VernacDefinition",
            "c636e26ec661fecf38344cc59b8be31ad0938ee7"
        ],
        [
            "Definition redirect_inc_trans (c : Config) (s1 s2 : Site) (q : queue Message) := mkconfig (st c) (rt c) (Post_message Message dec (change_queue (queue Message) (bm c) s1 owner q) s1 s2).",
            "VernacDefinition",
            "0a96cbb783ef06ab2e2d788f02e1440ab1c06950"
        ],
        [
            "Definition copy_out_of_band_trans (c : Config) (s1 s2 : Site) (q3 q4 : queue Message) := mkconfig (st c) (rt c) (change_queue (queue Message) (bm c) s1 s2 (append Message q3 (input Message copy q4))).",
            "VernacDefinition",
            "3d04459b594b042c82fb78e65d30f1921dd1fdca"
        ],
        [
            "Definition access (s : Site) (rt : Rec_table) := rt s = true.",
            "VernacDefinition",
            "5d606327f3c04035e630e865316b7972eb7e2982"
        ],
        [
            "Inductive class_trans (c : Config) : Set := | make_copy : forall s1 s2 : Site, s1 <> s2 -> access s1 (rt c) -> class_trans c | receive_dec : forall s1 s2 : Site, first Message (bm c s1 s2) = value Message dec -> class_trans c | receive_inc : forall s1 s3 : Site, first Message (bm c s1 owner) = value Message (inc_dec s3) -> class_trans c | receive_copy1 : forall s1 s2 : Site, rt c s2 = true -> first Message (bm c s1 s2) = value Message copy -> class_trans c | receive_copy2 : forall s2 : Site, rt c s2 = false -> first Message (bm c owner s2) = value Message copy -> class_trans c | receive_copy3 : forall s1 s2 : Site, rt c s2 = false -> s1 <> owner -> s2 <> owner -> first Message (bm c s1 s2) = value Message copy -> class_trans c | delete_entry : forall s : Site, st c s = 0%Z -> rt c s = true -> s <> owner -> class_trans c | redirect_inc : forall (s1 s2 : Site) (q : queue Message), s1 <> s2 -> bm c s1 owner = input Message dec (input Message (inc_dec s2) q) -> class_trans c | copy_out_of_band : forall (s1 s2 : Site) (q1 q2 q3 q4 : queue Message), s1 <> s2 -> bm c s1 s2 = append Message q1 (input Message copy q2) -> append Message q1 q2 = append Message q3 q4 -> class_trans c.",
            "VernacInductive",
            "2786f173d78762bd36a495b46e2ada05a2f3c55d"
        ],
        [
            "Definition transition (c : Config) (t : class_trans c) := match t with | make_copy s1 s2 h1 h2 => copy_trans c s1 s2 | receive_dec s1 s2 h1 => rec_dec_trans c s1 s2 | receive_inc s1 s3 h1 => rec_inc_trans c s1 s3 | receive_copy1 s1 s2 h1 h2 => rec_copy1_trans c s1 s2 | receive_copy2 s2 h1 h2 => rec_copy2_trans c s2 | receive_copy3 s1 s2 h1 h2 h3 h4 => rec_copy3_trans c s1 s2 | delete_entry s h1 h2 h3 => delete_trans c s | redirect_inc s1 s2 q h1 h => redirect_inc_trans c s1 s2 q | copy_out_of_band s1 s2 q1 q2 q3 q4 h1 h2 h3 => copy_out_of_band_trans c s1 s2 q3 q4 end.",
            "VernacDefinition",
            "cb5aab2f26409e7219e1af02d01faec4f4b5fa53"
        ],
        [
            "Inductive legal : Config -> Prop := | begin : legal config_init | after : forall (c : Config) (t : class_trans c), legal c -> legal (transition c t).",
            "VernacInductive",
            "7dc8a48d408dcabf39c30cdc3231d58449dd59e4"
        ],
        [
            "End TRANSITIONS.",
            "VernacEndSegment",
            "fa58ade2db7d190689c1d4c18eee1f90f8ea70df"
        ]
    ],
    "proofs": [
        {
            "name": "eq_message_dec",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "unfold eq_dec in |- *; double induction a b; intros.",
                        "VernacExtend",
                        "bd9c4300c9ed5477e66b4475976568fab6a6c2f5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "case (eq_site_dec s0 s); intros.",
                        "VernacExtend",
                        "7ef4229d185cd5459e3e62fe843395019d5a8eac"
                    ]
                },
                {
                    "command": [
                        "rewrite e; auto.",
                        "VernacExtend",
                        "485a49d71ef49f65ae1d9302c55b3a0ac9ac277b"
                    ]
                },
                {
                    "command": [
                        "right; injection; auto.",
                        "VernacExtend",
                        "9bbd49e380c50aca5b3879430fa7b84337d98d58"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "right; discriminate.",
                        "VernacExtend",
                        "09d11bc97a9479ea610751a0ee1e4fe8fa23bc27"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}