{
    "filename": "abstract/bibli.v",
    "coq_project": "distributed-reference-counting",
    "vernac_cmds": [
        [
            "Require Export Arith.",
            "VernacRequire",
            "70e550b9603a7aa23f63274fffcc443ce7c8f433"
        ],
        [
            "Require Export Omega.",
            "VernacRequire",
            "0481b56b468f7aa7f5517bbdc71f6985bb9f8b59"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Section SEPAR.",
            "VernacBeginSection",
            "1d56b7df26de4449b11d4e9f6b2ab9c2acd17321"
        ],
        [
            "Lemma eq_bool_dec : forall b : bool, {b = true} + {b = false}.",
            "VernacStartTheoremProof",
            "28f21ce8547475fadb430d6cc6aa04d5e68a606e"
        ],
        [
            "simple induction b; auto.",
            "VernacExtend",
            "f774dee14d4bc7b860870b64acea9240ac3f83dc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition eq_dec (E : Set) := forall a b : E, {a = b} + {a <> b}.",
            "VernacDefinition",
            "200951be7e8912aa7fb033a9863917e8b8f973dc"
        ],
        [
            "Lemma case_eq : forall (E F : Set) (eq_E_dec : eq_dec E) (x : E) (y z : F), match eq_E_dec x x with | left _ => y | right _ => z end = y.",
            "VernacStartTheoremProof",
            "bc0f9d1c50e724c1b974eb30c0626a533ea21991"
        ],
        [
            "intros; case (eq_E_dec x x).",
            "VernacExtend",
            "05752ebfa687f43cf2c9fb8af4ee7349244f5c46"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros; absurd (x = x); auto.",
            "VernacExtend",
            "2f4224f2d60dfc809cc6a0e6ecafaf0fe9af29c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma case_ineq : forall (E F : Set) (eq_E_dec : eq_dec E) (x x' : E) (y z : F), x <> x' -> match eq_E_dec x x' with | left _ => y | right _ => z end = z.",
            "VernacStartTheoremProof",
            "d65da3a73469955443c3127cc37f2477ad0947ae"
        ],
        [
            "intros; case (eq_E_dec x x').",
            "VernacExtend",
            "4fc73bbd925d0d0261d53c392fe45ab31a5940b4"
        ],
        [
            "intros; absurd (x = x'); auto.",
            "VernacExtend",
            "c7aa855c017348aecefec423b7980e7545b7afad"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_couple_dec : forall (E F : Set) (eq_E_dec : eq_dec E) (eq_F_dec : eq_dec F) (x1 x2 : E) (y1 y2 : F), {x1 = x2 /\\ y1 = y2} + {x1 <> x2 \\/ y1 <> y2}.",
            "VernacStartTheoremProof",
            "caab77f3ad9bd885a03b78482ff2dd59ac97b551"
        ],
        [
            "intros; case (eq_E_dec x1 x2); case (eq_F_dec y1 y2); intros; auto.",
            "VernacExtend",
            "e7e649b792c7ab19b5072f2c2caaa21ab244b891"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End SEPAR.",
            "VernacEndSegment",
            "20fba4c8cf38a0d72ab9e2badd42adc79061fdef"
        ],
        [
            "Section OTHER.",
            "VernacBeginSection",
            "169e8374c45eb24b6cdd637f638881a252c4d530"
        ],
        [
            "Definition Int (b : bool) := if b then 1%Z else 0%Z.",
            "VernacDefinition",
            "c197137f320a54327d1c0704a92e62d09771815f"
        ],
        [
            "Lemma true_not_false : forall b : bool, b = true -> false <> b.",
            "VernacStartTheoremProof",
            "c63301b97203dcd0cd1e9455cc69ecc0059dd3c7"
        ],
        [
            "intros; rewrite H; discriminate.",
            "VernacExtend",
            "9745b0d86d48b2d387235ddd3a1ae941ad0690a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom funct_eq : forall (E F : Set) (g h : E -> F), (forall e : E, g e = h e) -> g = h.",
            "VernacAssumption",
            "cbaa7bdf665556af7110715bfbdb9e2fcf77208a"
        ],
        [
            "Lemma in_not_in : forall (E : Set) (a b : E) (l : list E), In a l -> ~ In b l -> a <> b.",
            "VernacStartTheoremProof",
            "89e1f15efbef4f0bfcefe9c57545f6881e4e64c1"
        ],
        [
            "intros; red in |- *; intros.",
            "VernacExtend",
            "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
        ],
        [
            "elim H0; rewrite <- H1; auto.",
            "VernacExtend",
            "5f45d08b06cc012ebd5e789bde09d51d0665e569"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OTHER.",
            "VernacEndSegment",
            "0ed6f3b75c50c775d62a1709961f73cc50a026a1"
        ],
        [
            "Section PointFixe.",
            "VernacBeginSection",
            "0826c0b3ebb504e2498e088943a13d2593a5f3c7"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Variable P : A -> Set.",
            "VernacAssumption",
            "d86240b8405edd821a1bc6ba1edf69abe8161458"
        ],
        [
            "Variable R : A -> A -> Prop.",
            "VernacAssumption",
            "0d2b4236b120d599ff44dbf895c951c0abab01e8"
        ],
        [
            "Hypothesis Rwf : well_founded R.",
            "VernacAssumption",
            "46a13ab59aade6d77ca89bb980b4e9335db4c40a"
        ],
        [
            "Variable F : forall x : A, (forall y : A, R y x -> P y) -> P x.",
            "VernacAssumption",
            "aa13e07219d179c2b0314e858f4f8ccada2a2082"
        ],
        [
            "Hypothesis F_ext : forall (x : A) (f g : forall y : A, R y x -> P y), (forall (y : A) (p : R y x), f y p = g y p) -> F x f = F x g.",
            "VernacAssumption",
            "1ee07d0027a29d830d63f63bafaab9490935a4e8"
        ],
        [
            "Fixpoint Fix_F (x : A) (r : Acc R x) {struct r} : P x := F x (fun (y : A) (p : R y x) => Fix_F y (Acc_inv r y p)).",
            "VernacFixpoint",
            "6c5efedc563470a8a38488fa20b72ee13a185005"
        ],
        [
            "Scheme Acc_inv_dep := Induction for Acc Sort Prop.",
            "VernacScheme",
            "d2c023e7f603df74e9a8a0cf054e5bb689982445"
        ],
        [
            "Lemma Fix_F_eq : forall (x : A) (r : Acc R x), Fix_F x r = F x (fun (y : A) (p : R y x) => Fix_F y (Acc_inv r y p)).",
            "VernacStartTheoremProof",
            "e060a87d1ad1a56887e26ccf07eef59891e6332b"
        ],
        [
            "intros x r; elim r using Acc_inv_dep; auto.",
            "VernacExtend",
            "e675e25ee2c51c5bf3ace62e51bb8596eebaf159"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fix_F_inv : forall (x : A) (r s : Acc R x), Fix_F x r = Fix_F x s.",
            "VernacStartTheoremProof",
            "21f013a92e3205401e6b3eb266bf509ba5300efc"
        ],
        [
            "intro x; elim (Rwf x); intros.",
            "VernacExtend",
            "5bbc65e644baab4ea4e8d5ab11d73b24e3b00a03"
        ],
        [
            "rewrite (Fix_F_eq x0 r); rewrite (Fix_F_eq x0 s); intros.",
            "VernacExtend",
            "57ea7b87102973d696add80d2feb0326df63e47a"
        ],
        [
            "apply F_ext; auto.",
            "VernacExtend",
            "81399a86062b9ee16a4de33caf8a3e9b37b12818"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Fix (x : A) := Fix_F x (Rwf x).",
            "VernacDefinition",
            "72d525e33e9c2ba6c569b191348f28febb85cfdc"
        ],
        [
            "Lemma fix_eq : forall x : A, Fix x = F x (fun (y : A) (p : R y x) => Fix y).",
            "VernacStartTheoremProof",
            "70e8e25e8f6d4ee0d1abcb1c58cde4f5bc4d4e97"
        ],
        [
            "intro; unfold Fix in |- *.",
            "VernacExtend",
            "7f583765e97bc637a75685cf9241ba06c0415cd7"
        ],
        [
            "rewrite (Fix_F_eq x).",
            "VernacExtend",
            "2e734c430eb61722e6f00651b2b7f39377d6ec73"
        ],
        [
            "apply F_ext; intros.",
            "VernacExtend",
            "dbe9f31bc047e65e815075d5d23b05a4cb1dee8c"
        ],
        [
            "apply Fix_F_inv.",
            "VernacExtend",
            "2c73c3cd3d2180a61306b0987682c46a984370a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PointFixe.",
            "VernacEndSegment",
            "4e6b2d9223962e135b051f20acb31037d8d7b2bb"
        ],
        [
            "Section WF_ROOT.",
            "VernacBeginSection",
            "77f86c726bceb70f22f4f678226d04bb50ef7ccc"
        ],
        [
            "Variable E : Set.",
            "VernacAssumption",
            "159cf207941eaecc961b13b2df59c01a4e359581"
        ],
        [
            "Variable f : E -> nat.",
            "VernacAssumption",
            "11d631115d4f60b7c7ac5891b8fede118d78fd04"
        ],
        [
            "Variable R : E -> E -> Prop.",
            "VernacAssumption",
            "10e3eb53e0ecabfd49850359f21d2e2614687125"
        ],
        [
            "Hypothesis R_dec : forall x : E, {y : E | R y x} + {(forall y : E, ~ R y x)}.",
            "VernacAssumption",
            "3ff070bf69066eed0e7918a513b99724c54b0adf"
        ],
        [
            "Hypothesis strict : forall x y : E, R x y -> f x < f y.",
            "VernacAssumption",
            "f7b52bbd2f8bb19e42a6fbb4fa30aff1f15aa50a"
        ],
        [
            "Lemma lt_acc : forall (n : nat) (y : E), f y < n -> Acc R y.",
            "VernacStartTheoremProof",
            "dd58f9c95f15e12e9942fe12cbd099ff59872fc2"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "intros; absurd (f y < 0); auto with arith.",
            "VernacExtend",
            "d2f91f16cf69fd57c4b676de38b5e8d5e50e728f"
        ],
        [
            "intros; apply Acc_intro.",
            "VernacExtend",
            "890281168c4ed13e0a54958e9675ff0224a585f3"
        ],
        [
            "intros; apply H.",
            "VernacExtend",
            "b7bca165a275b11a76ba06a5f07157259bedeabd"
        ],
        [
            "apply lt_le_trans with (m := f y); auto with arith.",
            "VernacExtend",
            "b0174e4a9c1f5543df46ae18b40fb26f0d349f65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wf_R : well_founded R.",
            "VernacStartTheoremProof",
            "394bf3a89115c0623586cd588912bfd9e1d4e63e"
        ],
        [
            "unfold well_founded in |- *; intro.",
            "VernacExtend",
            "9a1c30ca6ff051710ef0a5771d6f92a7fb9569b9"
        ],
        [
            "apply Acc_intro; intros.",
            "VernacExtend",
            "8fba32424572b3e59fae31cf5b031e0ce3967014"
        ],
        [
            "apply (lt_acc (f a)); auto.",
            "VernacExtend",
            "f48a47fda0336aa792059def87d0217ad83d0011"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition F (x : E) (f : forall y : E, R y x -> E) := match R_dec x with | inleft z => let (y0, r0) := z in f y0 r0 | inright _ => x end.",
            "VernacDefinition",
            "4cec290decbc3212159d3843952822b6873b40d2"
        ],
        [
            "Lemma F_eq : forall (x : E) (f1 f2 : forall y : E, R y x -> E), (forall (y : E) (r : R y x), f1 y r = f2 y r) -> F x f1 = F x f2.",
            "VernacStartTheoremProof",
            "9569302acded141dfdb2b95e5134eafd94658223"
        ],
        [
            "intros; unfold F in |- *; case (R_dec x); intros.",
            "VernacExtend",
            "f48096f0692ffb867a366f6365fb7badcd8ca441"
        ],
        [
            "elim s; intros; auto.",
            "VernacExtend",
            "d8a476144344fd72cd01a0c2d4c5ebd370fc3cfd"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition root := Fix E (fun _ : E => E) R wf_R F.",
            "VernacDefinition",
            "0d3afe53e9d1023c0deb7bc549b2f712e3595fd7"
        ],
        [
            "Definition root_eq := fix_eq E (fun _ : E => E) R wf_R F F_eq.",
            "VernacDefinition",
            "d6fa5e52a6805cd8933fa65a2d80e9d4e4b7118f"
        ],
        [
            "Lemma root_no_R : forall x y : E, ~ R y (root x).",
            "VernacStartTheoremProof",
            "3e3b7452b8f171f55a76e66928c4cf07f27eb071"
        ],
        [
            "intros; elim (wf_R x).",
            "VernacExtend",
            "ee2d7cd9852c1a7dd046ac2249997d2073969e0f"
        ],
        [
            "intros; rewrite root_eq.",
            "VernacExtend",
            "5cc3e8542e386cd359fd1fbdaf83c6ebf52787e6"
        ],
        [
            "unfold F at 1 in |- *; case (R_dec x0); intros.",
            "VernacExtend",
            "d32c18bf47d7d11c4dc7cc601ada0f5f1afb3d8f"
        ],
        [
            "elim s; intros.",
            "VernacExtend",
            "3b8915a1df8355acedcee9ac02fb069bcb145240"
        ],
        [
            "fold (root x1) in |- *; apply H0; trivial.",
            "VernacExtend",
            "3a1ce8b13537fc35d7c500061193858810f8fa0d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prop_root : forall (P : E -> Prop) (x : E), P x -> (forall y z : E, P y -> R z y -> P z) -> P (root x).",
            "VernacStartTheoremProof",
            "1da754d3acafca445186b2f356ac08895715848c"
        ],
        [
            "intros; generalize H.",
            "VernacExtend",
            "44be2aa079007132662332e565cbcb122d371437"
        ],
        [
            "elim (wf_R x).",
            "VernacExtend",
            "e455904f596736931debf0f55c7139b4b66831bf"
        ],
        [
            "intros; unfold root in |- *; rewrite root_eq.",
            "VernacExtend",
            "0b2d55232415f29f9012a38b0b1d11528b6d0df4"
        ],
        [
            "unfold F at 1 in |- *; case (R_dec x0); intros.",
            "VernacExtend",
            "d32c18bf47d7d11c4dc7cc601ada0f5f1afb3d8f"
        ],
        [
            "elim s; intros x1 y.",
            "VernacExtend",
            "5df0abffda0a4ebf8004c27a98268706855d8a80"
        ],
        [
            "apply (H2 x1 y).",
            "VernacExtend",
            "9322f22ddc88ceefd8d0a4c7fb22296215d973f8"
        ],
        [
            "apply H0 with (y := x0); trivial.",
            "VernacExtend",
            "c1d1c1cd98e9de4bd72477e03fc4084c79fb1be3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End WF_ROOT.",
            "VernacEndSegment",
            "7bc460bbc32e990328173765d89e0cbfd420bdec"
        ]
    ],
    "proofs": [
        {
            "name": "eq_bool_dec",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "simple induction b; auto.",
                        "VernacExtend",
                        "f774dee14d4bc7b860870b64acea9240ac3f83dc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "case_eq",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros; case (eq_E_dec x x).",
                        "VernacExtend",
                        "05752ebfa687f43cf2c9fb8af4ee7349244f5c46"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (x = x); auto.",
                        "VernacExtend",
                        "2f4224f2d60dfc809cc6a0e6ecafaf0fe9af29c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "case_ineq",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros; case (eq_E_dec x x').",
                        "VernacExtend",
                        "4fc73bbd925d0d0261d53c392fe45ab31a5940b4"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (x = x'); auto.",
                        "VernacExtend",
                        "c7aa855c017348aecefec423b7980e7545b7afad"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_couple_dec",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; case (eq_E_dec x1 x2); case (eq_F_dec y1 y2); intros; auto.",
                        "VernacExtend",
                        "e7e649b792c7ab19b5072f2c2caaa21ab244b891"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "true_not_false",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros; rewrite H; discriminate.",
                        "VernacExtend",
                        "9745b0d86d48b2d387235ddd3a1ae941ad0690a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_not_in",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros; red in |- *; intros.",
                        "VernacExtend",
                        "51aeefe3bf0889d494d662b4f3305dd8bbc97324"
                    ]
                },
                {
                    "command": [
                        "elim H0; rewrite <- H1; auto.",
                        "VernacExtend",
                        "5f45d08b06cc012ebd5e789bde09d51d0665e569"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fix_F_eq",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros x r; elim r using Acc_inv_dep; auto.",
                        "VernacExtend",
                        "e675e25ee2c51c5bf3ace62e51bb8596eebaf159"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fix_F_inv",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intro x; elim (Rwf x); intros.",
                        "VernacExtend",
                        "5bbc65e644baab4ea4e8d5ab11d73b24e3b00a03"
                    ]
                },
                {
                    "command": [
                        "rewrite (Fix_F_eq x0 r); rewrite (Fix_F_eq x0 s); intros.",
                        "VernacExtend",
                        "57ea7b87102973d696add80d2feb0326df63e47a"
                    ]
                },
                {
                    "command": [
                        "apply F_ext; auto.",
                        "VernacExtend",
                        "81399a86062b9ee16a4de33caf8a3e9b37b12818"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fix_eq",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intro; unfold Fix in |- *.",
                        "VernacExtend",
                        "7f583765e97bc637a75685cf9241ba06c0415cd7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Fix_F_eq x).",
                        "VernacExtend",
                        "2e734c430eb61722e6f00651b2b7f39377d6ec73"
                    ]
                },
                {
                    "command": [
                        "apply F_ext; intros.",
                        "VernacExtend",
                        "dbe9f31bc047e65e815075d5d23b05a4cb1dee8c"
                    ]
                },
                {
                    "command": [
                        "apply Fix_F_inv.",
                        "VernacExtend",
                        "2c73c3cd3d2180a61306b0987682c46a984370a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_acc",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "intros; absurd (f y < 0); auto with arith.",
                        "VernacExtend",
                        "d2f91f16cf69fd57c4b676de38b5e8d5e50e728f"
                    ]
                },
                {
                    "command": [
                        "intros; apply Acc_intro.",
                        "VernacExtend",
                        "890281168c4ed13e0a54958e9675ff0224a585f3"
                    ]
                },
                {
                    "command": [
                        "intros; apply H.",
                        "VernacExtend",
                        "b7bca165a275b11a76ba06a5f07157259bedeabd"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (m := f y); auto with arith.",
                        "VernacExtend",
                        "b0174e4a9c1f5543df46ae18b40fb26f0d349f65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wf_R",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "unfold well_founded in |- *; intro.",
                        "VernacExtend",
                        "9a1c30ca6ff051710ef0a5771d6f92a7fb9569b9"
                    ]
                },
                {
                    "command": [
                        "apply Acc_intro; intros.",
                        "VernacExtend",
                        "8fba32424572b3e59fae31cf5b031e0ce3967014"
                    ]
                },
                {
                    "command": [
                        "apply (lt_acc (f a)); auto.",
                        "VernacExtend",
                        "f48a47fda0336aa792059def87d0217ad83d0011"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_eq",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros; unfold F in |- *; case (R_dec x); intros.",
                        "VernacExtend",
                        "f48096f0692ffb867a366f6365fb7badcd8ca441"
                    ]
                },
                {
                    "command": [
                        "elim s; intros; auto.",
                        "VernacExtend",
                        "d8a476144344fd72cd01a0c2d4c5ebd370fc3cfd"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "root_no_R",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros; elim (wf_R x).",
                        "VernacExtend",
                        "ee2d7cd9852c1a7dd046ac2249997d2073969e0f"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite root_eq.",
                        "VernacExtend",
                        "5cc3e8542e386cd359fd1fbdaf83c6ebf52787e6"
                    ]
                },
                {
                    "command": [
                        "unfold F at 1 in |- *; case (R_dec x0); intros.",
                        "VernacExtend",
                        "d32c18bf47d7d11c4dc7cc601ada0f5f1afb3d8f"
                    ]
                },
                {
                    "command": [
                        "elim s; intros.",
                        "VernacExtend",
                        "3b8915a1df8355acedcee9ac02fb069bcb145240"
                    ]
                },
                {
                    "command": [
                        "fold (root x1) in |- *; apply H0; trivial.",
                        "VernacExtend",
                        "3a1ce8b13537fc35d7c500061193858810f8fa0d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prop_root",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros; generalize H.",
                        "VernacExtend",
                        "44be2aa079007132662332e565cbcb122d371437"
                    ]
                },
                {
                    "command": [
                        "elim (wf_R x).",
                        "VernacExtend",
                        "e455904f596736931debf0f55c7139b4b66831bf"
                    ]
                },
                {
                    "command": [
                        "intros; unfold root in |- *; rewrite root_eq.",
                        "VernacExtend",
                        "0b2d55232415f29f9012a38b0b1d11528b6d0df4"
                    ]
                },
                {
                    "command": [
                        "unfold F at 1 in |- *; case (R_dec x0); intros.",
                        "VernacExtend",
                        "d32c18bf47d7d11c4dc7cc601ada0f5f1afb3d8f"
                    ]
                },
                {
                    "command": [
                        "elim s; intros x1 y.",
                        "VernacExtend",
                        "5df0abffda0a4ebf8004c27a98268706855d8a80"
                    ]
                },
                {
                    "command": [
                        "apply (H2 x1 y).",
                        "VernacExtend",
                        "9322f22ddc88ceefd8d0a4c7fb22296215d973f8"
                    ]
                },
                {
                    "command": [
                        "apply H0 with (y := x0); trivial.",
                        "VernacExtend",
                        "c1d1c1cd98e9de4bd72477e03fc4084c79fb1be3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}