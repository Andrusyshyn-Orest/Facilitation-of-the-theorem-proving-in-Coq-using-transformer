{
    "filename": "nat_trees.v",
    "coq_project": "search-trees",
    "vernac_cmds": [
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Require Export Peano_dec.",
            "VernacRequire",
            "a68e961f1a7ee42ca8849b6b2821add5dc371013"
        ],
        [
            "Inductive nat_tree : Set := | NIL : nat_tree | bin : nat -> nat_tree -> nat_tree -> nat_tree.",
            "VernacInductive",
            "faae0e092b87fcdfd39e9149b3757effd0f433e8"
        ],
        [
            "Inductive binp : nat_tree -> Prop := binp_intro : forall (n : nat) (t1 t2 : nat_tree), binp (bin n t1 t2).",
            "VernacInductive",
            "3a86eaee7111c2b084f081e091a9bcc37d074e61"
        ],
        [
            "Hint Resolve binp_intro: searchtrees.",
            "VernacHints",
            "d760dab870b2a2547cb01a8ab72d82b1b6d1ee6a"
        ],
        [
            "Lemma NIL_not_bin : ~ binp NIL.",
            "VernacStartTheoremProof",
            "faf3c9886159b3a56ca518004dda7e679b2c4dbc"
        ],
        [
            "unfold not in |- *; intros H.",
            "VernacExtend",
            "34ad81a9fd1c6de17537371f1d7c2adf73a860c7"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NIL_not_bin: searchtrees.",
            "VernacHints",
            "abfae14e61daf5b84199a470f8c41fefaa0d5c26"
        ],
        [
            "Lemma diff_nil_bin : forall (n : nat) (t1 t2 : nat_tree), bin n t1 t2 <> NIL.",
            "VernacStartTheoremProof",
            "2971c12adc23b50d4ee59257d5ab91f92d36666b"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve diff_nil_bin: searchtrees.",
            "VernacHints",
            "ae01e6696f4f77006b32c8abd6564c091e1b424c"
        ],
        [
            "Inductive occ : nat_tree -> nat -> Prop := | occ_root : forall (n : nat) (t1 t2 : nat_tree), occ (bin n t1 t2) n | occ_l : forall (n p : nat) (t1 t2 : nat_tree), occ t1 p -> occ (bin n t1 t2) p | occ_r : forall (n p : nat) (t1 t2 : nat_tree), occ t2 p -> occ (bin n t1 t2) p.",
            "VernacInductive",
            "3c593253fd821f4deed50576a920cc9029694ccd"
        ],
        [
            "Hint Resolve occ_root occ_l occ_r: searchtrees.",
            "VernacHints",
            "1f24340abab48acb5ed5fbbd317a2f6f7f38a92c"
        ],
        [
            "Definition member (n : nat) (t : nat_tree) := occ t n.",
            "VernacDefinition",
            "06ffce28b4a3a565f5959825b2ed672e9d690922"
        ],
        [
            "Derive Inversion_clear OCC_INV with (forall (n p : nat) (t1 t2 : nat_tree), occ (bin n t1 t2) p).",
            "VernacExtend",
            "69b4d1abbc0ea7e481d130335f9411174bac1977"
        ],
        [
            "Lemma occ_inv : forall (n p : nat) (t1 t2 : nat_tree), occ (bin n t1 t2) p -> n = p \\/ occ t1 p \\/ occ t2 p.",
            "VernacStartTheoremProof",
            "d9ed1732e2f6d3fba584200b8b19523589785ea7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H using OCC_INV; auto with searchtrees.",
            "VernacExtend",
            "21d76c7e4cd9a4dc76fb94421f41f657412ea3b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve occ_inv: searchtrees.",
            "VernacHints",
            "bf036bb4bb8a5c9a7fa15afec1a717aa03431c8c"
        ],
        [
            "Lemma not_occ_nil : forall p : nat, ~ occ NIL p.",
            "VernacStartTheoremProof",
            "05537eb4f305d1f45b3aaffc95ad181c288119ba"
        ],
        [
            "unfold not in |- *; intros p H.",
            "VernacExtend",
            "db4ef4b6dd59182a5856689d1697b4f91dbb4b0c"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_occ_nil: searchtrees.",
            "VernacHints",
            "824839a9d735bf1f9fc296b972faf9d5eaab1a2b"
        ]
    ],
    "proofs": [
        {
            "name": "NIL_not_bin",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros H.",
                        "VernacExtend",
                        "34ad81a9fd1c6de17537371f1d7c2adf73a860c7"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_nil_bin",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "occ_inv",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H using OCC_INV; auto with searchtrees.",
                        "VernacExtend",
                        "21d76c7e4cd9a4dc76fb94421f41f657412ea3b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_occ_nil",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros p H.",
                        "VernacExtend",
                        "db4ef4b6dd59182a5856689d1697b4f91dbb4b0c"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}