{
    "filename": "src/DeBruijn.v",
    "coq_project": "dblib",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Generalizable All Variables.",
            "VernacGeneralizable",
            "df5fcc1c1e798a1889e2cb618bd2f802267ccb67"
        ],
        [
            "Require Import Dblib.DblibTactics.",
            "VernacRequire",
            "52dee7e99cbfbd23b1a6ec0b4c66c74e09cdfec3"
        ],
        [
            "Class Var (V : Type) := { var: nat -> V }.",
            "VernacInductive",
            "115b99ec5646b3cc48fcaa3a72705049b92ce827"
        ],
        [
            "Instance Var_idx : Var nat := { var x := x }.",
            "VernacInstance",
            "5a30887156b9a07b57f6f13326c79fec545e6b4d"
        ],
        [
            "Class Traverse (V T : Type) := { traverse: (nat -> nat -> V) -> (nat -> T -> T) }.",
            "VernacInductive",
            "0f5ad257e891a5d6e3d805fa68005fd1ae51ae5a"
        ],
        [
            "Notation traverse_var f := (traverse (fun l x => var (f l x))).",
            "VernacSyntacticDefinition",
            "8713866346aa20e494aabe413e90548816ff319d"
        ],
        [
            "Class TraverseVarInjective `{Var V, Traverse V T} := { traverse_var_injective: forall f, (forall x1 x2 l, f l x1 = f l x2 -> x1 = x2) -> forall t1 t2 l, traverse_var f l t1 = traverse_var f l t2 -> t1 = t2 }.",
            "VernacInductive",
            "79d5a92e23dedbf4e70ceb3227bd3760ba68b7f8"
        ],
        [
            "Class TraverseFunctorial `{Traverse V V, Traverse V T} := { traverse_functorial: forall f g t l, traverse g l (traverse f l t) = traverse (fun l x => traverse g l (f l x)) l t }.",
            "VernacInductive",
            "f309b5c7ac10ed708d3191581656932adb28479f"
        ],
        [
            "Class TraverseRelative `{Traverse V T} := { traverse_relative: forall f g p t m l, (forall l x, f (l + p) x = g l x) -> m = l + p -> traverse f m t = traverse g l t }.",
            "VernacInductive",
            "e3b76a2902f9d00477a74b0064e13d96da335a21"
        ],
        [
            "Class TraverseIdentifiesVar `{Var V, Traverse V V} := { traverse_identifies_var: forall f l x, traverse f l (var x) = f l x }.",
            "VernacInductive",
            "f5495ef85f8cb92a4dcab43ee8d654bcaba0d701"
        ],
        [
            "Class TraverseVarIsIdentity `{Var V, Traverse V T} := { traverse_var_is_identity: forall f, (forall l x, f l x = var x) -> forall t l, traverse f l t = t }.",
            "VernacInductive",
            "d78bbffd0228ea55b9f5efc2d14b703a68d1b42d"
        ],
        [
            "Class Lift (T : Type) := { lift: nat -> nat -> T -> T }.",
            "VernacInductive",
            "bc64db00852a145438e4a9145fa24406483e2946"
        ],
        [
            "Instance Lift_idx : Lift nat := { lift w k x := if le_gt_dec k x then w + x else x }.",
            "VernacInstance",
            "3b0f06ee401c306ffdda9cd25bc2b8df26b5c9d5"
        ],
        [
            "Notation shift := (lift 1).",
            "VernacSyntacticDefinition",
            "49f32730372467743aa4f5760e5ea063e6aa960b"
        ],
        [
            "Class Subst (V T : Type) := { subst: V -> nat -> T -> T }.",
            "VernacInductive",
            "9a9646b61f1288b9f816a265cdd98fe18198d13c"
        ],
        [
            "Definition subst_idx `{Var V} (v : V) (k x : nat) : V := match lt_eq_lt_dec x k with | inleft (left _) => var x | inleft (right _) => v | inright _ => var (x - 1) end.",
            "VernacDefinition",
            "5044993cdd3eb66218b7923fb62abf57501d4edd"
        ],
        [
            "Instance Subst_idx : Subst nat nat := { subst := subst_idx }.",
            "VernacInstance",
            "96fad45daac01df5212d30e90502037465f49331"
        ],
        [
            "Definition closed `{Lift T} k t := shift k t = t.",
            "VernacDefinition",
            "f1e5d17e0127f2405c0ebc548b36e9cc349a5f31"
        ],
        [
            "Definition rotate `{Var V, Lift T, Subst V T} (n : nat) (t : T) : T := subst (var n) 0 (shift (S n) t).",
            "VernacDefinition",
            "efa5a7c7375d8b3409e51a2e73d79ca7129a52b9"
        ],
        [
            "Class LiftVar `{Var A, Lift A} := { lift_var: forall w k x, lift w k (var x) = var (lift w k x) }.",
            "VernacInductive",
            "62b70700771518ae4ff7e6151e320333c510eaf7"
        ],
        [
            "Class LiftZero `{Lift T} := { lift_zero: forall k t, lift 0 k t = t }.",
            "VernacInductive",
            "7257e23721e48e6fb8380c1d6c651f4110ab7213"
        ],
        [
            "Class LiftInjective `{Lift T} := { lift_injective: forall w k t1 t2, lift w k t1 = lift w k t2 -> t1 = t2 }.",
            "VernacInductive",
            "16389ed35e847b2b4433a5f42bf750174b4ab78e"
        ],
        [
            "Ltac lift_injective := match goal with h: lift ?w ?k ?t1 = lift ?w ?k ?t2 |- _ => generalize (lift_injective _ _ _ _ h); clear h; intro h; try (subst t1) end.",
            "VernacExtend",
            "431a1b5c307e1b0c7f252d5293b1765d7dbe2a4d"
        ],
        [
            "Class LiftLift `{Lift T} := { lift_lift: forall t k s wk ws, k <= s -> lift wk k (lift ws s t) = lift ws (wk + s) (lift wk k t) }.",
            "VernacInductive",
            "a945ceafbc4300d126369d2160395865a6399bd6"
        ],
        [
            "Lemma lift_lift_reversed: forall `{Lift T}, LiftLift -> forall wk k ws s t, k >= s + ws -> lift wk k (lift ws s t) = lift ws s (lift wk (k - ws) t).",
            "VernacStartTheoremProof",
            "d51e31a57b4c473c7296fd6517c46a02b9b826b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace k with (ws + (k - ws)) by omega.",
            "VernacExtend",
            "99ebf38f9fd0348e840557fb1327947caf209a7e"
        ],
        [
            "erewrite <- lift_lift by omega.",
            "VernacExtend",
            "cc96a8da1125c65d270fb0f224b74fcee7cf56ab"
        ],
        [
            "replace (ws + (k - ws) - ws) with (k - ws) by omega.",
            "VernacExtend",
            "003b0ff1e9a64f96fe916fe955705b92bc6992f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class LiftLiftFuse `{Lift T} := { lift_lift_fuse: forall t k s wk ws, s <= k <= s + ws -> lift wk k (lift ws s t) = lift (wk + ws) s t }.",
            "VernacInductive",
            "06bd6d2147965083f2a644c0aa438bca9e91f376"
        ],
        [
            "Class SubstVar `{Var A, Subst A A} := { subst_var: forall a k x, subst a k (var x) = subst_idx a k x }.",
            "VernacInductive",
            "08633dd123a51b0048cdc48d4f8801a3c586513e"
        ],
        [
            "Class SubstLift `{Lift T, Subst V T} := { subst_lift: forall v k t, subst v k (shift k t) = t }.",
            "VernacInductive",
            "0faf587645802f198b958f15a616766f1f5b7e96"
        ],
        [
            "Class LiftSubst1 `{Lift V, Lift T, Subst V T} := { lift_subst_1: forall t k v s w, k <= s -> lift w k (subst v s t) = subst (lift w k v) (w + s) (lift w k t) }.",
            "VernacInductive",
            "21015a073c605328728e1263aef0a5c5d5765e5d"
        ],
        [
            "Class LiftSubst2 `{Lift V, Lift T, Subst V T} := { lift_subst_2: forall t k v s w, s <= k -> lift w k (subst v s t) = subst (lift w k v) s (lift w (1 + k) t) }.",
            "VernacInductive",
            "cb825e006d08cab09471ab77003253323fe3e7cb"
        ],
        [
            "Class LiftSubst `{Lift V, Lift T, Subst V T} := { lift_subst: forall t k v s w, lift w k (subst v s t) = subst (lift w k v) (lift w (1 + k) s) (lift w (shift s k) t) }.",
            "VernacInductive",
            "b5ebcf3603dd756bc097227daf0e2120a9f90724"
        ],
        [
            "Class SubstSubst `{Lift V, Subst V V, Subst V T} := { subst_subst: forall t k v s w, k <= s -> subst v s (subst w k t) = subst (subst v s w) k (subst (shift k v) (1 + s) t) }.",
            "VernacInductive",
            "5e80541bb6d3a09ff8e6c55d358045e5d9502010"
        ],
        [
            "Class Pun1 `{Var V, Lift T, Subst V T} := { pun_1: forall t k, subst (var k) (S k) (shift k t) = t }.",
            "VernacInductive",
            "512a1e65804ccefcfb947852282c2e6610892a38"
        ],
        [
            "Class Pun2 `{Var V, Lift T, Subst V T} := { pun_2: forall t k, subst (var k) k (shift (S k) t) = t }.",
            "VernacInductive",
            "9b18587c814b1e861e851109def9074c1c74dc73"
        ],
        [
            "Class PunPun `{Var V, Lift T, Subst V T} := { pun_pun: forall v w k t, subst v (w + k) (lift w k t) = subst v k (lift w (1 + k) t) }.",
            "VernacInductive",
            "d87c7019cb802f99d64fd5ee6409b53d55199755"
        ],
        [
            "Class Rotate1SelfInverse `{Var V, Lift T, Subst V T} := { rotate1_self_inverse: forall t, rotate 1 (rotate 1 t) = t }.",
            "VernacInductive",
            "d32102a82f39e7fc9ff05083423a80a79483ea93"
        ],
        [
            "Lemma traverse_extensional: forall `{Traverse V T}, TraverseRelative -> forall f g, (forall l x, f l x = g l x) -> forall t l, traverse f l t = traverse g l t.",
            "VernacStartTheoremProof",
            "5f1ce3703869127dfd21b3433bd3c8193fdafca8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply traverse_relative with (p := 0).",
            "VernacExtend",
            "897b9e22b478e06b78e7602a6dd9d4d054e96079"
        ],
        [
            "intros m ?.",
            "VernacExtend",
            "85b221177f21991743fbf77c6d3c83a38cf3fe96"
        ],
        [
            "replace (m + 0) with m by omega.",
            "VernacExtend",
            "8815e13f57e5e7592e061267eec43f06ef1c2dad"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma traverse_traverse_var: forall `{Var V, Traverse V V, Traverse V T}, @TraverseFunctorial V _ T _ -> @TraverseRelative V T _ -> @TraverseIdentifiesVar V _ _ -> forall f g t l, traverse g l (traverse_var f l t) = traverse (fun l x => g l (f l x)) l t.",
            "VernacStartTheoremProof",
            "a9f04bd29040acf77b71944dd951c7bb23393fda"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_functorial.",
            "VernacExtend",
            "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
        ],
        [
            "eapply (traverse_extensional _).",
            "VernacExtend",
            "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
        ],
        [
            "eauto using traverse_identifies_var.",
            "VernacExtend",
            "9c498171a1f3a1872e73fa36344de90842d521bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac just_do_it := unfold subst, Subst_idx, subst_idx, lift, Lift_idx, var, Var_idx; intros; solve [ dblib_by_cases; eauto with f_equal omega ].",
            "VernacExtend",
            "2c1d4f20543f29d5b9de5dd725e9258b237e3a94"
        ],
        [
            "Lemma lift_idx_recent: forall w k x, k > x -> lift w k x = x.",
            "VernacStartTheoremProof",
            "dc61f711a0d3dd08543157c2d87ac88cc03a14f8"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_idx_old: forall w k x, k <= x -> lift w k x = w + x.",
            "VernacStartTheoremProof",
            "f4738e8089d360f3a3c3a05693e812dbaeaf163a"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Create HintDb lift_idx_hints.",
            "VernacCreateHintDb",
            "c15133995acecbd4c77666fcfb96fad7b67d2ed8"
        ],
        [
            "Ltac lift_idx := first [ rewrite @lift_idx_recent by solve [ omega | eauto with lift_idx_hints ] | rewrite @lift_idx_old by omega ].",
            "VernacExtend",
            "2391a8f0dd5333d8261ad071ef19589f885dd153"
        ],
        [
            "Hint Extern 1 => lift_idx : lift_idx.",
            "VernacHints",
            "3340ce144d22711eb100cccb94c581115165da12"
        ],
        [
            "Ltac lift_idx_in h := first [ rewrite @lift_idx_recent in h by solve [ omega | eauto with lift_idx_hints ] | rewrite @lift_idx_old in h by omega ].",
            "VernacExtend",
            "52e01405ffa676d388b89cb9843122fd91829843"
        ],
        [
            "Ltac lift_idx_all := first [ rewrite @lift_idx_recent in * by solve [ omega | eauto with lift_idx_hints ] | rewrite @lift_idx_old in * by omega ].",
            "VernacExtend",
            "23db44a88d79fe3993b679dda7146e17085cb1da"
        ],
        [
            "Ltac destruct_lift_idx := match goal with |- context[@lift nat _ _ ?y ?x] => destruct (le_gt_dec y x); lift_idx end.",
            "VernacExtend",
            "b5c2225d0482a4a2c3deee76d97b38533957709f"
        ],
        [
            "Instance LiftVar_idx: @LiftVar nat _ _.",
            "VernacInstance",
            "0ba3a20216fa85c7ce96458f7d7501a760cdcaf3"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftZero_idx: @LiftZero nat _.",
            "VernacInstance",
            "852c1366112f218eddb7c8c7959eca8fdbf1047d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftInjective_idx: @LiftInjective nat _.",
            "VernacInstance",
            "9d481aff58b15070407915c67724b61aa096fc25"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftLift_idx: @LiftLift nat _.",
            "VernacInstance",
            "71e34449085d927db362087c9e179d0209b53f4c"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftLiftFuse_idx: @LiftLiftFuse nat _.",
            "VernacInstance",
            "c59e191987a5430f4f03c59d25b8fafff9b74d6e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_idx_miss_1: forall `{Var V} v k x, k > x -> subst_idx v k x = var x.",
            "VernacStartTheoremProof",
            "6848d7ec8885b945ea4b7a3cc52349fee92fb953"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_idx_identity: forall `{Var V} v k x, k = x -> subst_idx v k x = v.",
            "VernacStartTheoremProof",
            "c68354a4ad85b4aaf69dd619c7be9d894e3bc6d5"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_idx_miss_2: forall `{Var V} v k x, k < x -> subst_idx v k x = var (x - 1).",
            "VernacStartTheoremProof",
            "7d56f1d5aef59e35c5243b56898092047a0dcae0"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac subst_idx := first [ rewrite @subst_idx_identity by omega | rewrite @subst_idx_miss_1 by omega | rewrite @subst_idx_miss_2 by omega ].",
            "VernacExtend",
            "c5e1ce5960e7abcb6b60ad24998da092201f71e3"
        ],
        [
            "Ltac subst_idx_in h := first [ rewrite @subst_idx_identity in h by omega | rewrite @subst_idx_miss_1 in h by omega | rewrite @subst_idx_miss_2 in h by omega ].",
            "VernacExtend",
            "fe5074b755acb3017c140177dcf2b5abb6d5da91"
        ],
        [
            "Ltac subst_idx_all := first [ rewrite @subst_idx_identity in * by omega | rewrite @subst_idx_miss_1 in * by omega | rewrite @subst_idx_miss_2 in * by omega ].",
            "VernacExtend",
            "0cbd5c2e8aa893aeaa461ec7d351597029deb650"
        ],
        [
            "Lemma subst_idx_var: forall `{Var V}, forall v k x, subst_idx (var v) k x = var (subst_idx v k x).",
            "VernacStartTheoremProof",
            "4a504fac7d759c27ed6b7b71cd00a5c9f76815f4"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Lift_Traverse `{Var V, Traverse V T} : Lift T := { lift w k t := traverse (fun l x => var (lift w (l + k) x)) 0 t }.",
            "VernacInstance",
            "8e7b5294e92e3a7628b4d808093f9e846d6a1b17"
        ],
        [
            "Lemma expand_lift: forall `{Var V, Traverse V T}, forall w k t, lift w k t = traverse (fun l x => var (lift w (l + k) x)) 0 t.",
            "VernacStartTheoremProof",
            "f336e547ebe0ec673665feb223acd31036b7a6be"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac plus_0_r := repeat match goal with |- context[?x + 0] => rewrite (plus_0_r x) end.",
            "VernacExtend",
            "47e77e3a5e9afb47d232720967aeab4504f1d037"
        ],
        [
            "Ltac plus_0_r_in h := repeat match type of h with context[?x + 0] => rewrite (plus_0_r x) in h end.",
            "VernacExtend",
            "e721a2e5c00af17a45d48de156fc257ad7ef12ac"
        ],
        [
            "Lemma recognize_lift: forall `{Var V, Traverse V T}, TraverseRelative -> forall w k1 k2 t, forall traverse_, traverse_ = traverse -> traverse_ (fun l x => var (lift w (l + k2) x)) k1 t = lift w (k1 + k2) t.",
            "VernacStartTheoremProof",
            "acbd56246536d216b511571eeebf930a7fdb69ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply traverse_relative; [ | instantiate (1 := k1); omega ].",
            "VernacExtend",
            "1526846d61795ece104dae8b1c9cc96520ab0d94"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac recognize_lift := rewrite recognize_lift by eauto with typeclass_instances; repeat rewrite plus_0_l.",
            "VernacExtend",
            "c186ea992c00a0845eff0f2548cffdcf97b682c5"
        ],
        [
            "Ltac recognize_lift_in h := rewrite recognize_lift in h by eauto with typeclass_instances; repeat rewrite plus_0_l in h.",
            "VernacExtend",
            "0f98e1af117811373be7477b728bf99bd3efe5bd"
        ],
        [
            "Ltac simpl_lift := match goal with |- context[?_traverse (fun l x : nat => var (lift ?w (l + ?k) x)) _ _] => unfold _traverse; fold _traverse; plus_0_r; match type of _traverse with (nat -> nat -> ?V) -> nat -> ?T -> ?T => repeat rewrite (@recognize_lift V _ T _ _) by eauto with typeclass_instances end; repeat rewrite plus_0_l | h: context[?_traverse (fun l x : nat => var (lift ?w (l + ?k) x)) _ _] |- _ => unfold _traverse in h; fold _traverse in h; plus_0_r_in h; match type of _traverse with (nat -> nat -> ?V) -> nat -> ?T -> ?T => repeat rewrite (@recognize_lift V _ T _ _) in h by eauto with typeclass_instances end; repeat rewrite plus_0_l in h end.",
            "VernacExtend",
            "70f7e74da9204419e539087b21e9da900bfd4381"
        ],
        [
            "Ltac simpl_lift_goal := repeat rewrite @expand_lift; simpl (@traverse _ _ _); repeat simpl_lift; repeat lift_idx; simpl var.",
            "VernacExtend",
            "485cb35a05f47dfdc3ec5d37f923371c810bcf41"
        ],
        [
            "Hint Extern 1 (lift _ _ _ = _) => simpl_lift_goal : simpl_lift_goal.",
            "VernacHints",
            "73477b32b756c7a672c83a156d6e9d88f2c53ba2"
        ],
        [
            "Hint Extern 1 (_ = lift _ _ _) => simpl_lift_goal : simpl_lift_goal.",
            "VernacHints",
            "6667b291ed5f96e45e22d178e1d657f17ef7bf50"
        ],
        [
            "Ltac simpl_lift_all := repeat rewrite @expand_lift in *; simpl (@traverse _ _ _) in *; repeat simpl_lift; repeat lift_idx_all; simpl var in *.",
            "VernacExtend",
            "7c6593856760bb7ed0638d2f3349ac4f6e8e9823"
        ],
        [
            "Ltac simpl_lift_in h := repeat rewrite @expand_lift in h; simpl (@traverse _ _ _) in h; repeat simpl_lift; repeat lift_idx_in h; simpl var in h.",
            "VernacExtend",
            "046ee7d8747631cc08265b406df63da45597b90f"
        ],
        [
            "Instance LiftVar_Traverse: forall `{Var V, Traverse V V}, TraverseIdentifiesVar -> @LiftVar V _ _.",
            "VernacInstance",
            "472042e6d3f38ec8be1c04352988a54381d74d14"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftZero_Traverse: forall `{Var V, Traverse V V}, TraverseVarIsIdentity -> @LiftZero V _.",
            "VernacInstance",
            "4bb26021f9115df2ff575aa97dce756602dbad0f"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "rewrite traverse_var_is_identity.",
            "VernacExtend",
            "c82085163af68a5115414c387dff1524111248fb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite lift_zero.",
            "VernacExtend",
            "f586a9a519d764d01c37bded867939c81dbce462"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftInjective_Traverse: forall `{Var V, Traverse V T}, TraverseVarInjective -> @LiftInjective T _.",
            "VernacInstance",
            "883198580329793e83912d6ae89c5003304a0935"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "intros w k.",
            "VernacExtend",
            "53a4f70946891ee39de1b237a2cc564d4ceeab52"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply traverse_var_injective with (f := fun l x => lift w (l + k) x).",
            "VernacExtend",
            "35506ea39fa09e8bf23305027cd66f2bb1633396"
        ],
        [
            "eauto using lift_injective.",
            "VernacExtend",
            "4aba59e008195471d0a456d439f686f52f25a707"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftLift_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseFunctorial V _ T _ -> @TraverseRelative V T _ -> @TraverseIdentifiesVar V _ _ -> @LiftLift T _.",
            "VernacInstance",
            "b6fef8ffb202d3b9659ba446fb2963a09d6e1186"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (traverse_traverse_var _ _ _).",
            "VernacExtend",
            "01ce8401773dca785a6bc087426023f3a0996a48"
        ],
        [
            "rewrite (traverse_traverse_var _ _ _).",
            "VernacExtend",
            "01ce8401773dca785a6bc087426023f3a0996a48"
        ],
        [
            "eapply (traverse_extensional _).",
            "VernacExtend",
            "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite lift_lift by omega.",
            "VernacExtend",
            "151ba5438f702b0f64cd48040cc1c2950b2a5949"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftLiftFuse_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseFunctorial V _ T _ -> @TraverseRelative V T _ -> @TraverseIdentifiesVar V _ _ -> @LiftLiftFuse T _.",
            "VernacInstance",
            "000658d333aeaac5dd47645e31a92dfc9276bcd0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (traverse_traverse_var _ _ _).",
            "VernacExtend",
            "01ce8401773dca785a6bc087426023f3a0996a48"
        ],
        [
            "eapply (traverse_extensional _).",
            "VernacExtend",
            "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite lift_lift_fuse by omega.",
            "VernacExtend",
            "aa93902f79dfb7d94ed4d4faff49ee5ab8345ca0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Subst_Traverse `{Var V, Traverse V V, Traverse V T} : Subst V T := { subst v k t := traverse (fun l x => subst_idx (lift l 0 v) (l + k) x) 0 t }.",
            "VernacInstance",
            "d7bb2aea83b637f1e8160ebc0f984aa4066f452e"
        ],
        [
            "Lemma expand_subst: forall `{Var V, Traverse V V, Traverse V T}, forall v k t, subst v k t = traverse (fun l x => subst_idx (lift l 0 v) (l + k) x) 0 t.",
            "VernacStartTheoremProof",
            "780e45b09788a26a2a8f042b2045c3287137ee61"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma recognize_subst: forall `{Var V, Traverse V V, Traverse V T}, @TraverseFunctorial V _ V _ -> @TraverseIdentifiesVar V _ _ -> @TraverseRelative V V _ -> @TraverseRelative V T _ -> forall traverse_, traverse_ = traverse -> forall v k2 k1 t, traverse_ (fun l x => subst_idx (lift l 0 v) (l + k2) x) k1 t = subst (lift k1 0 v) (k1 + k2) t.",
            "VernacStartTheoremProof",
            "307413222ac723a483a8222a700a5546d6b20feb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "eapply traverse_relative; [ | instantiate (1 := k1); omega ].",
            "VernacExtend",
            "1526846d61795ece104dae8b1c9cc96520ab0d94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite lift_lift_fuse by omega.",
            "VernacExtend",
            "aa93902f79dfb7d94ed4d4faff49ee5ab8345ca0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac recognize_subst := rewrite recognize_subst by eauto with typeclass_instances; try rewrite lift_zero; repeat rewrite plus_0_l.",
            "VernacExtend",
            "1c345247a39df5fc75ba5203557590f074c88a38"
        ],
        [
            "Ltac recognize_subst_in h := rewrite recognize_subst in h by eauto with typeclass_instances; try rewrite lift_zero in h; repeat rewrite plus_0_l in h.",
            "VernacExtend",
            "01ed925dd4f94e953508d1a06992435946034670"
        ],
        [
            "Ltac simpl_subst := match goal with |- context[?_traverse (fun l x : nat => subst_idx (lift l 0 ?v) (l + ?k) x) _ _] => unfold _traverse; fold _traverse; plus_0_r; match type of _traverse with (nat -> nat -> ?V) -> nat -> ?T -> ?T => repeat rewrite (@recognize_subst V _ _ T _ _ _ _ _) by eauto with typeclass_instances end; repeat rewrite plus_0_l; repeat rewrite lift_zero | h: context[?_traverse (fun l x : nat => subst_idx (lift l 0 ?v) (l + ?k) x) _ _] |- _ => unfold _traverse in h; fold _traverse in h; plus_0_r_in h; match type of _traverse with (nat -> nat -> ?V) -> nat -> ?T -> ?T => repeat rewrite (@recognize_subst V _ _ T _ _ _ _ _) in h by eauto with typeclass_instances end; repeat rewrite plus_0_l in h; repeat rewrite lift_zero in h end.",
            "VernacExtend",
            "316b130c70d6317747f27603ad3b3c697259a9a1"
        ],
        [
            "Ltac simpl_subst_goal := repeat rewrite @expand_subst; simpl (@traverse _ _ _); repeat simpl_subst; repeat subst_idx; simpl var.",
            "VernacExtend",
            "ea1f522703b04400dfe21167dc1a83c34ea0a381"
        ],
        [
            "Hint Extern 1 (subst _ _ _ = _) => simpl_subst_goal : simpl_subst_goal.",
            "VernacHints",
            "d5314899eed8d6015236080408764213cc67fe78"
        ],
        [
            "Hint Extern 1 (_ = subst _ _ _) => simpl_subst_goal : simpl_subst_goal.",
            "VernacHints",
            "68b87906caf9ce146272ec73c2cce9ce82a1fe55"
        ],
        [
            "Ltac simpl_subst_all := repeat rewrite @expand_subst in *; simpl (@traverse _ _ _) in *; repeat simpl_subst; repeat subst_idx_all; simpl var in *.",
            "VernacExtend",
            "380672bdd09396c6671022d5bb9099faca970ec4"
        ],
        [
            "Ltac simpl_subst_in h := repeat rewrite @expand_subst in h; simpl (@traverse _ _ _) in h; repeat simpl_subst; repeat subst_idx_in h; simpl var in h.",
            "VernacExtend",
            "60da2302d0631f5e58720a34ef4a85bd875b5581"
        ],
        [
            "Instance SubstVar_Traverse: forall `{Var V, Traverse V V}, TraverseIdentifiesVar -> TraverseVarIsIdentity -> SubstVar.",
            "VernacInstance",
            "ffc59b029b50f8d5ca65f9022d63e70fa3b7b092"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "rewrite lift_zero.",
            "VernacExtend",
            "f586a9a519d764d01c37bded867939c81dbce462"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance SubstLift_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseFunctorial V _ T _ -> @TraverseIdentifiesVar V _ _ -> @TraverseVarIsIdentity V _ T _ -> @SubstLift T _ V _.",
            "VernacInstance",
            "1145ba0ac9570487ccb2e97bfe99b250ffdb2cf5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "rewrite traverse_functorial.",
            "VernacExtend",
            "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
        ],
        [
            "eapply traverse_var_is_identity.",
            "VernacExtend",
            "0e661e660c006ac24de2a35c59a46c82410eb47a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftSubst1_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseRelative V V _ -> @TraverseRelative V T _ -> @TraverseFunctorial V _ V _ -> @TraverseFunctorial V _ T _ -> @TraverseIdentifiesVar V _ _ -> @LiftSubst1 V _ T _ _.",
            "VernacInstance",
            "7ab3b6eec4c94717f4832a3a55c31d26d7457620"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lift at 1 3.",
            "VernacExtend",
            "6f73e9a96ec4d28b68f3198af44bda548fffb005"
        ],
        [
            "unfold Lift_Traverse.",
            "VernacExtend",
            "76459b40312ed4f2ee3980d1b0dfcb015430c5b6"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "do 2 rewrite traverse_functorial.",
            "VernacExtend",
            "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
        ],
        [
            "eapply (traverse_extensional _).",
            "VernacExtend",
            "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "recognize_lift.",
            "VernacExtend",
            "4eb65ffcd8bfd14ae0945d782155a26e8290fc39"
        ],
        [
            "rewrite lift_lift by omega.",
            "VernacExtend",
            "151ba5438f702b0f64cd48040cc1c2950b2a5949"
        ],
        [
            "replace (l + (w + s)) with (w + (l + s)) by omega.",
            "VernacExtend",
            "4083cacfb41bba62be42e784f5f112d78c3eec20"
        ],
        [
            "unfold lift at 5, Lift_idx.",
            "VernacExtend",
            "eec5f5c01c480ab60921fc65cb98781edecc09ea"
        ],
        [
            "unfold subst_idx.",
            "VernacExtend",
            "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
        ],
        [
            "dblib_by_cases; try rewrite lift_var; just_do_it.",
            "VernacExtend",
            "5b6777cb83ad88c3ab1a428b2a148f8b7a585cb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftSubst2_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseRelative V V _ -> @TraverseRelative V T _ -> @TraverseFunctorial V _ V _ -> @TraverseFunctorial V _ T _ -> @TraverseIdentifiesVar V _ _ -> @LiftSubst2 V _ T _ _.",
            "VernacInstance",
            "597e43cbef5f80e4c3b8c417a078edf0e9be3379"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lift at 1 3.",
            "VernacExtend",
            "6f73e9a96ec4d28b68f3198af44bda548fffb005"
        ],
        [
            "unfold Lift_Traverse.",
            "VernacExtend",
            "76459b40312ed4f2ee3980d1b0dfcb015430c5b6"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "do 2 rewrite traverse_functorial.",
            "VernacExtend",
            "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
        ],
        [
            "eapply (traverse_extensional _).",
            "VernacExtend",
            "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "recognize_lift.",
            "VernacExtend",
            "4eb65ffcd8bfd14ae0945d782155a26e8290fc39"
        ],
        [
            "rewrite lift_lift by omega.",
            "VernacExtend",
            "151ba5438f702b0f64cd48040cc1c2950b2a5949"
        ],
        [
            "replace (l + (1 + k)) with (1 + (l + k)) by omega.",
            "VernacExtend",
            "a2196cec288c3c5c2972fc2fe9d34c27f203859d"
        ],
        [
            "unfold lift at 5, Lift_idx.",
            "VernacExtend",
            "eec5f5c01c480ab60921fc65cb98781edecc09ea"
        ],
        [
            "unfold subst_idx.",
            "VernacExtend",
            "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
        ],
        [
            "dblib_by_cases; try rewrite lift_var; just_do_it.",
            "VernacExtend",
            "5b6777cb83ad88c3ab1a428b2a148f8b7a585cb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance LiftSubst_LiftSubst12 `{Lift V, Lift T, Subst V T} : LiftSubst1 -> LiftSubst2 -> LiftSubst.",
            "VernacInstance",
            "41bac1bd80a66bd8582bf307abc84d35509a2e27"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_gt_dec s k); do 2 lift_idx.",
            "VernacExtend",
            "125ae393a2458e0c3367d7d1680dcff9bd120661"
        ],
        [
            "eapply lift_subst_2.",
            "VernacExtend",
            "4aa8429b5cafd9c5e09e8000a833acd8a7796124"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "eapply lift_subst_1.",
            "VernacExtend",
            "26fefd4f36bd9c35f10856ecf6dfe047eb23f0ca"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance SubstSubst_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseRelative V V _ -> @TraverseRelative V T _ -> @TraverseIdentifiesVar V _ _ -> @TraverseVarIsIdentity V _ V _ -> @TraverseFunctorial V _ V _ -> @TraverseFunctorial V _ T _ -> @SubstSubst V _ _ T _.",
            "VernacInstance",
            "d14b86888288b1b1d5e39595fd4983bfed24a60e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold subst at 1 2 3 5.",
            "VernacExtend",
            "e074e331611e7de2a4b31d8f8c4096cba2110cbc"
        ],
        [
            "unfold Subst_Traverse.",
            "VernacExtend",
            "72346e79957ddd762e34276f3e50114aa9902202"
        ],
        [
            "do 2 rewrite traverse_functorial.",
            "VernacExtend",
            "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
        ],
        [
            "eapply (traverse_extensional _).",
            "VernacExtend",
            "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 recognize_subst.",
            "VernacExtend",
            "301d0c898d9be3723ea49e103e64925357925e77"
        ],
        [
            "rewrite lift_subst_1 by omega.",
            "VernacExtend",
            "cb9dd41e28dc9848067de0b3c59f4d8911647777"
        ],
        [
            "unfold subst_idx; dblib_by_cases; repeat rewrite subst_var; try solve [ just_do_it ].",
            "VernacExtend",
            "e2eb5334dab23caa603c076228b2e80d83e80b8e"
        ],
        [
            "subst_idx.",
            "VernacExtend",
            "9d319275ebdedc3bcae9b3d1f02357dcf5edff4a"
        ],
        [
            "rewrite lift_lift by omega.",
            "VernacExtend",
            "151ba5438f702b0f64cd48040cc1c2950b2a5949"
        ],
        [
            "rewrite subst_lift.",
            "VernacExtend",
            "18fb57c3fd26335a2cec23f8f445421e3ecf9fdb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Pun1_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseFunctorial V _ T _ -> @TraverseVarIsIdentity V _ T _ -> @TraverseIdentifiesVar V _ _ -> @Pun1 V _ T _ _.",
            "VernacInstance",
            "b1baa139eb617f4c20f376ec285e299fd2c3ab36"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "rewrite traverse_functorial.",
            "VernacExtend",
            "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
        ],
        [
            "rewrite traverse_var_is_identity.",
            "VernacExtend",
            "c82085163af68a5115414c387dff1524111248fb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "rewrite lift_var.",
            "VernacExtend",
            "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Pun2_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseFunctorial V _ T _ -> @TraverseVarIsIdentity V _ T _ -> @TraverseIdentifiesVar V _ _ -> @Pun2 V _ T _ _.",
            "VernacInstance",
            "092f618d4ee1e93dc2553c6bf6a1f12b92b4dd7a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "rewrite traverse_functorial.",
            "VernacExtend",
            "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
        ],
        [
            "rewrite traverse_var_is_identity.",
            "VernacExtend",
            "c82085163af68a5115414c387dff1524111248fb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "rewrite lift_var.",
            "VernacExtend",
            "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance PunPun_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseRelative V T _ -> @TraverseFunctorial V _ T _ -> @TraverseIdentifiesVar V _ _ -> @PunPun V _ T _ _.",
            "VernacInstance",
            "8a0b19420e3dfbc9f40d472d07df1386164227c7"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lift, Lift_Traverse.",
            "VernacExtend",
            "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
        ],
        [
            "unfold subst, Subst_Traverse.",
            "VernacExtend",
            "33296c370540820fdff342da86e8ed71c63523f2"
        ],
        [
            "do 2 rewrite traverse_functorial.",
            "VernacExtend",
            "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
        ],
        [
            "eapply (traverse_extensional _).",
            "VernacExtend",
            "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite traverse_identifies_var.",
            "VernacExtend",
            "a7317b8c6af816b5487251dea4c158342a7ebe92"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_increment: forall `{Lift T}, LiftLift -> forall k t, closed k t -> closed (1 + k) t.",
            "VernacStartTheoremProof",
            "b3176ace43d0f722ada4e76ebcb83b861d39141b"
        ],
        [
            "unfold closed.",
            "VernacExtend",
            "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "match goal with h: shift _ _ = _ |- _ => rewrite <- h at 1 end.",
            "VernacExtend",
            "f5d817f3ff6c02f4fc7a2ecceda4e94e5662cd32"
        ],
        [
            "rewrite <- lift_lift by omega.",
            "VernacExtend",
            "f852e0b9de4aaeec1c2f1d291468e568e553a738"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_monotonic: forall `{Lift T}, LiftLift -> forall k t, closed k t -> forall j, j >= k -> closed j t.",
            "VernacStartTheoremProof",
            "e00dc3cf6f7d499bc4bc730b47899d836524be09"
        ],
        [
            "do 6 intro.",
            "VernacExtend",
            "9f08c22b2e1d126384a164f4a91a47cb451277a1"
        ],
        [
            "assert (forall i, closed (i + k) t).",
            "VernacExtend",
            "cc8499e9ad236159d3c45f477517a5e0aec18f3a"
        ],
        [
            "induction i.",
            "VernacExtend",
            "a4834855d86003ed2e97d85431b1370d80e0ee2c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "replace (S i + k) with (1 + (i + k)) by omega.",
            "VernacExtend",
            "e922ad6aa0f5f6c89ad598236170d0136c20e9d3"
        ],
        [
            "eauto using closed_increment with typeclass_instances.",
            "VernacExtend",
            "1f436971960f43c95278e436b2b40180689955b7"
        ],
        [
            "intros j ?.",
            "VernacExtend",
            "d385f78343bd4a387b797c1eb2737eb3e23934bb"
        ],
        [
            "replace j with ((j - k) + k) by omega.",
            "VernacExtend",
            "1b62bce63b34776007b782eb086d342518d385af"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_lift_invariant: forall `{Lift T}, forall { _ : LiftZero }, forall { _ : LiftLift }, forall { _ : LiftLiftFuse }, forall k t, closed k t -> forall j, j >= k -> forall w, lift w j t = t.",
            "VernacStartTheoremProof",
            "2b325d14423a9d22604d38dd8e2468440c4e3a4f"
        ],
        [
            "induction w.",
            "VernacExtend",
            "00a39f78c1958c5075f30e53ba2c016aabba0f9e"
        ],
        [
            "eauto using lift_zero.",
            "VernacExtend",
            "76b64ad7589cefefaa6d05509cdb54ad19d73d65"
        ],
        [
            "change (S w) with (1 + w).",
            "VernacExtend",
            "edb4dda9608ca2c9731b9edac731fe73a475b4b7"
        ],
        [
            "erewrite <- lift_lift_fuse by (instantiate (1 := j); omega).",
            "VernacExtend",
            "66bb12a3d52d981671b5ee179c4551d40ec08678"
        ],
        [
            "rewrite IHw.",
            "VernacExtend",
            "060dd5dc09b7057c52f5a15ec1b5def530bd4ff9"
        ],
        [
            "eapply closed_monotonic; eauto.",
            "VernacExtend",
            "e98b2cce3e4ea2ed3b29e2eacc56d1b44aca8e63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_subst_invariant: forall `{Lift T, Subst V T}, forall { _ : LiftLift}, forall { _ : SubstLift}, forall k t, closed k t -> forall j, j >= k -> forall v, subst v j t = t.",
            "VernacStartTheoremProof",
            "807788e862cdf4e55c8414778b8d2a1708fd12e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (h: shift j t = t).",
            "VernacExtend",
            "b61cacf9e9ac65440fd33dbcec74b6955dc60c9d"
        ],
        [
            "eapply closed_monotonic; eauto.",
            "VernacExtend",
            "e98b2cce3e4ea2ed3b29e2eacc56d1b44aca8e63"
        ],
        [
            "rewrite <- h at 1.",
            "VernacExtend",
            "996c9c2e276223baae4e31240793ab32e2e926f0"
        ],
        [
            "eapply subst_lift.",
            "VernacExtend",
            "bc598722d8eebf3366d1166d8bbb843c16b22a6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closed_var: forall k x : nat, x >= k -> closed k x -> False.",
            "VernacStartTheoremProof",
            "8d31be3e8027c5e0a0f1ec9cdbad908628c29f12"
        ],
        [
            "unfold closed.",
            "VernacExtend",
            "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_preserves_closed: forall `{Lift T}, @LiftLift T _ -> forall k (t : T), closed k t -> closed (S k) (shift 0 t).",
            "VernacStartTheoremProof",
            "80f70eacf96f7f6a0e5a8fa30132025b636603da"
        ],
        [
            "unfold closed.",
            "VernacExtend",
            "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (S k) with (1 + k).",
            "VernacExtend",
            "fb4bcd59b1b251bdcd3a9e4603069f72fd01484f"
        ],
        [
            "rewrite <- lift_lift by omega.",
            "VernacExtend",
            "f852e0b9de4aaeec1c2f1d291468e568e553a738"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_preserves_closed: forall `{Lift V, Lift T, Subst V T}, @LiftSubst2 V _ T _ _ -> forall k (v : V) (t : T), closed k v -> closed (S k) t -> closed k (subst v 0 t).",
            "VernacStartTheoremProof",
            "4eeffec0dde9e0114757d65d85eeb61e65c75c6c"
        ],
        [
            "unfold closed.",
            "VernacExtend",
            "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite lift_subst_2 by omega.",
            "VernacExtend",
            "0fb09b28de8088b6163822a9664297fbd919e29b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "change (1 + k) with (S k).",
            "VernacExtend",
            "7503e68ce4b730fe51c64091d60e153a2b8c3bb2"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_closed: forall `{Lift T}, forall k t, shift k t = t -> closed k t.",
            "VernacStartTheoremProof",
            "1a86e30d0004dbcaf46f63c12b1dd6495d93d722"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac fold_closed_hyps := repeat match goal with h: shift _ ?t = ?t |- _ => generalize (fold_closed _ h); clear h; intro h end.",
            "VernacExtend",
            "c6c6be5c57921bcc44c45b62af2896b43ed2034d"
        ],
        [
            "Ltac inversion_closed_in_internal h := unfold closed in h; rewrite expand_lift in h; simpl (@traverse _ _ _) in h; simpl_lift; try (injection h; clear h; intros).",
            "VernacExtend",
            "5fb0ff827c27bc7c1234ce849f9c5c09048d9177"
        ],
        [
            "Ltac inversion_closed_in h := inversion_closed_in_internal h; fold_closed_hyps.",
            "VernacExtend",
            "35fae842a569f29af0ad73c71505574abb1f5ffc"
        ],
        [
            "Ltac inversion_closed := repeat match goal with h: closed _ _ |- _ => inversion_closed_in_internal h end; fold_closed_hyps.",
            "VernacExtend",
            "696811e70faae22bb6d79885d67fe4e512763539"
        ],
        [
            "Hint Extern 1 => f_equal : construction_closed.",
            "VernacHints",
            "c8473ccec110ce7dcb9e67ee381323ce3a11a77f"
        ],
        [
            "Ltac construction_closed := solve [ unfold closed in *; simpl_lift_goal; try (simpl; lift_idx); eauto with omega construction_closed ].",
            "VernacExtend",
            "367e37b3fc133b22b0533639bb11c66d0533779e"
        ],
        [
            "Hint Extern 1 (shift ?x ?v = ?v) => solve [ eapply closed_monotonic; [ eauto with typeclass_instances | construction_closed | omega ] ] : shift_closed.",
            "VernacHints",
            "668f2557de33a1356f4631267c1a119309e04f89"
        ],
        [
            "Ltac shift_closed := match goal with h: closed ?x ?v |- context[shift ?x ?v] => replace (shift x v) with v end.",
            "VernacExtend",
            "a11388f41e05fe2cf60759e229e0e2f8ec2ef7e5"
        ],
        [
            "Hint Extern 1 (subst ?w ?x ?v = ?v) => solve [ eapply closed_subst_invariant; [ eauto with typeclass_instances | eauto with typeclass_instances | construction_closed | omega ] ] : subst_closed.",
            "VernacHints",
            "17a1e54002984d50f4444f05886fad1d096d2544"
        ],
        [
            "Lemma rotate_characterization: forall n k, (k = 0 -> rotate n k = n) /\\ (k > 0 -> k <= n -> rotate n k = k - 1) /\\ (k > n -> rotate n k = k).",
            "VernacStartTheoremProof",
            "f15e13e44c2e1d91e9a58a9d43fb61b3a52c326d"
        ],
        [
            "intros; repeat split; intros; unfold rotate; just_do_it.",
            "VernacExtend",
            "70bef96854cef8b2608b635d6dfc5cf930ff0790"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Rotate1SelfInverse_Algebraic: forall `{Var V, Lift V, Lift T, Subst V V, Subst V T}, @LiftVar V _ _ -> @SubstVar V _ _ -> @LiftLift T _ -> @LiftSubst2 V _ T _ _ -> @SubstSubst V _ _ T _ -> @Pun2 V _ T _ _ -> @Rotate1SelfInverse V _ T _ _.",
            "VernacInstance",
            "a7d8ddc7c1957dec8f9a6d09bfa28117a32a00bb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold rotate.",
            "VernacExtend",
            "6fa05813bebed0c3d730fa04e54d569dc11d521c"
        ],
        [
            "rewrite lift_subst_2 by omega.",
            "VernacExtend",
            "0fb09b28de8088b6163822a9664297fbd919e29b"
        ],
        [
            "rewrite <- lift_lift by omega.",
            "VernacExtend",
            "f852e0b9de4aaeec1c2f1d291468e568e553a738"
        ],
        [
            "rewrite lift_var.",
            "VernacExtend",
            "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite subst_subst by omega.",
            "VernacExtend",
            "1a1de5d9ed98960affbe01ca477c70a14064b056"
        ],
        [
            "rewrite subst_var.",
            "VernacExtend",
            "1e5929dc04cd56c22b3e673ab20a791da52b5334"
        ],
        [
            "rewrite lift_var.",
            "VernacExtend",
            "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
        ],
        [
            "subst_idx.",
            "VernacExtend",
            "9d319275ebdedc3bcae9b3d1f02357dcf5edff4a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (@var V _ 2) with (shift 1 (@var V _ 1)) by (rewrite lift_var; auto).",
            "VernacExtend",
            "40d968aa0dd1e19e0ff793bca3f7a2a904001d0a"
        ],
        [
            "rewrite <- lift_subst_2 by omega.",
            "VernacExtend",
            "dd460bb9e4ff28af5f7c47a51730ca84635b6333"
        ],
        [
            "rewrite pun_2.",
            "VernacExtend",
            "0c9d1f20d35f145ec48c398f7df73644864724b2"
        ],
        [
            "rewrite pun_2.",
            "VernacExtend",
            "0c9d1f20d35f145ec48c398f7df73644864724b2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Rotate1SelfInverse_Traverse: forall `{Var V, Traverse V V, Traverse V T}, @TraverseVarIsIdentity V _ T _ -> @TraverseIdentifiesVar V _ _ -> @TraverseFunctorial V _ T _ -> @Rotate1SelfInverse V _ T _ _.",
            "VernacInstance",
            "0cae8f2555b7e6b30708be9f2407770b89454d50"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold rotate, subst, lift, Subst_Traverse, Lift_Traverse.",
            "VernacExtend",
            "80576a01cf8d71e1146c715ef2ad8a2df17bba42"
        ],
        [
            "do 3 rewrite traverse_functorial.",
            "VernacExtend",
            "4dafedd09b278242a6b1694650bd376baf956df4"
        ],
        [
            "apply traverse_var_is_identity.",
            "VernacExtend",
            "5e706d099c392d6470e47da9a5c4557bb9c7bd18"
        ],
        [
            "intros l x.",
            "VernacExtend",
            "7d4a33b8d496ba7739c79d8328b33be906ea1379"
        ],
        [
            "rewrite traverse_identifies_var.",
            "VernacExtend",
            "16936634a00abe67208e856e0d17a8d90bf36152"
        ],
        [
            "rewrite lift_var.",
            "VernacExtend",
            "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
        ],
        [
            "rewrite subst_idx_var.",
            "VernacExtend",
            "5fc4f2db8e2a375ff834d04f42c22673e03dcd38"
        ],
        [
            "do 2 rewrite traverse_identifies_var.",
            "VernacExtend",
            "a7317b8c6af816b5487251dea4c158342a7ebe92"
        ],
        [
            "rewrite lift_var.",
            "VernacExtend",
            "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
        ],
        [
            "rewrite subst_idx_var.",
            "VernacExtend",
            "5fc4f2db8e2a375ff834d04f42c22673e03dcd38"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac prove_traverse_identifies_var := reflexivity.",
            "VernacExtend",
            "65ed4bff2591ce666ccbcec8a1a49e8daaa8b5c1"
        ],
        [
            "Ltac prove_traverse_var_injective := let t2 := fresh \"t2\" in intros ? ? t1; induction t1; intro t2; destruct t2; simpl; intros ? h; inversion h; f_equal; eauto using @traverse_var_injective with typeclass_instances.",
            "VernacExtend",
            "93da7ee1d9cac1fee90699db5bfa3676e632a09e"
        ],
        [
            "Ltac prove_traverse_functorial := intros ? ? t; induction t; intros; simpl (@traverse _ _ _) at 1 2 3; match goal with |- ?_traverse _ _ (?_traverse _ _ _) = ?_traverse _ _ _ => unfold _traverse; fold _traverse end; f_equal; eauto using @traverse_functorial with typeclass_instances.",
            "VernacExtend",
            "4f8987a3fc3a72a4627a407c132624d21ed39bde"
        ],
        [
            "Ltac prove_traverse_relative := intros ? ? ? t; induction t; intros; subst; simpl (@traverse _ _ _); match goal with |- ?_traverse _ _ _ = ?_traverse _ _ _ => unfold _traverse; fold _traverse end; eauto using @traverse_relative with f_equal omega typeclass_instances.",
            "VernacExtend",
            "638f9fc8accb257f7ac445c800b86cb396ccdd0c"
        ],
        [
            "Ltac prove_traverse_var_is_identity := intros ? ? t; induction t; intros; simpl (@traverse _ _ _); match goal with |- ?_traverse _ _ _ = _ => unfold _traverse; fold _traverse end; f_equal; eauto using @traverse_var_is_identity with typeclass_instances.",
            "VernacExtend",
            "0e2e09922f13839c67e6b25162399f06e4464e4b"
        ],
        [
            "Ltac lift_lift_hint := first [ rewrite lift_lift by omega; reflexivity | rewrite <- lift_lift by omega; reflexivity | rewrite lift_lift by omega | rewrite <- lift_lift by omega ].",
            "VernacExtend",
            "eb161932cb51b12318183f28ef8b892ce57e85bd"
        ],
        [
            "Hint Extern 1 (_ = lift _ _ (lift _ _ _)) => lift_lift_hint : lift_lift.",
            "VernacHints",
            "0be1279c90210a5493508c25185318dd22bf62e4"
        ],
        [
            "Hint Extern 1 (lift _ _ (lift _ _ _) = _) => lift_lift_hint : lift_lift.",
            "VernacHints",
            "49257bcb6a8beb55e11b0a36da7b5625350375f3"
        ],
        [
            "Ltac subst_lift_hint := first [ rewrite subst_lift; reflexivity | rewrite subst_lift ].",
            "VernacExtend",
            "ca8228972ab5edc9b643f234a2d22dfabf3ad87d"
        ],
        [
            "Hint Extern 1 (subst _ _ (lift _ _ _) = _) => subst_lift_hint : subst_lift.",
            "VernacHints",
            "5d4b2ec207a9046ff85938bfafce521ba6bbe473"
        ],
        [
            "Hint Extern 1 (_ = subst _ _ (lift _ _ _)) => subst_lift_hint : subst_lift.",
            "VernacHints",
            "7e4ae1b15b3f480027da2c1269c59a87e1bd3352"
        ],
        [
            "Hint Extern 1 (subst _ _ _ = _) => subst_lift_hint : subst_lift.",
            "VernacHints",
            "849c070d7e1f7e7a018289c6bd6931902c9a765d"
        ],
        [
            "Hint Extern 1 (_ = subst _ _ _) => subst_lift_hint : subst_lift.",
            "VernacHints",
            "d94f3680f03bcd0c57e943811f0adbeb6ff5590e"
        ],
        [
            "Ltac lift_subst_hint := first [ rewrite lift_subst_1 by omega; reflexivity | rewrite lift_subst_2 by omega; reflexivity | rewrite <- lift_subst_1 by omega; reflexivity | rewrite <- lift_subst_2 by omega; reflexivity | rewrite lift_subst_1 by omega | rewrite lift_subst_2 by omega | rewrite <- lift_subst_1 by omega | rewrite <- lift_subst_2 by omega ].",
            "VernacExtend",
            "2341a1fa2ab74484f5c56aa7fd52eda8e338c5d3"
        ],
        [
            "Hint Extern 1 (_ = lift _ _ (subst _ _ _)) => lift_subst_hint : lift_subst.",
            "VernacHints",
            "b5b8edc0398877cf3c041a47015f8726b870dc65"
        ],
        [
            "Hint Extern 1 (lift _ _ (subst _ _ _) = _) => lift_subst_hint : lift_subst.",
            "VernacHints",
            "b9aa0f6a57b14e07133620438da8b87a3bf12800"
        ],
        [
            "Hint Extern 1 (_ = lift _ _ (lift _ _ (subst _ _ _))) => do 2 lift_subst_hint : lift_subst.",
            "VernacHints",
            "cfe6b4c3cb7a02cdf35fee72108f791af6b28492"
        ],
        [
            "Hint Extern 1 (lift _ _ (lift _ _ (subst _ _ _)) = _) => do 2 lift_subst_hint : lift_subst.",
            "VernacHints",
            "5ede394487020bfa5d3665a78a501a29a34ee741"
        ],
        [
            "Hint Extern 1 (lift _ _ _ = subst (lift _ _ _) _ (lift _ _ _)) => lift_subst_hint : lift_subst.",
            "VernacHints",
            "8fc633ecf3ac2b621cb40f6930226db829b2d5ac"
        ],
        [
            "Ltac subst_subst_hint := first [ rewrite subst_subst by omega; reflexivity | rewrite <- subst_subst by omega; reflexivity | rewrite subst_subst by omega | rewrite <- subst_subst by omega ].",
            "VernacExtend",
            "4f70913d6ade388e6a3c9603ed372597188bb8ef"
        ],
        [
            "Hint Extern 1 (_ = subst _ _ (subst _ _ _)) => subst_subst_hint : subst_subst.",
            "VernacHints",
            "c6d634fe1d7167dfe93ccfaf3f78436cef8a4a85"
        ],
        [
            "Hint Extern 1 (subst _ _ (subst _ _ _) = _) => subst_subst_hint : subst_subst.",
            "VernacHints",
            "2be00c99a96584cb5f0b435762bee474a9fe148e"
        ],
        [
            "Ltac lift_lift_fuse_hint := rewrite lift_lift_fuse by omega.",
            "VernacExtend",
            "0204fb50ed69c7f03b632fae29127c4d7192dc4a"
        ],
        [
            "Hint Extern 1 (lift _ _ (lift _ _ _) = _) => lift_lift_fuse_hint : lift_lift_fuse.",
            "VernacHints",
            "d64ae3258ae0812bed9a80caf2247f66921db396"
        ],
        [
            "Hint Extern 1 (_ = lift _ _ (lift _ _ _)) => lift_lift_fuse_hint : lift_lift_fuse.",
            "VernacHints",
            "49a8cb1d2e1beb8d0715edb98bc1326d4888e02d"
        ],
        [
            "Lemma translate_lift: forall w x y z, lift w x y = z -> forall k, lift w (k + x) (k + y) = k + z.",
            "VernacStartTheoremProof",
            "6ecd235b0c2ee2b07b3a1ac131a0507e951748d9"
        ],
        [
            "just_do_it.",
            "VernacExtend",
            "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_one_lift_zero: forall `{LiftLiftFuse T} t, shift 1 (shift 0 t) = shift 0 (shift 0 t).",
            "VernacStartTheoremProof",
            "228d335f07b103c2811bb7248c5884943f4d2de7"
        ],
        [
            "eauto with lift_lift_fuse.",
            "VernacExtend",
            "2ac6ae3340822984d3d0b1afb3b736192e677a72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_lift_fuse_successor: forall `{LiftLiftFuse T} t s wk, lift wk s (shift s t) = lift (S wk) s t.",
            "VernacStartTheoremProof",
            "7a93e43c2f6f3563bef90ed96ba7b283eeeb48f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (S wk) with (wk + 1) by omega.",
            "VernacExtend",
            "2d48e454328c7804b5136ba57d9aa9378a2d461e"
        ],
        [
            "eapply lift_lift_fuse.",
            "VernacExtend",
            "a3fdaabcb1bcb148e0d5041cf5a2519d53ead446"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Extern 1 (lift ?wk _ _ = lift (S ?wk) _ _) => eapply lift_lift_fuse_successor : lift_lift_fuse_successor.",
            "VernacHints",
            "1f655c2171798a6f46b8bd3b13d598d2534209c3"
        ],
        [
            "Ltac iterated_lift := first [ rewrite lift_zero | rewrite <- lift_lift_fuse_successor ].",
            "VernacExtend",
            "1a2609ba5a605f12a9468085a0e9d1c0de8d2fd4"
        ],
        [
            "Lemma subst_lift_generalized: forall `{Lift T, Subst V T}, forall { _ : LiftLift }, forall { _ : LiftLiftFuse }, forall { _ : SubstLift }, forall n v t, subst v n (lift (S n) 0 t) = lift n 0 t.",
            "VernacStartTheoremProof",
            "3f65d89f3495506b4ba4ecee721fc27a7af543d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- lift_lift_fuse_successor.",
            "VernacExtend",
            "88fa527ac943f43a6c69e4c204a666a88a424476"
        ],
        [
            "rewrite lift_lift by omega.",
            "VernacExtend",
            "151ba5438f702b0f64cd48040cc1c2950b2a5949"
        ],
        [
            "rewrite plus_0_r.",
            "VernacExtend",
            "d05263a401ad993feef5d443fed22d6f6d6bec5a"
        ],
        [
            "apply subst_lift.",
            "VernacExtend",
            "d56fb5cb205a27a06776afda8083fa4c8cc22253"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Opaque lift.",
            "VernacSetOpacity",
            "d20c10fe215a4da603dac9b55ccf3ff833eef76e"
        ],
        [
            "Global Opaque subst.",
            "VernacSetOpacity",
            "cabc0b96889e844397707b0d97c62b1bf0f71eed"
        ]
    ],
    "proofs": [
        {
            "name": "lift_lift_reversed",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace k with (ws + (k - ws)) by omega.",
                        "VernacExtend",
                        "99ebf38f9fd0348e840557fb1327947caf209a7e"
                    ]
                },
                {
                    "command": [
                        "erewrite <- lift_lift by omega.",
                        "VernacExtend",
                        "cc96a8da1125c65d270fb0f224b74fcee7cf56ab"
                    ]
                },
                {
                    "command": [
                        "replace (ws + (k - ws) - ws) with (k - ws) by omega.",
                        "VernacExtend",
                        "003b0ff1e9a64f96fe916fe955705b92bc6992f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "traverse_extensional",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply traverse_relative with (p := 0).",
                        "VernacExtend",
                        "897b9e22b478e06b78e7602a6dd9d4d054e96079"
                    ]
                },
                {
                    "command": [
                        "intros m ?.",
                        "VernacExtend",
                        "85b221177f21991743fbf77c6d3c83a38cf3fe96"
                    ]
                },
                {
                    "command": [
                        "replace (m + 0) with m by omega.",
                        "VernacExtend",
                        "8815e13f57e5e7592e061267eec43f06ef1c2dad"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "traverse_traverse_var",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_functorial.",
                        "VernacExtend",
                        "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
                    ]
                },
                {
                    "command": [
                        "eapply (traverse_extensional _).",
                        "VernacExtend",
                        "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
                    ]
                },
                {
                    "command": [
                        "eauto using traverse_identifies_var.",
                        "VernacExtend",
                        "9c498171a1f3a1872e73fa36344de90842d521bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_idx_recent",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_idx_old",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftVar_idx",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftZero_idx",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftInjective_idx",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftLift_idx",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftLiftFuse_idx",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_idx_miss_1",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_idx_identity",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_idx_miss_2",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_idx_var",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expand_lift",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "recognize_lift",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "eapply traverse_relative; [ | instantiate (1 := k1); omega ].",
                        "VernacExtend",
                        "1526846d61795ece104dae8b1c9cc96520ab0d94"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftVar_Traverse",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftZero_Traverse",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_var_is_identity.",
                        "VernacExtend",
                        "c82085163af68a5115414c387dff1524111248fb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_zero.",
                        "VernacExtend",
                        "f586a9a519d764d01c37bded867939c81dbce462"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftLift_Traverse",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (traverse_traverse_var _ _ _).",
                        "VernacExtend",
                        "01ce8401773dca785a6bc087426023f3a0996a48"
                    ]
                },
                {
                    "command": [
                        "rewrite (traverse_traverse_var _ _ _).",
                        "VernacExtend",
                        "01ce8401773dca785a6bc087426023f3a0996a48"
                    ]
                },
                {
                    "command": [
                        "eapply (traverse_extensional _).",
                        "VernacExtend",
                        "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_lift by omega.",
                        "VernacExtend",
                        "151ba5438f702b0f64cd48040cc1c2950b2a5949"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftLiftFuse_Traverse",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (traverse_traverse_var _ _ _).",
                        "VernacExtend",
                        "01ce8401773dca785a6bc087426023f3a0996a48"
                    ]
                },
                {
                    "command": [
                        "eapply (traverse_extensional _).",
                        "VernacExtend",
                        "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_lift_fuse by omega.",
                        "VernacExtend",
                        "aa93902f79dfb7d94ed4d4faff49ee5ab8345ca0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expand_subst",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "recognize_subst",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "eapply traverse_relative; [ | instantiate (1 := k1); omega ].",
                        "VernacExtend",
                        "1526846d61795ece104dae8b1c9cc96520ab0d94"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_lift_fuse by omega.",
                        "VernacExtend",
                        "aa93902f79dfb7d94ed4d4faff49ee5ab8345ca0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SubstVar_Traverse",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_zero.",
                        "VernacExtend",
                        "f586a9a519d764d01c37bded867939c81dbce462"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SubstLift_Traverse",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_functorial.",
                        "VernacExtend",
                        "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
                    ]
                },
                {
                    "command": [
                        "eapply traverse_var_is_identity.",
                        "VernacExtend",
                        "0e661e660c006ac24de2a35c59a46c82410eb47a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftSubst1_Traverse",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lift at 1 3.",
                        "VernacExtend",
                        "6f73e9a96ec4d28b68f3198af44bda548fffb005"
                    ]
                },
                {
                    "command": [
                        "unfold Lift_Traverse.",
                        "VernacExtend",
                        "76459b40312ed4f2ee3980d1b0dfcb015430c5b6"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite traverse_functorial.",
                        "VernacExtend",
                        "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
                    ]
                },
                {
                    "command": [
                        "eapply (traverse_extensional _).",
                        "VernacExtend",
                        "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "recognize_lift.",
                        "VernacExtend",
                        "4eb65ffcd8bfd14ae0945d782155a26e8290fc39"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_lift by omega.",
                        "VernacExtend",
                        "151ba5438f702b0f64cd48040cc1c2950b2a5949"
                    ]
                },
                {
                    "command": [
                        "replace (l + (w + s)) with (w + (l + s)) by omega.",
                        "VernacExtend",
                        "4083cacfb41bba62be42e784f5f112d78c3eec20"
                    ]
                },
                {
                    "command": [
                        "unfold lift at 5, Lift_idx.",
                        "VernacExtend",
                        "eec5f5c01c480ab60921fc65cb98781edecc09ea"
                    ]
                },
                {
                    "command": [
                        "unfold subst_idx.",
                        "VernacExtend",
                        "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
                    ]
                },
                {
                    "command": [
                        "dblib_by_cases; try rewrite lift_var; just_do_it.",
                        "VernacExtend",
                        "5b6777cb83ad88c3ab1a428b2a148f8b7a585cb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftSubst2_Traverse",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lift at 1 3.",
                        "VernacExtend",
                        "6f73e9a96ec4d28b68f3198af44bda548fffb005"
                    ]
                },
                {
                    "command": [
                        "unfold Lift_Traverse.",
                        "VernacExtend",
                        "76459b40312ed4f2ee3980d1b0dfcb015430c5b6"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite traverse_functorial.",
                        "VernacExtend",
                        "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
                    ]
                },
                {
                    "command": [
                        "eapply (traverse_extensional _).",
                        "VernacExtend",
                        "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "recognize_lift.",
                        "VernacExtend",
                        "4eb65ffcd8bfd14ae0945d782155a26e8290fc39"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_lift by omega.",
                        "VernacExtend",
                        "151ba5438f702b0f64cd48040cc1c2950b2a5949"
                    ]
                },
                {
                    "command": [
                        "replace (l + (1 + k)) with (1 + (l + k)) by omega.",
                        "VernacExtend",
                        "a2196cec288c3c5c2972fc2fe9d34c27f203859d"
                    ]
                },
                {
                    "command": [
                        "unfold lift at 5, Lift_idx.",
                        "VernacExtend",
                        "eec5f5c01c480ab60921fc65cb98781edecc09ea"
                    ]
                },
                {
                    "command": [
                        "unfold subst_idx.",
                        "VernacExtend",
                        "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
                    ]
                },
                {
                    "command": [
                        "dblib_by_cases; try rewrite lift_var; just_do_it.",
                        "VernacExtend",
                        "5b6777cb83ad88c3ab1a428b2a148f8b7a585cb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LiftSubst_LiftSubst12",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec s k); do 2 lift_idx.",
                        "VernacExtend",
                        "125ae393a2458e0c3367d7d1680dcff9bd120661"
                    ]
                },
                {
                    "command": [
                        "eapply lift_subst_2.",
                        "VernacExtend",
                        "4aa8429b5cafd9c5e09e8000a833acd8a7796124"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "eapply lift_subst_1.",
                        "VernacExtend",
                        "26fefd4f36bd9c35f10856ecf6dfe047eb23f0ca"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SubstSubst_Traverse",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold subst at 1 2 3 5.",
                        "VernacExtend",
                        "e074e331611e7de2a4b31d8f8c4096cba2110cbc"
                    ]
                },
                {
                    "command": [
                        "unfold Subst_Traverse.",
                        "VernacExtend",
                        "72346e79957ddd762e34276f3e50114aa9902202"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite traverse_functorial.",
                        "VernacExtend",
                        "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
                    ]
                },
                {
                    "command": [
                        "eapply (traverse_extensional _).",
                        "VernacExtend",
                        "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 recognize_subst.",
                        "VernacExtend",
                        "301d0c898d9be3723ea49e103e64925357925e77"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_subst_1 by omega.",
                        "VernacExtend",
                        "cb9dd41e28dc9848067de0b3c59f4d8911647777"
                    ]
                },
                {
                    "command": [
                        "unfold subst_idx; dblib_by_cases; repeat rewrite subst_var; try solve [ just_do_it ].",
                        "VernacExtend",
                        "e2eb5334dab23caa603c076228b2e80d83e80b8e"
                    ]
                },
                {
                    "command": [
                        "subst_idx.",
                        "VernacExtend",
                        "9d319275ebdedc3bcae9b3d1f02357dcf5edff4a"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_lift by omega.",
                        "VernacExtend",
                        "151ba5438f702b0f64cd48040cc1c2950b2a5949"
                    ]
                },
                {
                    "command": [
                        "rewrite subst_lift.",
                        "VernacExtend",
                        "18fb57c3fd26335a2cec23f8f445421e3ecf9fdb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pun1_Traverse",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_functorial.",
                        "VernacExtend",
                        "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_var_is_identity.",
                        "VernacExtend",
                        "c82085163af68a5115414c387dff1524111248fb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_var.",
                        "VernacExtend",
                        "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pun2_Traverse",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_functorial.",
                        "VernacExtend",
                        "c8d0f742df8fb7c571c8d5d79a77a2c29746c6e6"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_var_is_identity.",
                        "VernacExtend",
                        "c82085163af68a5115414c387dff1524111248fb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_var.",
                        "VernacExtend",
                        "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PunPun_Traverse",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lift, Lift_Traverse.",
                        "VernacExtend",
                        "f12929a3b91c44cb97ff9e785f2ac61198355d8a"
                    ]
                },
                {
                    "command": [
                        "unfold subst, Subst_Traverse.",
                        "VernacExtend",
                        "33296c370540820fdff342da86e8ed71c63523f2"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite traverse_functorial.",
                        "VernacExtend",
                        "cf7a2a5c2c9cc72c68be79797f32cfd9c9fdd083"
                    ]
                },
                {
                    "command": [
                        "eapply (traverse_extensional _).",
                        "VernacExtend",
                        "91dbd50c51a187cc9f8d27d6da00b0fa526930da"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "a7317b8c6af816b5487251dea4c158342a7ebe92"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_increment",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "unfold closed.",
                        "VernacExtend",
                        "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "match goal with h: shift _ _ = _ |- _ => rewrite <- h at 1 end.",
                        "VernacExtend",
                        "f5d817f3ff6c02f4fc7a2ecceda4e94e5662cd32"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lift_lift by omega.",
                        "VernacExtend",
                        "f852e0b9de4aaeec1c2f1d291468e568e553a738"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_monotonic",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "do 6 intro.",
                        "VernacExtend",
                        "9f08c22b2e1d126384a164f4a91a47cb451277a1"
                    ]
                },
                {
                    "command": [
                        "assert (forall i, closed (i + k) t).",
                        "VernacExtend",
                        "cc8499e9ad236159d3c45f477517a5e0aec18f3a"
                    ]
                },
                {
                    "command": [
                        "induction i.",
                        "VernacExtend",
                        "a4834855d86003ed2e97d85431b1370d80e0ee2c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "replace (S i + k) with (1 + (i + k)) by omega.",
                        "VernacExtend",
                        "e922ad6aa0f5f6c89ad598236170d0136c20e9d3"
                    ]
                },
                {
                    "command": [
                        "eauto using closed_increment with typeclass_instances.",
                        "VernacExtend",
                        "1f436971960f43c95278e436b2b40180689955b7"
                    ]
                },
                {
                    "command": [
                        "intros j ?.",
                        "VernacExtend",
                        "d385f78343bd4a387b797c1eb2737eb3e23934bb"
                    ]
                },
                {
                    "command": [
                        "replace j with ((j - k) + k) by omega.",
                        "VernacExtend",
                        "1b62bce63b34776007b782eb086d342518d385af"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_lift_invariant",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "induction w.",
                        "VernacExtend",
                        "00a39f78c1958c5075f30e53ba2c016aabba0f9e"
                    ]
                },
                {
                    "command": [
                        "eauto using lift_zero.",
                        "VernacExtend",
                        "76b64ad7589cefefaa6d05509cdb54ad19d73d65"
                    ]
                },
                {
                    "command": [
                        "change (S w) with (1 + w).",
                        "VernacExtend",
                        "edb4dda9608ca2c9731b9edac731fe73a475b4b7"
                    ]
                },
                {
                    "command": [
                        "erewrite <- lift_lift_fuse by (instantiate (1 := j); omega).",
                        "VernacExtend",
                        "66bb12a3d52d981671b5ee179c4551d40ec08678"
                    ]
                },
                {
                    "command": [
                        "rewrite IHw.",
                        "VernacExtend",
                        "060dd5dc09b7057c52f5a15ec1b5def530bd4ff9"
                    ]
                },
                {
                    "command": [
                        "eapply closed_monotonic; eauto.",
                        "VernacExtend",
                        "e98b2cce3e4ea2ed3b29e2eacc56d1b44aca8e63"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_subst_invariant",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (h: shift j t = t).",
                        "VernacExtend",
                        "b61cacf9e9ac65440fd33dbcec74b6955dc60c9d"
                    ]
                },
                {
                    "command": [
                        "eapply closed_monotonic; eauto.",
                        "VernacExtend",
                        "e98b2cce3e4ea2ed3b29e2eacc56d1b44aca8e63"
                    ]
                },
                {
                    "command": [
                        "rewrite <- h at 1.",
                        "VernacExtend",
                        "996c9c2e276223baae4e31240793ab32e2e926f0"
                    ]
                },
                {
                    "command": [
                        "eapply subst_lift.",
                        "VernacExtend",
                        "bc598722d8eebf3366d1166d8bbb843c16b22a6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closed_var",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "unfold closed.",
                        "VernacExtend",
                        "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_preserves_closed",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "unfold closed.",
                        "VernacExtend",
                        "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (S k) with (1 + k).",
                        "VernacExtend",
                        "fb4bcd59b1b251bdcd3a9e4603069f72fd01484f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lift_lift by omega.",
                        "VernacExtend",
                        "f852e0b9de4aaeec1c2f1d291468e568e553a738"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_preserves_closed",
            "line_nb": 358,
            "steps": [
                {
                    "command": [
                        "unfold closed.",
                        "VernacExtend",
                        "58bd589daf8b93c874470cf8eb5176bc1c1b7c7f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_subst_2 by omega.",
                        "VernacExtend",
                        "0fb09b28de8088b6163822a9664297fbd919e29b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "change (1 + k) with (S k).",
                        "VernacExtend",
                        "7503e68ce4b730fe51c64091d60e153a2b8c3bb2"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_closed",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rotate_characterization",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "intros; repeat split; intros; unfold rotate; just_do_it.",
                        "VernacExtend",
                        "70bef96854cef8b2608b635d6dfc5cf930ff0790"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rotate1SelfInverse_Algebraic",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold rotate.",
                        "VernacExtend",
                        "6fa05813bebed0c3d730fa04e54d569dc11d521c"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_subst_2 by omega.",
                        "VernacExtend",
                        "0fb09b28de8088b6163822a9664297fbd919e29b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lift_lift by omega.",
                        "VernacExtend",
                        "f852e0b9de4aaeec1c2f1d291468e568e553a738"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_var.",
                        "VernacExtend",
                        "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite subst_subst by omega.",
                        "VernacExtend",
                        "1a1de5d9ed98960affbe01ca477c70a14064b056"
                    ]
                },
                {
                    "command": [
                        "rewrite subst_var.",
                        "VernacExtend",
                        "1e5929dc04cd56c22b3e673ab20a791da52b5334"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_var.",
                        "VernacExtend",
                        "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
                    ]
                },
                {
                    "command": [
                        "subst_idx.",
                        "VernacExtend",
                        "9d319275ebdedc3bcae9b3d1f02357dcf5edff4a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (@var V _ 2) with (shift 1 (@var V _ 1)) by (rewrite lift_var; auto).",
                        "VernacExtend",
                        "40d968aa0dd1e19e0ff793bca3f7a2a904001d0a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lift_subst_2 by omega.",
                        "VernacExtend",
                        "dd460bb9e4ff28af5f7c47a51730ca84635b6333"
                    ]
                },
                {
                    "command": [
                        "rewrite pun_2.",
                        "VernacExtend",
                        "0c9d1f20d35f145ec48c398f7df73644864724b2"
                    ]
                },
                {
                    "command": [
                        "rewrite pun_2.",
                        "VernacExtend",
                        "0c9d1f20d35f145ec48c398f7df73644864724b2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rotate1SelfInverse_Traverse",
            "line_nb": 400,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold rotate, subst, lift, Subst_Traverse, Lift_Traverse.",
                        "VernacExtend",
                        "80576a01cf8d71e1146c715ef2ad8a2df17bba42"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite traverse_functorial.",
                        "VernacExtend",
                        "4dafedd09b278242a6b1694650bd376baf956df4"
                    ]
                },
                {
                    "command": [
                        "apply traverse_var_is_identity.",
                        "VernacExtend",
                        "5e706d099c392d6470e47da9a5c4557bb9c7bd18"
                    ]
                },
                {
                    "command": [
                        "intros l x.",
                        "VernacExtend",
                        "7d4a33b8d496ba7739c79d8328b33be906ea1379"
                    ]
                },
                {
                    "command": [
                        "rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "16936634a00abe67208e856e0d17a8d90bf36152"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_var.",
                        "VernacExtend",
                        "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
                    ]
                },
                {
                    "command": [
                        "rewrite subst_idx_var.",
                        "VernacExtend",
                        "5fc4f2db8e2a375ff834d04f42c22673e03dcd38"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite traverse_identifies_var.",
                        "VernacExtend",
                        "a7317b8c6af816b5487251dea4c158342a7ebe92"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_var.",
                        "VernacExtend",
                        "234ecb40eddf6bdefa5c04f37f79bb90cdf057de"
                    ]
                },
                {
                    "command": [
                        "rewrite subst_idx_var.",
                        "VernacExtend",
                        "5fc4f2db8e2a375ff834d04f42c22673e03dcd38"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "translate_lift",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "just_do_it.",
                        "VernacExtend",
                        "f9a2c74b11814e2ee78a4e78fab2f367fa9f87d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_one_lift_zero",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "eauto with lift_lift_fuse.",
                        "VernacExtend",
                        "2ac6ae3340822984d3d0b1afb3b736192e677a72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_lift_fuse_successor",
            "line_nb": 447,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (S wk) with (wk + 1) by omega.",
                        "VernacExtend",
                        "2d48e454328c7804b5136ba57d9aa9378a2d461e"
                    ]
                },
                {
                    "command": [
                        "eapply lift_lift_fuse.",
                        "VernacExtend",
                        "a3fdaabcb1bcb148e0d5041cf5a2519d53ead446"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_lift_generalized",
            "line_nb": 455,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lift_lift_fuse_successor.",
                        "VernacExtend",
                        "88fa527ac943f43a6c69e4c204a666a88a424476"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_lift by omega.",
                        "VernacExtend",
                        "151ba5438f702b0f64cd48040cc1c2950b2a5949"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_0_r.",
                        "VernacExtend",
                        "d05263a401ad993feef5d443fed22d6f6d6bec5a"
                    ]
                },
                {
                    "command": [
                        "apply subst_lift.",
                        "VernacExtend",
                        "d56fb5cb205a27a06776afda8083fa4c8cc22253"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}