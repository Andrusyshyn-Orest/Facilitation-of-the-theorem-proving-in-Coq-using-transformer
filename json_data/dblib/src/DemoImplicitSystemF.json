{
    "filename": "src/DemoImplicitSystemF.v",
    "coq_project": "dblib",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Export Coq.Program.Equality.",
            "VernacRequire",
            "db4f8fe04532ef40d0953125640625a46cdd70a7"
        ],
        [
            "From Dblib Require Import DblibTactics DeBruijn Environments.",
            "VernacRequire",
            "d12c1e145db6f751e1d71af76973d805226dbbd4"
        ],
        [
            "Inductive term := | TVar: nat -> term | TAbs: term -> term | TApp: term -> term -> term.",
            "VernacInductive",
            "43a109072a9b3f6bc66daeb30eb57bf5cfde95b6"
        ],
        [
            "Instance Var_term : Var term := { var := TVar }.",
            "VernacInstance",
            "0d549f81832213b43a5eed00f63bff8d5415bbc5"
        ],
        [
            "Fixpoint traverse_term (f : nat -> nat -> term) l t := match t with | TVar x => f l x | TAbs t => TAbs (traverse_term f (1 + l) t) | TApp t1 t2 => TApp (traverse_term f l t1) (traverse_term f l t2) end.",
            "VernacFixpoint",
            "65cdbbe567a67b69279ea285720f765dc713f88c"
        ],
        [
            "Instance Traverse_term : Traverse term term := { traverse := traverse_term }.",
            "VernacInstance",
            "ea47c0d9a53c13188d32d5306711da1a97d59e01"
        ],
        [
            "Instance TraverseVarInjective_term : @TraverseVarInjective term _ term _.",
            "VernacInstance",
            "b20ab1b750ed555a0443894d7a9d1151232a0715"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_var_injective.",
            "VernacExtend",
            "c18c5e48aceaf5aecbe63ddf49022ebb7f5cd93b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseFunctorial_term : @TraverseFunctorial term _ term _.",
            "VernacInstance",
            "59221e189d72f951d625944d7c71ac48da56c6c9"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_functorial.",
            "VernacExtend",
            "64096dfda95deff93c808e66f907ddb8d2d58b28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseRelative_term : @TraverseRelative term term _.",
            "VernacInstance",
            "0fa3fbce0103fe4235b1886c22d72784e5d479bb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_relative.",
            "VernacExtend",
            "0af481c0af5ea8c1ae4e856347a52755de757da0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseIdentifiesVar_term : @TraverseIdentifiesVar term _ _.",
            "VernacInstance",
            "3ce87e54ba1b07a1b5edd1d48d0d882a8fd41cbe"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_identifies_var.",
            "VernacExtend",
            "0882f12e6d14d058c8f7d48175b3c521e117c0b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseVarIsIdentity_term : @TraverseVarIsIdentity term _ term _.",
            "VernacInstance",
            "e8f206d8b0229fe5c585d55dc48d619d888d5268"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_var_is_identity.",
            "VernacExtend",
            "dc14900763cf2b871d486a9be0ddc6c0fc60b933"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive red : term -> term -> Prop := | RedBeta: forall t1 t2, red (TApp (TAbs t1) t2) (subst t2 0 t1) | RedContextTAbs: forall t1 t2, red t1 t2 -> red (TAbs t1) (TAbs t2) | RedContextTAppLeft: forall t1 t2 t, red t1 t2 -> red (TApp t1 t) (TApp t2 t) | RedContextTAppRight: forall t1 t2 t, red t1 t2 -> red (TApp t t1) (TApp t t2).",
            "VernacInductive",
            "36e802c8ce9a78f662752bd57168fd3dc65f26b9"
        ],
        [
            "Inductive ty := | TyVar: nat -> ty | TyArrow: ty -> ty -> ty | TyForall: ty -> ty.",
            "VernacInductive",
            "8b5d782feca6ff9fb99b773c33af231b1f00fe05"
        ],
        [
            "Instance Var_ty : Var ty := { var := TyVar }.",
            "VernacInstance",
            "180cdde82fc5c862aeb8c7492e034a388ee0087d"
        ],
        [
            "Fixpoint traverse_ty (f : nat -> nat -> ty) l T := match T with | TyVar x => f l x | TyArrow T1 T2 => TyArrow (traverse_ty f l T1) (traverse_ty f l T2) | TyForall T => TyForall (traverse_ty f (1 + l) T) end.",
            "VernacFixpoint",
            "db71373156d547854ea6f9ec020be0ec101957c2"
        ],
        [
            "Instance Traverse_ty : Traverse ty ty := { traverse := traverse_ty }.",
            "VernacInstance",
            "ae4f770ba1de26351eeccf2b6bf046ab08713ac6"
        ],
        [
            "Instance TraverseVarInjective_ty : @TraverseVarInjective ty _ ty _.",
            "VernacInstance",
            "6b592e3deeae4d74dbd6f5af5331a52ae860f6f4"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_var_injective.",
            "VernacExtend",
            "c18c5e48aceaf5aecbe63ddf49022ebb7f5cd93b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseFunctorial_ty : @TraverseFunctorial ty _ ty _.",
            "VernacInstance",
            "c37db96a9a9afc5fc10171d18f9237295cf49e3d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_functorial.",
            "VernacExtend",
            "64096dfda95deff93c808e66f907ddb8d2d58b28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseRelative_ty : @TraverseRelative ty ty _.",
            "VernacInstance",
            "10871bc80fe3df1a9d8c37953b21c5623d1c4d05"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_relative.",
            "VernacExtend",
            "0af481c0af5ea8c1ae4e856347a52755de757da0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseIdentifiesVar_ty : @TraverseIdentifiesVar ty _ _.",
            "VernacInstance",
            "f781ccd8361d5e22e9a8eda80875471056c494fc"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_identifies_var.",
            "VernacExtend",
            "0882f12e6d14d058c8f7d48175b3c521e117c0b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseVarIsIdentity_ty : @TraverseVarIsIdentity ty _ ty _.",
            "VernacInstance",
            "120ec303b5191c2bba8b532129c431c5c2048cf6"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_var_is_identity.",
            "VernacExtend",
            "dc14900763cf2b871d486a9be0ddc6c0fc60b933"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac introq := match goal with | |- ?P -> ?Q => idtac | |- forall _, _ => intro; introq | |- _ => idtac end.",
            "VernacExtend",
            "4ac37e4947a97e4ae44f2dd5fa6434abd268a434"
        ],
        [
            "Inductive j : nat -> env ty -> term -> ty -> Prop := | JVar: forall n E x T, lookup x E = Some T -> j n E (TVar x) T | JAbs: forall m n E t T1 T2, j m (insert 0 T1 E) t T2 -> j n E (TAbs t) (TyArrow T1 T2) | JApp: forall n m1 m2 E t1 t2 T1 T2, j m1 E t1 (TyArrow T1 T2) -> j m2 E t2 T1 -> j n E (TApp t1 t2) T2 | JTyAbs: forall n E t T, j n (map (shift 0) E) t T -> j n E t (TyForall T) | JTyApp: forall n m E t T U U', j m E t (TyForall T) -> m < n -> subst U 0 T = U' -> j n E t U'.",
            "VernacInductive",
            "6947439c98b081da5c68313019738fb9cf2af946"
        ],
        [
            "Hint Constructors j : j.",
            "VernacHints",
            "94d1df505ef7934173232600561ccdde5f5874d4"
        ],
        [
            "Lemma j_index_monotonic: forall n E t T, j n E t T -> forall m, m >= n -> j m E t T.",
            "VernacStartTheoremProof",
            "ffb31cd364c883a2c602307c6935e6ef8cb442d5"
        ],
        [
            "induction 1; eauto with j omega.",
            "VernacExtend",
            "de12d9fa14ec0804eedebaa294e651222aa820ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma term_weakening: forall n E t T, j n E t T -> forall x U E', insert x U E = E' -> j n E' (shift x t) T.",
            "VernacStartTheoremProof",
            "afdb8424ceebf74fde529e6be4ab015df30bd87f"
        ],
        [
            "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto with lookup_insert insert_insert map_insert.",
            "VernacExtend",
            "8a03f950fe1aad349e83ac318908677be9dc4ff7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma type_weakening: forall n E t T, j n E t T -> forall x E' T', map (shift x) E = E' -> shift x T = T' -> j n E' t T'.",
            "VernacStartTheoremProof",
            "d46a31a4d4f19c5444a87e4f7605058efc685b79"
        ],
        [
            "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto using lookup_map_some, map_map_exchange with simpl_lift_goal lift_lift lift_subst map_insert.",
            "VernacExtend",
            "9e1de6cba939ed9489c894645234356fe29af79c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma term_substitution: forall n E2 t2 T2, j n E2 t2 T2 -> forall x T1 E, E2 = insert x T1 E -> forall m t1, j m E t1 T1 -> forall k, k >= m + n -> j k E (subst t1 x t2) T2.",
            "VernacStartTheoremProof",
            "576c8a996a4ec06213259b6e909784835d8797f6"
        ],
        [
            "induction 1; intros; subst; simpl_subst_goal; try solve [ econstructor; eauto using term_weakening, type_weakening with insert_insert map_insert omega ].",
            "VernacExtend",
            "870d258ab43320d743e4f364b1da0599ec6160eb"
        ],
        [
            "unfold subst_idx.",
            "VernacExtend",
            "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
        ],
        [
            "dblib_by_cases; lookup_insert_all; eauto using j_index_monotonic with j omega.",
            "VernacExtend",
            "faf30218ebe09b7e0295db8d7e073b985c93ee44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma type_substitution: forall n E t T, j n E t T -> forall U x E' T', map (subst U x) E = E' -> subst U x T = T' -> j n E' t T'.",
            "VernacStartTheoremProof",
            "cf76e58f30fa140db6b2b11517addc2eb066d2c6"
        ],
        [
            "induction 1; intros; subst; simpl_subst_goal; econstructor; eauto using lookup_map_some, map_map_exchange with simpl_subst_goal lift_subst subst_subst map_insert.",
            "VernacExtend",
            "3d439a783866a88ff9eb1b6ab1b8e565f183caee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inversion_JAbs: forall E t T1 T2, j 0 E (TAbs t) (TyArrow T1 T2) -> exists m, j m (insert 0 T1 E) t T2.",
            "VernacStartTheoremProof",
            "b6982c2586881222ad5e61dd0ff3335b33d463d1"
        ],
        [
            "introq.",
            "VernacExtend",
            "62406d0db977b1e00e59096e55b912c85960ddfc"
        ],
        [
            "intro h.",
            "VernacExtend",
            "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
        ],
        [
            "dependent destruction h; try solve [ omega ].",
            "VernacExtend",
            "7b017f43ac4f49aed2c8fa1eeae325efc2cd0e70"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inversion_JTyAbs: forall E t T, j 0 E (TAbs t) (TyForall T) -> j 0 (map (shift 0) E) (TAbs t) T.",
            "VernacStartTheoremProof",
            "cfb501b6db01cc9e98725bde2e0f8fbe394119f4"
        ],
        [
            "introq.",
            "VernacExtend",
            "62406d0db977b1e00e59096e55b912c85960ddfc"
        ],
        [
            "intro h.",
            "VernacExtend",
            "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
        ],
        [
            "dependent destruction h; try solve [ omega ].",
            "VernacExtend",
            "7b017f43ac4f49aed2c8fa1eeae325efc2cd0e70"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Goal forall n E t T, j n E t (TyForall T) -> j (S n) (map (shift 0) E) t T.",
            "VernacDefinition",
            "6617c0af04184e66adbcc5fde66f53f0c8a0de3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (pun_2 T 0).",
            "VernacExtend",
            "0d962f3e679d44cb9b81816d36901abaaf9e7220"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro h.",
            "VernacExtend",
            "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
        ],
        [
            "rewrite <- h.",
            "VernacExtend",
            "911e9ed9406c1f18fdc4276db9a87f97bfffaa4d"
        ],
        [
            "clear h.",
            "VernacExtend",
            "fed558d1c37ca3024c5b6f944dca9f4b4f125753"
        ],
        [
            "eapply JTyApp; [ | eauto | eauto ].",
            "VernacExtend",
            "25eb8df63fc40f5ccda82dc4b2ea7b14df1e69ca"
        ],
        [
            "eapply type_weakening; [ eauto | eauto | ].",
            "VernacExtend",
            "ef7a7d78caec639b5a459371aa347b2194a3eb72"
        ],
        [
            "simpl_lift_goal.",
            "VernacExtend",
            "e93f793d58681e8f38c3437ef8d4c8e729177c93"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma canonicalization: forall n E t T, j n E (TAbs t) T -> j 0 E (TAbs t) T.",
            "VernacStartTheoremProof",
            "67185955e261d7dbc13989a1236413c0f611fe07"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "pattern n.",
            "VernacExtend",
            "08c70a187492b2b293b2a787a83b543d8b736fa0"
        ],
        [
            "apply (well_founded_ind lt_wf).",
            "VernacExtend",
            "71b9d8d09b40889f6fc272ea5644da1847365e4e"
        ],
        [
            "clear n.",
            "VernacExtend",
            "950078f0511238b7bf11b5533c9ffd133a02ab04"
        ],
        [
            "intros n ih.",
            "VernacExtend",
            "07c530ab5491ec54b0ea556dd74b68b80d362f7e"
        ],
        [
            "introq.",
            "VernacExtend",
            "62406d0db977b1e00e59096e55b912c85960ddfc"
        ],
        [
            "intro h.",
            "VernacExtend",
            "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
        ],
        [
            "dependent induction h; eauto with j.",
            "VernacExtend",
            "453150f001b687f150bbbf929500b599c0769d3a"
        ],
        [
            "eapply type_substitution; [ | | eauto ].",
            "VernacExtend",
            "95e1f00d969bb63983b0d6231fee4cf192d0e99e"
        ],
        [
            "eapply inversion_JTyAbs.",
            "VernacExtend",
            "27e43ea55471da8d5fc1d833e6a3672287a4b7a4"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eapply map_map_vanish.",
            "VernacExtend",
            "b576a2eebf7092d18f5616226d87bde7984c459b"
        ],
        [
            "apply subst_lift.",
            "VernacExtend",
            "d56fb5cb205a27a06776afda8083fa4c8cc22253"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma type_preservation: forall m E t1 T, j m E t1 T -> forall t2, red t1 t2 -> exists n, j n E t2 T.",
            "VernacStartTheoremProof",
            "da1c7d015c62412f1ec91bfa1e9284c2a77568c6"
        ],
        [
            "Ltac tp_ih := match goal with ih: forall _, red _ _ -> _, hr: red _ _ |- _ => generalize (ih _ hr); intros [ ? ? ] end.",
            "VernacExtend",
            "fe75ccf76b27d43d5db81d186dbafe8194255788"
        ],
        [
            "induction 1; intros ? hred.",
            "VernacExtend",
            "457b7d5ab1a5e31a879f538cd7560dbc076c9688"
        ],
        [
            "dependent destruction hred.",
            "VernacExtend",
            "11ad5df088553582edb3b1dc40d1bf5daee77495"
        ],
        [
            "dependent destruction hred.",
            "VernacExtend",
            "11ad5df088553582edb3b1dc40d1bf5daee77495"
        ],
        [
            "tp_ih.",
            "VernacExtend",
            "aec7f35ea3afd89e569de9dee684b097c86467f1"
        ],
        [
            "eauto using (JAbs 0).",
            "VernacExtend",
            "2db46c53cfd9e472345aea17e0410b0fa5a73c9a"
        ],
        [
            "dependent destruction hred.",
            "VernacExtend",
            "11ad5df088553582edb3b1dc40d1bf5daee77495"
        ],
        [
            "match goal with h: j _ _ (TAbs _) (TyArrow _ _) |- _ => generalize (inversion_JAbs (canonicalization h)); intros [ ? ? ] end.",
            "VernacExtend",
            "99ef9e8b56869b1cf19f5d28864f81b7688c9bc7"
        ],
        [
            "solve [ eauto using term_substitution ].",
            "VernacExtend",
            "d1a17b658d4baab98c6bbef9bce90ab9ac1f296d"
        ],
        [
            "tp_ih.",
            "VernacExtend",
            "aec7f35ea3afd89e569de9dee684b097c86467f1"
        ],
        [
            "eauto using (JApp 0).",
            "VernacExtend",
            "3b8e86b79530d81688b5375bd23df664f40df2fa"
        ],
        [
            "tp_ih.",
            "VernacExtend",
            "aec7f35ea3afd89e569de9dee684b097c86467f1"
        ],
        [
            "eauto using (JApp 0).",
            "VernacExtend",
            "3b8e86b79530d81688b5375bd23df664f40df2fa"
        ],
        [
            "tp_ih.",
            "VernacExtend",
            "aec7f35ea3afd89e569de9dee684b097c86467f1"
        ],
        [
            "eauto with j.",
            "VernacExtend",
            "5e28dc5386af5d4ca06c6204b10157ce29936d04"
        ],
        [
            "tp_ih.",
            "VernacExtend",
            "aec7f35ea3afd89e569de9dee684b097c86467f1"
        ],
        [
            "eauto with j.",
            "VernacExtend",
            "5e28dc5386af5d4ca06c6204b10157ce29936d04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "TraverseVarInjective_term",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_var_injective.",
                        "VernacExtend",
                        "c18c5e48aceaf5aecbe63ddf49022ebb7f5cd93b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseFunctorial_term",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_functorial.",
                        "VernacExtend",
                        "64096dfda95deff93c808e66f907ddb8d2d58b28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseRelative_term",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_relative.",
                        "VernacExtend",
                        "0af481c0af5ea8c1ae4e856347a52755de757da0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseIdentifiesVar_term",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_identifies_var.",
                        "VernacExtend",
                        "0882f12e6d14d058c8f7d48175b3c521e117c0b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseVarIsIdentity_term",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_var_is_identity.",
                        "VernacExtend",
                        "dc14900763cf2b871d486a9be0ddc6c0fc60b933"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseVarInjective_ty",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_var_injective.",
                        "VernacExtend",
                        "c18c5e48aceaf5aecbe63ddf49022ebb7f5cd93b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseFunctorial_ty",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_functorial.",
                        "VernacExtend",
                        "64096dfda95deff93c808e66f907ddb8d2d58b28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseRelative_ty",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_relative.",
                        "VernacExtend",
                        "0af481c0af5ea8c1ae4e856347a52755de757da0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseIdentifiesVar_ty",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_identifies_var.",
                        "VernacExtend",
                        "0882f12e6d14d058c8f7d48175b3c521e117c0b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseVarIsIdentity_ty",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_var_is_identity.",
                        "VernacExtend",
                        "dc14900763cf2b871d486a9be0ddc6c0fc60b933"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "j_index_monotonic",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "induction 1; eauto with j omega.",
                        "VernacExtend",
                        "de12d9fa14ec0804eedebaa294e651222aa820ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_weakening",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto with lookup_insert insert_insert map_insert.",
                        "VernacExtend",
                        "8a03f950fe1aad349e83ac318908677be9dc4ff7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "type_weakening",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto using lookup_map_some, map_map_exchange with simpl_lift_goal lift_lift lift_subst map_insert.",
                        "VernacExtend",
                        "9e1de6cba939ed9489c894645234356fe29af79c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "term_substitution",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; subst; simpl_subst_goal; try solve [ econstructor; eauto using term_weakening, type_weakening with insert_insert map_insert omega ].",
                        "VernacExtend",
                        "870d258ab43320d743e4f364b1da0599ec6160eb"
                    ]
                },
                {
                    "command": [
                        "unfold subst_idx.",
                        "VernacExtend",
                        "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
                    ]
                },
                {
                    "command": [
                        "dblib_by_cases; lookup_insert_all; eauto using j_index_monotonic with j omega.",
                        "VernacExtend",
                        "faf30218ebe09b7e0295db8d7e073b985c93ee44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "type_substitution",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; subst; simpl_subst_goal; econstructor; eauto using lookup_map_some, map_map_exchange with simpl_subst_goal lift_subst subst_subst map_insert.",
                        "VernacExtend",
                        "3d439a783866a88ff9eb1b6ab1b8e565f183caee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inversion_JTyAbs",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "introq.",
                        "VernacExtend",
                        "62406d0db977b1e00e59096e55b912c85960ddfc"
                    ]
                },
                {
                    "command": [
                        "intro h.",
                        "VernacExtend",
                        "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
                    ]
                },
                {
                    "command": [
                        "dependent destruction h; try solve [ omega ].",
                        "VernacExtend",
                        "7b017f43ac4f49aed2c8fa1eeae325efc2cd0e70"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Unnamed_thm",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (pun_2 T 0).",
                        "VernacExtend",
                        "0d962f3e679d44cb9b81816d36901abaaf9e7220"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intro h.",
                        "VernacExtend",
                        "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
                    ]
                },
                {
                    "command": [
                        "rewrite <- h.",
                        "VernacExtend",
                        "911e9ed9406c1f18fdc4276db9a87f97bfffaa4d"
                    ]
                },
                {
                    "command": [
                        "clear h.",
                        "VernacExtend",
                        "fed558d1c37ca3024c5b6f944dca9f4b4f125753"
                    ]
                },
                {
                    "command": [
                        "eapply JTyApp; [ | eauto | eauto ].",
                        "VernacExtend",
                        "25eb8df63fc40f5ccda82dc4b2ea7b14df1e69ca"
                    ]
                },
                {
                    "command": [
                        "eapply type_weakening; [ eauto | eauto | ].",
                        "VernacExtend",
                        "ef7a7d78caec639b5a459371aa347b2194a3eb72"
                    ]
                },
                {
                    "command": [
                        "simpl_lift_goal.",
                        "VernacExtend",
                        "e93f793d58681e8f38c3437ef8d4c8e729177c93"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "type_preservation",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "Ltac tp_ih := match goal with ih: forall _, red _ _ -> _, hr: red _ _ |- _ => generalize (ih _ hr); intros [ ? ? ] end.",
                        "VernacExtend",
                        "fe75ccf76b27d43d5db81d186dbafe8194255788"
                    ]
                },
                {
                    "command": [
                        "induction 1; intros ? hred.",
                        "VernacExtend",
                        "457b7d5ab1a5e31a879f538cd7560dbc076c9688"
                    ]
                },
                {
                    "command": [
                        "dependent destruction hred.",
                        "VernacExtend",
                        "11ad5df088553582edb3b1dc40d1bf5daee77495"
                    ]
                },
                {
                    "command": [
                        "dependent destruction hred.",
                        "VernacExtend",
                        "11ad5df088553582edb3b1dc40d1bf5daee77495"
                    ]
                },
                {
                    "command": [
                        "tp_ih.",
                        "VernacExtend",
                        "aec7f35ea3afd89e569de9dee684b097c86467f1"
                    ]
                },
                {
                    "command": [
                        "eauto using (JAbs 0).",
                        "VernacExtend",
                        "2db46c53cfd9e472345aea17e0410b0fa5a73c9a"
                    ]
                },
                {
                    "command": [
                        "dependent destruction hred.",
                        "VernacExtend",
                        "11ad5df088553582edb3b1dc40d1bf5daee77495"
                    ]
                },
                {
                    "command": [
                        "match goal with h: j _ _ (TAbs _) (TyArrow _ _) |- _ => generalize (inversion_JAbs (canonicalization h)); intros [ ? ? ] end.",
                        "VernacExtend",
                        "99ef9e8b56869b1cf19f5d28864f81b7688c9bc7"
                    ]
                },
                {
                    "command": [
                        "solve [ eauto using term_substitution ].",
                        "VernacExtend",
                        "d1a17b658d4baab98c6bbef9bce90ab9ac1f296d"
                    ]
                },
                {
                    "command": [
                        "tp_ih.",
                        "VernacExtend",
                        "aec7f35ea3afd89e569de9dee684b097c86467f1"
                    ]
                },
                {
                    "command": [
                        "eauto using (JApp 0).",
                        "VernacExtend",
                        "3b8e86b79530d81688b5375bd23df664f40df2fa"
                    ]
                },
                {
                    "command": [
                        "tp_ih.",
                        "VernacExtend",
                        "aec7f35ea3afd89e569de9dee684b097c86467f1"
                    ]
                },
                {
                    "command": [
                        "eauto using (JApp 0).",
                        "VernacExtend",
                        "3b8e86b79530d81688b5375bd23df664f40df2fa"
                    ]
                },
                {
                    "command": [
                        "tp_ih.",
                        "VernacExtend",
                        "aec7f35ea3afd89e569de9dee684b097c86467f1"
                    ]
                },
                {
                    "command": [
                        "eauto with j.",
                        "VernacExtend",
                        "5e28dc5386af5d4ca06c6204b10157ce29936d04"
                    ]
                },
                {
                    "command": [
                        "tp_ih.",
                        "VernacExtend",
                        "aec7f35ea3afd89e569de9dee684b097c86467f1"
                    ]
                },
                {
                    "command": [
                        "eauto with j.",
                        "VernacExtend",
                        "5e28dc5386af5d4ca06c6204b10157ce29936d04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}