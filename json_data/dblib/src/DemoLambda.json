{
    "filename": "src/DemoLambda.v",
    "coq_project": "dblib",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Export Coq.Program.Equality.",
            "VernacRequire",
            "db4f8fe04532ef40d0953125640625a46cdd70a7"
        ],
        [
            "From Dblib Require Import DblibTactics DeBruijn Environments.",
            "VernacRequire",
            "d12c1e145db6f751e1d71af76973d805226dbbd4"
        ],
        [
            "Inductive term := | TVar: nat -> term | TAbs: term -> term | TApp: term -> term -> term.",
            "VernacInductive",
            "43a109072a9b3f6bc66daeb30eb57bf5cfde95b6"
        ],
        [
            "Instance Var_term : Var term := { var := TVar }.",
            "VernacInstance",
            "0d549f81832213b43a5eed00f63bff8d5415bbc5"
        ],
        [
            "Fixpoint traverse_term (f : nat -> nat -> term) l t := match t with | TVar x => f l x | TAbs t => TAbs (traverse_term f (1 + l) t) | TApp t1 t2 => TApp (traverse_term f l t1) (traverse_term f l t2) end.",
            "VernacFixpoint",
            "65cdbbe567a67b69279ea285720f765dc713f88c"
        ],
        [
            "Instance Traverse_term : Traverse term term := { traverse := traverse_term }.",
            "VernacInstance",
            "ea47c0d9a53c13188d32d5306711da1a97d59e01"
        ],
        [
            "Instance TraverseVarInjective_term : @TraverseVarInjective term _ term _.",
            "VernacInstance",
            "b20ab1b750ed555a0443894d7a9d1151232a0715"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_var_injective.",
            "VernacExtend",
            "c18c5e48aceaf5aecbe63ddf49022ebb7f5cd93b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseFunctorial_term : @TraverseFunctorial term _ term _.",
            "VernacInstance",
            "59221e189d72f951d625944d7c71ac48da56c6c9"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_functorial.",
            "VernacExtend",
            "64096dfda95deff93c808e66f907ddb8d2d58b28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseRelative_term : @TraverseRelative term term _.",
            "VernacInstance",
            "0fa3fbce0103fe4235b1886c22d72784e5d479bb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_relative.",
            "VernacExtend",
            "0af481c0af5ea8c1ae4e856347a52755de757da0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseIdentifiesVar_term : @TraverseIdentifiesVar term _ _.",
            "VernacInstance",
            "3ce87e54ba1b07a1b5edd1d48d0d882a8fd41cbe"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_identifies_var.",
            "VernacExtend",
            "0882f12e6d14d058c8f7d48175b3c521e117c0b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance TraverseVarIsIdentity_term : @TraverseVarIsIdentity term _ term _.",
            "VernacInstance",
            "e8f206d8b0229fe5c585d55dc48d619d888d5268"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "prove_traverse_var_is_identity.",
            "VernacExtend",
            "dc14900763cf2b871d486a9be0ddc6c0fc60b933"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_TVar: forall w k x, lift w k (TVar x) = TVar (lift w k x).",
            "VernacStartTheoremProof",
            "96c05c01384c510338310e69f7084adac84304b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl_lift_goal.",
            "VernacExtend",
            "e93f793d58681e8f38c3437ef8d4c8e729177c93"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_TApp: forall w k t1 t2, lift w k (TApp t1 t2) = TApp (lift w k t1) (lift w k t2).",
            "VernacStartTheoremProof",
            "c3f2041a42bf815b3772ef2fa90d667eb8c6e723"
        ],
        [
            "eauto with simpl_lift_goal.",
            "VernacExtend",
            "da5e226909edfe1c2460cf52ad5ab2061c7dae2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lift_TAbs: forall w k t, lift w k (TAbs t) = TAbs (lift w (1 + k) t).",
            "VernacStartTheoremProof",
            "1d4e1381623e778a24ba5e15d3b28bcfc51006a1"
        ],
        [
            "eauto with simpl_lift_goal.",
            "VernacExtend",
            "da5e226909edfe1c2460cf52ad5ab2061c7dae2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_TVar: forall v k x, subst v k (TVar x) = subst_idx v k x.",
            "VernacStartTheoremProof",
            "481f3cf492847dd5bc2b62e656a5d599ac538628"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl_subst_goal.",
            "VernacExtend",
            "7d6bdd74b6f6ad8f98f0ebd5cc4b3dab42e380fb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_TApp: forall v k t1 t2, subst v k (TApp t1 t2) = TApp (subst v k t1) (subst v k t2).",
            "VernacStartTheoremProof",
            "282e9ac7dec15032523ca370ecfc2a52ecb2d4c1"
        ],
        [
            "eauto with simpl_subst_goal.",
            "VernacExtend",
            "0d651bca5afbbeb94dad9946b5d28836a3347c61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subst_TAbs: forall v k t, subst v k (TAbs t) = TAbs (subst (shift 0 v) (1 + k) t).",
            "VernacStartTheoremProof",
            "6464cf60ea8d33d8a340377e561a9e44d02d2bbb"
        ],
        [
            "eauto with simpl_subst_goal.",
            "VernacExtend",
            "0d651bca5afbbeb94dad9946b5d28836a3347c61"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive red : term -> term -> Prop := | RedBeta: forall t1 t2 t, subst t2 0 t1 = t -> red (TApp (TAbs t1) t2) t | RedContextTAbs: forall t1 t2, red t1 t2 -> red (TAbs t1) (TAbs t2) | RedContextTAppLeft: forall t1 t2 t, red t1 t2 -> red (TApp t1 t) (TApp t2 t) | RedContextTAppRight: forall t1 t2 t, red t1 t2 -> red (TApp t t1) (TApp t t2).",
            "VernacInductive",
            "8aeceec214decea6099836a046186d8a318168de"
        ],
        [
            "Lemma red_weakening: forall t1 t2, red t1 t2 -> forall x, red (shift x t1) (shift x t2).",
            "VernacStartTheoremProof",
            "03ef76729bf991b8e95c57ecd34e264b0eae3439"
        ],
        [
            "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto with lift_subst.",
            "VernacExtend",
            "52711f73c76c598e9f4f15a9b33c49ff9feaa7a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inversion_closed_TVar: forall k x, x >= k -> closed k (TVar x) -> False.",
            "VernacStartTheoremProof",
            "5660ca7ff26445502df57d9d376acff9b307f397"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_closed.",
            "VernacExtend",
            "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
        ],
        [
            "eauto using closed_var.",
            "VernacExtend",
            "9a20f02a39251c8a4f3c031639f3153ce8a7ab3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inversion_closed_TApp_1: forall t1 t2 k, closed k (TApp t1 t2) -> closed k t1.",
            "VernacStartTheoremProof",
            "1dc00230d75b5c6d8a2ea6fe2774b36bf4e021fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_closed.",
            "VernacExtend",
            "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inversion_closed_TApp_2: forall t1 t2 k, closed k (TApp t1 t2) -> closed k t2.",
            "VernacStartTheoremProof",
            "3dd2d6581c4889a4a34e9e7f9323dae96b018ad0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_closed.",
            "VernacExtend",
            "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inversion_closed_TAbs: forall t k, closed k (TAbs t) -> closed (1 + k) t.",
            "VernacStartTheoremProof",
            "b3e95e508fc6dbdf5a3340c67236a9a114ee167f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_closed.",
            "VernacExtend",
            "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma red_closed: forall t1 t2, red t1 t2 -> forall k, closed k t1 -> closed k t2.",
            "VernacStartTheoremProof",
            "9bdbdc5c9d2b633d22c67212be9e5a6bae7b6e37"
        ],
        [
            "induction 1; intros; subst; inversion_closed; try construction_closed.",
            "VernacExtend",
            "efbb1fe146724571523ef3d6afc0a2c83013711c"
        ],
        [
            "eauto using @subst_preserves_closed with typeclass_instances.",
            "VernacExtend",
            "86358f53b1c68f000a4988c234238f8cf0e3ec47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive ty := | TyIota: ty | TyArrow: ty -> ty -> ty.",
            "VernacInductive",
            "51ca2da089ac8b77a269a0cb5b391feca77c5f41"
        ],
        [
            "Inductive j : env ty -> term -> ty -> Prop := | JVar: forall E x T, lookup x E = Some T -> j E (TVar x) T | JAbs: forall E t T1 T2, j (insert 0 T1 E) t T2 -> j E (TAbs t) (TyArrow T1 T2) | JApp: forall E t1 t2 T1 T2, j E t1 (TyArrow T1 T2) -> j E t2 T1 -> j E (TApp t1 t2) T2.",
            "VernacInductive",
            "214eacd6efecbca66d24fc50785c57596e465384"
        ],
        [
            "Hint Constructors j : j.",
            "VernacHints",
            "94d1df505ef7934173232600561ccdde5f5874d4"
        ],
        [
            "Lemma weakening: forall E t T, j E t T -> forall x U E', insert x U E = E' -> j E' (shift x t) T.",
            "VernacStartTheoremProof",
            "fee22249a65e804e28b6c14596e16e82d431c51e"
        ],
        [
            "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto with lookup_insert insert_insert.",
            "VernacExtend",
            "a69dd86f9e7acb02c378a0e920190f6f14c60afd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma substitution: forall E x t2 T1 T2, j (insert x T1 E) t2 T2 -> forall t1, j E t1 T1 -> j E (subst t1 x t2) T2.",
            "VernacStartTheoremProof",
            "63edf7fa190556ca76537fc00bd01bb7afe45dfb"
        ],
        [
            "do 5 intro; intro h; dependent induction h; intros; simpl_subst_goal; try solve [ econstructor; eauto using weakening with insert_insert ].",
            "VernacExtend",
            "ff0ad6c44aad7ac2d12bc1cb66e802edcf58b911"
        ],
        [
            "unfold subst_idx.",
            "VernacExtend",
            "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
        ],
        [
            "dblib_by_cases; lookup_insert_all; eauto with j.",
            "VernacExtend",
            "ba41e187b2759262362dd384bde099d1364966c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma type_preservation: forall t1 t2, red t1 t2 -> forall E T, j E t1 T -> j E t2 T.",
            "VernacStartTheoremProof",
            "9ec996a1357f93acbd2e59e8ec2425f43ef794b1"
        ],
        [
            "induction 1; intros ? ? h; subst; dependent destruction h; eauto with j.",
            "VernacExtend",
            "4506ac81e41e83ff49697400f19d025de57e86b5"
        ],
        [
            "match goal with h: j _ (TAbs _) _ |- _ => inversion h; clear h; subst end.",
            "VernacExtend",
            "fcc24ba95e27cf7d8dbcb4e60da843d14e6106ae"
        ],
        [
            "eauto using substitution.",
            "VernacExtend",
            "b0ff3c910f00a61f3231e3a11df1e46abcbf10f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma j_closed: forall E t T, j E t T -> forall k, length E <= k -> closed k t.",
            "VernacStartTheoremProof",
            "54374352b83ee2a186fd099bb4aa680296291fd7"
        ],
        [
            "induction 1; intros; construction_closed.",
            "VernacExtend",
            "f206033d4a3fe6e3f494f3ae357cd5ee11072843"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma j_agree: forall E1 t T, j E1 t T -> forall E2 k, agree E1 E2 k -> length E1 <= k -> j E2 t T.",
            "VernacStartTheoremProof",
            "c44f00901ffd80e9fdf3a60b3126c4936042c6a4"
        ],
        [
            "induction 1; intros; eauto with j length agree omega.",
            "VernacExtend",
            "514f6601203182cdc592f4c93f60072175c2884d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma j_empty: forall E t T, j (@empty _) t T -> j E t T.",
            "VernacStartTheoremProof",
            "5f001de79160d545430d4109f2981b9a39ef6836"
        ],
        [
            "eauto using j_agree with length agree.",
            "VernacExtend",
            "5dbe4c712adc6e227b6b581f15af5a8c0227c512"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "TraverseVarInjective_term",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_var_injective.",
                        "VernacExtend",
                        "c18c5e48aceaf5aecbe63ddf49022ebb7f5cd93b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseFunctorial_term",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_functorial.",
                        "VernacExtend",
                        "64096dfda95deff93c808e66f907ddb8d2d58b28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseRelative_term",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_relative.",
                        "VernacExtend",
                        "0af481c0af5ea8c1ae4e856347a52755de757da0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseIdentifiesVar_term",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_identifies_var.",
                        "VernacExtend",
                        "0882f12e6d14d058c8f7d48175b3c521e117c0b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "TraverseVarIsIdentity_term",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "prove_traverse_var_is_identity.",
                        "VernacExtend",
                        "dc14900763cf2b871d486a9be0ddc6c0fc60b933"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_TVar",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl_lift_goal.",
                        "VernacExtend",
                        "e93f793d58681e8f38c3437ef8d4c8e729177c93"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_TApp",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "eauto with simpl_lift_goal.",
                        "VernacExtend",
                        "da5e226909edfe1c2460cf52ad5ab2061c7dae2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lift_TAbs",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "eauto with simpl_lift_goal.",
                        "VernacExtend",
                        "da5e226909edfe1c2460cf52ad5ab2061c7dae2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_TVar",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl_subst_goal.",
                        "VernacExtend",
                        "7d6bdd74b6f6ad8f98f0ebd5cc4b3dab42e380fb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_TApp",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "eauto with simpl_subst_goal.",
                        "VernacExtend",
                        "0d651bca5afbbeb94dad9946b5d28836a3347c61"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subst_TAbs",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "eauto with simpl_subst_goal.",
                        "VernacExtend",
                        "0d651bca5afbbeb94dad9946b5d28836a3347c61"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "red_weakening",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto with lift_subst.",
                        "VernacExtend",
                        "52711f73c76c598e9f4f15a9b33c49ff9feaa7a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inversion_closed_TVar",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_closed.",
                        "VernacExtend",
                        "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
                    ]
                },
                {
                    "command": [
                        "eauto using closed_var.",
                        "VernacExtend",
                        "9a20f02a39251c8a4f3c031639f3153ce8a7ab3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inversion_closed_TApp_1",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_closed.",
                        "VernacExtend",
                        "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inversion_closed_TApp_2",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_closed.",
                        "VernacExtend",
                        "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inversion_closed_TAbs",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_closed.",
                        "VernacExtend",
                        "cdf8d0e3a04bf91a0ee2683b8d70fa92631f25d3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "red_closed",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; subst; inversion_closed; try construction_closed.",
                        "VernacExtend",
                        "efbb1fe146724571523ef3d6afc0a2c83013711c"
                    ]
                },
                {
                    "command": [
                        "eauto using @subst_preserves_closed with typeclass_instances.",
                        "VernacExtend",
                        "86358f53b1c68f000a4988c234238f8cf0e3ec47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weakening",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; subst; simpl_lift_goal; econstructor; eauto with lookup_insert insert_insert.",
                        "VernacExtend",
                        "a69dd86f9e7acb02c378a0e920190f6f14c60afd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "substitution",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "do 5 intro; intro h; dependent induction h; intros; simpl_subst_goal; try solve [ econstructor; eauto using weakening with insert_insert ].",
                        "VernacExtend",
                        "ff0ad6c44aad7ac2d12bc1cb66e802edcf58b911"
                    ]
                },
                {
                    "command": [
                        "unfold subst_idx.",
                        "VernacExtend",
                        "a01ddbe447666d5659c2bc5908a803dd9cedf1a3"
                    ]
                },
                {
                    "command": [
                        "dblib_by_cases; lookup_insert_all; eauto with j.",
                        "VernacExtend",
                        "ba41e187b2759262362dd384bde099d1364966c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "type_preservation",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "induction 1; intros ? ? h; subst; dependent destruction h; eauto with j.",
                        "VernacExtend",
                        "4506ac81e41e83ff49697400f19d025de57e86b5"
                    ]
                },
                {
                    "command": [
                        "match goal with h: j _ (TAbs _) _ |- _ => inversion h; clear h; subst end.",
                        "VernacExtend",
                        "fcc24ba95e27cf7d8dbcb4e60da843d14e6106ae"
                    ]
                },
                {
                    "command": [
                        "eauto using substitution.",
                        "VernacExtend",
                        "b0ff3c910f00a61f3231e3a11df1e46abcbf10f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "j_closed",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; construction_closed.",
                        "VernacExtend",
                        "f206033d4a3fe6e3f494f3ae357cd5ee11072843"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "j_agree",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "induction 1; intros; eauto with j length agree omega.",
                        "VernacExtend",
                        "514f6601203182cdc592f4c93f60072175c2884d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "j_empty",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "eauto using j_agree with length agree.",
                        "VernacExtend",
                        "5dbe4c712adc6e227b6b581f15af5a8c0227c512"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}