{
    "filename": "src/Environments.v",
    "coq_project": "dblib",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Opaque plus.",
            "VernacSetOpacity",
            "2e38cebfc075c25ba0d23920118f1c3e12c3556b"
        ],
        [
            "From Dblib Require Import DblibTactics DeBruijn.",
            "VernacRequire",
            "631bc984488440dffcabd8104c30f655ed17f672"
        ],
        [
            "Definition env A := list (option A).",
            "VernacDefinition",
            "e9f5ec86c7454ecf43e33172f4cb7460740ed504"
        ],
        [
            "Definition empty A : env A := nil.",
            "VernacDefinition",
            "b8f9be3f14b4eff1e47733cf94b7eb1354192993"
        ],
        [
            "Fixpoint lookup A (x : nat) (e : env A) : option A := match e, x with | nil, _ => None | entry :: _, 0 => entry | _ :: e, S x => lookup x e end.",
            "VernacFixpoint",
            "457707a9556bca0973aea2a1f8622d716651a6a5"
        ],
        [
            "Fixpoint raw_insert A (x : nat) (o : option A) (e : env A) : env A := match x, e with | 0, _ => o :: e | S x, entry :: e => entry :: raw_insert x o e | S x, nil => None :: raw_insert x o e end.",
            "VernacFixpoint",
            "c9c3e35150691bf26e0f5defbc9c31a82f1b7b14"
        ],
        [
            "Notation insert x a e := (raw_insert x (Some a) e).",
            "VernacSyntacticDefinition",
            "fa45ee2daa4215be2da8d49324df265c48177159"
        ],
        [
            "Fixpoint map A B (f : A -> B) (e : env A) := match e with | nil => nil | None :: e => None :: map f e | Some a :: e => Some (f a) :: map f e end.",
            "VernacFixpoint",
            "8f3e1f6258097a4306650b959ff90d37d4b4bbed"
        ],
        [
            "Fixpoint fold A B (f : option A -> B -> B) (e : env A) (accu : B) : B := match e with | nil => accu | o :: e => f o (fold f e accu) end.",
            "VernacFixpoint",
            "f436c229c5b9edc12fbc74ea28ab0227eb69d666"
        ],
        [
            "Lemma one_plus_x_minus_one_left: forall x, (1 + x) - 1 = x.",
            "VernacStartTheoremProof",
            "35c3a753c6f2d36e5db736f1a4274fc2a6c7d2d5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma one_plus_x_minus_one_right: forall x, x > 0 -> 1 + (x - 1) = x.",
            "VernacStartTheoremProof",
            "851250e54d9bbccccb32e8bb67d75b811288fc73"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac one_plus_x_minus_one := repeat rewrite one_plus_x_minus_one_left in *; repeat rewrite one_plus_x_minus_one_right in * by omega.",
            "VernacExtend",
            "56ad66f2a4acf9cdbc610aa83ed9eb3c2b866e5e"
        ],
        [
            "Lemma raw_insert_zero: forall A o (e : env A), raw_insert 0 o e = o :: e.",
            "VernacStartTheoremProof",
            "23c2c47d01b34d7eb2ed8bb50b6d21b2f344aaa6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma raw_insert_successor: forall A x o (e : env A), raw_insert (S x) o e = lookup 0 e :: raw_insert x o (tail e).",
            "VernacStartTheoremProof",
            "09975a164322d91ddae0f0c648b929b55bbe0e92"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct e; reflexivity.",
            "VernacExtend",
            "b936eee5257e73f9a5a0f8feb1ce207f600658d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_eq_insert: forall A x o (e : env A), empty _ = insert x o e -> False.",
            "VernacStartTheoremProof",
            "8b5a75f91e910df8a0a656bc4096a36a2b5a9085"
        ],
        [
            "unfold empty; intros; destruct x.",
            "VernacExtend",
            "e6fd2571781cb5b3910f0a1c610f7081e1049d40"
        ],
        [
            "rewrite raw_insert_zero in *.",
            "VernacExtend",
            "5e929b1934e3876672ef27c7ffb8c143299a80ce"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "rewrite raw_insert_successor in *.",
            "VernacExtend",
            "0c0878bb89b277a7a23c82de532fc7d2d8adabbe"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_empty_None: forall A x, lookup x (@empty A) = None.",
            "VernacStartTheoremProof",
            "d82fc9fd3947b5891cbc7cd175bf12296a96e436"
        ],
        [
            "destruct x; simpl; reflexivity.",
            "VernacExtend",
            "bf46ea4b4ab4f3a324d96e5b30df99e94315b026"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_empty_Some: forall A x (a : A), lookup x (@empty _) = Some a -> False.",
            "VernacStartTheoremProof",
            "ddbb575c96dcf457c8fc43914eafb238e8370c3a"
        ],
        [
            "destruct x; simpl; congruence.",
            "VernacExtend",
            "589ac594637130f07e116241849097fc4a3d47d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_successor: forall A x (e : env A), lookup (S x) e = lookup x (tail e).",
            "VernacStartTheoremProof",
            "2f73dbe89a569c4a8dcfa5b1d24377156672b255"
        ],
        [
            "destruct e.",
            "VernacExtend",
            "6785fac4a52839433f2a36a721f6e0fc71773d77"
        ],
        [
            "do 2 rewrite lookup_empty_None.",
            "VernacExtend",
            "1601f7d608f80296ed1787950fec1ebc84e1612b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_insert_bingo: forall A x y (o : option A) e, x = y -> lookup x (raw_insert y o e) = o.",
            "VernacStartTheoremProof",
            "506e75ed7a5143678cd6280123c4de5a9af85d94"
        ],
        [
            "induction x; intros; destruct y; destruct e; simpl; try solve [ elimtype False; omega | eauto with omega ].",
            "VernacExtend",
            "4ab24221bb551b88fc8c4d3c2de75bde262f1fa8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_insert_recent: forall A x y (o : option A) e, x < y -> lookup x (raw_insert y o e) = lookup x e.",
            "VernacStartTheoremProof",
            "0dfc6191bba975322a076089c5a9b43ecd7ec276"
        ],
        [
            "induction x; intros; destruct y; destruct e; simpl; try solve [ elimtype False; omega | eauto with omega ].",
            "VernacExtend",
            "4ab24221bb551b88fc8c4d3c2de75bde262f1fa8"
        ],
        [
            "erewrite <- lookup_empty_None.",
            "VernacExtend",
            "b63e052b61a80d3fd4967b766396481f6e719845"
        ],
        [
            "eauto with omega.",
            "VernacExtend",
            "fa4e7b66717ddb0f99961c9671b917f998e18a7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_insert_old: forall A x y (o : option A) e, x > y -> lookup x (raw_insert y o e) = lookup (x - 1) e.",
            "VernacStartTheoremProof",
            "e1be346c2edf1ce8a9a74451f364605320412907"
        ],
        [
            "induction x; intros; [ elimtype False; omega | replace (S x - 1) with x by omega ].",
            "VernacExtend",
            "6b5fe6108d8abca5dde96abda8b3a46d355d20a4"
        ],
        [
            "destruct y; destruct e; simpl; try solve [ eauto ].",
            "VernacExtend",
            "3263e98ebb610ae1765eb9eae7069b5104e1fb07"
        ],
        [
            "rewrite lookup_empty_None.",
            "VernacExtend",
            "ae7bd36eaa03e8fa4a3a4de3e32181b57ffb5963"
        ],
        [
            "erewrite <- lookup_empty_None.",
            "VernacExtend",
            "b63e052b61a80d3fd4967b766396481f6e719845"
        ],
        [
            "eauto with omega.",
            "VernacExtend",
            "fa4e7b66717ddb0f99961c9671b917f998e18a7c"
        ],
        [
            "destruct x; intros; [ elimtype False; omega | replace (S x - 1) with x in * by omega ].",
            "VernacExtend",
            "2fd6915b8dc3df960710c8b3cfc4247e5a46d50c"
        ],
        [
            "simpl lookup at 2.",
            "VernacExtend",
            "2c381fb725119f5bcef543abac79b8cdbf5278c9"
        ],
        [
            "eauto with omega.",
            "VernacExtend",
            "fa4e7b66717ddb0f99961c9671b917f998e18a7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_shift_insert: forall A x y (o : option A) e, lookup (shift y x) (raw_insert y o e) = lookup x e.",
            "VernacStartTheoremProof",
            "e27baebcd132887cd1f13f0244ac29b75bce36d8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct_lift_idx.",
            "VernacExtend",
            "5003f89bc031a087889c2d6d50697c3f9652a69e"
        ],
        [
            "rewrite lookup_insert_old by omega.",
            "VernacExtend",
            "4ee4e0d8d7cb2e56074d38e5e73354f5a3166547"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "rewrite lookup_insert_recent by omega.",
            "VernacExtend",
            "89fe6d65000f6e5d4de169e1e497063c0b727670"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac lookup_insert := first [ rewrite lookup_insert_bingo by omega | rewrite lookup_insert_old by omega; one_plus_x_minus_one | rewrite lookup_insert_recent by omega | rewrite lookup_shift_insert ].",
            "VernacExtend",
            "86394406e1fa9e9c6d12c5a5c018143de7a94c93"
        ],
        [
            "Ltac lookup_insert_all := first [ rewrite lookup_insert_bingo in * by omega; try match goal with h: Some _ = Some _ |- _ => injection h; intro; subst; clear h end | rewrite lookup_insert_old in * by omega; one_plus_x_minus_one | rewrite lookup_insert_recent in * by omega | rewrite lookup_shift_insert in * ].",
            "VernacExtend",
            "a9d53decbc4acbc1dcd354e7f14ffd0ca0154012"
        ],
        [
            "Hint Extern 1 (lookup _ (raw_insert _ _ _) = _) => lookup_insert : lookup_insert.",
            "VernacHints",
            "30b758f1d38455c910903ec2eff7d74f634f95fd"
        ],
        [
            "Hint Extern 1 (lookup _ _ = _) => lookup_insert_all : lookup_insert.",
            "VernacHints",
            "1bd3554d0b608af5581399d08fe10fddeffc74e4"
        ],
        [
            "Lemma map_empty: forall A B (f : A -> B), map f (@empty _) = @empty _.",
            "VernacStartTheoremProof",
            "8d978a7ad5a13d23acbdbbff95eae311c30da661"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_map_none: forall A B x e (f : A -> B), lookup x e = None -> lookup x (map f e) = None.",
            "VernacStartTheoremProof",
            "b763daa2a37cf19e90e8b105eeaf79aed0c8774a"
        ],
        [
            "induction x; intros; destruct e as [ | [ | ] ? ]; simpl in *; subst; solve [ eauto | congruence ].",
            "VernacExtend",
            "0d442ef57d952bd13ab4a9df4c9a200eaef2e70d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_map_some: forall A B x a e (f : A -> B), lookup x e = Some a -> lookup x (map f e) = Some (f a).",
            "VernacStartTheoremProof",
            "96eb551d59928148bb25569bc95e6001f57fa0e3"
        ],
        [
            "induction x; intros; destruct e as [ | [ | ] ? ]; simpl in *; subst; try solve [ congruence | eauto ].",
            "VernacExtend",
            "0db753e0defaebecc8ae3ae1875aa092a1f757bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_map_some_reverse: forall A B x b e (f : A -> B), lookup x (map f e) = Some b -> exists a, lookup x e = Some a /\\ b = f a.",
            "VernacStartTheoremProof",
            "3d4fa3e56e966ccea4a78101e9c6c4aa334e0bdd"
        ],
        [
            "induction x; intros; destruct e as [ | [ | ] ? ]; simpl in *; subst; try solve [ congruence | eauto ].",
            "VernacExtend",
            "0db753e0defaebecc8ae3ae1875aa092a1f757bc"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_insert: forall A k s (a b : option A) e, k <= s -> raw_insert k a (raw_insert s b e) = raw_insert (1 + s) b (raw_insert k a e).",
            "VernacStartTheoremProof",
            "676c53c8d6139fdc9e9b55f197f23ba74d1f156a"
        ],
        [
            "intros ? k s.",
            "VernacExtend",
            "2cc2579b4bc9b3ad3bbe90e69d0c2301463fd4db"
        ],
        [
            "generalize s k; clear s k.",
            "VernacExtend",
            "8e06dfbf3ae913305c9c4ffd4079b3c7a5e0ebf0"
        ],
        [
            "induction s; intros.",
            "VernacExtend",
            "7e5c561798a027d2f2f185c622b0b98435248a37"
        ],
        [
            "destruct k; [ | elimtype False; omega ].",
            "VernacExtend",
            "0480d31406f4cbb9f30af5f35b6236206a7c043a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct k.",
            "VernacExtend",
            "276a2174e55489a07c8e0fd8db1630e98ae9c376"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct e; replace (1 + S s) with (S (1 + s)) by omega; simpl; f_equal; eauto with omega.",
            "VernacExtend",
            "014d342e359db27be8d4f6d038a0c291e9d734c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_insert_always: forall A k s (a b : option A) e, raw_insert k a (raw_insert s b e) = raw_insert (shift k s) b (raw_insert (if le_gt_dec k s then k else k - 1) a e).",
            "VernacStartTheoremProof",
            "e90358be896daf9e5497ca3b22fde11d86d42ac3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_gt_dec k s).",
            "VernacExtend",
            "77fe87b4905824a5faeec4d73ec239e507110fc2"
        ],
        [
            "rewrite lift_idx_old by assumption.",
            "VernacExtend",
            "ebfdf53c3622b56430d64c6fece329f70b7ed9b3"
        ],
        [
            "eauto using insert_insert.",
            "VernacExtend",
            "f6695a031d545e2b296162209fcda47b4d6e691b"
        ],
        [
            "rewrite lift_idx_recent by assumption.",
            "VernacExtend",
            "e9a284880d8ac088200620fca4000b898272ae9a"
        ],
        [
            "replace k with (1 + (k - 1)) in * by omega.",
            "VernacExtend",
            "efe636901660b4f4b893cc4ed425da841f62592c"
        ],
        [
            "rewrite <- insert_insert by omega.",
            "VernacExtend",
            "f09975aaf128c4ce8b403c255fade0c4ea992282"
        ],
        [
            "do 2 f_equal.",
            "VernacExtend",
            "74f83f01290e37153981e2e772bf9a265f1f15d0"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac insert_insert := first [ rewrite insert_insert; [ reflexivity | omega ] | rewrite <- insert_insert; [ reflexivity | omega ] ].",
            "VernacExtend",
            "c33f6ae9febc5d744ba1ff1e10c65d93586f64db"
        ],
        [
            "Hint Extern 1 (raw_insert _ _ _ = _) => insert_insert : insert_insert.",
            "VernacHints",
            "8c1c2c55843120300be684f4bf101fe8d455e003"
        ],
        [
            "Hint Extern 1 (_ = raw_insert _ _ _) => insert_insert : insert_insert.",
            "VernacHints",
            "c771c8a07a4c7535067ac4ee47232e419d757641"
        ],
        [
            "Lemma insert_nil: forall A x a (e : env A), insert x a e = nil -> False.",
            "VernacStartTheoremProof",
            "a08801d0b3fb86e9e1fc34a57833a548fc68bcd6"
        ],
        [
            "destruct x; destruct e; simpl; congruence.",
            "VernacExtend",
            "b6f302be6d75343ed2702bc92b038ed5389082a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_eq_insert_1: forall A x a1 a2 (e1 e2 : env A), insert x a1 e1 = insert x a2 e2 -> a1 = a2.",
            "VernacStartTheoremProof",
            "58663fce8678acc2a97be6240bda253ade72df60"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (lookup x (insert x a1 e1) = Some a1).",
            "VernacExtend",
            "d81f4d1efd5b1e9fc6c0abc2215004b165b77437"
        ],
        [
            "eauto using lookup_insert_bingo.",
            "VernacExtend",
            "20ef70f5fb01aa8f2f669e84669d428f3eba50b7"
        ],
        [
            "assert (lookup x (insert x a2 e2) = Some a2).",
            "VernacExtend",
            "627577c4cc20cd9240544affa27b70a4f4bc21b2"
        ],
        [
            "eauto using lookup_insert_bingo.",
            "VernacExtend",
            "20ef70f5fb01aa8f2f669e84669d428f3eba50b7"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_eq_insert_2: forall A x a1 a2 (e1 e2 : env A), insert x a1 e1 = insert x a2 e2 -> forall b, insert x b e1 = insert x b e2.",
            "VernacStartTheoremProof",
            "78a2c466211202abd71bf3bbbe61fe6d94e0ad59"
        ],
        [
            "induction x; simpl; intros.",
            "VernacExtend",
            "691cd388c95cc3e8c35c6d5a814b368270d6121e"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "destruct e1; destruct e2; match goal with h: _ = _ |- _ => injection h; clear h; intros end; f_equal; try congruence; eauto.",
            "VernacExtend",
            "2548abff5c8ffc09a7cb11a0ef8055c19f3473b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_eq_insert_3: forall A x1 x2 a1 a2 (e1 e2 : env A), insert x1 a1 e1 = insert x2 a2 e2 -> x1 <> x2 -> exists e y1 y2, e1 = insert y1 a2 e /\\ e2 = insert y2 a1 e /\\ shift x1 y1 = x2 /\\ y2 = (if le_gt_dec x1 y1 then x1 else x1 - 1).",
            "VernacStartTheoremProof",
            "1d1df9895bcc391d067087017230fe8e6ebb5b02"
        ],
        [
            "induction x1; intros.",
            "VernacExtend",
            "e2f62339bdece68ab928164864526003397dca0c"
        ],
        [
            "destruct x2; [ omega | ].",
            "VernacExtend",
            "1b17a0e1b86e425edd021169961df29d6ba7d906"
        ],
        [
            "rewrite raw_insert_zero in *.",
            "VernacExtend",
            "5e929b1934e3876672ef27c7ffb8c143299a80ce"
        ],
        [
            "rewrite raw_insert_successor in *.",
            "VernacExtend",
            "0c0878bb89b277a7a23c82de532fc7d2d8adabbe"
        ],
        [
            "match goal with h: _ = _ |- _ => injection h; clear h; intros end.",
            "VernacExtend",
            "2ba0aa72b86b35a5fda5045ff650713567d9aae6"
        ],
        [
            "destruct e2; [ congruence | ].",
            "VernacExtend",
            "6ba6d79d15903a4c2519907d46b1548c86702cd4"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "exists e2.",
            "VernacExtend",
            "9cb2d33645ba8c267ce13e3d54ca13f273d38de9"
        ],
        [
            "exists x2.",
            "VernacExtend",
            "c66cfc490b972d4e27c8ead94cd5deb052231b69"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "destruct x2.",
            "VernacExtend",
            "06b7356f3445eedbfafb62a699d0172c159f7c63"
        ],
        [
            "rewrite raw_insert_zero in *.",
            "VernacExtend",
            "5e929b1934e3876672ef27c7ffb8c143299a80ce"
        ],
        [
            "rewrite raw_insert_successor in *.",
            "VernacExtend",
            "0c0878bb89b277a7a23c82de532fc7d2d8adabbe"
        ],
        [
            "match goal with h: _ = _ |- _ => injection h; clear h; intros end.",
            "VernacExtend",
            "2ba0aa72b86b35a5fda5045ff650713567d9aae6"
        ],
        [
            "destruct e1; [ congruence | ].",
            "VernacExtend",
            "9585703527a11a96abba518b475446c87d57ab4f"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "exists e1.",
            "VernacExtend",
            "564b4fdbeeb6d2b59c3642c5c45b062a0596fd42"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "dblib_by_cases.",
            "VernacExtend",
            "82a268ba735803ab3197bc31c28b647f41637837"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "do 2 rewrite raw_insert_successor in *.",
            "VernacExtend",
            "fd151b957e4f34576a4e4b04f5ce28dcebdc2e5b"
        ],
        [
            "assert (xx: x1 <> x2).",
            "VernacExtend",
            "8c13062b4d9ca01360347856de5e3642a8a6203e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "match goal with h: _ = _ |- _ => injection h; clear h; intros h ?; generalize (IHx1 _ _ _ _ _ h xx); intros [ e [ y1 [ y2 [ ? [ ? [ ? ? ]]]]]] end.",
            "VernacExtend",
            "f80db062d7bce33eadbb2b4a5bc17d265abd97c3"
        ],
        [
            "destruct e1; simpl tl in *; [ elimtype False; eauto using insert_nil | ].",
            "VernacExtend",
            "a199575ecbeb11365b5aebbec5f8572ab9c40e50"
        ],
        [
            "destruct e2; simpl tl in *; [ elimtype False; eauto using insert_nil | ].",
            "VernacExtend",
            "8cfa5d1e356a0967225ab0a4c8a2326ed0635a00"
        ],
        [
            "exists (o :: e).",
            "VernacExtend",
            "2dabe699d8b9d9573eb5c3d9412db1574035fab0"
        ],
        [
            "exists (S y1).",
            "VernacExtend",
            "9420fb40e8eaf595fad12779a4cf7f03657ec0a4"
        ],
        [
            "exists (S y2).",
            "VernacExtend",
            "2b00372343ecbe6b9b9b41ffc3e9a7d01c85a1a9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply translate_lift with (k := 1).",
            "VernacExtend",
            "2aec97d3eaad351f8b663ef134d4d8a53966706f"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "dblib_by_cases; omega.",
            "VernacExtend",
            "869e0258a0bdbe16f98b1792baa4e08216c62a40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_insert: forall A B (f : A -> B) x a e, map f (insert x a e) = insert x (f a) (map f e).",
            "VernacStartTheoremProof",
            "5228f630fdd91d260b942b55a45153a757ad13e6"
        ],
        [
            "induction x; intros; destruct e; simpl; eauto.",
            "VernacExtend",
            "198d491d3564dc6d10d2e0b5287f84dbd96a56b2"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "match goal with o: option _ |- _ => destruct o end; f_equal; eauto.",
            "VernacExtend",
            "f6791c8f6d7a34ea390ed03aa52695431b2c2750"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_insert_eq: forall A B (f : A -> B) x a b e, f a = b -> map f (insert x a e) = insert x b (map f e).",
            "VernacStartTheoremProof",
            "6ef59fd3b90f19d8059139b031a71373552e8784"
        ],
        [
            "intros; subst.",
            "VernacExtend",
            "49b62e7b0b09b594bdd02547566afd646d616645"
        ],
        [
            "eapply map_insert.",
            "VernacExtend",
            "95568abe513fecd47bd4d68b30e222d0df9edcc3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac map_insert := first [ rewrite map_insert; reflexivity | rewrite <- map_insert; reflexivity ].",
            "VernacExtend",
            "239baf5de31bed0dd15fab73e580337113a65009"
        ],
        [
            "Hint Extern 1 (map _ (insert _ _ _) = insert _ _ (map _ _)) => map_insert : map_insert.",
            "VernacHints",
            "fc65120acd9a33b2971205b5cbfd690063511214"
        ],
        [
            "Hint Extern 1 (insert _ _ (map _ _) = map _ (insert _ _ _)) => map_insert : map_insert.",
            "VernacHints",
            "9611f6b2b32dec2f8aca56b21e2ca2178663a7af"
        ],
        [
            "Lemma map_raw_insert: forall A B (f : A -> B) x e, map f (raw_insert x None e) = raw_insert x None (map f e).",
            "VernacStartTheoremProof",
            "658ed0b2caa3d57e8062a6ef33e1ec9421cb5ba7"
        ],
        [
            "induction x; intros; destruct e; simpl; eauto.",
            "VernacExtend",
            "198d491d3564dc6d10d2e0b5287f84dbd96a56b2"
        ],
        [
            "rewrite IHx.",
            "VernacExtend",
            "357385fc8aa6d86ac175f8be191ce152840328d1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "match goal with o: option _ |- _ => destruct o end; f_equal; eauto.",
            "VernacExtend",
            "f6791c8f6d7a34ea390ed03aa52695431b2c2750"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_map_fuse: forall A B C (f : B -> C) (g : A -> B) h e, (forall (d : A), f (g d) = h d) -> map f (map g e) = map h e.",
            "VernacStartTheoremProof",
            "84e685356c11b4b5924c8e2f2518b04f029c0608"
        ],
        [
            "induction e; intros; try match goal with o: option _ |- _ => destruct o end; simpl; eauto with f_equal.",
            "VernacExtend",
            "171fbe32d6cdd145e9cf0de97ba2d27f00135774"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_map_exchange: forall A F G B (f1 : F -> B) (f2 : A -> F) (g1 : G -> B) (g2 : A -> G) e, (forall (d : A), f1 (f2 d) = g1 (g2 d)) -> map f1 (map f2 e) = map g1 (map g2 e).",
            "VernacStartTheoremProof",
            "206eb584badcfd46802803309bc50ef4b9a04d12"
        ],
        [
            "induction e; intros; try match goal with o: option _ |- _ => destruct o end; simpl; eauto with f_equal.",
            "VernacExtend",
            "171fbe32d6cdd145e9cf0de97ba2d27f00135774"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_lift_map_lift: forall T k s wk ws (e : env T), forall `{Lift T}, @LiftLift T _ -> k <= s -> map (lift wk k) (map (lift ws s) e) = map (lift ws (wk + s)) (map (lift wk k) e).",
            "VernacStartTheoremProof",
            "3f573cc91d393549377b0e8539fcd7428e24a20d"
        ],
        [
            "eauto using map_map_exchange, @lift_lift.",
            "VernacExtend",
            "61ce303a8415a803d111a81d4f9ef0b5261e7e59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_insert_map: forall A (f g h : A -> A) x (a : A) e, (forall a, f (g a) = g (h a)) -> map f (insert x a (map g e)) = insert x (f a) (map g (map h e)).",
            "VernacStartTheoremProof",
            "7e1e631589a4c4e057c068a5221a717181e434ae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite map_insert.",
            "VernacExtend",
            "bf2b6059d5c8b370719ecf9954e28d46c28d4d3c"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply map_map_exchange.",
            "VernacExtend",
            "557016ba5136eb32ce85fb1c8a009d5766cb6231"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_map_vanish: forall A B (f : B -> A) (g : A -> B) (e : env A), (forall x, f (g x) = x) -> map f (map g e) = e.",
            "VernacStartTheoremProof",
            "c9fa9a71843c885bb31fb25af514f4814da71248"
        ],
        [
            "induction e; intros; try match goal with o: option _ |- _ => destruct o end; simpl; eauto with f_equal.",
            "VernacExtend",
            "171fbe32d6cdd145e9cf0de97ba2d27f00135774"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_empty: forall A B (f : option A -> B -> B) accu, fold f (@empty _) accu = accu.",
            "VernacStartTheoremProof",
            "9cf0b908f1e9d93de57dca171875d78ae8e7709b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_insert: forall A B (f : option A -> B -> B) o e accu, fold f (raw_insert 0 o e) accu = f o (fold f e accu).",
            "VernacStartTheoremProof",
            "0088004f20dcc8350339cf2a61fef043bec62f29"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_invariant: forall A B (P : env A -> B -> Prop) f accu, P (@empty _) accu -> (forall o e accu, P e accu -> P (raw_insert 0 o e) (f o accu)) -> forall e, P e (fold f e accu).",
            "VernacStartTheoremProof",
            "e226a5edd02ffb6735409fabd8c6c8aaed6205ac"
        ],
        [
            "intros ? ? ? ? ? init step.",
            "VernacExtend",
            "0683b9f2c6aa530f494eac0c537712abbe3f0aa2"
        ],
        [
            "induction e; simpl.",
            "VernacExtend",
            "12f66c39871a693dc02a4251a061652a3753efc2"
        ],
        [
            "eapply init.",
            "VernacExtend",
            "d41254c6b4184b63aa87b806f434c2927cfe38ef"
        ],
        [
            "eapply step.",
            "VernacExtend",
            "89845ee457dbd24ea3119ccf46e0922674f15a36"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_monotonic: forall A (e : env A) k1 k2, length e <= k1 -> k1 <= k2 -> length e <= k2.",
            "VernacStartTheoremProof",
            "8ee47f9471b95ad9c82e1f8b5fcae94e2fcc5547"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lookup_beyond_length: forall A (e : env A) x, length e <= x -> lookup x e = None.",
            "VernacStartTheoremProof",
            "9f67840b3b452ab6c5b49e72b46fc435f2bf9610"
        ],
        [
            "induction e; simpl; intros.",
            "VernacExtend",
            "4857b14daa5683d97227392c0b3beec549b62562"
        ],
        [
            "eapply lookup_empty_None.",
            "VernacExtend",
            "bc2c6f89a41bd9de73a60ff589e37e5db0259037"
        ],
        [
            "destruct x; [ omega | ].",
            "VernacExtend",
            "9020870f37835521f918069dc069bc92051e237f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply IHe.",
            "VernacExtend",
            "612b5c7fefb12b778541d01e1b09b27ad50c3c00"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma defined_implies_below_length: forall A (e : env A) x k a, length e <= k -> lookup x e = Some a -> x < k.",
            "VernacStartTheoremProof",
            "8621fc54b375af0077ae10b556083cbc6faa23b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (le_gt_dec k x); intro; try tauto.",
            "VernacExtend",
            "17ceeb8776437af402015a1cb05084d215b47dab"
        ],
        [
            "assert (lookup x e = None).",
            "VernacExtend",
            "5a5309c02adf830dba1bdd2a8bda806f76062910"
        ],
        [
            "eapply lookup_beyond_length.",
            "VernacExtend",
            "90ff623fe728408b6c42440e0f6e1ebc6014b99a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve defined_implies_below_length : lift_idx_hints.",
            "VernacHints",
            "0fe7dcbd4c13ba655d1e92c371220a69ab7d7c8b"
        ],
        [
            "Lemma length_empty: forall A k, length (@empty A) <= k.",
            "VernacStartTheoremProof",
            "9b28f0fcb7bb22694251234e04d4127c5b8262cd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mymax m n := if le_gt_dec m n then n else m.",
            "VernacDefinition",
            "344499a82392a0395d61ee9122bd97a771d178c2"
        ],
        [
            "Ltac mymax := unfold mymax in *; dblib_by_cases; try omega.",
            "VernacExtend",
            "b750dc35fe9efe06bf22b4187e1e0dfbdf89c913"
        ],
        [
            "Lemma mymax_l: forall i j, mymax i j >= i.",
            "VernacStartTheoremProof",
            "0346d649983ab4b236eb2f550f0dfd6b63290a52"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mymax_r: forall i j, mymax i j >= j.",
            "VernacStartTheoremProof",
            "0e98f37dbe5ac17cfab7352f590e4767b7d6c996"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mymax_l mymax_r : mymax.",
            "VernacHints",
            "fa36b6b962c77608ff871caf469b591f6299a312"
        ],
        [
            "Lemma length_insert_general: forall A x k o (e : env A), length e = k -> length (raw_insert x o e) = mymax (1 + k) (1 + x).",
            "VernacStartTheoremProof",
            "3f3c430592b450314fcf7c20f0e7d0c23bfce1a7"
        ],
        [
            "induction x; simpl; intros; subst.",
            "VernacExtend",
            "e8e1c03d93a07623cde6862e3ff00130723972cd"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "destruct e; simpl.",
            "VernacExtend",
            "6ffc61466ff058b612edb5249160815869003a8b"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "erewrite IHx by reflexivity.",
            "VernacExtend",
            "da5595037a3c5bfe847b63f1be07a87f74c6c7c7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "erewrite IHx by reflexivity.",
            "VernacExtend",
            "da5595037a3c5bfe847b63f1be07a87f74c6c7c7"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_insert: forall A x k km1 o (e : env A), length e <= km1 -> km1 <= k - 1 -> x < k -> length (raw_insert x o e) <= k.",
            "VernacStartTheoremProof",
            "7d9a8015b8c4d3b123317bf7e06494eaf82077a9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite length_insert_general by reflexivity.",
            "VernacExtend",
            "e33f3fb8f54ead564edf27f3ba8dece805767666"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_insert_reverse_1: forall A (e : env A) k x a, length (insert x a e) <= k -> x < k.",
            "VernacStartTheoremProof",
            "21f76a9e8c5e85d7314a8087bbaec1cfffe0e672"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite length_insert_general in * by reflexivity.",
            "VernacExtend",
            "f226f851c2b7380a54eefca4e38aaf2beb924460"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_insert_reverse_2: forall A (e : env A) k x a, length (insert x a e) <= k + 1 -> length e <= k.",
            "VernacStartTheoremProof",
            "c3b2a4b81c3f4b38c12d7b39b41d70b6f62de451"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite length_insert_general in * by reflexivity.",
            "VernacExtend",
            "f226f851c2b7380a54eefca4e38aaf2beb924460"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_insert_independent: forall A (e : env A) k x a, length (insert x a e) <= k -> forall y o, y < k -> length (raw_insert y o e) <= k.",
            "VernacStartTheoremProof",
            "ffaa82da06bdf39f19857627bb981798493bee73"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "erewrite length_insert_general in * by reflexivity.",
            "VernacExtend",
            "f226f851c2b7380a54eefca4e38aaf2beb924460"
        ],
        [
            "mymax.",
            "VernacExtend",
            "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_map_general: forall A B (f : A -> B) (e : env A), length (map f e) = length e.",
            "VernacStartTheoremProof",
            "152bf742b7ce84aa5d71e34f840c366bf411522f"
        ],
        [
            "induction e as [| [|] ]; simpl; intros; congruence.",
            "VernacExtend",
            "5947339d0f88bc9f9534673d8f95d1a5bd55d2ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_map: forall A B (f : A -> B) (e : env A) k, length e <= k -> length (map f e) <= k.",
            "VernacStartTheoremProof",
            "bf9e3f9baa1eaf3e248d1c83faed710fe780ddf5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite length_map_general.",
            "VernacExtend",
            "661a1efaee424b61fc01d1e4d8d0ac6775b5c78a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve length_empty length_insert length_map : length.",
            "VernacHints",
            "bad79164619a7e059f9fa7f8d4b2850a59487586"
        ],
        [
            "Hint Resolve length_insert length_map : construction_closed.",
            "VernacHints",
            "b7762c37ce98f9926893f2d95345eab1f6625a8a"
        ],
        [
            "Opaque empty lookup raw_insert map.",
            "VernacSetOpacity",
            "ae4ebb8897f55bd05148f7ec46ace74cba535878"
        ],
        [
            "Definition agree A (e1 e2 : env A) (k : nat) := forall x, x < k -> lookup x e1 = lookup x e2.",
            "VernacDefinition",
            "a5751b69f27c3402654244c0f07587317a71d7ab"
        ],
        [
            "Lemma agree_below: forall A (e1 e2 : env A) x a k, lookup x e1 = Some a -> x < k -> agree e1 e2 k -> lookup x e2 = Some a.",
            "VernacStartTheoremProof",
            "97c78dfc15ef84a9dcd6a1731eec0bd912fa34de"
        ],
        [
            "do 6 intro.",
            "VernacExtend",
            "9f08c22b2e1d126384a164f4a91a47cb451277a1"
        ],
        [
            "intros hlookup ? ?.",
            "VernacExtend",
            "a39e5a19ef242d242da4887f7e2033b62bca7de7"
        ],
        [
            "rewrite <- hlookup.",
            "VernacExtend",
            "d2f9e3d1274948aa155f4404ea6c9e09b7b85aff"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree_empty_left: forall A (e : env A), agree (@empty _) e 0.",
            "VernacStartTheoremProof",
            "0d0170fd3181d5eb858cb681afc90986a8013943"
        ],
        [
            "unfold agree.",
            "VernacExtend",
            "a17798f9a01c690047a430415b7195e4c563ba0c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree_empty_right: forall A (e : env A), agree e (@empty _) 0.",
            "VernacStartTheoremProof",
            "4c12116a7819562433b50d40db44f13375d88a59"
        ],
        [
            "unfold agree.",
            "VernacExtend",
            "a17798f9a01c690047a430415b7195e4c563ba0c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma agree_insert: forall A (e1 e2 : env A) k, agree e1 e2 k -> forall x o, x <= k -> agree (raw_insert x o e1) (raw_insert x o e2) (1 + k).",
            "VernacStartTheoremProof",
            "c621de64daa7110e0dcb83aacc7f26dcdc986438"
        ],
        [
            "unfold agree.",
            "VernacExtend",
            "a17798f9a01c690047a430415b7195e4c563ba0c"
        ],
        [
            "do 8 intro.",
            "VernacExtend",
            "eb5fcd4e224ccb72914bc519a756733d9a0bae47"
        ],
        [
            "intros n ?.",
            "VernacExtend",
            "784c033cc902aa1a20e91298eee9150b7c944a5d"
        ],
        [
            "case (le_gt_dec x n); [ case (eq_nat_dec x n) | ]; intros; do 2 lookup_insert; eauto with omega.",
            "VernacExtend",
            "bbb7e68a426144f23646c397f8f80e85faa9cc73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve defined_implies_below_length agree_below agree_empty_left agree_empty_right agree_insert : agree.",
            "VernacHints",
            "d1086d69a85c0db64fd3c4ea35be0a5d6c4ba22b"
        ],
        [
            "Section Subsume.",
            "VernacBeginSection",
            "694036c815a62a6f248bc36c4d5a3f4afc7921e7"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable sub : A -> A -> Prop.",
            "VernacAssumption",
            "cc2e2ef21162a41b634ca47e1b719e4d0b5f57f3"
        ],
        [
            "Variable sub_reflexive: forall a, sub a a.",
            "VernacAssumption",
            "419bf2ac7e344496cbfa0c1ee5cc4890508582b7"
        ],
        [
            "Variable sub_transitive: forall a1 a2 a3, sub a1 a2 -> sub a2 a3 -> sub a1 a3.",
            "VernacAssumption",
            "3442ef6a7a8ec66594cc7063050d0a97e7d786b3"
        ],
        [
            "Definition osub (o1 o2 : option A) := forall a2, o2 = Some a2 -> exists a1, o1 = Some a1 /\\ sub a1 a2.",
            "VernacDefinition",
            "f4bce73db214de9539550d8e0608b3e492785ab5"
        ],
        [
            "Lemma osub_None: forall o, osub o None.",
            "VernacStartTheoremProof",
            "bfdd137233228556abe0befa89759c53c890c504"
        ],
        [
            "unfold osub.",
            "VernacExtend",
            "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma osub_Some_Some: forall a1 a2, sub a1 a2 -> osub (Some a1) (Some a2).",
            "VernacStartTheoremProof",
            "36596ada931dacc62877143f6a9d183f074e30ec"
        ],
        [
            "unfold osub.",
            "VernacExtend",
            "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
        ],
        [
            "intros ? ? ? ? h.",
            "VernacExtend",
            "efd4dadeee6f9093fc81af47bd1b328883323085"
        ],
        [
            "injection h; clear h; intro; subst; eauto.",
            "VernacExtend",
            "fdc69df3a975c781f06ec1c099c2f4d5f8ced577"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma osub_None_Some: forall a2, osub None (Some a2) -> False.",
            "VernacStartTheoremProof",
            "2c80694b1cbb4b6b4364ee41835718136c48a1e4"
        ],
        [
            "unfold osub.",
            "VernacExtend",
            "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
        ],
        [
            "intros ? h.",
            "VernacExtend",
            "9c5df8df79fd0e3433a96b783772e1f9f52e555e"
        ],
        [
            "generalize (h _ eq_refl).",
            "VernacExtend",
            "04884cc52df7505362e2ec4ca1c9123701c06128"
        ],
        [
            "clear h.",
            "VernacExtend",
            "fed558d1c37ca3024c5b6f944dca9f4b4f125753"
        ],
        [
            "intros [ a1 [ ? ? ]].",
            "VernacExtend",
            "eb10fa8e599fdd2c53b462f65f5a276d3120782d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma osub_Some_inversion: forall o1 a2, osub o1 (Some a2) -> exists a1, o1 = Some a1 /\\ sub a1 a2.",
            "VernacStartTheoremProof",
            "1a014581ffa24352b1125a8fa08de7ee406b0a88"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct o1.",
            "VernacExtend",
            "e4b6f07c66e0fa3dcebbb5dd1c8f9a4899866393"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "eauto using osub_None_Some.",
            "VernacExtend",
            "f382d793fe0471c4d7becf29c1e8fea0a70ee3cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition subsume (e1 e2 : env A) := forall x, osub (lookup x e1) (lookup x e2).",
            "VernacDefinition",
            "b4d433bc4d78c39672c4bddfbf45747627625809"
        ],
        [
            "Lemma osub_reflexive: forall o, osub o o.",
            "VernacStartTheoremProof",
            "2df213363aa51db309c4171c8778d2f131d0c9b5"
        ],
        [
            "unfold osub.",
            "VernacExtend",
            "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_reflexive: forall e, subsume e e.",
            "VernacStartTheoremProof",
            "eab1c1d7eb12fc69f1da3964ed08effd9f9ddbb5"
        ],
        [
            "unfold subsume.",
            "VernacExtend",
            "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
        ],
        [
            "eauto using osub_reflexive.",
            "VernacExtend",
            "75d3b9aef63e44e1f7d48f73767a74fac7dc8872"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma osub_transitive: forall o1 o2 o3, osub o1 o2 -> osub o2 o3 -> osub o1 o3.",
            "VernacStartTheoremProof",
            "e7debce1b1cf0123ccc56f6932e3faf602c09715"
        ],
        [
            "unfold osub.",
            "VernacExtend",
            "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
        ],
        [
            "intros ? ? ? hs1 hs2 a3 h3.",
            "VernacExtend",
            "952fcef10c7eb85e9e30f925cad0997ec42af403"
        ],
        [
            "generalize (hs2 _ h3); intros [ a2 [ h2 ? ]].",
            "VernacExtend",
            "99e64a1e82148d609c052eba97fe7185d907a1e8"
        ],
        [
            "generalize (hs1 _ h2); intros [ a1 [ h1 ? ]].",
            "VernacExtend",
            "0b6048c69dc4a01c9e793251f1580b4ddbce9eab"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_transitive: forall e1 e2 e3, subsume e1 e2 -> subsume e2 e3 -> subsume e1 e3.",
            "VernacStartTheoremProof",
            "fd5f0c8a1b7d498bad43532ea1e6cdbc8d23b8d2"
        ],
        [
            "unfold subsume.",
            "VernacExtend",
            "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
        ],
        [
            "eauto using osub_transitive.",
            "VernacExtend",
            "064408ede842026de7d5735c4f27f54324844b2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_empty: forall e, subsume e (@empty _).",
            "VernacStartTheoremProof",
            "3c0331e18617d0c8439724aacd790b2b1b87c4ba"
        ],
        [
            "unfold subsume.",
            "VernacExtend",
            "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite lookup_empty_None.",
            "VernacExtend",
            "ae7bd36eaa03e8fa4a3a4de3e32181b57ffb5963"
        ],
        [
            "apply osub_None.",
            "VernacExtend",
            "ffb0c08471bf28683d222ca845a7dae269f60df5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_insert: forall e1 e2, subsume e1 e2 -> forall x o1 o2, osub o1 o2 -> subsume (raw_insert x o1 e1) (raw_insert x o2 e2).",
            "VernacStartTheoremProof",
            "3c68ef5e4e241c2058dd98e53e3653ef95318fe3"
        ],
        [
            "unfold subsume.",
            "VernacExtend",
            "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
        ],
        [
            "do 7 intro.",
            "VernacExtend",
            "2236b6c7865274b108cfb8a568894531eb8bd125"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "case (le_gt_dec x n); [ case (eq_nat_dec x n) | ]; intros; repeat lookup_insert; eauto.",
            "VernacExtend",
            "adf84a1b6828dc5d6c0e01004a2761a1be66a90e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_cons: forall o e1 e2, osub o (lookup 0 e2) -> subsume e1 (tl e2) -> subsume (o :: e1) e2.",
            "VernacStartTheoremProof",
            "cb80590c2116242fdf88d85fe0b5db1bb1ae26f6"
        ],
        [
            "do 3 intro.",
            "VernacExtend",
            "177de6f66fcc47b0b56e5a6eca140fd577ebdd59"
        ],
        [
            "intros h1 h2.",
            "VernacExtend",
            "05daa094966618e9a387faae5c90af054e59255f"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "do 2 rewrite lookup_successor.",
            "VernacExtend",
            "6b737801302c1beadfa4c8aa16af84af9791acfc"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_cons_cons_inversion: forall o1 o2 e1 e2, subsume (o1 :: e1) (o2 :: e2) -> osub o1 o2 /\\ subsume e1 e2.",
            "VernacStartTheoremProof",
            "238375ce6161dcfa2c2c86db0fdad4d507d08f92"
        ],
        [
            "do 4 intro.",
            "VernacExtend",
            "f9fb059d7761e4197e62492b83edb74ab62c074d"
        ],
        [
            "intro h.",
            "VernacExtend",
            "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply (h 0).",
            "VernacExtend",
            "9a101396df057eba5d050e645b84553868f24b2d"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "eapply (h (1 + n)).",
            "VernacExtend",
            "448634e212e14ccffbd54503e747ebb56183eae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_insert_inversion: forall e1 x a2 e2, subsume e1 (insert x a2 e2) -> exists f1 a1, e1 = insert x a1 f1 /\\ subsume f1 e2 /\\ sub a1 a2.",
            "VernacStartTheoremProof",
            "c4152777a91907507fc8f2f780051bf25374fcce"
        ],
        [
            "induction e1; simpl; intros.",
            "VernacExtend",
            "e5db96b553d906786185bf423745be93c34a5ec6"
        ],
        [
            "elimtype False.",
            "VernacExtend",
            "193053c8983316978aeded05598d605cc4f35bde"
        ],
        [
            "match goal with h: subsume nil _ |- _ => generalize (h x); clear h; intro h; rewrite lookup_insert_bingo in h by reflexivity; rewrite lookup_empty_None in h end.",
            "VernacExtend",
            "108ab38a900ffeb5874b670adf166fe43de11230"
        ],
        [
            "solve [ eauto using osub_None_Some ].",
            "VernacExtend",
            "ca0045244170bdb66b3fdea600096a73d7f97a40"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "match goal with h: subsume _ _ |- _ => rewrite raw_insert_zero in h; generalize (subsume_cons_cons_inversion h); clear h; intros [ h ? ]; generalize (osub_Some_inversion h); intros [ ? [ ? ? ]]; subst end.",
            "VernacExtend",
            "596f2f747e80fa25e4548c9c295d7b296dd2ce7b"
        ],
        [
            "do 2 eexists.",
            "VernacExtend",
            "83ae853c6f7fbb0db1c33a14fdaf914214b08f87"
        ],
        [
            "rewrite raw_insert_zero.",
            "VernacExtend",
            "2128355e00ee154e9dc7b5b3b8677e8e3f36465b"
        ],
        [
            "solve [ eauto ].",
            "VernacExtend",
            "297942f022397d6e86917c11406329d3d3f22e64"
        ],
        [
            "match goal with h: subsume _ _ |- _ => rewrite raw_insert_successor in h; generalize (subsume_cons_cons_inversion h); clear h; intros [ ? h ]; generalize (IHe1 _ _ _ h); clear IHe1; intros [ f1 [ a1 [ ? [ ? ? ]]]]; subst end.",
            "VernacExtend",
            "6463f7479fa16f995039465f47b38e04b3aeb4da"
        ],
        [
            "exists (a :: f1).",
            "VernacExtend",
            "7c82f3e2733fbae95290ee9beda8ef7193a7a33d"
        ],
        [
            "exists a1.",
            "VernacExtend",
            "e55aef4ce75ec5c7593314565beded748118ffed"
        ],
        [
            "rewrite raw_insert_successor.",
            "VernacExtend",
            "36bc25317c535260a7274cca88c32f8d23a6abd7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; [ | split ].",
            "VernacExtend",
            "d2f933e98f73ab8a5c6be2969adff348cdfe06d5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "eauto using subsume_cons.",
            "VernacExtend",
            "15ce218cac3b462e741fe5aacd7faa3bcf700cc3"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsume_map: forall f, (forall a1 a2, sub a1 a2 -> sub (f a1) (f a2)) -> forall e1 e2, subsume e1 e2 -> subsume (map f e1) (map f e2).",
            "VernacStartTheoremProof",
            "173b57ead799d37d6b26ee42da01dadee5a8e46b"
        ],
        [
            "intros ? hf ? ? hs.",
            "VernacExtend",
            "61fb37543220a9783466d8278a666fed00d666cf"
        ],
        [
            "intros ? b2 hlm2.",
            "VernacExtend",
            "4eaea5c7c2955459994b6ea4dd5b2dfd5bb11af0"
        ],
        [
            "generalize (lookup_map_some_reverse _ _ _ hlm2); intros [ ? [ hl2 ? ]].",
            "VernacExtend",
            "0ad8f213994b186304a0290a1c3e4a22028e7cbf"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "generalize (hs _ _ hl2); intros [ a1 [ ? ? ]].",
            "VernacExtend",
            "0e9c50944937781e36d4d99188092a6f90b230e3"
        ],
        [
            "eauto using lookup_map_some.",
            "VernacExtend",
            "1d1bd2456bae15b56c9a4f98aa2ae700688073bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Subsume.",
            "VernacEndSegment",
            "106985919cb10d962609efb2863fda3a9d2b4ead"
        ],
        [
            "Hint Resolve osub_reflexive osub_Some_Some subsume_reflexive subsume_transitive subsume_empty subsume_insert subsume_map : subsume.",
            "VernacHints",
            "755966512f7ca096b26f2e57a2b7818e8e15a4fd"
        ],
        [
            "Fixpoint concat (A : Type) (e1 : env A) (e2 : list A) : env A := match e2 with | nil => e1 | cons a e2 => concat (insert 0 a e1) e2 end.",
            "VernacFixpoint",
            "60903f5a1d464f81328db69a2e65777de45d7a78"
        ],
        [
            "Lemma omega_hint_1: forall n, n <= (n + 1) - 1.",
            "VernacStartTheoremProof",
            "5d98ae72e28f3b2788c78894ed466a9152fe1850"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_concat: forall A (e2 : list A) (e1 : env A) n1 n, length e1 <= n1 -> n1 + length e2 = n -> length (concat e1 e2) <= n.",
            "VernacStartTheoremProof",
            "e1a4221b44d9cd3dd96c045d853e9b3c2e5881b2"
        ],
        [
            "induction e2; simpl; intros.",
            "VernacExtend",
            "63d1dac2955a20746380438331d2c966771a38c4"
        ],
        [
            "replace n with n1 by omega.",
            "VernacExtend",
            "6f9c346a66747a4fc3bccae7116631d68bb0a993"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eauto using length_insert, omega_hint_1 with omega.",
            "VernacExtend",
            "4025068fb1c7345cdc9d35b9b6371cfa2a15113c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve length_concat : length construction_closed.",
            "VernacHints",
            "e972ba9c9a4c5c9c2326ca6ff84416653916b253"
        ],
        [
            "Lemma agree_concat: forall A (e : list A) (e1 e2 : env A) k n, agree e1 e2 k -> k + length e = n -> agree (concat e1 e) (concat e2 e) n.",
            "VernacStartTheoremProof",
            "9501f0633d111876bb71f1246a5331f71d6f22ad"
        ],
        [
            "induction e; simpl; intros.",
            "VernacExtend",
            "4857b14daa5683d97227392c0b3beec549b62562"
        ],
        [
            "replace n with k by omega.",
            "VernacExtend",
            "3d377072541ef3fbda4c21bafbd0968088615759"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eauto using agree_insert with omega.",
            "VernacExtend",
            "91656d0d636abdb062b6df8fd845cc402f9b9d2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve agree_concat : agree.",
            "VernacHints",
            "08993c60d094af0221b8bc6b9b41a0894a0ae249"
        ],
        [
            "Lemma insert_concat: forall (A : Type) n x nx (o : option A) e1 e2, length e2 = n -> n + x = nx -> raw_insert nx o (concat e1 e2) = concat (raw_insert x o e1) e2.",
            "VernacStartTheoremProof",
            "916144f76a366f4b78ba7508c44741649272bbc8"
        ],
        [
            "induction n; intros; subst; destruct e2; simpl in *; try discriminate; auto.",
            "VernacExtend",
            "cb5ca77d8d14e6047edcd5ba25b39b58236fd62a"
        ],
        [
            "rewrite insert_insert by omega.",
            "VernacExtend",
            "fbaf0106ec55056b5cd55f709ec434f817d4a1a8"
        ],
        [
            "erewrite <- (IHn (1 + x)) by first [ congruence | eauto ].",
            "VernacExtend",
            "ada7108d2ab0746fd54ac16f6eff601a78a4127c"
        ],
        [
            "eauto with f_equal omega.",
            "VernacExtend",
            "272fc4a01c00ab32878330dab0f3ae43ad01cedb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint replicate (A : Type) (n : nat) (a : A) : list A := match n with | 0 => @nil _ | S n => cons a (replicate n a) end.",
            "VernacFixpoint",
            "e3def15797f282153203970d5a8998bcdb48bb40"
        ],
        [
            "Lemma length_replicate: forall (A : Type) n (a : A), length (replicate n a) = n.",
            "VernacStartTheoremProof",
            "45a0f5c80a675f83f6be9a46d3e0201813d3db09"
        ],
        [
            "induction n; simpl; auto.",
            "VernacExtend",
            "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma insert_concat_replicate: forall (A : Type) n x nx (a : option A) (b : A) e1, n + x = nx -> raw_insert nx a (concat e1 (replicate n b)) = concat (raw_insert x a e1) (replicate n b).",
            "VernacStartTheoremProof",
            "1f4335c1278a3ea4f405cfa5694ffd3fc91661a9"
        ],
        [
            "eauto using insert_concat, length_replicate.",
            "VernacExtend",
            "16a20f308b5262ad228db639c2c6d00c53c13943"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma concat_replicate_is_iterated_insert: forall (A : Type) n (a : A) e, insert n a (concat e (replicate n a)) = concat e (replicate (S n) a).",
            "VernacStartTheoremProof",
            "a02cfd628683c9e73bcf9e956511b7d2505fae0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eauto using insert_concat, length_replicate.",
            "VernacExtend",
            "16a20f308b5262ad228db639c2c6d00c53c13943"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve insert_concat length_replicate insert_concat_replicate concat_replicate_is_iterated_insert : insert_concat.",
            "VernacHints",
            "a0b0a3a40ff97ed43f1f81e14acec1c731c817c0"
        ],
        [
            "Lemma length_concat_replicate: forall A (a : A) (e1 : env A) n1 n2 n, length e1 <= n1 -> n1 + n2 = n -> length (concat e1 (replicate n2 a)) <= n.",
            "VernacStartTheoremProof",
            "d49a0dde22e356c8fa196f9ca5b4ccc5f840d044"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply length_concat.",
            "VernacExtend",
            "041b98b541e42bee5da07b9ebcf31823b7d1e7c8"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite length_replicate.",
            "VernacExtend",
            "052b450189a281cc3047766680b73ff100c8060d"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve length_concat_replicate : length construction_closed.",
            "VernacHints",
            "80235ee31ef1f9e3869fc935476bfa61e016077e"
        ],
        [
            "Global Opaque empty lookup raw_insert map.",
            "VernacSetOpacity",
            "0b41be73eb8cb9b6feea2bc64d79c09a2f1f51fc"
        ]
    ],
    "proofs": [
        {
            "name": "one_plus_x_minus_one_left",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_plus_x_minus_one_right",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "raw_insert_zero",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "raw_insert_successor",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct e; reflexivity.",
                        "VernacExtend",
                        "b936eee5257e73f9a5a0f8feb1ce207f600658d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_eq_insert",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold empty; intros; destruct x.",
                        "VernacExtend",
                        "e6fd2571781cb5b3910f0a1c610f7081e1049d40"
                    ]
                },
                {
                    "command": [
                        "rewrite raw_insert_zero in *.",
                        "VernacExtend",
                        "5e929b1934e3876672ef27c7ffb8c143299a80ce"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "rewrite raw_insert_successor in *.",
                        "VernacExtend",
                        "0c0878bb89b277a7a23c82de532fc7d2d8adabbe"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_empty_None",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "destruct x; simpl; reflexivity.",
                        "VernacExtend",
                        "bf46ea4b4ab4f3a324d96e5b30df99e94315b026"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_empty_Some",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "destruct x; simpl; congruence.",
                        "VernacExtend",
                        "589ac594637130f07e116241849097fc4a3d47d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_successor",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "destruct e.",
                        "VernacExtend",
                        "6785fac4a52839433f2a36a721f6e0fc71773d77"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite lookup_empty_None.",
                        "VernacExtend",
                        "1601f7d608f80296ed1787950fec1ebc84e1612b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_insert_bingo",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "induction x; intros; destruct y; destruct e; simpl; try solve [ elimtype False; omega | eauto with omega ].",
                        "VernacExtend",
                        "4ab24221bb551b88fc8c4d3c2de75bde262f1fa8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_shift_insert",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct_lift_idx.",
                        "VernacExtend",
                        "5003f89bc031a087889c2d6d50697c3f9652a69e"
                    ]
                },
                {
                    "command": [
                        "rewrite lookup_insert_old by omega.",
                        "VernacExtend",
                        "4ee4e0d8d7cb2e56074d38e5e73354f5a3166547"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "rewrite lookup_insert_recent by omega.",
                        "VernacExtend",
                        "89fe6d65000f6e5d4de169e1e497063c0b727670"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_empty",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_map_none",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "induction x; intros; destruct e as [ | [ | ] ? ]; simpl in *; subst; solve [ eauto | congruence ].",
                        "VernacExtend",
                        "0d442ef57d952bd13ab4a9df4c9a200eaef2e70d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_map_some",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "induction x; intros; destruct e as [ | [ | ] ? ]; simpl in *; subst; try solve [ congruence | eauto ].",
                        "VernacExtend",
                        "0db753e0defaebecc8ae3ae1875aa092a1f757bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_insert",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros ? k s.",
                        "VernacExtend",
                        "2cc2579b4bc9b3ad3bbe90e69d0c2301463fd4db"
                    ]
                },
                {
                    "command": [
                        "generalize s k; clear s k.",
                        "VernacExtend",
                        "8e06dfbf3ae913305c9c4ffd4079b3c7a5e0ebf0"
                    ]
                },
                {
                    "command": [
                        "induction s; intros.",
                        "VernacExtend",
                        "7e5c561798a027d2f2f185c622b0b98435248a37"
                    ]
                },
                {
                    "command": [
                        "destruct k; [ | elimtype False; omega ].",
                        "VernacExtend",
                        "0480d31406f4cbb9f30af5f35b6236206a7c043a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct k.",
                        "VernacExtend",
                        "276a2174e55489a07c8e0fd8db1630e98ae9c376"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct e; replace (1 + S s) with (S (1 + s)) by omega; simpl; f_equal; eauto with omega.",
                        "VernacExtend",
                        "014d342e359db27be8d4f6d038a0c291e9d734c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_insert_always",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec k s).",
                        "VernacExtend",
                        "77fe87b4905824a5faeec4d73ec239e507110fc2"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_idx_old by assumption.",
                        "VernacExtend",
                        "ebfdf53c3622b56430d64c6fece329f70b7ed9b3"
                    ]
                },
                {
                    "command": [
                        "eauto using insert_insert.",
                        "VernacExtend",
                        "f6695a031d545e2b296162209fcda47b4d6e691b"
                    ]
                },
                {
                    "command": [
                        "rewrite lift_idx_recent by assumption.",
                        "VernacExtend",
                        "e9a284880d8ac088200620fca4000b898272ae9a"
                    ]
                },
                {
                    "command": [
                        "replace k with (1 + (k - 1)) in * by omega.",
                        "VernacExtend",
                        "efe636901660b4f4b893cc4ed425da841f62592c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- insert_insert by omega.",
                        "VernacExtend",
                        "f09975aaf128c4ce8b403c255fade0c4ea992282"
                    ]
                },
                {
                    "command": [
                        "do 2 f_equal.",
                        "VernacExtend",
                        "74f83f01290e37153981e2e772bf9a265f1f15d0"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_nil",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "destruct x; destruct e; simpl; congruence.",
                        "VernacExtend",
                        "b6f302be6d75343ed2702bc92b038ed5389082a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_eq_insert_1",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (lookup x (insert x a1 e1) = Some a1).",
                        "VernacExtend",
                        "d81f4d1efd5b1e9fc6c0abc2215004b165b77437"
                    ]
                },
                {
                    "command": [
                        "eauto using lookup_insert_bingo.",
                        "VernacExtend",
                        "20ef70f5fb01aa8f2f669e84669d428f3eba50b7"
                    ]
                },
                {
                    "command": [
                        "assert (lookup x (insert x a2 e2) = Some a2).",
                        "VernacExtend",
                        "627577c4cc20cd9240544affa27b70a4f4bc21b2"
                    ]
                },
                {
                    "command": [
                        "eauto using lookup_insert_bingo.",
                        "VernacExtend",
                        "20ef70f5fb01aa8f2f669e84669d428f3eba50b7"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_eq_insert_2",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "induction x; simpl; intros.",
                        "VernacExtend",
                        "691cd388c95cc3e8c35c6d5a814b368270d6121e"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "destruct e1; destruct e2; match goal with h: _ = _ |- _ => injection h; clear h; intros end; f_equal; try congruence; eauto.",
                        "VernacExtend",
                        "2548abff5c8ffc09a7cb11a0ef8055c19f3473b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_eq_insert_3",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "induction x1; intros.",
                        "VernacExtend",
                        "e2f62339bdece68ab928164864526003397dca0c"
                    ]
                },
                {
                    "command": [
                        "destruct x2; [ omega | ].",
                        "VernacExtend",
                        "1b17a0e1b86e425edd021169961df29d6ba7d906"
                    ]
                },
                {
                    "command": [
                        "rewrite raw_insert_zero in *.",
                        "VernacExtend",
                        "5e929b1934e3876672ef27c7ffb8c143299a80ce"
                    ]
                },
                {
                    "command": [
                        "rewrite raw_insert_successor in *.",
                        "VernacExtend",
                        "0c0878bb89b277a7a23c82de532fc7d2d8adabbe"
                    ]
                },
                {
                    "command": [
                        "match goal with h: _ = _ |- _ => injection h; clear h; intros end.",
                        "VernacExtend",
                        "2ba0aa72b86b35a5fda5045ff650713567d9aae6"
                    ]
                },
                {
                    "command": [
                        "destruct e2; [ congruence | ].",
                        "VernacExtend",
                        "6ba6d79d15903a4c2519907d46b1548c86702cd4"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "exists e2.",
                        "VernacExtend",
                        "9cb2d33645ba8c267ce13e3d54ca13f273d38de9"
                    ]
                },
                {
                    "command": [
                        "exists x2.",
                        "VernacExtend",
                        "c66cfc490b972d4e27c8ead94cd5deb052231b69"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "destruct x2.",
                        "VernacExtend",
                        "06b7356f3445eedbfafb62a699d0172c159f7c63"
                    ]
                },
                {
                    "command": [
                        "rewrite raw_insert_zero in *.",
                        "VernacExtend",
                        "5e929b1934e3876672ef27c7ffb8c143299a80ce"
                    ]
                },
                {
                    "command": [
                        "rewrite raw_insert_successor in *.",
                        "VernacExtend",
                        "0c0878bb89b277a7a23c82de532fc7d2d8adabbe"
                    ]
                },
                {
                    "command": [
                        "match goal with h: _ = _ |- _ => injection h; clear h; intros end.",
                        "VernacExtend",
                        "2ba0aa72b86b35a5fda5045ff650713567d9aae6"
                    ]
                },
                {
                    "command": [
                        "destruct e1; [ congruence | ].",
                        "VernacExtend",
                        "9585703527a11a96abba518b475446c87d57ab4f"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "exists e1.",
                        "VernacExtend",
                        "564b4fdbeeb6d2b59c3642c5c45b062a0596fd42"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "exists x1.",
                        "VernacExtend",
                        "41149f92e5f2a0109418d3e02971541f67fbd3df"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "dblib_by_cases.",
                        "VernacExtend",
                        "82a268ba735803ab3197bc31c28b647f41637837"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite raw_insert_successor in *.",
                        "VernacExtend",
                        "fd151b957e4f34576a4e4b04f5ce28dcebdc2e5b"
                    ]
                },
                {
                    "command": [
                        "assert (xx: x1 <> x2).",
                        "VernacExtend",
                        "8c13062b4d9ca01360347856de5e3642a8a6203e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "match goal with h: _ = _ |- _ => injection h; clear h; intros h ?; generalize (IHx1 _ _ _ _ _ h xx); intros [ e [ y1 [ y2 [ ? [ ? [ ? ? ]]]]]] end.",
                        "VernacExtend",
                        "f80db062d7bce33eadbb2b4a5bc17d265abd97c3"
                    ]
                },
                {
                    "command": [
                        "destruct e1; simpl tl in *; [ elimtype False; eauto using insert_nil | ].",
                        "VernacExtend",
                        "a199575ecbeb11365b5aebbec5f8572ab9c40e50"
                    ]
                },
                {
                    "command": [
                        "destruct e2; simpl tl in *; [ elimtype False; eauto using insert_nil | ].",
                        "VernacExtend",
                        "8cfa5d1e356a0967225ab0a4c8a2326ed0635a00"
                    ]
                },
                {
                    "command": [
                        "exists (o :: e).",
                        "VernacExtend",
                        "2dabe699d8b9d9573eb5c3d9412db1574035fab0"
                    ]
                },
                {
                    "command": [
                        "exists (S y1).",
                        "VernacExtend",
                        "9420fb40e8eaf595fad12779a4cf7f03657ec0a4"
                    ]
                },
                {
                    "command": [
                        "exists (S y2).",
                        "VernacExtend",
                        "2b00372343ecbe6b9b9b41ffc3e9a7d01c85a1a9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply translate_lift with (k := 1).",
                        "VernacExtend",
                        "2aec97d3eaad351f8b663ef134d4d8a53966706f"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "dblib_by_cases; omega.",
                        "VernacExtend",
                        "869e0258a0bdbe16f98b1792baa4e08216c62a40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_insert",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "induction x; intros; destruct e; simpl; eauto.",
                        "VernacExtend",
                        "198d491d3564dc6d10d2e0b5287f84dbd96a56b2"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "match goal with o: option _ |- _ => destruct o end; f_equal; eauto.",
                        "VernacExtend",
                        "f6791c8f6d7a34ea390ed03aa52695431b2c2750"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_insert_eq",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "intros; subst.",
                        "VernacExtend",
                        "49b62e7b0b09b594bdd02547566afd646d616645"
                    ]
                },
                {
                    "command": [
                        "eapply map_insert.",
                        "VernacExtend",
                        "95568abe513fecd47bd4d68b30e222d0df9edcc3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_raw_insert",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "induction x; intros; destruct e; simpl; eauto.",
                        "VernacExtend",
                        "198d491d3564dc6d10d2e0b5287f84dbd96a56b2"
                    ]
                },
                {
                    "command": [
                        "rewrite IHx.",
                        "VernacExtend",
                        "357385fc8aa6d86ac175f8be191ce152840328d1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "match goal with o: option _ |- _ => destruct o end; f_equal; eauto.",
                        "VernacExtend",
                        "f6791c8f6d7a34ea390ed03aa52695431b2c2750"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_map_fuse",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "induction e; intros; try match goal with o: option _ |- _ => destruct o end; simpl; eauto with f_equal.",
                        "VernacExtend",
                        "171fbe32d6cdd145e9cf0de97ba2d27f00135774"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_map_exchange",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "induction e; intros; try match goal with o: option _ |- _ => destruct o end; simpl; eauto with f_equal.",
                        "VernacExtend",
                        "171fbe32d6cdd145e9cf0de97ba2d27f00135774"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_lift_map_lift",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "eauto using map_map_exchange, @lift_lift.",
                        "VernacExtend",
                        "61ce303a8415a803d111a81d4f9ef0b5261e7e59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_insert_map",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite map_insert.",
                        "VernacExtend",
                        "bf2b6059d5c8b370719ecf9954e28d46c28d4d3c"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply map_map_exchange.",
                        "VernacExtend",
                        "557016ba5136eb32ce85fb1c8a009d5766cb6231"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_map_vanish",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "induction e; intros; try match goal with o: option _ |- _ => destruct o end; simpl; eauto with f_equal.",
                        "VernacExtend",
                        "171fbe32d6cdd145e9cf0de97ba2d27f00135774"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_empty",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_insert",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_invariant",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? ? ? init step.",
                        "VernacExtend",
                        "0683b9f2c6aa530f494eac0c537712abbe3f0aa2"
                    ]
                },
                {
                    "command": [
                        "induction e; simpl.",
                        "VernacExtend",
                        "12f66c39871a693dc02a4251a061652a3753efc2"
                    ]
                },
                {
                    "command": [
                        "eapply init.",
                        "VernacExtend",
                        "d41254c6b4184b63aa87b806f434c2927cfe38ef"
                    ]
                },
                {
                    "command": [
                        "eapply step.",
                        "VernacExtend",
                        "89845ee457dbd24ea3119ccf46e0922674f15a36"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_monotonic",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lookup_beyond_length",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "induction e; simpl; intros.",
                        "VernacExtend",
                        "4857b14daa5683d97227392c0b3beec549b62562"
                    ]
                },
                {
                    "command": [
                        "eapply lookup_empty_None.",
                        "VernacExtend",
                        "bc2c6f89a41bd9de73a60ff589e37e5db0259037"
                    ]
                },
                {
                    "command": [
                        "destruct x; [ omega | ].",
                        "VernacExtend",
                        "9020870f37835521f918069dc069bc92051e237f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "eapply IHe.",
                        "VernacExtend",
                        "612b5c7fefb12b778541d01e1b09b27ad50c3c00"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "defined_implies_below_length",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (le_gt_dec k x); intro; try tauto.",
                        "VernacExtend",
                        "17ceeb8776437af402015a1cb05084d215b47dab"
                    ]
                },
                {
                    "command": [
                        "assert (lookup x e = None).",
                        "VernacExtend",
                        "5a5309c02adf830dba1bdd2a8bda806f76062910"
                    ]
                },
                {
                    "command": [
                        "eapply lookup_beyond_length.",
                        "VernacExtend",
                        "90ff623fe728408b6c42440e0f6e1ebc6014b99a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_empty",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mymax_l",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mymax_r",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_insert_general",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "induction x; simpl; intros; subst.",
                        "VernacExtend",
                        "e8e1c03d93a07623cde6862e3ff00130723972cd"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "destruct e; simpl.",
                        "VernacExtend",
                        "6ffc61466ff058b612edb5249160815869003a8b"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "erewrite IHx by reflexivity.",
                        "VernacExtend",
                        "da5595037a3c5bfe847b63f1be07a87f74c6c7c7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "erewrite IHx by reflexivity.",
                        "VernacExtend",
                        "da5595037a3c5bfe847b63f1be07a87f74c6c7c7"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_insert",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite length_insert_general by reflexivity.",
                        "VernacExtend",
                        "e33f3fb8f54ead564edf27f3ba8dece805767666"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_insert_reverse_1",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite length_insert_general in * by reflexivity.",
                        "VernacExtend",
                        "f226f851c2b7380a54eefca4e38aaf2beb924460"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_insert_reverse_2",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite length_insert_general in * by reflexivity.",
                        "VernacExtend",
                        "f226f851c2b7380a54eefca4e38aaf2beb924460"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_insert_independent",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "erewrite length_insert_general in * by reflexivity.",
                        "VernacExtend",
                        "f226f851c2b7380a54eefca4e38aaf2beb924460"
                    ]
                },
                {
                    "command": [
                        "mymax.",
                        "VernacExtend",
                        "dcc1188f5a6cdb4906e6d9f89fb55dd6048a8cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_map_general",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "induction e as [| [|] ]; simpl; intros; congruence.",
                        "VernacExtend",
                        "5947339d0f88bc9f9534673d8f95d1a5bd55d2ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_map",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite length_map_general.",
                        "VernacExtend",
                        "661a1efaee424b61fc01d1e4d8d0ac6775b5c78a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree_below",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "do 6 intro.",
                        "VernacExtend",
                        "9f08c22b2e1d126384a164f4a91a47cb451277a1"
                    ]
                },
                {
                    "command": [
                        "intros hlookup ? ?.",
                        "VernacExtend",
                        "a39e5a19ef242d242da4887f7e2033b62bca7de7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- hlookup.",
                        "VernacExtend",
                        "d2f9e3d1274948aa155f4404ea6c9e09b7b85aff"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree_empty_left",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "unfold agree.",
                        "VernacExtend",
                        "a17798f9a01c690047a430415b7195e4c563ba0c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree_empty_right",
            "line_nb": 327,
            "steps": [
                {
                    "command": [
                        "unfold agree.",
                        "VernacExtend",
                        "a17798f9a01c690047a430415b7195e4c563ba0c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree_insert",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "unfold agree.",
                        "VernacExtend",
                        "a17798f9a01c690047a430415b7195e4c563ba0c"
                    ]
                },
                {
                    "command": [
                        "do 8 intro.",
                        "VernacExtend",
                        "eb5fcd4e224ccb72914bc519a756733d9a0bae47"
                    ]
                },
                {
                    "command": [
                        "intros n ?.",
                        "VernacExtend",
                        "784c033cc902aa1a20e91298eee9150b7c944a5d"
                    ]
                },
                {
                    "command": [
                        "case (le_gt_dec x n); [ case (eq_nat_dec x n) | ]; intros; do 2 lookup_insert; eauto with omega.",
                        "VernacExtend",
                        "bbb7e68a426144f23646c397f8f80e85faa9cc73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "osub_None",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "unfold osub.",
                        "VernacExtend",
                        "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "osub_Some_Some",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "unfold osub.",
                        "VernacExtend",
                        "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
                    ]
                },
                {
                    "command": [
                        "intros ? ? ? ? h.",
                        "VernacExtend",
                        "efd4dadeee6f9093fc81af47bd1b328883323085"
                    ]
                },
                {
                    "command": [
                        "injection h; clear h; intro; subst; eauto.",
                        "VernacExtend",
                        "fdc69df3a975c781f06ec1c099c2f4d5f8ced577"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "osub_None_Some",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "unfold osub.",
                        "VernacExtend",
                        "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
                    ]
                },
                {
                    "command": [
                        "intros ? h.",
                        "VernacExtend",
                        "9c5df8df79fd0e3433a96b783772e1f9f52e555e"
                    ]
                },
                {
                    "command": [
                        "generalize (h _ eq_refl).",
                        "VernacExtend",
                        "04884cc52df7505362e2ec4ca1c9123701c06128"
                    ]
                },
                {
                    "command": [
                        "clear h.",
                        "VernacExtend",
                        "fed558d1c37ca3024c5b6f944dca9f4b4f125753"
                    ]
                },
                {
                    "command": [
                        "intros [ a1 [ ? ? ]].",
                        "VernacExtend",
                        "eb10fa8e599fdd2c53b462f65f5a276d3120782d"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "osub_Some_inversion",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct o1.",
                        "VernacExtend",
                        "e4b6f07c66e0fa3dcebbb5dd1c8f9a4899866393"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "elimtype False.",
                        "VernacExtend",
                        "193053c8983316978aeded05598d605cc4f35bde"
                    ]
                },
                {
                    "command": [
                        "eauto using osub_None_Some.",
                        "VernacExtend",
                        "f382d793fe0471c4d7becf29c1e8fea0a70ee3cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "osub_reflexive",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "unfold osub.",
                        "VernacExtend",
                        "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsume_reflexive",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "unfold subsume.",
                        "VernacExtend",
                        "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
                    ]
                },
                {
                    "command": [
                        "eauto using osub_reflexive.",
                        "VernacExtend",
                        "75d3b9aef63e44e1f7d48f73767a74fac7dc8872"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "osub_transitive",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "unfold osub.",
                        "VernacExtend",
                        "ae9af0fe11bf78c28655cf1dc7be0d97cfc1a65d"
                    ]
                },
                {
                    "command": [
                        "intros ? ? ? hs1 hs2 a3 h3.",
                        "VernacExtend",
                        "952fcef10c7eb85e9e30f925cad0997ec42af403"
                    ]
                },
                {
                    "command": [
                        "generalize (hs2 _ h3); intros [ a2 [ h2 ? ]].",
                        "VernacExtend",
                        "99e64a1e82148d609c052eba97fe7185d907a1e8"
                    ]
                },
                {
                    "command": [
                        "generalize (hs1 _ h2); intros [ a1 [ h1 ? ]].",
                        "VernacExtend",
                        "0b6048c69dc4a01c9e793251f1580b4ddbce9eab"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsume_transitive",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "unfold subsume.",
                        "VernacExtend",
                        "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
                    ]
                },
                {
                    "command": [
                        "eauto using osub_transitive.",
                        "VernacExtend",
                        "064408ede842026de7d5735c4f27f54324844b2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsume_empty",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "unfold subsume.",
                        "VernacExtend",
                        "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite lookup_empty_None.",
                        "VernacExtend",
                        "ae7bd36eaa03e8fa4a3a4de3e32181b57ffb5963"
                    ]
                },
                {
                    "command": [
                        "apply osub_None.",
                        "VernacExtend",
                        "ffb0c08471bf28683d222ca845a7dae269f60df5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsume_insert",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "unfold subsume.",
                        "VernacExtend",
                        "c0042802a80d8bf0a0ebf935a3a457a042a535c6"
                    ]
                },
                {
                    "command": [
                        "do 7 intro.",
                        "VernacExtend",
                        "2236b6c7865274b108cfb8a568894531eb8bd125"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "case (le_gt_dec x n); [ case (eq_nat_dec x n) | ]; intros; repeat lookup_insert; eauto.",
                        "VernacExtend",
                        "adf84a1b6828dc5d6c0e01004a2761a1be66a90e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsume_cons",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "do 3 intro.",
                        "VernacExtend",
                        "177de6f66fcc47b0b56e5a6eca140fd577ebdd59"
                    ]
                },
                {
                    "command": [
                        "intros h1 h2.",
                        "VernacExtend",
                        "05daa094966618e9a387faae5c90af054e59255f"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite lookup_successor.",
                        "VernacExtend",
                        "6b737801302c1beadfa4c8aa16af84af9791acfc"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsume_cons_cons_inversion",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "do 4 intro.",
                        "VernacExtend",
                        "f9fb059d7761e4197e62492b83edb74ab62c074d"
                    ]
                },
                {
                    "command": [
                        "intro h.",
                        "VernacExtend",
                        "efc0ed73cace94ec6baeb56e34481bbcfac8cc91"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "eapply (h 0).",
                        "VernacExtend",
                        "9a101396df057eba5d050e645b84553868f24b2d"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "eapply (h (1 + n)).",
                        "VernacExtend",
                        "448634e212e14ccffbd54503e747ebb56183eae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsume_map",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "intros ? hf ? ? hs.",
                        "VernacExtend",
                        "61fb37543220a9783466d8278a666fed00d666cf"
                    ]
                },
                {
                    "command": [
                        "intros ? b2 hlm2.",
                        "VernacExtend",
                        "4eaea5c7c2955459994b6ea4dd5b2dfd5bb11af0"
                    ]
                },
                {
                    "command": [
                        "generalize (lookup_map_some_reverse _ _ _ hlm2); intros [ ? [ hl2 ? ]].",
                        "VernacExtend",
                        "0ad8f213994b186304a0290a1c3e4a22028e7cbf"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "generalize (hs _ _ hl2); intros [ a1 [ ? ? ]].",
                        "VernacExtend",
                        "0e9c50944937781e36d4d99188092a6f90b230e3"
                    ]
                },
                {
                    "command": [
                        "eauto using lookup_map_some.",
                        "VernacExtend",
                        "1d1bd2456bae15b56c9a4f98aa2ae700688073bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "omega_hint_1",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_concat",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "induction e2; simpl; intros.",
                        "VernacExtend",
                        "63d1dac2955a20746380438331d2c966771a38c4"
                    ]
                },
                {
                    "command": [
                        "replace n with n1 by omega.",
                        "VernacExtend",
                        "6f9c346a66747a4fc3bccae7116631d68bb0a993"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "eauto using length_insert, omega_hint_1 with omega.",
                        "VernacExtend",
                        "4025068fb1c7345cdc9d35b9b6371cfa2a15113c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "agree_concat",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "induction e; simpl; intros.",
                        "VernacExtend",
                        "4857b14daa5683d97227392c0b3beec549b62562"
                    ]
                },
                {
                    "command": [
                        "replace n with k by omega.",
                        "VernacExtend",
                        "3d377072541ef3fbda4c21bafbd0968088615759"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "eauto using agree_insert with omega.",
                        "VernacExtend",
                        "91656d0d636abdb062b6df8fd845cc402f9b9d2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_concat",
            "line_nb": 468,
            "steps": [
                {
                    "command": [
                        "induction n; intros; subst; destruct e2; simpl in *; try discriminate; auto.",
                        "VernacExtend",
                        "cb5ca77d8d14e6047edcd5ba25b39b58236fd62a"
                    ]
                },
                {
                    "command": [
                        "rewrite insert_insert by omega.",
                        "VernacExtend",
                        "fbaf0106ec55056b5cd55f709ec434f817d4a1a8"
                    ]
                },
                {
                    "command": [
                        "erewrite <- (IHn (1 + x)) by first [ congruence | eauto ].",
                        "VernacExtend",
                        "ada7108d2ab0746fd54ac16f6eff601a78a4127c"
                    ]
                },
                {
                    "command": [
                        "eauto with f_equal omega.",
                        "VernacExtend",
                        "272fc4a01c00ab32878330dab0f3ae43ad01cedb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_replicate",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; auto.",
                        "VernacExtend",
                        "e97dceb16245749e91243b27d3fd5ddc89e99bdd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "insert_concat_replicate",
            "line_nb": 478,
            "steps": [
                {
                    "command": [
                        "eauto using insert_concat, length_replicate.",
                        "VernacExtend",
                        "16a20f308b5262ad228db639c2c6d00c53c13943"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "concat_replicate_is_iterated_insert",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "eauto using insert_concat, length_replicate.",
                        "VernacExtend",
                        "16a20f308b5262ad228db639c2c6d00c53c13943"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}