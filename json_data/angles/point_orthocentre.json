{
    "filename": "point_orthocentre.v",
    "coq_project": "angles",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export point_cocyclicite.",
            "VernacRequire",
            "606bdf59e5a8e9fbc9b70ce53da37b221e75bb7b"
        ],
        [
            "Definition orthocentre (H A B C : PO) := (orthogonal (vec H A) (vec B C) /\\ orthogonal (vec H B) (vec A C)) /\\ orthogonal (vec H C) (vec A B).",
            "VernacDefinition",
            "1d0f5d9cee160c53e3244027dd8a4dd077f3ae2d"
        ],
        [
            "Section Theoreme.",
            "VernacBeginSection",
            "2726d259c3b02377f436ba06aa5de5bd57af031c"
        ],
        [
            "Parameter H A B C : PO.",
            "VernacAssumption",
            "64eb3a0349ec3cc45bedd2088a2c60e154b71007"
        ],
        [
            "Hypothesis triangle : ~ colineaire (vec A B) (vec A C).",
            "VernacAssumption",
            "956ebc2e56aac1a9f8a6fe18dff5afbdebdb7a0f"
        ],
        [
            "Hypothesis H_orthocentre : orthocentre H A B C.",
            "VernacAssumption",
            "05335fe2c8c24e2306f6c04fa8ec007ea659fa8d"
        ],
        [
            "Lemma orthocentre_double : R (double (cons (vec H C) (vec H B))) (double (cons (vec A B) (vec A C))).",
            "VernacStartTheoremProof",
            "6a3c1ddcbe3f3c34ae09037d8a2f7afaa5e8dfae"
        ],
        [
            "unfold orthocentre in H_orthocentre.",
            "VernacExtend",
            "55a528b63ab6fd7366e82268e1df8f36401f069c"
        ],
        [
            "elim H_orthocentre; intros H0 H1; elim H0; intros H2 H3; clear H0 H_orthocentre; try exact H3.",
            "VernacExtend",
            "017fcd8871d306b7981e81c1148aad80e663b35d"
        ],
        [
            "apply transitive with (double (plus (cons (vec H C) (vec A B)) (plus (cons (vec A B) (vec A C)) (cons (vec A C) (vec H B))))).",
            "VernacExtend",
            "d15effb5b40fe8fcd9a8d5c761d8e571a5ac304e"
        ],
        [
            "apply R_double.",
            "VernacExtend",
            "1825ce72d8c242332408f9aab3f1d06479862ccd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply transitive with (plus (double (cons (vec H C) (vec A B))) (double (plus (cons (vec A B) (vec A C)) (cons (vec A C) (vec H B))))).",
            "VernacExtend",
            "8edf4345a2432c45f53ee368a766cd9166f6fe98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply transitive with (plus (double (cons (vec H C) (vec A B))) (plus (double (cons (vec A B) (vec A C))) (double (cons (vec A C) (vec H B))))).",
            "VernacExtend",
            "5c16bc99a8104607d52658cae9d0226c6f4c6d60"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus pi (plus (double (cons (vec A B) (vec A C))) pi)).",
            "VernacExtend",
            "16b580af9d30157b11a7ca1514e52ee44ef3fffa"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "cut (orthogonal (vec A C) (vec H B)); (intros; auto).",
            "VernacExtend",
            "9e04f6e9c367cacd7eb9f6ce9e87d9b9300747dd"
        ],
        [
            "apply transitive with (plus (plus (double (cons (vec A B) (vec A C))) pi) pi).",
            "VernacExtend",
            "45246892c56760d960c760f64fa8d5af8848b586"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply transitive with (plus (double (cons (vec A B) (vec A C))) (plus pi pi)).",
            "VernacExtend",
            "a6afed1132986240ec61a71c4bdd1dbc73c912ba"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply transitive with (plus (double (cons (vec A B) (vec A C))) zero).",
            "VernacExtend",
            "6426d299912e5f7c9cba0750c7e6785cc1b7534d"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero (double (cons (vec A B) (vec A C)))).",
            "VernacExtend",
            "c512c0f8261f644a2c4110455ea7d701a84c4e99"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem symetrique_orthocentre_cercle : forall H' : PO, R (cons (vec H' B) (vec B C)) (cons (vec B C) (vec H B)) -> R (cons (vec H' C) (vec B C)) (cons (vec B C) (vec H C)) -> sont_cocycliques A B C H'.",
            "VernacStartTheoremProof",
            "e5b1a4bea4b5fdc16fef6d57723b2e9990d1e02b"
        ],
        [
            "intros H' H0 H1; try assumption.",
            "VernacExtend",
            "a52b7a371648fe4d28fca65f488cfb091ec783a8"
        ],
        [
            "apply reciproque_cocyclique; auto.",
            "VernacExtend",
            "25ddc2ad028dc2fff96153b289d59b059ff496fa"
        ],
        [
            "cut (R (cons (vec H C) (vec H B)) (cons (vec H' B) (vec H' C))).",
            "VernacExtend",
            "68535f2914ba129889d17e50db35ab9ba8cd30bd"
        ],
        [
            "intros H2.",
            "VernacExtend",
            "1cdce4ec62ec85608d1a6cc1fb7ae184c894a041"
        ],
        [
            "apply transitive with (double (cons (vec H C) (vec H B))); auto.",
            "VernacExtend",
            "9c6c7ac6f7fb14317da0b7e6f5e924b5a17b46cb"
        ],
        [
            "apply orthocentre_double.",
            "VernacExtend",
            "4c1953d05ad0a44172291f8e5d0b65f6e767c4c2"
        ],
        [
            "apply reflexion with (vec B C); auto.",
            "VernacExtend",
            "8ce27fbb3249c44e7098ff8f4c82f1480ccd413a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Theoreme.",
            "VernacEndSegment",
            "446e38ea73fe131b7dfc65b206951ffbcefcba23"
        ]
    ],
    "proofs": [
        {
            "name": "orthocentre_double",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "unfold orthocentre in H_orthocentre.",
                        "VernacExtend",
                        "55a528b63ab6fd7366e82268e1df8f36401f069c"
                    ]
                },
                {
                    "command": [
                        "elim H_orthocentre; intros H0 H1; elim H0; intros H2 H3; clear H0 H_orthocentre; try exact H3.",
                        "VernacExtend",
                        "017fcd8871d306b7981e81c1148aad80e663b35d"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec H C) (vec A B)) (plus (cons (vec A B) (vec A C)) (cons (vec A C) (vec H B))))).",
                        "VernacExtend",
                        "d15effb5b40fe8fcd9a8d5c761d8e571a5ac304e"
                    ]
                },
                {
                    "command": [
                        "apply R_double.",
                        "VernacExtend",
                        "1825ce72d8c242332408f9aab3f1d06479862ccd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec H C) (vec A B))) (double (plus (cons (vec A B) (vec A C)) (cons (vec A C) (vec H B))))).",
                        "VernacExtend",
                        "8edf4345a2432c45f53ee368a766cd9166f6fe98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec H C) (vec A B))) (plus (double (cons (vec A B) (vec A C))) (double (cons (vec A C) (vec H B))))).",
                        "VernacExtend",
                        "5c16bc99a8104607d52658cae9d0226c6f4c6d60"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi (plus (double (cons (vec A B) (vec A C))) pi)).",
                        "VernacExtend",
                        "16b580af9d30157b11a7ca1514e52ee44ef3fffa"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "cut (orthogonal (vec A C) (vec H B)); (intros; auto).",
                        "VernacExtend",
                        "9e04f6e9c367cacd7eb9f6ce9e87d9b9300747dd"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (plus (double (cons (vec A B) (vec A C))) pi) pi).",
                        "VernacExtend",
                        "45246892c56760d960c760f64fa8d5af8848b586"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec A B) (vec A C))) (plus pi pi)).",
                        "VernacExtend",
                        "a6afed1132986240ec61a71c4bdd1dbc73c912ba"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec A B) (vec A C))) zero).",
                        "VernacExtend",
                        "6426d299912e5f7c9cba0750c7e6785cc1b7534d"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (double (cons (vec A B) (vec A C)))).",
                        "VernacExtend",
                        "c512c0f8261f644a2c4110455ea7d701a84c4e99"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "symetrique_orthocentre_cercle",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros H' H0 H1; try assumption.",
                        "VernacExtend",
                        "a52b7a371648fe4d28fca65f488cfb091ec783a8"
                    ]
                },
                {
                    "command": [
                        "apply reciproque_cocyclique; auto.",
                        "VernacExtend",
                        "25ddc2ad028dc2fff96153b289d59b059ff496fa"
                    ]
                },
                {
                    "command": [
                        "cut (R (cons (vec H C) (vec H B)) (cons (vec H' B) (vec H' C))).",
                        "VernacExtend",
                        "68535f2914ba129889d17e50db35ab9ba8cd30bd"
                    ]
                },
                {
                    "command": [
                        "intros H2.",
                        "VernacExtend",
                        "1cdce4ec62ec85608d1a6cc1fb7ae184c894a041"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec H C) (vec H B))); auto.",
                        "VernacExtend",
                        "9c6c7ac6f7fb14317da0b7e6f5e924b5a17b46cb"
                    ]
                },
                {
                    "command": [
                        "apply orthocentre_double.",
                        "VernacExtend",
                        "4c1953d05ad0a44172291f8e5d0b65f6e767c4c2"
                    ]
                },
                {
                    "command": [
                        "apply reflexion with (vec B C); auto.",
                        "VernacExtend",
                        "8ce27fbb3249c44e7098ff8f4c82f1480ccd413a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}