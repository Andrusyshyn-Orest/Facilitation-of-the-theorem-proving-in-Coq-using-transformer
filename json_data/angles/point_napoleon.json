{
    "filename": "point_napoleon.v",
    "coq_project": "angles",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export point_cocyclicite.",
            "VernacRequire",
            "606bdf59e5a8e9fbc9b70ce53da37b221e75bb7b"
        ],
        [
            "Lemma colineaire_sym : forall u v : V, colineaire u v -> colineaire v u.",
            "VernacStartTheoremProof",
            "c1127fdbe5398e0ebbbcf3bb604bce63a1330fa4"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply regulier with (a := double (cons u v)) (c := double (cons u v)); auto.",
            "VernacExtend",
            "de5b620b6bfe4da04c3c04b71ba93a48a1bacd4b"
        ],
        [
            "apply transitive with (double (plus (cons u v) (cons v u))); auto.",
            "VernacExtend",
            "d43346118f43e9c7a026b9c00330e0ca4e514ce0"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "apply transitive with (plus zero zero); auto.",
            "VernacExtend",
            "28b9f0d322c71e80fda7dcbce240622477574f90"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve colineaire_sym.",
            "VernacHints",
            "f4fbdd39a706e489ebe83c353741b25ef416905a"
        ],
        [
            "Lemma colineaire_modulo_pi : forall u v u' v' : V, colineaire u u' -> colineaire v v' -> R (double (cons u' v')) (double (cons u v)).",
            "VernacStartTheoremProof",
            "67aae50b505760ea933205507a33952467e75e62"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply transitive with (double (plus (cons u' u) (plus (cons u v) (cons v v')))); auto.",
            "VernacExtend",
            "c0e679832b723d7615e4128db3de6c94207d3a8f"
        ],
        [
            "apply transitive with (plus (double (cons u' u)) (double (plus (cons u v) (cons v v')))); auto.",
            "VernacExtend",
            "d708125eeb8a8c2935a77290797deaf6fd733e12"
        ],
        [
            "apply transitive with (plus (double (cons u' u)) (plus (double (cons u v)) (double (cons v v')))); auto.",
            "VernacExtend",
            "9a84f8941816abc472654b0a768b4503eb7a8675"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero (plus (double (cons u v)) (double (cons v v')))); auto.",
            "VernacExtend",
            "eba1f0595765e15d18eee02200ac18a70153fb33"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "cut (colineaire u' u); intros; auto.",
            "VernacExtend",
            "5b57e49c4b18532c8d3d780628d59bc6894370a6"
        ],
        [
            "apply transitive with (plus (double (cons u v)) (double (cons v v'))); auto.",
            "VernacExtend",
            "7fbf1de46d442d04005e1225904ca7a918b6a4f3"
        ],
        [
            "apply transitive with (plus (double (cons u v)) zero); auto.",
            "VernacExtend",
            "dd72510b50a1f13a32f8a21d95ddf435e7a469e5"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero (double (cons u v))); auto.",
            "VernacExtend",
            "04d12a44481d65e8cec2e8be78e3c2f585cabae5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve colineaire_modulo_pi.",
            "VernacHints",
            "0120fc436be9fac51c1fc8d38814e8a8fbbd196c"
        ],
        [
            "Lemma orthogonal_opp : forall u v : V, orthogonal u v -> orthogonal u (opp v).",
            "VernacStartTheoremProof",
            "db50033c9e5719a1bcb2f0fd6d9a62d064651be2"
        ],
        [
            "unfold orthogonal in |- *; intros.",
            "VernacExtend",
            "6563e8696170063b79fa3e335a068afa26ec9a95"
        ],
        [
            "apply transitive with (double (plus (cons u v) (cons v (opp v)))); auto.",
            "VernacExtend",
            "2c6e6d41bc545c448d3c6f7ac4c31721c9415be7"
        ],
        [
            "apply transitive with (plus (double (cons u v)) (double (cons v (opp v)))); auto.",
            "VernacExtend",
            "682b16725508b38e8d3c3b07929ec5c975ece3d4"
        ],
        [
            "apply transitive with (plus pi (double pi)); auto.",
            "VernacExtend",
            "2cad4e1f7906698172914a74303328d4607b10da"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus pi zero); auto.",
            "VernacExtend",
            "35e4d72af8c796900d81f0386a3154168eebec6d"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero pi); auto.",
            "VernacExtend",
            "9b282c0594500db4c7cff92ce7312f959fe01ff8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve orthogonal_opp.",
            "VernacHints",
            "b904a43fcadb3c2f7ed1c41a0bc5a72410c7c7d5"
        ],
        [
            "Lemma orthogonal_colineaire : forall u v w : V, orthogonal u v -> colineaire v w -> orthogonal u w.",
            "VernacStartTheoremProof",
            "f81fd6638e4e42c71b685c8f107c44cabfc430aa"
        ],
        [
            "unfold colineaire, orthogonal in |- *; intros.",
            "VernacExtend",
            "915a1c23a6f0d7dd6e5e20aa4919f519c628757e"
        ],
        [
            "apply transitive with (double (plus (cons u v) (cons v w))); auto.",
            "VernacExtend",
            "e4feda8c13eb3f943068243590367df2370fcb9f"
        ],
        [
            "apply transitive with (plus (double (cons u v)) (double (cons v w))); auto.",
            "VernacExtend",
            "36c111fb0f1439f73cdd36ed86fce9cec70a5cb3"
        ],
        [
            "apply transitive with (plus pi zero); auto.",
            "VernacExtend",
            "35e4d72af8c796900d81f0386a3154168eebec6d"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero pi); auto.",
            "VernacExtend",
            "9b282c0594500db4c7cff92ce7312f959fe01ff8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma colineaire_transitive : forall u v w : V, colineaire u v -> colineaire v w -> colineaire u w.",
            "VernacStartTheoremProof",
            "12000b5b889cde45a64c4bc386da840e953cb5d7"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply transitive with (double (plus (cons u v) (cons v w))); auto.",
            "VernacExtend",
            "e4feda8c13eb3f943068243590367df2370fcb9f"
        ],
        [
            "apply transitive with (plus (double (cons u v)) (double (cons v w))); auto.",
            "VernacExtend",
            "36c111fb0f1439f73cdd36ed86fce9cec70a5cb3"
        ],
        [
            "apply transitive with (plus zero zero); auto.",
            "VernacExtend",
            "28b9f0d322c71e80fda7dcbce240622477574f90"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma double_orthogonal : forall u u' v v' : V, orthogonal u u' -> orthogonal v v' -> R (double (cons u v)) (double (cons u' v')).",
            "VernacStartTheoremProof",
            "116d59d08d02e3ae15b3e30cb0e0e486049e5ed4"
        ],
        [
            "unfold orthogonal in |- *; intros.",
            "VernacExtend",
            "6563e8696170063b79fa3e335a068afa26ec9a95"
        ],
        [
            "apply transitive with (double (plus (cons u u') (plus (cons u' v') (cons v' v)))); auto.",
            "VernacExtend",
            "05dfe8ec5e01dbafdd7035359a795a9bac438c15"
        ],
        [
            "apply transitive with (plus (double (cons u u')) (double (plus (cons u' v') (cons v' v)))); auto.",
            "VernacExtend",
            "61420924404ed9cfb524099943c468e9fdef3ba3"
        ],
        [
            "apply transitive with (plus (double (cons u u')) (plus (double (cons u' v')) (double (cons v' v)))); auto.",
            "VernacExtend",
            "aa7f5d8864f28940c915f3cebfd4e70878d30bd6"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus pi (plus (double (cons u' v')) pi)); auto.",
            "VernacExtend",
            "de218e12e03ef3584c6e44540b92b73aee800458"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply regulier with (a := double (cons v v')) (c := pi); auto.",
            "VernacExtend",
            "b3d5cc3a9bfe6480d86a853c23df23129241a0cd"
        ],
        [
            "apply transitive with (double (plus (cons v v') (cons v' v))); auto.",
            "VernacExtend",
            "482c5b44b593b3481019b0e45b1c56b5e2109b25"
        ],
        [
            "apply transitive with (double (cons v v)); auto.",
            "VernacExtend",
            "386f03866fc0ca10bbd0d2751bbbc57c4eaa90ec"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "apply transitive with zero; auto.",
            "VernacExtend",
            "d6af809b28273d785ded7fd87d98ffa03ae942a8"
        ],
        [
            "apply transitive with (plus (plus (double (cons u' v')) pi) pi); auto.",
            "VernacExtend",
            "ef0c5470f325e19067e882ebc655a5416a99f864"
        ],
        [
            "apply transitive with (plus (double (cons u' v')) (plus pi pi)); auto.",
            "VernacExtend",
            "7cdd77387dcfbc650a8f588caca1848df5aafc5b"
        ],
        [
            "apply transitive with (plus (double (cons u' v')) zero); auto.",
            "VernacExtend",
            "cdfd657d68ef53affd80f73f369db6bbe8a66010"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero (double (cons u' v'))); auto.",
            "VernacExtend",
            "37d05254905fc8780f5889f5f901e90221ef75e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve double_orthogonal.",
            "VernacHints",
            "98727c130cb33c5f099a941ffb91d0b2a32738db"
        ],
        [
            "Lemma critere_orthogonal : forall u v : V, R (cons u v) (cons v (opp u)) -> orthogonal u v.",
            "VernacStartTheoremProof",
            "75babe05b3fab1d120af732684f8a896c0d86a85"
        ],
        [
            "intros u v H; unfold orthogonal, double in |- *.",
            "VernacExtend",
            "e60946238e900054fb171fab74895c6e4f209351"
        ],
        [
            "apply transitive with (plus (cons u v) (cons v (opp u))); auto.",
            "VernacExtend",
            "cae8e68e44dddc9b6e4dc05b19a5d9df684c5687"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (cons u (opp u)); auto.",
            "VernacExtend",
            "9b54fbd21faaa1024e2e6e31078c5c4ff5c06e60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma critere_orthogonal_reciproque : forall u v : V, orthogonal u v -> R (cons u v) (cons v (opp u)).",
            "VernacStartTheoremProof",
            "eb068fb839c0a8c186eb5190315d6d72eb33c5e9"
        ],
        [
            "unfold orthogonal, double in |- *; intros u v H.",
            "VernacExtend",
            "4679a7d6846f0590c8c5ec624fb7833034ec23d7"
        ],
        [
            "apply transitive with (plus (cons v u) pi); auto.",
            "VernacExtend",
            "98bc634fdd1d424a9a70339baffa8a1cb03a4136"
        ],
        [
            "apply regulier with (a := cons u v) (c := cons u v); auto.",
            "VernacExtend",
            "7b25762e05ac25c3008e94550e49647fc1cd240d"
        ],
        [
            "apply transitive with pi; auto.",
            "VernacExtend",
            "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
        ],
        [
            "apply transitive with (plus (plus (cons u v) (cons v u)) pi); auto.",
            "VernacExtend",
            "d622aa6f8277ea414272bdae24b10bf7d858c1dd"
        ],
        [
            "apply transitive with (plus zero pi); auto.",
            "VernacExtend",
            "9b282c0594500db4c7cff92ce7312f959fe01ff8"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve critere_orthogonal critere_orthogonal_reciproque.",
            "VernacHints",
            "60bb8c6f4737501101e669e5abd702c45bd53cee"
        ],
        [
            "Definition bissectrice (I A B C : PO) := R (cons (vec A B) (vec A I)) (cons (vec A I) (vec A C)).",
            "VernacDefinition",
            "4c5dd3e110db20096e12caad7b93f9efc09525d0"
        ],
        [
            "Lemma bissectrice_double : forall I A B C : PO, bissectrice I A B C -> R (double (cons (vec A I) (vec A C))) (cons (vec A B) (vec A C)).",
            "VernacStartTheoremProof",
            "d6abe8372c03ab7991cadcf19855cebb44d4f1ca"
        ],
        [
            "unfold bissectrice, double in |- *; intros.",
            "VernacExtend",
            "213b1e7dfc20ad27ad071e79f1a3822b1aa19502"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec A I)) (cons (vec A I) (vec A C))); auto.",
            "VernacExtend",
            "a4dd475ad60ca43387a9d53281fbf29947d724dc"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve bissectrice_double.",
            "VernacHints",
            "dee1471c5b014e4dc9167b486018110eabef841f"
        ],
        [
            "Lemma bissectrice_unicite : forall I A B C J : PO, bissectrice I A B C -> bissectrice J A B C -> colineaire (vec A I) (vec A J).",
            "VernacStartTheoremProof",
            "f6ffffe88379e9d44430c266d90fe64c166a549a"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply transitive with (double (plus (cons (vec A I) (vec A B)) (cons (vec A B) (vec A J)))); auto.",
            "VernacExtend",
            "9bde0a8ad0fe6699e65ec6f88702b993dfc3d099"
        ],
        [
            "apply transitive with (plus (double (cons (vec A I) (vec A B))) (double (cons (vec A B) (vec A J)))); auto.",
            "VernacExtend",
            "47e8004949ece2c5cf91a1dde212a9ef93ab56ec"
        ],
        [
            "apply transitive with (plus (cons (vec A C) (vec A B)) (cons (vec A B) (vec A C))); auto.",
            "VernacExtend",
            "4976f8f998bd429874244086da7dcad94bba9c57"
        ],
        [
            "apply compatible; unfold double in |- *.",
            "VernacExtend",
            "4de2d6bb62c367ad83d4da04ae387cb9102c0112"
        ],
        [
            "apply transitive with (plus (cons (vec A C) (vec A I)) (cons (vec A I) (vec A B))); auto.",
            "VernacExtend",
            "07506d9d00ed007d4cd31a1d2c6a169863de8b07"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec A J)) (cons (vec A J) (vec A C))); auto.",
            "VernacExtend",
            "c24d89d977b67240520c4c982e824c58f1b88138"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve bissectrice_unicite.",
            "VernacHints",
            "b287f023046a0ab7d1aa0b9197fd5396e7d8139a"
        ],
        [
            "Lemma bissectrice_direction : forall (I A B C : PO) (u : V), bissectrice I A B C -> R (cons (vec A B) u) (cons u (vec A C)) -> colineaire (vec A I) u.",
            "VernacStartTheoremProof",
            "92a4dc08d882257f1303f889f01cfc145833a9b3"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply transitive with (double (plus (cons (vec A I) (vec A B)) (cons (vec A B) u))); auto.",
            "VernacExtend",
            "374d66d020ff7eb29e0a2fcc1c0d23bcd81f48cb"
        ],
        [
            "apply transitive with (plus (double (cons (vec A I) (vec A B))) (double (cons (vec A B) u))); auto.",
            "VernacExtend",
            "9098304160fd7f35f8f9466e7fab69cab4fd535b"
        ],
        [
            "apply transitive with (plus (cons (vec A C) (vec A B)) (cons (vec A B) (vec A C))); auto.",
            "VernacExtend",
            "4976f8f998bd429874244086da7dcad94bba9c57"
        ],
        [
            "apply compatible; unfold double in |- *.",
            "VernacExtend",
            "4de2d6bb62c367ad83d4da04ae387cb9102c0112"
        ],
        [
            "apply transitive with (plus (cons (vec A C) (vec A I)) (cons (vec A I) (vec A B))); auto.",
            "VernacExtend",
            "07506d9d00ed007d4cd31a1d2c6a169863de8b07"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec A B) u) (cons u (vec A C))); auto.",
            "VernacExtend",
            "bd2d9ccb073d531edae57dc2ec6f58432112ea23"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve bissectrice_direction.",
            "VernacHints",
            "a8b39077d0d9e5e49fc190e3725672de1bf4bfcf"
        ],
        [
            "Lemma isocele_bissectrice_hauteur : forall I A B C : PO, bissectrice I A B C -> isocele A B C -> orthogonal (vec A I) (vec B C).",
            "VernacStartTheoremProof",
            "106cde09d418b2a840b0aad6f2a8e861ec8fefb2"
        ],
        [
            "unfold isocele, orthogonal, bissectrice in |- *; intros I A B C H H0.",
            "VernacExtend",
            "2f59d5928605e57300660b568adfda7a2b9e072d"
        ],
        [
            "apply transitive with (double (plus (cons (vec A I) (vec A C)) (plus (cons (vec A C) (vec C A)) (cons (vec C A) (vec B C))))); auto.",
            "VernacExtend",
            "16aa113a1c32730d6f7caf777c6b0661a8d7b060"
        ],
        [
            "apply transitive with (plus (double (cons (vec A I) (vec A C))) (double (plus (cons (vec A C) (vec C A)) (cons (vec C A) (vec B C))))); auto.",
            "VernacExtend",
            "7203e25098f18d4f5d6a1766a8106445ba2d3599"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec A C)) (plus (double (cons (vec A C) (vec C A))) (double (cons (vec C A) (vec B C))))); auto.",
            "VernacExtend",
            "c9892e4791543bd2d30e1a794e906189cb9123e3"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec A C)) (plus (double pi) (double (cons (vec C A) (vec B C))))); auto.",
            "VernacExtend",
            "faa6e127cd6bff41becfb550efa6091e7045658e"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec A C)) (plus zero (double (cons (vec C A) (vec B C))))); auto.",
            "VernacExtend",
            "6a9ae0a20e5fd1273ba99c347d983c07aa29b0ac"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec A C)) (double (cons (vec B C) (vec B A)))); auto.",
            "VernacExtend",
            "72491abee6a4dcdb103048bf4d1f0e618a3909bf"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (double (cons (vec C A) (vec C B))); auto.",
            "VernacExtend",
            "8f5984f2bc98952e988e2bd1f71988fe395efb0a"
        ],
        [
            "apply transitive with (double (cons (vec C A) (vec B C))); auto.",
            "VernacExtend",
            "de6abd2088a609f30965d7f81fa70e153080ccfb"
        ],
        [
            "apply transitive with (double (plus (cons (vec C A) (vec C B)) (cons (vec C B) (vec B C)))); auto.",
            "VernacExtend",
            "064724aa52dc9c4ac705eb1b47b9c0b010c156c1"
        ],
        [
            "apply transitive with (plus (double (cons (vec C A) (vec C B))) (double (cons (vec C B) (vec B C)))); auto.",
            "VernacExtend",
            "50494032e35c0bc3b12cb72f3779b20196cc1958"
        ],
        [
            "apply transitive with (plus (double (cons (vec C A) (vec C B))) zero); auto.",
            "VernacExtend",
            "84d78fc23aed247a5f0f4cf84d5a23c9604e8a2a"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (double pi); auto.",
            "VernacExtend",
            "5c3253122241934312aee1af1fb258e09edd9690"
        ],
        [
            "apply transitive with (plus zero (double (cons (vec C A) (vec C B)))); auto.",
            "VernacExtend",
            "cd34a69445410788fd4b8d4bc409b1f1cff94f8d"
        ],
        [
            "apply triangle_isocele; auto.",
            "VernacExtend",
            "785af78642e2616df2cda596f70ad122f0dd1c37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orthogonal_bissectrice : forall u v : V, orthogonal u v -> R (cons (opp v) u) (cons u v).",
            "VernacStartTheoremProof",
            "982c3e51b83667c5350aee991a85aa2c9acbd5c3"
        ],
        [
            "intros u v H; try assumption.",
            "VernacExtend",
            "8829ac24ae651e89fe8f9c06315aeb9aa307738a"
        ],
        [
            "apply regulier with (a := cons u v) (c := cons u v); auto.",
            "VernacExtend",
            "7b25762e05ac25c3008e94550e49647fc1cd240d"
        ],
        [
            "apply transitive with (plus (cons (opp v) u) (cons u v)); auto.",
            "VernacExtend",
            "095d21f3e82d0a29db1ee39549a694cba2c89219"
        ],
        [
            "apply transitive with (cons (opp v) v); auto.",
            "VernacExtend",
            "0ca5ce24ba19c0db0fcc24e75ec1301bd24335f0"
        ],
        [
            "apply transitive with pi; auto.",
            "VernacExtend",
            "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve orthogonal_bissectrice.",
            "VernacHints",
            "847a0948eeae596005070c47c8da8007d94d2f80"
        ],
        [
            "Lemma bissectrice_hauteur_isocele : forall I A B C : PO, bissectrice I A B C -> orthogonal (vec A I) (vec B C) -> isocele A B C.",
            "VernacStartTheoremProof",
            "ae645c5acecf88440380195b346767952b951e7a"
        ],
        [
            "unfold isocele, bissectrice in |- *; intros I A B C H H0.",
            "VernacExtend",
            "b1a154f039d38affa4af35684a79121d63b45349"
        ],
        [
            "apply reflexion with (vec A I); auto.",
            "VernacExtend",
            "a0e4264d4bf3ea4972af014c9ae7e4439f3ee716"
        ],
        [
            "apply transitive with (cons (opp (vec B C)) (vec A I)); auto.",
            "VernacExtend",
            "9596b355aaca62d769794d93ec2b7a318fb0020e"
        ],
        [
            "apply vR_R_compatible; auto.",
            "VernacExtend",
            "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
        ],
        [
            "apply v_sym; apply opp_vect.",
            "VernacExtend",
            "690d125ac78b2cf94d424d93b651e787680e21c2"
        ],
        [
            "apply transitive with (plus (cons (vec C A) (vec A C)) (cons (vec A C) (vec A I))); auto.",
            "VernacExtend",
            "5f591074d1785c661a6d467b3fe601e7502307b2"
        ],
        [
            "apply transitive with (plus (cons (vec A I) (vec A B)) (cons (vec A B) (vec B A))); auto.",
            "VernacExtend",
            "4377a2a99d3c76310b73577b2870d561795fb13b"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec B A)) (cons (vec A I) (vec A B))); auto.",
            "VernacExtend",
            "2f3efd0a346b85469e41f583cec830c1ac7f0997"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with pi; auto.",
            "VernacExtend",
            "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isocele_hauteur_bissectrice : forall I A B C : PO, isocele A B C -> orthogonal (vec A I) (vec B C) -> bissectrice I A B C.",
            "VernacStartTheoremProof",
            "1dc57d06ded673eebe808f4bc95a2a58c7ce2be3"
        ],
        [
            "unfold bissectrice, isocele in |- *; intros.",
            "VernacExtend",
            "b5dea8cf53f683b6bdf171956b633a86ae59a354"
        ],
        [
            "generalize (critere_orthogonal_reciproque (u:=vec B C) (v:=vec A I)); intros H2; try exact H2.",
            "VernacExtend",
            "c0f61efa2227d0ed6ef3822f1e67b00cbca29468"
        ],
        [
            "apply transitive with (plus (cons (vec A B) (vec C B)) (cons (vec C B) (vec A I))); auto.",
            "VernacExtend",
            "5dcd7807162111e3252f385e981c85b148e4c04b"
        ],
        [
            "apply transitive with (plus (cons (vec B C) (vec A C)) (cons (opp (vec B C)) (vec A I))); auto.",
            "VernacExtend",
            "2bfe59af8da241144878a21831c1ce5975dfc2ff"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (cons (opp (vec B A)) (opp (vec B C))); auto.",
            "VernacExtend",
            "9026ac3948bab7b5a04af586d663704a5f0efa62"
        ],
        [
            "apply vR_R_compatible; auto.",
            "VernacExtend",
            "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
        ],
        [
            "apply v_sym; apply opp_vect.",
            "VernacExtend",
            "690d125ac78b2cf94d424d93b651e787680e21c2"
        ],
        [
            "apply v_sym; apply opp_vect.",
            "VernacExtend",
            "690d125ac78b2cf94d424d93b651e787680e21c2"
        ],
        [
            "apply transitive with (cons (opp (vec C B)) (opp (vec C A))); auto.",
            "VernacExtend",
            "9a740e6f909b276b803627d31af990d0a0e7a855"
        ],
        [
            "apply transitive with (cons (vec C B) (vec C A)); auto.",
            "VernacExtend",
            "9265d071d1227e1d12c6d3a5585a07f7ae58ab94"
        ],
        [
            "apply transitive with (cons (vec B A) (vec B C)); auto.",
            "VernacExtend",
            "4906eab569794cca01054cc74c69dc2b449752c1"
        ],
        [
            "apply vR_R_compatible; auto.",
            "VernacExtend",
            "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
        ],
        [
            "apply opp_vect.",
            "VernacExtend",
            "b803ed39b96cc494209511e349bcac7e08fc70b6"
        ],
        [
            "apply opp_vect.",
            "VernacExtend",
            "b803ed39b96cc494209511e349bcac7e08fc70b6"
        ],
        [
            "apply vR_R_compatible; auto.",
            "VernacExtend",
            "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
        ],
        [
            "apply v_sym; apply opp_vect.",
            "VernacExtend",
            "690d125ac78b2cf94d424d93b651e787680e21c2"
        ],
        [
            "apply transitive with (plus (cons (vec B C) (vec A C)) (cons (vec A I) (vec B C))); auto.",
            "VernacExtend",
            "f0f2fc71f474199775a58bb8a30a4d3315499cd3"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec A I) (vec B C)) (cons (vec B C) (vec A C))); auto.",
            "VernacExtend",
            "bb3ac76a60c7353d0f17e331b1b37b66280b6ff7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bissectrice_deux_isoceles : forall I A B C D : PO, bissectrice I A B C -> isocele A B C -> isocele D B C -> R (cons (vec D B) (vec A I)) (cons (vec A I) (vec D C)).",
            "VernacStartTheoremProof",
            "e84e031c099cad83905a6f60767dd15f335084a1"
        ],
        [
            "unfold isocele, bissectrice in |- *; intros I A B C D H H0 H1.",
            "VernacExtend",
            "46ab499681aeefa4fe94be7df50c581bc456a070"
        ],
        [
            "cut (R (cons (vec B C) (vec A I)) (cons (vec A I) (vec C B))); intros.",
            "VernacExtend",
            "f58790b1b646015827bff74ffd28f3bc1d48bfb6"
        ],
        [
            "cut (R (cons (vec B D) (vec B C)) (cons (vec C B) (vec C D))); intros; auto.",
            "VernacExtend",
            "9524af20945e67b78c890bef7db2b6ff4d744f6b"
        ],
        [
            "apply transitive with (plus (cons (vec D B) (vec B D)) (cons (vec B D) (vec A I))); auto.",
            "VernacExtend",
            "46c3ff679d68afd9476a10be0e17a520c9ebbd77"
        ],
        [
            "apply transitive with (plus (cons (vec A I) (vec I A)) (cons (vec I A) (vec D C))); auto.",
            "VernacExtend",
            "7cadd69db52d075e81332bee84e247505d35b8b5"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with pi; auto.",
            "VernacExtend",
            "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
        ],
        [
            "apply transitive with (plus (cons (vec B D) (vec B C)) (cons (vec B C) (vec A I))); auto.",
            "VernacExtend",
            "dbd593074b3eb86af1d37b8700bd989038443fc6"
        ],
        [
            "apply transitive with (plus (cons (vec C B) (vec C D)) (cons (vec B C) (vec A I))); auto.",
            "VernacExtend",
            "4fce69a65c0b48715cbc6840eb0e003c06ed73b1"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec C B) (vec C D)) (cons (vec A I) (vec C B))); auto.",
            "VernacExtend",
            "d4cfa181b8358222d48d48d07d55fc76bbb9f0c6"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (cons (vec A I) (vec C B)) (cons (vec C B) (vec C D))); auto.",
            "VernacExtend",
            "0feecdbc402d3f2f8242c222c5f5bdb927376a65"
        ],
        [
            "apply transitive with (cons (vec A I) (vec C D)); auto.",
            "VernacExtend",
            "c6c35c2617ec00578ee165e53cce41b385b98f97"
        ],
        [
            "apply transitive with (cons (opp (vec I A)) (opp (vec D C))); auto.",
            "VernacExtend",
            "146588f6f0df97fb42b05eba4a6ef05870441926"
        ],
        [
            "apply vR_R_compatible; auto.",
            "VernacExtend",
            "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
        ],
        [
            "apply v_sym; apply opp_vect.",
            "VernacExtend",
            "690d125ac78b2cf94d424d93b651e787680e21c2"
        ],
        [
            "apply v_sym; apply opp_vect.",
            "VernacExtend",
            "690d125ac78b2cf94d424d93b651e787680e21c2"
        ],
        [
            "cut (orthogonal (vec A I) (vec B C)); intros; auto.",
            "VernacExtend",
            "f168e6709661ba7c689582d2d89d0e2bd46154bb"
        ],
        [
            "apply transitive with (cons (vec A I) (opp (vec B C))); auto.",
            "VernacExtend",
            "a6e313534d674310e88f7e724c7079b3cb5732b6"
        ],
        [
            "apply vR_R_compatible; auto.",
            "VernacExtend",
            "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
        ],
        [
            "apply opp_vect.",
            "VernacExtend",
            "b803ed39b96cc494209511e349bcac7e08fc70b6"
        ],
        [
            "apply isocele_bissectrice_hauteur; auto.",
            "VernacExtend",
            "60dd9cc3ef99e76829e0f84378a9fc283a486236"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bissectrice_droite : forall u v w t : V, R (cons v u) (cons u w) -> colineaire u t -> R (cons v t) (cons t w).",
            "VernacStartTheoremProof",
            "8c05302d454ef448c3ead78477450d130a3aad00"
        ],
        [
            "unfold colineaire in |- *; intros u v w t H H0.",
            "VernacExtend",
            "a1c36431369a3f152293e8f251d1c711ac00555d"
        ],
        [
            "apply transitive with (plus (cons v u) (cons u t)); auto.",
            "VernacExtend",
            "1ff77bd2da0d7b25765872a37ed47c924de518fb"
        ],
        [
            "apply transitive with (plus (cons u w) (cons u t)); auto.",
            "VernacExtend",
            "ee82321b8525b7adffad70c933108fa700443fcf"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply regulier with (a := cons u t) (c := cons u t); auto.",
            "VernacExtend",
            "deb480e514c22b27ebe6884311c8bb1dcfab12b0"
        ],
        [
            "apply transitive with (cons u w); auto.",
            "VernacExtend",
            "a58892efd090a66d7d47eb8d55d474776cb731e2"
        ],
        [
            "apply transitive with (plus (cons u t) (plus (cons u t) (cons u w))); auto.",
            "VernacExtend",
            "fac0c73eaf4f6799cbabb17b5023962af09eb866"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus (plus (cons u t) (cons u t)) (cons u w)); auto.",
            "VernacExtend",
            "3baed897fbe648e46e67365ad5a63f0448db19ea"
        ],
        [
            "apply transitive with (plus zero (cons u w)); auto.",
            "VernacExtend",
            "57ec1e19cb6a89a50a0dc64f146b16f55a5aab59"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve bissectrice_droite.",
            "VernacHints",
            "4d2275d1bd8a2443eedbc5d805eadce68c4b538f"
        ],
        [
            "Definition milieu (I B C : PO) := colineaire (vec B I) (vec B C) /\\ (forall A : PO, isocele A B C -> bissectrice I A B C).",
            "VernacDefinition",
            "1334f2eddf71459afeb0f0534c88618ce8236539"
        ],
        [
            "Axiom existence_milieu : forall B C : PO, exists I : PO, milieu I B C.",
            "VernacAssumption",
            "535a2cbafe9f8ef958075886892d42a087670565"
        ],
        [
            "Lemma milieu_isocele : forall I A B C : PO, isocele A B C -> milieu I B C -> bissectrice I A B C.",
            "VernacStartTheoremProof",
            "9c102147380e71ca08dcae1a1e45c7f0fa9552c2"
        ],
        [
            "unfold milieu in |- *; intros.",
            "VernacExtend",
            "0dfeb0bebe0ed2c356edd1b79af343fcb25a2339"
        ],
        [
            "elim H0; intros H1 H2; clear H0; try exact H2.",
            "VernacExtend",
            "5d0b74fb859814085080412fa60424b29b2e0307"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom point_aligne : forall A B C : PO, colineaire (vec A B) (vec C B) -> colineaire (vec A B) (vec A C).",
            "VernacAssumption",
            "44d3c50196216b14df05398e23977dbc0e656704"
        ],
        [
            "Lemma existence_mediatrice_base_isocele : forall A B C D : PO, isocele A B C -> isocele D B C -> bissectrice D A B C /\\ bissectrice A D B C.",
            "VernacStartTheoremProof",
            "6b276246e3e46e25ed774848222264e84aee2646"
        ],
        [
            "intros A B C D H H0; try assumption.",
            "VernacExtend",
            "dc0d8d88e21b0cc96172218c310c0d41f3ad24c1"
        ],
        [
            "elim existence_milieu with (B := B) (C := C); intros I H1; try exact H1.",
            "VernacExtend",
            "f568129d2827bf7d4c51b74846cd3a4f0f23cee2"
        ],
        [
            "cut (bissectrice I A B C /\\ bissectrice I D B C); intros.",
            "VernacExtend",
            "d45ebf480cdb30fbd308e9ee1a483a5659a14d3c"
        ],
        [
            "elim H2; intros H3 H4; clear H2; try exact H3.",
            "VernacExtend",
            "5d29d0b3ef8e5e3d890c19fbf57b311e31be6ead"
        ],
        [
            "cut (colineaire (vec A I) (vec D I)); intros.",
            "VernacExtend",
            "998b02b0d60f3da673254200da03e87faaadc332"
        ],
        [
            "unfold bissectrice in |- *.",
            "VernacExtend",
            "db32cadf1577b2abc64e36f02cd268d2fd5cf841"
        ],
        [
            "split; [ idtac | try assumption ].",
            "VernacExtend",
            "c51dd02c76c3fc17e5bffc3bbcf27d25c5cb3a50"
        ],
        [
            "apply bissectrice_droite with (vec A I); auto.",
            "VernacExtend",
            "d6dc0db2eb04795f99de96d3c481771479a931d4"
        ],
        [
            "apply point_aligne; auto.",
            "VernacExtend",
            "07fc033c504c1dafeb848df8656fb61b273d89f8"
        ],
        [
            "apply bissectrice_droite with (vec D I); auto.",
            "VernacExtend",
            "af0e05e999bcff019490d28540b0abb437e264ae"
        ],
        [
            "apply point_aligne; auto.",
            "VernacExtend",
            "07fc033c504c1dafeb848df8656fb61b273d89f8"
        ],
        [
            "apply bissectrice_direction with (1 := H3); auto.",
            "VernacExtend",
            "bc23f4e5945062b5bab3521310a052a618dd9e4c"
        ],
        [
            "apply bissectrice_deux_isoceles; auto.",
            "VernacExtend",
            "b3db625849eb33693831d19c68eb403b378749f9"
        ],
        [
            "split; [ idtac | try assumption ].",
            "VernacExtend",
            "c51dd02c76c3fc17e5bffc3bbcf27d25c5cb3a50"
        ],
        [
            "apply milieu_isocele; auto.",
            "VernacExtend",
            "b524bacb26d1492f1f37e5af3ef10e90213a6370"
        ],
        [
            "apply milieu_isocele; auto.",
            "VernacExtend",
            "b524bacb26d1492f1f37e5af3ef10e90213a6370"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma concours_3circonscrits : forall A B C P Q T O1 O2 I : PO, circonscrit T A B O1 -> circonscrit I A B O1 -> circonscrit Q A C O2 -> circonscrit I A C O2 -> ~ colineaire (vec P B) (vec P C) -> R (plus (cons (vec P C) (vec P B)) (plus (cons (vec T B) (vec T A)) (cons (vec Q A) (vec Q C)))) pi -> sont_cocycliques P B C I.",
            "VernacStartTheoremProof",
            "68fd22cc09b705adba4837b6d2c118bfe27bab03"
        ],
        [
            "unfold circonscrit in |- *; intros A B C P Q T O O' I H H0 H1 H2 H3 H4.",
            "VernacExtend",
            "b891296f1b5b78cbb9f0e223a98e85c20f5ca252"
        ],
        [
            "apply reciproque_cocyclique; auto.",
            "VernacExtend",
            "25ddc2ad028dc2fff96153b289d59b059ff496fa"
        ],
        [
            "apply symetrique.",
            "VernacExtend",
            "0136ebcb68b0ff4c788d3eed039b760b5306479a"
        ],
        [
            "apply transitive with (double (plus (cons (vec I B) (vec I A)) (cons (vec I A) (vec I C)))); auto.",
            "VernacExtend",
            "eb6c069ae0a6632caa30ea9bb943430bd998039b"
        ],
        [
            "apply transitive with (double (plus (cons (vec T B) (vec T A)) (cons (vec Q A) (vec Q C)))); auto.",
            "VernacExtend",
            "5f652ea16987487c0b726b9483eb60e46e7b1aa7"
        ],
        [
            "apply regulier with (a := double (cons (vec P C) (vec P B))) (c := double (cons (vec P C) (vec P B))); auto.",
            "VernacExtend",
            "98216457efa971bbac22a3c5e9c0132f90f3ba78"
        ],
        [
            "apply transitive with (double (plus (cons (vec P C) (vec P B)) (cons (vec P B) (vec P C)))); auto.",
            "VernacExtend",
            "61c1325add004ebd4728f5289ce6121509d83af6"
        ],
        [
            "apply transitive with (double (cons (vec P C) (vec P C))); auto.",
            "VernacExtend",
            "47d5ce238941b71e435c89fd2fcba4aa5bc914a7"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "apply transitive with (double (plus (cons (vec P C) (vec P B)) (plus (cons (vec T B) (vec T A)) (cons (vec Q A) (vec Q C))))); auto.",
            "VernacExtend",
            "4223d10061defa554273c14eb6d8bdc54604af62"
        ],
        [
            "apply transitive with (double pi); auto.",
            "VernacExtend",
            "5c3253122241934312aee1af1fb258e09edd9690"
        ],
        [
            "apply transitive with zero; auto.",
            "VernacExtend",
            "d6af809b28273d785ded7fd87d98ffa03ae942a8"
        ],
        [
            "apply transitive with (plus (double (cons (vec T B) (vec T A))) (double (cons (vec Q A) (vec Q C)))); auto.",
            "VernacExtend",
            "fa9052475cbefadc9a58f498c0961dcead3aea49"
        ],
        [
            "apply transitive with (plus (double (cons (vec I B) (vec I A))) (double (cons (vec I A) (vec I C)))); auto.",
            "VernacExtend",
            "27aec13aad806afdd424b1b1a9adeae51526d4ca"
        ],
        [
            "apply compatible.",
            "VernacExtend",
            "e68947519165931e42e3ec606a243992bbe1f0a3"
        ],
        [
            "apply cocyclique with O.",
            "VernacExtend",
            "3b98ee8043aadd90b85325ec384b387e3a2189d0"
        ],
        [
            "elim H0; intros H5 H6; clear H0; auto.",
            "VernacExtend",
            "f8fc7d3523f24635190ce48c2b22a2f44e7eefba"
        ],
        [
            "elim H0; intros H5 H6; elim H6; intros H7 H8; clear H6 H0; auto.",
            "VernacExtend",
            "03092e77474b854521997588f9e2ba39cc4a5e54"
        ],
        [
            "elim H0; intros H5 H6; elim H6; intros H7 H8; clear H6 H0; auto.",
            "VernacExtend",
            "03092e77474b854521997588f9e2ba39cc4a5e54"
        ],
        [
            "elim H; intros H5 H6; elim H6; intros H7 H8; clear H6 H; auto.",
            "VernacExtend",
            "f1c6bfd49a069d4f838e0974b9c009749c95ed1c"
        ],
        [
            "elim H; intros H5 H6; elim H6; intros H7 H8; clear H6 H; auto.",
            "VernacExtend",
            "f1c6bfd49a069d4f838e0974b9c009749c95ed1c"
        ],
        [
            "apply cocyclique with O'.",
            "VernacExtend",
            "273e17f5d992f150cb29818da8ef68cf4cb0805d"
        ],
        [
            "elim H2; intros H5 H6; clear H2; try exact H5.",
            "VernacExtend",
            "60be50a207ed7597417d80698c2a09083c94cf05"
        ],
        [
            "elim H2; intros H5 H6; elim H6; intros H7 H8; clear H6 H2; auto.",
            "VernacExtend",
            "ee2aea0c4b1297aa32a16c54d6c412c3368de0fa"
        ],
        [
            "elim H2; intros H5 H6; elim H6; intros H7 H8; clear H6 H2; auto.",
            "VernacExtend",
            "ee2aea0c4b1297aa32a16c54d6c412c3368de0fa"
        ],
        [
            "elim H1; intros H5 H6; elim H6; intros H7 H8; clear H6 H1; auto.",
            "VernacExtend",
            "3b9d24f22f63cbf5f14d522f68185a9dc7bb20c5"
        ],
        [
            "elim H1; intros H5 H6; elim H6; intros H7 H8; clear H6 H1; auto.",
            "VernacExtend",
            "3b9d24f22f63cbf5f14d522f68185a9dc7bb20c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma circonscrit_3centres : forall A B C O1 O2 O3 I : PO, circonscrit I A B O1 -> circonscrit I A C O2 -> circonscrit I B C O3 -> R (double (cons (vec O1 O2) (vec O1 O3))) (double (cons (vec I A) (vec I B))) /\\ R (double (cons (vec O1 O3) (vec O2 O3))) (double (cons (vec I B) (vec I C))) /\\ R (double (cons (vec O1 O2) (vec O2 O3))) (double (cons (vec I A) (vec I C))).",
            "VernacStartTheoremProof",
            "6931ee566f5e2c62999b056283d684a2f55d81ac"
        ],
        [
            "unfold circonscrit in |- *; intros A B C O1 O2 O3 I H H0 H1.",
            "VernacExtend",
            "5bb8d32621d8c010d98afa347bcea4df0b468da2"
        ],
        [
            "elim H1; intros H6 H7; elim H7; intros H8 H9; clear H7 H1; try exact H8.",
            "VernacExtend",
            "2ec1cbac301fc2acbbd705d9b0ec51ea056cc01a"
        ],
        [
            "elim H0; intros H1 H7; elim H7; intros H10 H11; clear H7 H0; try exact H10.",
            "VernacExtend",
            "5458ceb6a9359db2d238e9c5d02914bf682ba331"
        ],
        [
            "elim H; intros H0 H7; elim H7; intros H12 H13; clear H7 H; try exact H12.",
            "VernacExtend",
            "b0b25ca0f7fef27bbcc431fed56ac5e89e5937b2"
        ],
        [
            "elim existence_mediatrice_base_isocele with (A := O2) (B := I) (C := A) (D := O1); auto; intros.",
            "VernacExtend",
            "94f906183eee3941808be04c0441c515f3c0220b"
        ],
        [
            "elim existence_mediatrice_base_isocele with (A := O1) (B := I) (C := B) (D := O3); auto; intros.",
            "VernacExtend",
            "9bad9440fe8a5b9b58ac52266b74f859373a4c4d"
        ],
        [
            "elim existence_mediatrice_base_isocele with (A := O3) (B := I) (C := C) (D := O2); auto; intros.",
            "VernacExtend",
            "d8345183d5983b5c698dd5dd63b3454a3ea87dc5"
        ],
        [
            "split; [ apply double_orthogonal; auto | split; apply double_orthogonal; auto ].",
            "VernacExtend",
            "aa61e969536143cefade8e469e1d55fb78906943"
        ],
        [
            "apply isocele_bissectrice_hauteur; auto.",
            "VernacExtend",
            "60dd9cc3ef99e76829e0f84378a9fc283a486236"
        ],
        [
            "apply isocele_bissectrice_hauteur; auto.",
            "VernacExtend",
            "60dd9cc3ef99e76829e0f84378a9fc283a486236"
        ],
        [
            "apply isocele_bissectrice_hauteur; auto.",
            "VernacExtend",
            "60dd9cc3ef99e76829e0f84378a9fc283a486236"
        ],
        [
            "apply isocele_bissectrice_hauteur; auto.",
            "VernacExtend",
            "60dd9cc3ef99e76829e0f84378a9fc283a486236"
        ],
        [
            "apply isocele_bissectrice_hauteur; auto.",
            "VernacExtend",
            "60dd9cc3ef99e76829e0f84378a9fc283a486236"
        ],
        [
            "apply isocele_bissectrice_hauteur; auto.",
            "VernacExtend",
            "60dd9cc3ef99e76829e0f84378a9fc283a486236"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem general_Napoleon : forall A B C P0 Q T O1 O2 I : PO, circonscrit T A B O1 -> circonscrit I A B O1 -> circonscrit Q A C O2 -> circonscrit I A C O2 -> ~ colineaire (vec P0 B) (vec P0 C) -> R (plus (cons (vec P0 C) (vec P0 B)) (plus (cons (vec T B) (vec T A)) (cons (vec Q A) (vec Q C)))) pi -> exists O3 : PO, R (double (cons (vec O1 O2) (vec O1 O3))) (double (cons (vec T A) (vec T B))) /\\ R (double (cons (vec O1 O3) (vec O2 O3))) (double (cons (vec P0 B) (vec P0 C))) /\\ R (double (cons (vec O1 O2) (vec O2 O3))) (double (cons (vec Q A) (vec Q C))).",
            "VernacStartTheoremProof",
            "c6b1db8a61d22c20d582621c31c4aac4306751a7"
        ],
        [
            "intros A B C P Q T O1 O2 I H H0 H1 H2 H3 H4; try assumption.",
            "VernacExtend",
            "16eabd9e6d033e7c38334c586983dfb2b728a538"
        ],
        [
            "cut (sont_cocycliques P B C I); intros.",
            "VernacExtend",
            "758c028cdb7eb30db8112eddb08381b295cb203d"
        ],
        [
            "elim cocyclicite_six with (A := B) (B := C) (C := P) (D := I); [ intros O3 H6; elim H6; intros H7 H8; clear H6; try exact H7 | auto ].",
            "VernacExtend",
            "9110514c67cdfb847832868715a65a21e8aa6532"
        ],
        [
            "elim H7; intros H6 H9; clear H7; try exact H9.",
            "VernacExtend",
            "bd855a682b26e893a2225aae03bc25885b048fe0"
        ],
        [
            "exists O3.",
            "VernacExtend",
            "7d9061280db2d429ff7302768fc6d91a1407efc6"
        ],
        [
            "elim circonscrit_3centres with (A := A) (B := B) (C := C) (O1 := O1) (O2 := O2) (O3 := O3) (I := I); [ try exact H7 | idtac | idtac | idtac ].",
            "VernacExtend",
            "1995a717368049ac903162cd584abe49a8495413"
        ],
        [
            "intros H7 H10; elim H10; intros H11 H12; clear H10; try exact H11.",
            "VernacExtend",
            "23de8493ccd12c32dbfc993c081c7b27fa5abde9"
        ],
        [
            "split; [ idtac | split; [ try assumption | idtac ] ].",
            "VernacExtend",
            "b6333b96395085c4902b0db53c01ce2bd5f340cc"
        ],
        [
            "apply transitive with (double (cons (vec I A) (vec I B))); auto.",
            "VernacExtend",
            "021ead1887264949b538e49c908597be8e29553a"
        ],
        [
            "unfold circonscrit in H9, H6, H2, H1, H0, H.",
            "VernacExtend",
            "1867d2fe95d2a35c80f126a15cf67fe8c53260ea"
        ],
        [
            "elim H; intros H10 H13; elim H13; intros H14 H15; clear H13 H; try exact H14.",
            "VernacExtend",
            "754dd47e6e37094ae42b0a0bfe45505e1296d877"
        ],
        [
            "elim H0; intros H H13; elim H13; intros H16 H17; clear H13 H0; try exact H16.",
            "VernacExtend",
            "00b68807347eb80772a80afe08809d53f9835ea6"
        ],
        [
            "apply cocyclique with O1; auto.",
            "VernacExtend",
            "45e5e60a58d41520585b3b7d9cca14e8e9976b74"
        ],
        [
            "apply transitive with (double (cons (vec I B) (vec I C))); auto.",
            "VernacExtend",
            "babd89643ca6435d3f2551eb7a8cd8cd0eeebfb4"
        ],
        [
            "unfold circonscrit in H9, H6, H2, H1, H0, H.",
            "VernacExtend",
            "1867d2fe95d2a35c80f126a15cf67fe8c53260ea"
        ],
        [
            "elim H9; intros H10 H13; elim H13; intros H14 H15; clear H13 H9; try exact H14.",
            "VernacExtend",
            "85bd00cf206988e9d107135e4178b32d887df4bc"
        ],
        [
            "elim H6; intros H9 H13; elim H13; intros H16 H17; clear H13 H6; try exact H16.",
            "VernacExtend",
            "6d0e7338528b82f6b7cfa6b55782fb8a3e04c67e"
        ],
        [
            "apply cocyclique with O3; auto.",
            "VernacExtend",
            "6cea02be523ef7d6a60bdd0ab23e6b3f18f1653e"
        ],
        [
            "apply transitive with (double (cons (vec I A) (vec I C))); auto.",
            "VernacExtend",
            "500f167179d43b2f7a7e1c1dcb1c664ef702f124"
        ],
        [
            "unfold circonscrit in H9, H6, H2, H1, H0, H.",
            "VernacExtend",
            "1867d2fe95d2a35c80f126a15cf67fe8c53260ea"
        ],
        [
            "elim H2; intros H10 H13; elim H13; intros H14 H15; clear H13 H2; try exact H14.",
            "VernacExtend",
            "58e30c73af0396a663bb9ed158e7d55df28c2341"
        ],
        [
            "elim H1; intros H2 H13; elim H13; intros H16 H17; clear H13 H1; try exact H16.",
            "VernacExtend",
            "4b6634cef207ce4fe7652bdec6183544a82b9ad7"
        ],
        [
            "apply cocyclique with O2; auto.",
            "VernacExtend",
            "17bc2a078f5a4736055dd9aa043e15d0bc6a050b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (concours_3circonscrits (A:=A) (B:=B) (C:=C) (P:=P) (Q:=Q) (T:=T) (O1:=O1) (O2:=O2) (I:=I)); auto.",
            "VernacExtend",
            "9303e00fb391a33f44636b385a4efbc9f9c83273"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "colineaire_sym",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := double (cons u v)) (c := double (cons u v)); auto.",
                        "VernacExtend",
                        "de5b620b6bfe4da04c3c04b71ba93a48a1bacd4b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u v) (cons v u))); auto.",
                        "VernacExtend",
                        "d43346118f43e9c7a026b9c00330e0ca4e514ce0"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero zero); auto.",
                        "VernacExtend",
                        "28b9f0d322c71e80fda7dcbce240622477574f90"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "colineaire_modulo_pi",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u' u) (plus (cons u v) (cons v v')))); auto.",
                        "VernacExtend",
                        "c0e679832b723d7615e4128db3de6c94207d3a8f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u' u)) (double (plus (cons u v) (cons v v')))); auto.",
                        "VernacExtend",
                        "d708125eeb8a8c2935a77290797deaf6fd733e12"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u' u)) (plus (double (cons u v)) (double (cons v v')))); auto.",
                        "VernacExtend",
                        "9a84f8941816abc472654b0a768b4503eb7a8675"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (plus (double (cons u v)) (double (cons v v')))); auto.",
                        "VernacExtend",
                        "eba1f0595765e15d18eee02200ac18a70153fb33"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "cut (colineaire u' u); intros; auto.",
                        "VernacExtend",
                        "5b57e49c4b18532c8d3d780628d59bc6894370a6"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) (double (cons v v'))); auto.",
                        "VernacExtend",
                        "7fbf1de46d442d04005e1225904ca7a918b6a4f3"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) zero); auto.",
                        "VernacExtend",
                        "dd72510b50a1f13a32f8a21d95ddf435e7a469e5"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (double (cons u v))); auto.",
                        "VernacExtend",
                        "04d12a44481d65e8cec2e8be78e3c2f585cabae5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthogonal_opp",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold orthogonal in |- *; intros.",
                        "VernacExtend",
                        "6563e8696170063b79fa3e335a068afa26ec9a95"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u v) (cons v (opp v)))); auto.",
                        "VernacExtend",
                        "2c6e6d41bc545c448d3c6f7ac4c31721c9415be7"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) (double (cons v (opp v)))); auto.",
                        "VernacExtend",
                        "682b16725508b38e8d3c3b07929ec5c975ece3d4"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi (double pi)); auto.",
                        "VernacExtend",
                        "2cad4e1f7906698172914a74303328d4607b10da"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi zero); auto.",
                        "VernacExtend",
                        "35e4d72af8c796900d81f0386a3154168eebec6d"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero pi); auto.",
                        "VernacExtend",
                        "9b282c0594500db4c7cff92ce7312f959fe01ff8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthogonal_colineaire",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "unfold colineaire, orthogonal in |- *; intros.",
                        "VernacExtend",
                        "915a1c23a6f0d7dd6e5e20aa4919f519c628757e"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u v) (cons v w))); auto.",
                        "VernacExtend",
                        "e4feda8c13eb3f943068243590367df2370fcb9f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) (double (cons v w))); auto.",
                        "VernacExtend",
                        "36c111fb0f1439f73cdd36ed86fce9cec70a5cb3"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi zero); auto.",
                        "VernacExtend",
                        "35e4d72af8c796900d81f0386a3154168eebec6d"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero pi); auto.",
                        "VernacExtend",
                        "9b282c0594500db4c7cff92ce7312f959fe01ff8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "colineaire_transitive",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u v) (cons v w))); auto.",
                        "VernacExtend",
                        "e4feda8c13eb3f943068243590367df2370fcb9f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) (double (cons v w))); auto.",
                        "VernacExtend",
                        "36c111fb0f1439f73cdd36ed86fce9cec70a5cb3"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero zero); auto.",
                        "VernacExtend",
                        "28b9f0d322c71e80fda7dcbce240622477574f90"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_orthogonal",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "unfold orthogonal in |- *; intros.",
                        "VernacExtend",
                        "6563e8696170063b79fa3e335a068afa26ec9a95"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u u') (plus (cons u' v') (cons v' v)))); auto.",
                        "VernacExtend",
                        "05dfe8ec5e01dbafdd7035359a795a9bac438c15"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u u')) (double (plus (cons u' v') (cons v' v)))); auto.",
                        "VernacExtend",
                        "61420924404ed9cfb524099943c468e9fdef3ba3"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u u')) (plus (double (cons u' v')) (double (cons v' v)))); auto.",
                        "VernacExtend",
                        "aa7f5d8864f28940c915f3cebfd4e70878d30bd6"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi (plus (double (cons u' v')) pi)); auto.",
                        "VernacExtend",
                        "de218e12e03ef3584c6e44540b92b73aee800458"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := double (cons v v')) (c := pi); auto.",
                        "VernacExtend",
                        "b3d5cc3a9bfe6480d86a853c23df23129241a0cd"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons v v') (cons v' v))); auto.",
                        "VernacExtend",
                        "482c5b44b593b3481019b0e45b1c56b5e2109b25"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons v v)); auto.",
                        "VernacExtend",
                        "386f03866fc0ca10bbd0d2751bbbc57c4eaa90ec"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "apply transitive with zero; auto.",
                        "VernacExtend",
                        "d6af809b28273d785ded7fd87d98ffa03ae942a8"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (plus (double (cons u' v')) pi) pi); auto.",
                        "VernacExtend",
                        "ef0c5470f325e19067e882ebc655a5416a99f864"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u' v')) (plus pi pi)); auto.",
                        "VernacExtend",
                        "7cdd77387dcfbc650a8f588caca1848df5aafc5b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u' v')) zero); auto.",
                        "VernacExtend",
                        "cdfd657d68ef53affd80f73f369db6bbe8a66010"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (double (cons u' v'))); auto.",
                        "VernacExtend",
                        "37d05254905fc8780f5889f5f901e90221ef75e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "critere_orthogonal",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros u v H; unfold orthogonal, double in |- *.",
                        "VernacExtend",
                        "e60946238e900054fb171fab74895c6e4f209351"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons u v) (cons v (opp u))); auto.",
                        "VernacExtend",
                        "cae8e68e44dddc9b6e4dc05b19a5d9df684c5687"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons u (opp u)); auto.",
                        "VernacExtend",
                        "9b54fbd21faaa1024e2e6e31078c5c4ff5c06e60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "critere_orthogonal_reciproque",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "unfold orthogonal, double in |- *; intros u v H.",
                        "VernacExtend",
                        "4679a7d6846f0590c8c5ec624fb7833034ec23d7"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons v u) pi); auto.",
                        "VernacExtend",
                        "98bc634fdd1d424a9a70339baffa8a1cb03a4136"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := cons u v) (c := cons u v); auto.",
                        "VernacExtend",
                        "7b25762e05ac25c3008e94550e49647fc1cd240d"
                    ]
                },
                {
                    "command": [
                        "apply transitive with pi; auto.",
                        "VernacExtend",
                        "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (plus (cons u v) (cons v u)) pi); auto.",
                        "VernacExtend",
                        "d622aa6f8277ea414272bdae24b10bf7d858c1dd"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero pi); auto.",
                        "VernacExtend",
                        "9b282c0594500db4c7cff92ce7312f959fe01ff8"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bissectrice_double",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "unfold bissectrice, double in |- *; intros.",
                        "VernacExtend",
                        "213b1e7dfc20ad27ad071e79f1a3822b1aa19502"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec A I)) (cons (vec A I) (vec A C))); auto.",
                        "VernacExtend",
                        "a4dd475ad60ca43387a9d53281fbf29947d724dc"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bissectrice_unicite",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec A I) (vec A B)) (cons (vec A B) (vec A J)))); auto.",
                        "VernacExtend",
                        "9bde0a8ad0fe6699e65ec6f88702b993dfc3d099"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec A I) (vec A B))) (double (cons (vec A B) (vec A J)))); auto.",
                        "VernacExtend",
                        "47e8004949ece2c5cf91a1dde212a9ef93ab56ec"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A C) (vec A B)) (cons (vec A B) (vec A C))); auto.",
                        "VernacExtend",
                        "4976f8f998bd429874244086da7dcad94bba9c57"
                    ]
                },
                {
                    "command": [
                        "apply compatible; unfold double in |- *.",
                        "VernacExtend",
                        "4de2d6bb62c367ad83d4da04ae387cb9102c0112"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A C) (vec A I)) (cons (vec A I) (vec A B))); auto.",
                        "VernacExtend",
                        "07506d9d00ed007d4cd31a1d2c6a169863de8b07"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec A J)) (cons (vec A J) (vec A C))); auto.",
                        "VernacExtend",
                        "c24d89d977b67240520c4c982e824c58f1b88138"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bissectrice_direction",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec A I) (vec A B)) (cons (vec A B) u))); auto.",
                        "VernacExtend",
                        "374d66d020ff7eb29e0a2fcc1c0d23bcd81f48cb"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec A I) (vec A B))) (double (cons (vec A B) u))); auto.",
                        "VernacExtend",
                        "9098304160fd7f35f8f9466e7fab69cab4fd535b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A C) (vec A B)) (cons (vec A B) (vec A C))); auto.",
                        "VernacExtend",
                        "4976f8f998bd429874244086da7dcad94bba9c57"
                    ]
                },
                {
                    "command": [
                        "apply compatible; unfold double in |- *.",
                        "VernacExtend",
                        "4de2d6bb62c367ad83d4da04ae387cb9102c0112"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A C) (vec A I)) (cons (vec A I) (vec A B))); auto.",
                        "VernacExtend",
                        "07506d9d00ed007d4cd31a1d2c6a169863de8b07"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) u) (cons u (vec A C))); auto.",
                        "VernacExtend",
                        "bd2d9ccb073d531edae57dc2ec6f58432112ea23"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isocele_bissectrice_hauteur",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "unfold isocele, orthogonal, bissectrice in |- *; intros I A B C H H0.",
                        "VernacExtend",
                        "2f59d5928605e57300660b568adfda7a2b9e072d"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec A I) (vec A C)) (plus (cons (vec A C) (vec C A)) (cons (vec C A) (vec B C))))); auto.",
                        "VernacExtend",
                        "16aa113a1c32730d6f7caf777c6b0661a8d7b060"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec A I) (vec A C))) (double (plus (cons (vec A C) (vec C A)) (cons (vec C A) (vec B C))))); auto.",
                        "VernacExtend",
                        "7203e25098f18d4f5d6a1766a8106445ba2d3599"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec A C)) (plus (double (cons (vec A C) (vec C A))) (double (cons (vec C A) (vec B C))))); auto.",
                        "VernacExtend",
                        "c9892e4791543bd2d30e1a794e906189cb9123e3"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec A C)) (plus (double pi) (double (cons (vec C A) (vec B C))))); auto.",
                        "VernacExtend",
                        "faa6e127cd6bff41becfb550efa6091e7045658e"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec A C)) (plus zero (double (cons (vec C A) (vec B C))))); auto.",
                        "VernacExtend",
                        "6a9ae0a20e5fd1273ba99c347d983c07aa29b0ac"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec A C)) (double (cons (vec B C) (vec B A)))); auto.",
                        "VernacExtend",
                        "72491abee6a4dcdb103048bf4d1f0e618a3909bf"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec C A) (vec C B))); auto.",
                        "VernacExtend",
                        "8f5984f2bc98952e988e2bd1f71988fe395efb0a"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec C A) (vec B C))); auto.",
                        "VernacExtend",
                        "de6abd2088a609f30965d7f81fa70e153080ccfb"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec C A) (vec C B)) (cons (vec C B) (vec B C)))); auto.",
                        "VernacExtend",
                        "064724aa52dc9c4ac705eb1b47b9c0b010c156c1"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec C A) (vec C B))) (double (cons (vec C B) (vec B C)))); auto.",
                        "VernacExtend",
                        "50494032e35c0bc3b12cb72f3779b20196cc1958"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec C A) (vec C B))) zero); auto.",
                        "VernacExtend",
                        "84d78fc23aed247a5f0f4cf84d5a23c9604e8a2a"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double pi); auto.",
                        "VernacExtend",
                        "5c3253122241934312aee1af1fb258e09edd9690"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (double (cons (vec C A) (vec C B)))); auto.",
                        "VernacExtend",
                        "cd34a69445410788fd4b8d4bc409b1f1cff94f8d"
                    ]
                },
                {
                    "command": [
                        "apply triangle_isocele; auto.",
                        "VernacExtend",
                        "785af78642e2616df2cda596f70ad122f0dd1c37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthogonal_bissectrice",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros u v H; try assumption.",
                        "VernacExtend",
                        "8829ac24ae651e89fe8f9c06315aeb9aa307738a"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := cons u v) (c := cons u v); auto.",
                        "VernacExtend",
                        "7b25762e05ac25c3008e94550e49647fc1cd240d"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (opp v) u) (cons u v)); auto.",
                        "VernacExtend",
                        "095d21f3e82d0a29db1ee39549a694cba2c89219"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (opp v) v); auto.",
                        "VernacExtend",
                        "0ca5ce24ba19c0db0fcc24e75ec1301bd24335f0"
                    ]
                },
                {
                    "command": [
                        "apply transitive with pi; auto.",
                        "VernacExtend",
                        "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bissectrice_hauteur_isocele",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "unfold isocele, bissectrice in |- *; intros I A B C H H0.",
                        "VernacExtend",
                        "b1a154f039d38affa4af35684a79121d63b45349"
                    ]
                },
                {
                    "command": [
                        "apply reflexion with (vec A I); auto.",
                        "VernacExtend",
                        "a0e4264d4bf3ea4972af014c9ae7e4439f3ee716"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (opp (vec B C)) (vec A I)); auto.",
                        "VernacExtend",
                        "9596b355aaca62d769794d93ec2b7a318fb0020e"
                    ]
                },
                {
                    "command": [
                        "apply vR_R_compatible; auto.",
                        "VernacExtend",
                        "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
                    ]
                },
                {
                    "command": [
                        "apply v_sym; apply opp_vect.",
                        "VernacExtend",
                        "690d125ac78b2cf94d424d93b651e787680e21c2"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec C A) (vec A C)) (cons (vec A C) (vec A I))); auto.",
                        "VernacExtend",
                        "5f591074d1785c661a6d467b3fe601e7502307b2"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A I) (vec A B)) (cons (vec A B) (vec B A))); auto.",
                        "VernacExtend",
                        "4377a2a99d3c76310b73577b2870d561795fb13b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec B A)) (cons (vec A I) (vec A B))); auto.",
                        "VernacExtend",
                        "2f3efd0a346b85469e41f583cec830c1ac7f0997"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with pi; auto.",
                        "VernacExtend",
                        "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isocele_hauteur_bissectrice",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "unfold bissectrice, isocele in |- *; intros.",
                        "VernacExtend",
                        "b5dea8cf53f683b6bdf171956b633a86ae59a354"
                    ]
                },
                {
                    "command": [
                        "generalize (critere_orthogonal_reciproque (u:=vec B C) (v:=vec A I)); intros H2; try exact H2.",
                        "VernacExtend",
                        "c0f61efa2227d0ed6ef3822f1e67b00cbca29468"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A B) (vec C B)) (cons (vec C B) (vec A I))); auto.",
                        "VernacExtend",
                        "5dcd7807162111e3252f385e981c85b148e4c04b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec B C) (vec A C)) (cons (opp (vec B C)) (vec A I))); auto.",
                        "VernacExtend",
                        "2bfe59af8da241144878a21831c1ce5975dfc2ff"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (opp (vec B A)) (opp (vec B C))); auto.",
                        "VernacExtend",
                        "9026ac3948bab7b5a04af586d663704a5f0efa62"
                    ]
                },
                {
                    "command": [
                        "apply vR_R_compatible; auto.",
                        "VernacExtend",
                        "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
                    ]
                },
                {
                    "command": [
                        "apply v_sym; apply opp_vect.",
                        "VernacExtend",
                        "690d125ac78b2cf94d424d93b651e787680e21c2"
                    ]
                },
                {
                    "command": [
                        "apply v_sym; apply opp_vect.",
                        "VernacExtend",
                        "690d125ac78b2cf94d424d93b651e787680e21c2"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (opp (vec C B)) (opp (vec C A))); auto.",
                        "VernacExtend",
                        "9a740e6f909b276b803627d31af990d0a0e7a855"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (vec C B) (vec C A)); auto.",
                        "VernacExtend",
                        "9265d071d1227e1d12c6d3a5585a07f7ae58ab94"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (vec B A) (vec B C)); auto.",
                        "VernacExtend",
                        "4906eab569794cca01054cc74c69dc2b449752c1"
                    ]
                },
                {
                    "command": [
                        "apply vR_R_compatible; auto.",
                        "VernacExtend",
                        "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
                    ]
                },
                {
                    "command": [
                        "apply opp_vect.",
                        "VernacExtend",
                        "b803ed39b96cc494209511e349bcac7e08fc70b6"
                    ]
                },
                {
                    "command": [
                        "apply opp_vect.",
                        "VernacExtend",
                        "b803ed39b96cc494209511e349bcac7e08fc70b6"
                    ]
                },
                {
                    "command": [
                        "apply vR_R_compatible; auto.",
                        "VernacExtend",
                        "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
                    ]
                },
                {
                    "command": [
                        "apply v_sym; apply opp_vect.",
                        "VernacExtend",
                        "690d125ac78b2cf94d424d93b651e787680e21c2"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec B C) (vec A C)) (cons (vec A I) (vec B C))); auto.",
                        "VernacExtend",
                        "f0f2fc71f474199775a58bb8a30a4d3315499cd3"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A I) (vec B C)) (cons (vec B C) (vec A C))); auto.",
                        "VernacExtend",
                        "bb3ac76a60c7353d0f17e331b1b37b66280b6ff7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bissectrice_deux_isoceles",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "unfold isocele, bissectrice in |- *; intros I A B C D H H0 H1.",
                        "VernacExtend",
                        "46ab499681aeefa4fe94be7df50c581bc456a070"
                    ]
                },
                {
                    "command": [
                        "cut (R (cons (vec B C) (vec A I)) (cons (vec A I) (vec C B))); intros.",
                        "VernacExtend",
                        "f58790b1b646015827bff74ffd28f3bc1d48bfb6"
                    ]
                },
                {
                    "command": [
                        "cut (R (cons (vec B D) (vec B C)) (cons (vec C B) (vec C D))); intros; auto.",
                        "VernacExtend",
                        "9524af20945e67b78c890bef7db2b6ff4d744f6b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec D B) (vec B D)) (cons (vec B D) (vec A I))); auto.",
                        "VernacExtend",
                        "46c3ff679d68afd9476a10be0e17a520c9ebbd77"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A I) (vec I A)) (cons (vec I A) (vec D C))); auto.",
                        "VernacExtend",
                        "7cadd69db52d075e81332bee84e247505d35b8b5"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with pi; auto.",
                        "VernacExtend",
                        "31da8f834d414752f9e4d1ee5e795b5fce7f1f6e"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec B D) (vec B C)) (cons (vec B C) (vec A I))); auto.",
                        "VernacExtend",
                        "dbd593074b3eb86af1d37b8700bd989038443fc6"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec C B) (vec C D)) (cons (vec B C) (vec A I))); auto.",
                        "VernacExtend",
                        "4fce69a65c0b48715cbc6840eb0e003c06ed73b1"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec C B) (vec C D)) (cons (vec A I) (vec C B))); auto.",
                        "VernacExtend",
                        "d4cfa181b8358222d48d48d07d55fc76bbb9f0c6"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons (vec A I) (vec C B)) (cons (vec C B) (vec C D))); auto.",
                        "VernacExtend",
                        "0feecdbc402d3f2f8242c222c5f5bdb927376a65"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (vec A I) (vec C D)); auto.",
                        "VernacExtend",
                        "c6c35c2617ec00578ee165e53cce41b385b98f97"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (opp (vec I A)) (opp (vec D C))); auto.",
                        "VernacExtend",
                        "146588f6f0df97fb42b05eba4a6ef05870441926"
                    ]
                },
                {
                    "command": [
                        "apply vR_R_compatible; auto.",
                        "VernacExtend",
                        "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
                    ]
                },
                {
                    "command": [
                        "apply v_sym; apply opp_vect.",
                        "VernacExtend",
                        "690d125ac78b2cf94d424d93b651e787680e21c2"
                    ]
                },
                {
                    "command": [
                        "apply v_sym; apply opp_vect.",
                        "VernacExtend",
                        "690d125ac78b2cf94d424d93b651e787680e21c2"
                    ]
                },
                {
                    "command": [
                        "cut (orthogonal (vec A I) (vec B C)); intros; auto.",
                        "VernacExtend",
                        "f168e6709661ba7c689582d2d89d0e2bd46154bb"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons (vec A I) (opp (vec B C))); auto.",
                        "VernacExtend",
                        "a6e313534d674310e88f7e724c7079b3cb5732b6"
                    ]
                },
                {
                    "command": [
                        "apply vR_R_compatible; auto.",
                        "VernacExtend",
                        "7fcc9a8d9b727aba6cfdbd57b22a0b85b0e9674c"
                    ]
                },
                {
                    "command": [
                        "apply opp_vect.",
                        "VernacExtend",
                        "b803ed39b96cc494209511e349bcac7e08fc70b6"
                    ]
                },
                {
                    "command": [
                        "apply isocele_bissectrice_hauteur; auto.",
                        "VernacExtend",
                        "60dd9cc3ef99e76829e0f84378a9fc283a486236"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bissectrice_droite",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros u v w t H H0.",
                        "VernacExtend",
                        "a1c36431369a3f152293e8f251d1c711ac00555d"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons v u) (cons u t)); auto.",
                        "VernacExtend",
                        "1ff77bd2da0d7b25765872a37ed47c924de518fb"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons u w) (cons u t)); auto.",
                        "VernacExtend",
                        "ee82321b8525b7adffad70c933108fa700443fcf"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := cons u t) (c := cons u t); auto.",
                        "VernacExtend",
                        "deb480e514c22b27ebe6884311c8bb1dcfab12b0"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (cons u w); auto.",
                        "VernacExtend",
                        "a58892efd090a66d7d47eb8d55d474776cb731e2"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (cons u t) (plus (cons u t) (cons u w))); auto.",
                        "VernacExtend",
                        "fac0c73eaf4f6799cbabb17b5023962af09eb866"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (plus (cons u t) (cons u t)) (cons u w)); auto.",
                        "VernacExtend",
                        "3baed897fbe648e46e67365ad5a63f0448db19ea"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (cons u w)); auto.",
                        "VernacExtend",
                        "57ec1e19cb6a89a50a0dc64f146b16f55a5aab59"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "milieu_isocele",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "unfold milieu in |- *; intros.",
                        "VernacExtend",
                        "0dfeb0bebe0ed2c356edd1b79af343fcb25a2339"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros H1 H2; clear H0; try exact H2.",
                        "VernacExtend",
                        "5d0b74fb859814085080412fa60424b29b2e0307"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "existence_mediatrice_base_isocele",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros A B C D H H0; try assumption.",
                        "VernacExtend",
                        "dc0d8d88e21b0cc96172218c310c0d41f3ad24c1"
                    ]
                },
                {
                    "command": [
                        "elim existence_milieu with (B := B) (C := C); intros I H1; try exact H1.",
                        "VernacExtend",
                        "f568129d2827bf7d4c51b74846cd3a4f0f23cee2"
                    ]
                },
                {
                    "command": [
                        "cut (bissectrice I A B C /\\ bissectrice I D B C); intros.",
                        "VernacExtend",
                        "d45ebf480cdb30fbd308e9ee1a483a5659a14d3c"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros H3 H4; clear H2; try exact H3.",
                        "VernacExtend",
                        "5d29d0b3ef8e5e3d890c19fbf57b311e31be6ead"
                    ]
                },
                {
                    "command": [
                        "cut (colineaire (vec A I) (vec D I)); intros.",
                        "VernacExtend",
                        "998b02b0d60f3da673254200da03e87faaadc332"
                    ]
                },
                {
                    "command": [
                        "unfold bissectrice in |- *.",
                        "VernacExtend",
                        "db32cadf1577b2abc64e36f02cd268d2fd5cf841"
                    ]
                },
                {
                    "command": [
                        "split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "c51dd02c76c3fc17e5bffc3bbcf27d25c5cb3a50"
                    ]
                },
                {
                    "command": [
                        "apply bissectrice_droite with (vec A I); auto.",
                        "VernacExtend",
                        "d6dc0db2eb04795f99de96d3c481771479a931d4"
                    ]
                },
                {
                    "command": [
                        "apply point_aligne; auto.",
                        "VernacExtend",
                        "07fc033c504c1dafeb848df8656fb61b273d89f8"
                    ]
                },
                {
                    "command": [
                        "apply bissectrice_droite with (vec D I); auto.",
                        "VernacExtend",
                        "af0e05e999bcff019490d28540b0abb437e264ae"
                    ]
                },
                {
                    "command": [
                        "apply point_aligne; auto.",
                        "VernacExtend",
                        "07fc033c504c1dafeb848df8656fb61b273d89f8"
                    ]
                },
                {
                    "command": [
                        "apply bissectrice_direction with (1 := H3); auto.",
                        "VernacExtend",
                        "bc23f4e5945062b5bab3521310a052a618dd9e4c"
                    ]
                },
                {
                    "command": [
                        "apply bissectrice_deux_isoceles; auto.",
                        "VernacExtend",
                        "b3db625849eb33693831d19c68eb403b378749f9"
                    ]
                },
                {
                    "command": [
                        "split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "c51dd02c76c3fc17e5bffc3bbcf27d25c5cb3a50"
                    ]
                },
                {
                    "command": [
                        "apply milieu_isocele; auto.",
                        "VernacExtend",
                        "b524bacb26d1492f1f37e5af3ef10e90213a6370"
                    ]
                },
                {
                    "command": [
                        "apply milieu_isocele; auto.",
                        "VernacExtend",
                        "b524bacb26d1492f1f37e5af3ef10e90213a6370"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "concours_3circonscrits",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "unfold circonscrit in |- *; intros A B C P Q T O O' I H H0 H1 H2 H3 H4.",
                        "VernacExtend",
                        "b891296f1b5b78cbb9f0e223a98e85c20f5ca252"
                    ]
                },
                {
                    "command": [
                        "apply reciproque_cocyclique; auto.",
                        "VernacExtend",
                        "25ddc2ad028dc2fff96153b289d59b059ff496fa"
                    ]
                },
                {
                    "command": [
                        "apply symetrique.",
                        "VernacExtend",
                        "0136ebcb68b0ff4c788d3eed039b760b5306479a"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec I B) (vec I A)) (cons (vec I A) (vec I C)))); auto.",
                        "VernacExtend",
                        "eb6c069ae0a6632caa30ea9bb943430bd998039b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec T B) (vec T A)) (cons (vec Q A) (vec Q C)))); auto.",
                        "VernacExtend",
                        "5f652ea16987487c0b726b9483eb60e46e7b1aa7"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := double (cons (vec P C) (vec P B))) (c := double (cons (vec P C) (vec P B))); auto.",
                        "VernacExtend",
                        "98216457efa971bbac22a3c5e9c0132f90f3ba78"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec P C) (vec P B)) (cons (vec P B) (vec P C)))); auto.",
                        "VernacExtend",
                        "61c1325add004ebd4728f5289ce6121509d83af6"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec P C) (vec P C))); auto.",
                        "VernacExtend",
                        "47d5ce238941b71e435c89fd2fcba4aa5bc914a7"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec P C) (vec P B)) (plus (cons (vec T B) (vec T A)) (cons (vec Q A) (vec Q C))))); auto.",
                        "VernacExtend",
                        "4223d10061defa554273c14eb6d8bdc54604af62"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double pi); auto.",
                        "VernacExtend",
                        "5c3253122241934312aee1af1fb258e09edd9690"
                    ]
                },
                {
                    "command": [
                        "apply transitive with zero; auto.",
                        "VernacExtend",
                        "d6af809b28273d785ded7fd87d98ffa03ae942a8"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec T B) (vec T A))) (double (cons (vec Q A) (vec Q C)))); auto.",
                        "VernacExtend",
                        "fa9052475cbefadc9a58f498c0961dcead3aea49"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec I B) (vec I A))) (double (cons (vec I A) (vec I C)))); auto.",
                        "VernacExtend",
                        "27aec13aad806afdd424b1b1a9adeae51526d4ca"
                    ]
                },
                {
                    "command": [
                        "apply compatible.",
                        "VernacExtend",
                        "e68947519165931e42e3ec606a243992bbe1f0a3"
                    ]
                },
                {
                    "command": [
                        "apply cocyclique with O.",
                        "VernacExtend",
                        "3b98ee8043aadd90b85325ec384b387e3a2189d0"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros H5 H6; clear H0; auto.",
                        "VernacExtend",
                        "f8fc7d3523f24635190ce48c2b22a2f44e7eefba"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros H5 H6; elim H6; intros H7 H8; clear H6 H0; auto.",
                        "VernacExtend",
                        "03092e77474b854521997588f9e2ba39cc4a5e54"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros H5 H6; elim H6; intros H7 H8; clear H6 H0; auto.",
                        "VernacExtend",
                        "03092e77474b854521997588f9e2ba39cc4a5e54"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H5 H6; elim H6; intros H7 H8; clear H6 H; auto.",
                        "VernacExtend",
                        "f1c6bfd49a069d4f838e0974b9c009749c95ed1c"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H5 H6; elim H6; intros H7 H8; clear H6 H; auto.",
                        "VernacExtend",
                        "f1c6bfd49a069d4f838e0974b9c009749c95ed1c"
                    ]
                },
                {
                    "command": [
                        "apply cocyclique with O'.",
                        "VernacExtend",
                        "273e17f5d992f150cb29818da8ef68cf4cb0805d"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros H5 H6; clear H2; try exact H5.",
                        "VernacExtend",
                        "60be50a207ed7597417d80698c2a09083c94cf05"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros H5 H6; elim H6; intros H7 H8; clear H6 H2; auto.",
                        "VernacExtend",
                        "ee2aea0c4b1297aa32a16c54d6c412c3368de0fa"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros H5 H6; elim H6; intros H7 H8; clear H6 H2; auto.",
                        "VernacExtend",
                        "ee2aea0c4b1297aa32a16c54d6c412c3368de0fa"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros H5 H6; elim H6; intros H7 H8; clear H6 H1; auto.",
                        "VernacExtend",
                        "3b9d24f22f63cbf5f14d522f68185a9dc7bb20c5"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros H5 H6; elim H6; intros H7 H8; clear H6 H1; auto.",
                        "VernacExtend",
                        "3b9d24f22f63cbf5f14d522f68185a9dc7bb20c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "circonscrit_3centres",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "unfold circonscrit in |- *; intros A B C O1 O2 O3 I H H0 H1.",
                        "VernacExtend",
                        "5bb8d32621d8c010d98afa347bcea4df0b468da2"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros H6 H7; elim H7; intros H8 H9; clear H7 H1; try exact H8.",
                        "VernacExtend",
                        "2ec1cbac301fc2acbbd705d9b0ec51ea056cc01a"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros H1 H7; elim H7; intros H10 H11; clear H7 H0; try exact H10.",
                        "VernacExtend",
                        "5458ceb6a9359db2d238e9c5d02914bf682ba331"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H0 H7; elim H7; intros H12 H13; clear H7 H; try exact H12.",
                        "VernacExtend",
                        "b0b25ca0f7fef27bbcc431fed56ac5e89e5937b2"
                    ]
                },
                {
                    "command": [
                        "elim existence_mediatrice_base_isocele with (A := O2) (B := I) (C := A) (D := O1); auto; intros.",
                        "VernacExtend",
                        "94f906183eee3941808be04c0441c515f3c0220b"
                    ]
                },
                {
                    "command": [
                        "elim existence_mediatrice_base_isocele with (A := O1) (B := I) (C := B) (D := O3); auto; intros.",
                        "VernacExtend",
                        "9bad9440fe8a5b9b58ac52266b74f859373a4c4d"
                    ]
                },
                {
                    "command": [
                        "elim existence_mediatrice_base_isocele with (A := O3) (B := I) (C := C) (D := O2); auto; intros.",
                        "VernacExtend",
                        "d8345183d5983b5c698dd5dd63b3454a3ea87dc5"
                    ]
                },
                {
                    "command": [
                        "split; [ apply double_orthogonal; auto | split; apply double_orthogonal; auto ].",
                        "VernacExtend",
                        "aa61e969536143cefade8e469e1d55fb78906943"
                    ]
                },
                {
                    "command": [
                        "apply isocele_bissectrice_hauteur; auto.",
                        "VernacExtend",
                        "60dd9cc3ef99e76829e0f84378a9fc283a486236"
                    ]
                },
                {
                    "command": [
                        "apply isocele_bissectrice_hauteur; auto.",
                        "VernacExtend",
                        "60dd9cc3ef99e76829e0f84378a9fc283a486236"
                    ]
                },
                {
                    "command": [
                        "apply isocele_bissectrice_hauteur; auto.",
                        "VernacExtend",
                        "60dd9cc3ef99e76829e0f84378a9fc283a486236"
                    ]
                },
                {
                    "command": [
                        "apply isocele_bissectrice_hauteur; auto.",
                        "VernacExtend",
                        "60dd9cc3ef99e76829e0f84378a9fc283a486236"
                    ]
                },
                {
                    "command": [
                        "apply isocele_bissectrice_hauteur; auto.",
                        "VernacExtend",
                        "60dd9cc3ef99e76829e0f84378a9fc283a486236"
                    ]
                },
                {
                    "command": [
                        "apply isocele_bissectrice_hauteur; auto.",
                        "VernacExtend",
                        "60dd9cc3ef99e76829e0f84378a9fc283a486236"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "general_Napoleon",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros A B C P Q T O1 O2 I H H0 H1 H2 H3 H4; try assumption.",
                        "VernacExtend",
                        "16eabd9e6d033e7c38334c586983dfb2b728a538"
                    ]
                },
                {
                    "command": [
                        "cut (sont_cocycliques P B C I); intros.",
                        "VernacExtend",
                        "758c028cdb7eb30db8112eddb08381b295cb203d"
                    ]
                },
                {
                    "command": [
                        "elim cocyclicite_six with (A := B) (B := C) (C := P) (D := I); [ intros O3 H6; elim H6; intros H7 H8; clear H6; try exact H7 | auto ].",
                        "VernacExtend",
                        "9110514c67cdfb847832868715a65a21e8aa6532"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros H6 H9; clear H7; try exact H9.",
                        "VernacExtend",
                        "bd855a682b26e893a2225aae03bc25885b048fe0"
                    ]
                },
                {
                    "command": [
                        "exists O3.",
                        "VernacExtend",
                        "7d9061280db2d429ff7302768fc6d91a1407efc6"
                    ]
                },
                {
                    "command": [
                        "elim circonscrit_3centres with (A := A) (B := B) (C := C) (O1 := O1) (O2 := O2) (O3 := O3) (I := I); [ try exact H7 | idtac | idtac | idtac ].",
                        "VernacExtend",
                        "1995a717368049ac903162cd584abe49a8495413"
                    ]
                },
                {
                    "command": [
                        "intros H7 H10; elim H10; intros H11 H12; clear H10; try exact H11.",
                        "VernacExtend",
                        "23de8493ccd12c32dbfc993c081c7b27fa5abde9"
                    ]
                },
                {
                    "command": [
                        "split; [ idtac | split; [ try assumption | idtac ] ].",
                        "VernacExtend",
                        "b6333b96395085c4902b0db53c01ce2bd5f340cc"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec I A) (vec I B))); auto.",
                        "VernacExtend",
                        "021ead1887264949b538e49c908597be8e29553a"
                    ]
                },
                {
                    "command": [
                        "unfold circonscrit in H9, H6, H2, H1, H0, H.",
                        "VernacExtend",
                        "1867d2fe95d2a35c80f126a15cf67fe8c53260ea"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H10 H13; elim H13; intros H14 H15; clear H13 H; try exact H14.",
                        "VernacExtend",
                        "754dd47e6e37094ae42b0a0bfe45505e1296d877"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros H H13; elim H13; intros H16 H17; clear H13 H0; try exact H16.",
                        "VernacExtend",
                        "00b68807347eb80772a80afe08809d53f9835ea6"
                    ]
                },
                {
                    "command": [
                        "apply cocyclique with O1; auto.",
                        "VernacExtend",
                        "45e5e60a58d41520585b3b7d9cca14e8e9976b74"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec I B) (vec I C))); auto.",
                        "VernacExtend",
                        "babd89643ca6435d3f2551eb7a8cd8cd0eeebfb4"
                    ]
                },
                {
                    "command": [
                        "unfold circonscrit in H9, H6, H2, H1, H0, H.",
                        "VernacExtend",
                        "1867d2fe95d2a35c80f126a15cf67fe8c53260ea"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros H10 H13; elim H13; intros H14 H15; clear H13 H9; try exact H14.",
                        "VernacExtend",
                        "85bd00cf206988e9d107135e4178b32d887df4bc"
                    ]
                },
                {
                    "command": [
                        "elim H6; intros H9 H13; elim H13; intros H16 H17; clear H13 H6; try exact H16.",
                        "VernacExtend",
                        "6d0e7338528b82f6b7cfa6b55782fb8a3e04c67e"
                    ]
                },
                {
                    "command": [
                        "apply cocyclique with O3; auto.",
                        "VernacExtend",
                        "6cea02be523ef7d6a60bdd0ab23e6b3f18f1653e"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec I A) (vec I C))); auto.",
                        "VernacExtend",
                        "500f167179d43b2f7a7e1c1dcb1c664ef702f124"
                    ]
                },
                {
                    "command": [
                        "unfold circonscrit in H9, H6, H2, H1, H0, H.",
                        "VernacExtend",
                        "1867d2fe95d2a35c80f126a15cf67fe8c53260ea"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros H10 H13; elim H13; intros H14 H15; clear H13 H2; try exact H14.",
                        "VernacExtend",
                        "58e30c73af0396a663bb9ed158e7d55df28c2341"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros H2 H13; elim H13; intros H16 H17; clear H13 H1; try exact H16.",
                        "VernacExtend",
                        "4b6634cef207ce4fe7652bdec6183544a82b9ad7"
                    ]
                },
                {
                    "command": [
                        "apply cocyclique with O2; auto.",
                        "VernacExtend",
                        "17bc2a078f5a4736055dd9aa043e15d0bc6a050b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply (concours_3circonscrits (A:=A) (B:=B) (C:=C) (P:=P) (Q:=Q) (T:=T) (O1:=O1) (O2:=O2) (I:=I)); auto.",
                        "VernacExtend",
                        "9303e00fb391a33f44636b385a4efbc9f9c83273"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}