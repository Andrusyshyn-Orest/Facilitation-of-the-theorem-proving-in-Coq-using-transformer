{
    "filename": "point_Simson.v",
    "coq_project": "angles",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Require Export point_cocyclicite.",
            "VernacRequire",
            "606bdf59e5a8e9fbc9b70ce53da37b221e75bb7b"
        ],
        [
            "Lemma colineaire_sym : forall u v : V, colineaire u v -> colineaire v u.",
            "VernacStartTheoremProof",
            "c1127fdbe5398e0ebbbcf3bb604bce63a1330fa4"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply regulier with (a := double (cons u v)) (c := double (cons u v)); auto.",
            "VernacExtend",
            "de5b620b6bfe4da04c3c04b71ba93a48a1bacd4b"
        ],
        [
            "apply transitive with (double (plus (cons u v) (cons v u))); auto.",
            "VernacExtend",
            "d43346118f43e9c7a026b9c00330e0ca4e514ce0"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "apply transitive with (plus zero zero); auto.",
            "VernacExtend",
            "28b9f0d322c71e80fda7dcbce240622477574f90"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve colineaire_sym.",
            "VernacHints",
            "f4fbdd39a706e489ebe83c353741b25ef416905a"
        ],
        [
            "Lemma colineaire_modulo_pi : forall u v u' v' : V, colineaire u u' -> colineaire v v' -> R (double (cons u' v')) (double (cons u v)).",
            "VernacStartTheoremProof",
            "67aae50b505760ea933205507a33952467e75e62"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply transitive with (double (plus (cons u' u) (plus (cons u v) (cons v v')))); auto.",
            "VernacExtend",
            "c0e679832b723d7615e4128db3de6c94207d3a8f"
        ],
        [
            "apply transitive with (plus (double (cons u' u)) (double (plus (cons u v) (cons v v')))); auto.",
            "VernacExtend",
            "d708125eeb8a8c2935a77290797deaf6fd733e12"
        ],
        [
            "apply transitive with (plus (double (cons u' u)) (plus (double (cons u v)) (double (cons v v')))); auto.",
            "VernacExtend",
            "9a84f8941816abc472654b0a768b4503eb7a8675"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero (plus (double (cons u v)) (double (cons v v')))); auto.",
            "VernacExtend",
            "eba1f0595765e15d18eee02200ac18a70153fb33"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "cut (colineaire u' u); intros; auto.",
            "VernacExtend",
            "5b57e49c4b18532c8d3d780628d59bc6894370a6"
        ],
        [
            "apply transitive with (plus (double (cons u v)) (double (cons v v'))); auto.",
            "VernacExtend",
            "7fbf1de46d442d04005e1225904ca7a918b6a4f3"
        ],
        [
            "apply transitive with (plus (double (cons u v)) zero); auto.",
            "VernacExtend",
            "dd72510b50a1f13a32f8a21d95ddf435e7a469e5"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero (double (cons u v))); auto.",
            "VernacExtend",
            "04d12a44481d65e8cec2e8be78e3c2f585cabae5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve colineaire_modulo_pi.",
            "VernacHints",
            "0120fc436be9fac51c1fc8d38814e8a8fbbd196c"
        ],
        [
            "Lemma orthogonal_opp : forall u v : V, orthogonal u v -> orthogonal u (opp v).",
            "VernacStartTheoremProof",
            "db50033c9e5719a1bcb2f0fd6d9a62d064651be2"
        ],
        [
            "unfold orthogonal in |- *; intros.",
            "VernacExtend",
            "6563e8696170063b79fa3e335a068afa26ec9a95"
        ],
        [
            "apply transitive with (double (plus (cons u v) (cons v (opp v)))); auto.",
            "VernacExtend",
            "2c6e6d41bc545c448d3c6f7ac4c31721c9415be7"
        ],
        [
            "apply transitive with (plus (double (cons u v)) (double (cons v (opp v)))); auto.",
            "VernacExtend",
            "682b16725508b38e8d3c3b07929ec5c975ece3d4"
        ],
        [
            "apply transitive with (plus pi (double pi)); auto.",
            "VernacExtend",
            "2cad4e1f7906698172914a74303328d4607b10da"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus pi zero); auto.",
            "VernacExtend",
            "35e4d72af8c796900d81f0386a3154168eebec6d"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero pi); auto.",
            "VernacExtend",
            "9b282c0594500db4c7cff92ce7312f959fe01ff8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve orthogonal_opp.",
            "VernacHints",
            "b904a43fcadb3c2f7ed1c41a0bc5a72410c7c7d5"
        ],
        [
            "Lemma orthogonal_colineaire : forall u v w : V, orthogonal u v -> colineaire v w -> orthogonal u w.",
            "VernacStartTheoremProof",
            "f81fd6638e4e42c71b685c8f107c44cabfc430aa"
        ],
        [
            "unfold colineaire, orthogonal in |- *; intros.",
            "VernacExtend",
            "915a1c23a6f0d7dd6e5e20aa4919f519c628757e"
        ],
        [
            "apply transitive with (double (plus (cons u v) (cons v w))); auto.",
            "VernacExtend",
            "e4feda8c13eb3f943068243590367df2370fcb9f"
        ],
        [
            "apply transitive with (plus (double (cons u v)) (double (cons v w))); auto.",
            "VernacExtend",
            "36c111fb0f1439f73cdd36ed86fce9cec70a5cb3"
        ],
        [
            "apply transitive with (plus pi zero); auto.",
            "VernacExtend",
            "35e4d72af8c796900d81f0386a3154168eebec6d"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (plus zero pi); auto.",
            "VernacExtend",
            "9b282c0594500db4c7cff92ce7312f959fe01ff8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projete_ortho_cote : forall A B C M P Q T : PO, colineaire (vec C A) (vec C Q) -> colineaire (vec P C) (vec P B) -> colineaire (vec B A) (vec B T) -> orthogonal (vec T M) (vec T B) -> orthogonal (vec P M) (vec P B) -> orthogonal (vec Q M) (vec Q C) -> R (double (cons (vec P Q) (vec P T))) (plus (double (cons (vec C A) (vec C M))) (double (cons (vec B M) (vec B A)))).",
            "VernacStartTheoremProof",
            "a4db650d27fda0b8f7ec64a2574cb0b9ef2fb6ed"
        ],
        [
            "intros A B C M P Q S H H0 H1 H2 H3 H4; try assumption.",
            "VernacExtend",
            "a774ac283ac4e8a2e951e93681cd3906c1b0732a"
        ],
        [
            "cut (R (double (cons (vec P Q) (vec P M))) (double (cons (vec C A) (vec C M)))); intros.",
            "VernacExtend",
            "0fcdf60c2e9bbc1b0551807886237bc9122a124d"
        ],
        [
            "cut (R (double (cons (vec P S) (vec P M))) (double (cons (vec B A) (vec B M)))); intros.",
            "VernacExtend",
            "f194c65629513c011f2ca0e7c7f733f6f01c9010"
        ],
        [
            "apply transitive with (double (plus (cons (vec P Q) (vec P M)) (cons (vec P M) (vec P S)))); auto.",
            "VernacExtend",
            "a04990251f1d9f46b15e84b925f036ed23981cee"
        ],
        [
            "apply transitive with (plus (double (cons (vec P Q) (vec P M))) (double (cons (vec P M) (vec P S)))); auto.",
            "VernacExtend",
            "75f17760aaf4aeb8b4288462cdb2536b35f32482"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (double (cons (vec B S) (vec B M))).",
            "VernacExtend",
            "5ef51e061269f58e50766cfb69681e93545ea924"
        ],
        [
            "apply symetrique; apply (deux_rectangles (A:=M) (B:=B) (C:=S) (D:=P)); auto.",
            "VernacExtend",
            "4b7611ce5338e421a0ac664fb73611e1341d1678"
        ],
        [
            "apply colineaire_modulo_pi; auto.",
            "VernacExtend",
            "8d4864be3466fa32bbb5fc911611926b15aa3db5"
        ],
        [
            "unfold colineaire in |- *.",
            "VernacExtend",
            "5f2ee1156fa8f32f5cc486b6cb13db7f4389be9b"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "apply transitive with (double (cons (vec C Q) (vec C M))).",
            "VernacExtend",
            "b2387ac8291fa419f0ce2f2dac3d8632830c45f1"
        ],
        [
            "apply symetrique; apply (deux_rectangles (A:=M) (B:=C) (C:=Q) (D:=P)); auto.",
            "VernacExtend",
            "b2c2e406ebc9cc229fe408ddbd7329daf7a9bfd3"
        ],
        [
            "apply orthogonal_colineaire with (vec P B); auto.",
            "VernacExtend",
            "807814ceb433fbe5fdec081995cfca4159748ab7"
        ],
        [
            "apply colineaire_modulo_pi; auto.",
            "VernacExtend",
            "8d4864be3466fa32bbb5fc911611926b15aa3db5"
        ],
        [
            "unfold colineaire in |- *.",
            "VernacExtend",
            "5f2ee1156fa8f32f5cc486b6cb13db7f4389be9b"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem droite_Simson : forall A B C M P Q T : PO, ~ colineaire (vec C A) (vec C M) -> colineaire (vec C A) (vec C Q) -> colineaire (vec P C) (vec P B) -> colineaire (vec B A) (vec B T) -> orthogonal (vec T M) (vec T B) -> orthogonal (vec P M) (vec P B) -> orthogonal (vec Q M) (vec Q C) -> (colineaire (vec P Q) (vec P T) <-> sont_cocycliques C A M B).",
            "VernacStartTheoremProof",
            "c22492eee92dd03cf00a383d4ba6746cb65b2c4a"
        ],
        [
            "unfold iff in |- *.",
            "VernacExtend",
            "361112e89acb3406bb32cc7f6149c590df9868bf"
        ],
        [
            "intros A B C M P Q S H H0 H1 H2 H3 H4 H5; (split; [ intros H6; try assumption | idtac ]).",
            "VernacExtend",
            "d2edcfb565a4ea5f333bb0d75993b72bf6dc9d0f"
        ],
        [
            "apply reciproque_cocyclique; auto.",
            "VernacExtend",
            "25ddc2ad028dc2fff96153b289d59b059ff496fa"
        ],
        [
            "cut (R (plus (double (cons (vec C A) (vec C M))) (double (cons (vec B M) (vec B A)))) zero); intros.",
            "VernacExtend",
            "fb76f8b255f15f42eb45f11a6ebdd6fb7d0863d0"
        ],
        [
            "apply regulier with (a := double (cons (vec B M) (vec B A))) (c := double (cons (vec B M) (vec B A))); auto.",
            "VernacExtend",
            "fb54a56e0286076de592005f90d95a17469006bd"
        ],
        [
            "apply transitive with (double (plus (cons (vec B M) (vec B A)) (cons (vec B A) (vec B M)))); auto.",
            "VernacExtend",
            "5881ed9b0cbd58a6af2571b56f503f5236e3d22e"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "apply transitive with zero; auto.",
            "VernacExtend",
            "d6af809b28273d785ded7fd87d98ffa03ae942a8"
        ],
        [
            "apply transitive with (plus (double (cons (vec C A) (vec C M))) (double (cons (vec B M) (vec B A)))); auto.",
            "VernacExtend",
            "ccd4bd4b08c3e9f0208fc003b1ff7c77c7d40198"
        ],
        [
            "apply transitive with (double (cons (vec P Q) (vec P S))); auto.",
            "VernacExtend",
            "cd2d0c33fe2127741cff88d8aaabbbd3379e4541"
        ],
        [
            "apply symetrique.",
            "VernacExtend",
            "0136ebcb68b0ff4c788d3eed039b760b5306479a"
        ],
        [
            "apply (projete_ortho_cote (A:=A) (B:=B) (C:=C) (M:=M) (P:=P) (Q:=Q) (T:=S)); auto.",
            "VernacExtend",
            "6eaab5b02ea33cb87563060996689464d8b946ad"
        ],
        [
            "unfold colineaire in |- *; intros.",
            "VernacExtend",
            "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
        ],
        [
            "apply transitive with (plus (double (cons (vec C A) (vec C M))) (double (cons (vec B M) (vec B A)))); auto.",
            "VernacExtend",
            "ccd4bd4b08c3e9f0208fc003b1ff7c77c7d40198"
        ],
        [
            "apply (projete_ortho_cote (A:=A) (B:=B) (C:=C) (M:=M) (P:=P) (Q:=Q) (T:=S)); auto.",
            "VernacExtend",
            "6eaab5b02ea33cb87563060996689464d8b946ad"
        ],
        [
            "cut (R (double (cons (vec C A) (vec C M))) (double (cons (vec B A) (vec B M)))); intros.",
            "VernacExtend",
            "a4c3659cf29d2c89a78883a228a9d8700f38036c"
        ],
        [
            "apply regulier with (a := double (cons (vec B A) (vec B M))) (c := double (cons (vec B A) (vec B M))); auto.",
            "VernacExtend",
            "3e42fd2a5ad3e8d548fd6bf089ee699aef370dd9"
        ],
        [
            "apply transitive with (plus (double (cons (vec B A) (vec B M))) (plus (double (cons (vec B A) (vec B M))) (double (cons (vec B M) (vec B A))))); auto.",
            "VernacExtend",
            "7bc26c6f634df95258aa816aa8f2eaf5cb8189ac"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply compatible; auto.",
            "VernacExtend",
            "9c56fb86ad758bec94df1b21f907ad4febd1030f"
        ],
        [
            "apply transitive with (double (plus (cons (vec B A) (vec B M)) (cons (vec B M) (vec B A)))); auto.",
            "VernacExtend",
            "0db990264aef3599105ffbfd6fe63bdddd86ced9"
        ],
        [
            "apply transitive with (double (cons (vec B A) (vec B A))); auto.",
            "VernacExtend",
            "2487eea224d1a246ad6a92af94b7f5fe26bc53d3"
        ],
        [
            "apply transitive with (double zero); auto.",
            "VernacExtend",
            "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
        ],
        [
            "generalize (cocyclicite_six (A:=A) (B:=M) (C:=C) (D:=B)).",
            "VernacExtend",
            "d535b065f96d0a2f65885641624f6869bd2113c8"
        ],
        [
            "intros H7; try assumption.",
            "VernacExtend",
            "63c6a2e97778d8140d83f0d911e872a14f8ebe07"
        ],
        [
            "elim H7; [ intros O H8; elim H8; intros H9 H10; clear H8 H7; try exact H10 | idtac ].",
            "VernacExtend",
            "d44b2c8c1519792128d831063c913b71cf5540f3"
        ],
        [
            "elim H9; unfold circonscrit in |- *; intros H7 H8; clear H9; try exact H7.",
            "VernacExtend",
            "2400df723ad56c0774884cba5171029301de3922"
        ],
        [
            "apply cocyclique with O.",
            "VernacExtend",
            "3b98ee8043aadd90b85325ec384b387e3a2189d0"
        ],
        [
            "elim H8; intros H9 H11; clear H8; try exact H9.",
            "VernacExtend",
            "d00e564d313dad6b6ccc92f747eea2f7d824832a"
        ],
        [
            "elim H8; intros H9 H11; elim H11; intros H12 H13; clear H11 H8; auto.",
            "VernacExtend",
            "fd8fb3cc65fbdf7be82417b22d708379665f729b"
        ],
        [
            "elim H8; intros H9 H11; elim H11; intros H12 H13; clear H11 H8; auto.",
            "VernacExtend",
            "fd8fb3cc65fbdf7be82417b22d708379665f729b"
        ],
        [
            "elim H7; intros H9 H11; elim H11; intros H12 H13; clear H11 H7; auto.",
            "VernacExtend",
            "31c7c27627938f40cf8e233b1338e80a2d7921bb"
        ],
        [
            "elim H7; intros H9 H11; elim H11; intros H12 H13; clear H11 H7; auto.",
            "VernacExtend",
            "31c7c27627938f40cf8e233b1338e80a2d7921bb"
        ],
        [
            "try exact H6.",
            "VernacExtend",
            "06f1c9701b703f8b2343cb790c392d1ad4f81af6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "colineaire_sym",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := double (cons u v)) (c := double (cons u v)); auto.",
                        "VernacExtend",
                        "de5b620b6bfe4da04c3c04b71ba93a48a1bacd4b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u v) (cons v u))); auto.",
                        "VernacExtend",
                        "d43346118f43e9c7a026b9c00330e0ca4e514ce0"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero zero); auto.",
                        "VernacExtend",
                        "28b9f0d322c71e80fda7dcbce240622477574f90"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "colineaire_modulo_pi",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u' u) (plus (cons u v) (cons v v')))); auto.",
                        "VernacExtend",
                        "c0e679832b723d7615e4128db3de6c94207d3a8f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u' u)) (double (plus (cons u v) (cons v v')))); auto.",
                        "VernacExtend",
                        "d708125eeb8a8c2935a77290797deaf6fd733e12"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u' u)) (plus (double (cons u v)) (double (cons v v')))); auto.",
                        "VernacExtend",
                        "9a84f8941816abc472654b0a768b4503eb7a8675"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (plus (double (cons u v)) (double (cons v v')))); auto.",
                        "VernacExtend",
                        "eba1f0595765e15d18eee02200ac18a70153fb33"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "cut (colineaire u' u); intros; auto.",
                        "VernacExtend",
                        "5b57e49c4b18532c8d3d780628d59bc6894370a6"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) (double (cons v v'))); auto.",
                        "VernacExtend",
                        "7fbf1de46d442d04005e1225904ca7a918b6a4f3"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) zero); auto.",
                        "VernacExtend",
                        "dd72510b50a1f13a32f8a21d95ddf435e7a469e5"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero (double (cons u v))); auto.",
                        "VernacExtend",
                        "04d12a44481d65e8cec2e8be78e3c2f585cabae5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthogonal_opp",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold orthogonal in |- *; intros.",
                        "VernacExtend",
                        "6563e8696170063b79fa3e335a068afa26ec9a95"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u v) (cons v (opp v)))); auto.",
                        "VernacExtend",
                        "2c6e6d41bc545c448d3c6f7ac4c31721c9415be7"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) (double (cons v (opp v)))); auto.",
                        "VernacExtend",
                        "682b16725508b38e8d3c3b07929ec5c975ece3d4"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi (double pi)); auto.",
                        "VernacExtend",
                        "2cad4e1f7906698172914a74303328d4607b10da"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi zero); auto.",
                        "VernacExtend",
                        "35e4d72af8c796900d81f0386a3154168eebec6d"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero pi); auto.",
                        "VernacExtend",
                        "9b282c0594500db4c7cff92ce7312f959fe01ff8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orthogonal_colineaire",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "unfold colineaire, orthogonal in |- *; intros.",
                        "VernacExtend",
                        "915a1c23a6f0d7dd6e5e20aa4919f519c628757e"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons u v) (cons v w))); auto.",
                        "VernacExtend",
                        "e4feda8c13eb3f943068243590367df2370fcb9f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons u v)) (double (cons v w))); auto.",
                        "VernacExtend",
                        "36c111fb0f1439f73cdd36ed86fce9cec70a5cb3"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus pi zero); auto.",
                        "VernacExtend",
                        "35e4d72af8c796900d81f0386a3154168eebec6d"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus zero pi); auto.",
                        "VernacExtend",
                        "9b282c0594500db4c7cff92ce7312f959fe01ff8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projete_ortho_cote",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros A B C M P Q S H H0 H1 H2 H3 H4; try assumption.",
                        "VernacExtend",
                        "a774ac283ac4e8a2e951e93681cd3906c1b0732a"
                    ]
                },
                {
                    "command": [
                        "cut (R (double (cons (vec P Q) (vec P M))) (double (cons (vec C A) (vec C M)))); intros.",
                        "VernacExtend",
                        "0fcdf60c2e9bbc1b0551807886237bc9122a124d"
                    ]
                },
                {
                    "command": [
                        "cut (R (double (cons (vec P S) (vec P M))) (double (cons (vec B A) (vec B M)))); intros.",
                        "VernacExtend",
                        "f194c65629513c011f2ca0e7c7f733f6f01c9010"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec P Q) (vec P M)) (cons (vec P M) (vec P S)))); auto.",
                        "VernacExtend",
                        "a04990251f1d9f46b15e84b925f036ed23981cee"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec P Q) (vec P M))) (double (cons (vec P M) (vec P S)))); auto.",
                        "VernacExtend",
                        "75f17760aaf4aeb8b4288462cdb2536b35f32482"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec B S) (vec B M))).",
                        "VernacExtend",
                        "5ef51e061269f58e50766cfb69681e93545ea924"
                    ]
                },
                {
                    "command": [
                        "apply symetrique; apply (deux_rectangles (A:=M) (B:=B) (C:=S) (D:=P)); auto.",
                        "VernacExtend",
                        "4b7611ce5338e421a0ac664fb73611e1341d1678"
                    ]
                },
                {
                    "command": [
                        "apply colineaire_modulo_pi; auto.",
                        "VernacExtend",
                        "8d4864be3466fa32bbb5fc911611926b15aa3db5"
                    ]
                },
                {
                    "command": [
                        "unfold colineaire in |- *.",
                        "VernacExtend",
                        "5f2ee1156fa8f32f5cc486b6cb13db7f4389be9b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec C Q) (vec C M))).",
                        "VernacExtend",
                        "b2387ac8291fa419f0ce2f2dac3d8632830c45f1"
                    ]
                },
                {
                    "command": [
                        "apply symetrique; apply (deux_rectangles (A:=M) (B:=C) (C:=Q) (D:=P)); auto.",
                        "VernacExtend",
                        "b2c2e406ebc9cc229fe408ddbd7329daf7a9bfd3"
                    ]
                },
                {
                    "command": [
                        "apply orthogonal_colineaire with (vec P B); auto.",
                        "VernacExtend",
                        "807814ceb433fbe5fdec081995cfca4159748ab7"
                    ]
                },
                {
                    "command": [
                        "apply colineaire_modulo_pi; auto.",
                        "VernacExtend",
                        "8d4864be3466fa32bbb5fc911611926b15aa3db5"
                    ]
                },
                {
                    "command": [
                        "unfold colineaire in |- *.",
                        "VernacExtend",
                        "5f2ee1156fa8f32f5cc486b6cb13db7f4389be9b"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "droite_Simson",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "unfold iff in |- *.",
                        "VernacExtend",
                        "361112e89acb3406bb32cc7f6149c590df9868bf"
                    ]
                },
                {
                    "command": [
                        "intros A B C M P Q S H H0 H1 H2 H3 H4 H5; (split; [ intros H6; try assumption | idtac ]).",
                        "VernacExtend",
                        "d2edcfb565a4ea5f333bb0d75993b72bf6dc9d0f"
                    ]
                },
                {
                    "command": [
                        "apply reciproque_cocyclique; auto.",
                        "VernacExtend",
                        "25ddc2ad028dc2fff96153b289d59b059ff496fa"
                    ]
                },
                {
                    "command": [
                        "cut (R (plus (double (cons (vec C A) (vec C M))) (double (cons (vec B M) (vec B A)))) zero); intros.",
                        "VernacExtend",
                        "fb76f8b255f15f42eb45f11a6ebdd6fb7d0863d0"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := double (cons (vec B M) (vec B A))) (c := double (cons (vec B M) (vec B A))); auto.",
                        "VernacExtend",
                        "fb54a56e0286076de592005f90d95a17469006bd"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec B M) (vec B A)) (cons (vec B A) (vec B M)))); auto.",
                        "VernacExtend",
                        "5881ed9b0cbd58a6af2571b56f503f5236e3d22e"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "apply transitive with zero; auto.",
                        "VernacExtend",
                        "d6af809b28273d785ded7fd87d98ffa03ae942a8"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec C A) (vec C M))) (double (cons (vec B M) (vec B A)))); auto.",
                        "VernacExtend",
                        "ccd4bd4b08c3e9f0208fc003b1ff7c77c7d40198"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec P Q) (vec P S))); auto.",
                        "VernacExtend",
                        "cd2d0c33fe2127741cff88d8aaabbbd3379e4541"
                    ]
                },
                {
                    "command": [
                        "apply symetrique.",
                        "VernacExtend",
                        "0136ebcb68b0ff4c788d3eed039b760b5306479a"
                    ]
                },
                {
                    "command": [
                        "apply (projete_ortho_cote (A:=A) (B:=B) (C:=C) (M:=M) (P:=P) (Q:=Q) (T:=S)); auto.",
                        "VernacExtend",
                        "6eaab5b02ea33cb87563060996689464d8b946ad"
                    ]
                },
                {
                    "command": [
                        "unfold colineaire in |- *; intros.",
                        "VernacExtend",
                        "f3e0bf0ad1c87819f8bcfd4c314f530989ecd624"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec C A) (vec C M))) (double (cons (vec B M) (vec B A)))); auto.",
                        "VernacExtend",
                        "ccd4bd4b08c3e9f0208fc003b1ff7c77c7d40198"
                    ]
                },
                {
                    "command": [
                        "apply (projete_ortho_cote (A:=A) (B:=B) (C:=C) (M:=M) (P:=P) (Q:=Q) (T:=S)); auto.",
                        "VernacExtend",
                        "6eaab5b02ea33cb87563060996689464d8b946ad"
                    ]
                },
                {
                    "command": [
                        "cut (R (double (cons (vec C A) (vec C M))) (double (cons (vec B A) (vec B M)))); intros.",
                        "VernacExtend",
                        "a4c3659cf29d2c89a78883a228a9d8700f38036c"
                    ]
                },
                {
                    "command": [
                        "apply regulier with (a := double (cons (vec B A) (vec B M))) (c := double (cons (vec B A) (vec B M))); auto.",
                        "VernacExtend",
                        "3e42fd2a5ad3e8d548fd6bf089ee699aef370dd9"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (plus (double (cons (vec B A) (vec B M))) (plus (double (cons (vec B A) (vec B M))) (double (cons (vec B M) (vec B A))))); auto.",
                        "VernacExtend",
                        "7bc26c6f634df95258aa816aa8f2eaf5cb8189ac"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply compatible; auto.",
                        "VernacExtend",
                        "9c56fb86ad758bec94df1b21f907ad4febd1030f"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (plus (cons (vec B A) (vec B M)) (cons (vec B M) (vec B A)))); auto.",
                        "VernacExtend",
                        "0db990264aef3599105ffbfd6fe63bdddd86ced9"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double (cons (vec B A) (vec B A))); auto.",
                        "VernacExtend",
                        "2487eea224d1a246ad6a92af94b7f5fe26bc53d3"
                    ]
                },
                {
                    "command": [
                        "apply transitive with (double zero); auto.",
                        "VernacExtend",
                        "b15f5789c1fab93243324cdb3bdb221a14fa2c02"
                    ]
                },
                {
                    "command": [
                        "generalize (cocyclicite_six (A:=A) (B:=M) (C:=C) (D:=B)).",
                        "VernacExtend",
                        "d535b065f96d0a2f65885641624f6869bd2113c8"
                    ]
                },
                {
                    "command": [
                        "intros H7; try assumption.",
                        "VernacExtend",
                        "63c6a2e97778d8140d83f0d911e872a14f8ebe07"
                    ]
                },
                {
                    "command": [
                        "elim H7; [ intros O H8; elim H8; intros H9 H10; clear H8 H7; try exact H10 | idtac ].",
                        "VernacExtend",
                        "d44b2c8c1519792128d831063c913b71cf5540f3"
                    ]
                },
                {
                    "command": [
                        "elim H9; unfold circonscrit in |- *; intros H7 H8; clear H9; try exact H7.",
                        "VernacExtend",
                        "2400df723ad56c0774884cba5171029301de3922"
                    ]
                },
                {
                    "command": [
                        "apply cocyclique with O.",
                        "VernacExtend",
                        "3b98ee8043aadd90b85325ec384b387e3a2189d0"
                    ]
                },
                {
                    "command": [
                        "elim H8; intros H9 H11; clear H8; try exact H9.",
                        "VernacExtend",
                        "d00e564d313dad6b6ccc92f747eea2f7d824832a"
                    ]
                },
                {
                    "command": [
                        "elim H8; intros H9 H11; elim H11; intros H12 H13; clear H11 H8; auto.",
                        "VernacExtend",
                        "fd8fb3cc65fbdf7be82417b22d708379665f729b"
                    ]
                },
                {
                    "command": [
                        "elim H8; intros H9 H11; elim H11; intros H12 H13; clear H11 H8; auto.",
                        "VernacExtend",
                        "fd8fb3cc65fbdf7be82417b22d708379665f729b"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros H9 H11; elim H11; intros H12 H13; clear H11 H7; auto.",
                        "VernacExtend",
                        "31c7c27627938f40cf8e233b1338e80a2d7921bb"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros H9 H11; elim H11; intros H12 H13; clear H11 H7; auto.",
                        "VernacExtend",
                        "31c7c27627938f40cf8e233b1338e80a2d7921bb"
                    ]
                },
                {
                    "command": [
                        "try exact H6.",
                        "VernacExtend",
                        "06f1c9701b703f8b2343cb790c392d1ad4f81af6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}