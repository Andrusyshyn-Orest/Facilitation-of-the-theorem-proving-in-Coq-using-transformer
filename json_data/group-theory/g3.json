{
    "filename": "g3.v",
    "coq_project": "group-theory",
    "vernac_cmds": [
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import Zbase.",
            "VernacRequire",
            "7210fd2aae32f34e173c287d78204d76166f0d46"
        ],
        [
            "Require Import Z_succ_pred.",
            "VernacRequire",
            "8f8d8dc1c96980b080130ff9092cca2f8152b50d"
        ],
        [
            "Require Import Zadd.",
            "VernacRequire",
            "bca95811b537dcdb5c7521c230b66854b501a06b"
        ],
        [
            "Require Import Zle.",
            "VernacRequire",
            "ac573489ee761e36ae7337e620c9799ce64fbb52"
        ],
        [
            "Require Import Classical_Prop.",
            "VernacRequire",
            "4ea5121b46cb94a964b9761d1c61cca4c510f8d4"
        ],
        [
            "Require Import Relations_1.",
            "VernacRequire",
            "49c733c10349a78f9f2197cca78f05286f29edcc"
        ],
        [
            "Require Import Relations_1_facts.",
            "VernacRequire",
            "f0fe49b155461bc83ca404c55eb92f6a4a35a551"
        ],
        [
            "Require Import Partial_Order.",
            "VernacRequire",
            "24358e5caf9b1bd760d0126ae2fc7294f9e51200"
        ],
        [
            "Require Import Cpo.",
            "VernacRequire",
            "8070c6356afd9c7fc17b7dbd3e7fb33a1bde9b7e"
        ],
        [
            "Require Import Powerset.",
            "VernacRequire",
            "1abda0d530ee71ba02a5580ee87c8ab33ed7c3e4"
        ],
        [
            "Require Import Powerset_facts.",
            "VernacRequire",
            "2a67b61eb0fa850b1e6b9f4151f6f13db7457a10"
        ],
        [
            "Require Import Gt.",
            "VernacRequire",
            "aa76e30957e446dad908d0efbaebeccff785432f"
        ],
        [
            "Require Import Lt.",
            "VernacRequire",
            "fe47d80ebda42c5f075a36fb67288742f8593767"
        ],
        [
            "Require Import Compare.",
            "VernacRequire",
            "ed10e123546ab163fca5027b6544d1560fdf964f"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Finite_sets.",
            "VernacRequire",
            "0ab845d7b8dda48e06c571b0d13496e6d163499a"
        ],
        [
            "Require Import Finite_sets_facts.",
            "VernacRequire",
            "31d2b02912f2b5a7278baf97b0a159d3819fcec2"
        ],
        [
            "Require Import Image.",
            "VernacRequire",
            "a9df17dee22f292b4f22bbe06dae70d0f10f7602"
        ],
        [
            "Require Import Infinite_sets.",
            "VernacRequire",
            "f32b6a35f885dfd6dcf6d57019d8ff7537797535"
        ],
        [
            "Require Import Integers.",
            "VernacRequire",
            "688f068e3335df7950b569ef75a5e993414c9874"
        ],
        [
            "Require Import Laws.",
            "VernacRequire",
            "506e5de6a9e0220e6d36aa4251ba95fc1beeefc6"
        ],
        [
            "Require Import Group_definitions.",
            "VernacRequire",
            "8203f29a068086b8beff4c3c6fa02794881d51f6"
        ],
        [
            "Require Export gr.",
            "VernacRequire",
            "1bdf0d06e09d13bef023043346d29477bbb74544"
        ],
        [
            "Require Export g1.",
            "VernacRequire",
            "02962913f8487b0743386028b6bca3d9c73b6858"
        ],
        [
            "Section Cinq.",
            "VernacBeginSection",
            "00951cd12f1aaefef64e2a5de5cace95cb5566ac"
        ],
        [
            "Variable H : Ensemble U.",
            "VernacAssumption",
            "ba1f278ffe99fe57ad9e8ababdeeb57a5ff15c53"
        ],
        [
            "Variable H_inhabited : Inhabited U H.",
            "VernacAssumption",
            "d3fe15c9177db2e22a96f37788b895936146cf9b"
        ],
        [
            "Variable H_included_in_G : Included U H G.",
            "VernacAssumption",
            "7f258dced95a098a406cf24485dc8c5b12b69c58"
        ],
        [
            "Variable stability : endo_operation U H star.",
            "VernacAssumption",
            "76201b5610a2ba1b1eddcb37ccccb44a69415167"
        ],
        [
            "Variable H_Finite : Finite U H.",
            "VernacAssumption",
            "af059267d99d7943005c63ec4ce0c7dedb9732f7"
        ],
        [
            "Let h : forall x y : U, In U H x -> In U H y -> In U H (star x y).",
            "VernacDefinition",
            "b8a265ce123dd5bb72b4515c0fd92b7f76ef1182"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve h.",
            "VernacHints",
            "b989075b667ae3a492474ce10d1c51af72407e4b"
        ],
        [
            "Definition phi (a : U) (n : nat) : U := exp (pos n) a.",
            "VernacDefinition",
            "e314cd34e0604a93e7978bfd8be5d63e2749474a"
        ],
        [
            "Lemma phi_unfold : forall (a : U) (n : nat), In U G a -> phi a (S n) = star a (phi a n).",
            "VernacStartTheoremProof",
            "dae221213788e324685411cdac0e1483d3930e88"
        ],
        [
            "unfold phi in |- *; auto.",
            "VernacExtend",
            "78772729de2c576b91cccba70a320a2d064dc7de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma positive_powers : forall (a : U) (n : nat), In U H a -> In U H (phi a n).",
            "VernacStartTheoremProof",
            "be6e4a8b3149f855f4c520e4ef728ab15d9eba00"
        ],
        [
            "intros a n; elim n; auto.",
            "VernacExtend",
            "3fba11a5f34f2b5f11e71d8ad285af6d2955cc41"
        ],
        [
            "intros n0 H' H'0.",
            "VernacExtend",
            "ea8ac79a2800f0d8bdcdd37aaa48ae8cfeab89be"
        ],
        [
            "rewrite (phi_unfold a n0); auto.",
            "VernacExtend",
            "e83a1b68f6167ce1f75dac1524f6b27d02456d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_exp : forall (a : U) (n : nat), In U G a -> star (phi a n) a = phi a (S n).",
            "VernacStartTheoremProof",
            "991728676581ef1aa34bf466db0bbce575d34503"
        ],
        [
            "intros a n; elim n; auto.",
            "VernacExtend",
            "3fba11a5f34f2b5f11e71d8ad285af6d2955cc41"
        ],
        [
            "intros n0 H' H'0.",
            "VernacExtend",
            "ea8ac79a2800f0d8bdcdd37aaa48ae8cfeab89be"
        ],
        [
            "rewrite (phi_unfold a n0); auto.",
            "VernacExtend",
            "e83a1b68f6167ce1f75dac1524f6b27d02456d22"
        ],
        [
            "rewrite <- (G1' a (phi a n0) a).",
            "VernacExtend",
            "998450f2bdbce578b33bba286d5d06f193137822"
        ],
        [
            "rewrite H'; auto.",
            "VernacExtend",
            "0481628cb42a32c108ba3d93a9fcf120cdc2ce19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_exp' : forall n : nat, phi e n = e.",
            "VernacStartTheoremProof",
            "184e1f0cb8659f26991179fc15423ed3f07958fb"
        ],
        [
            "intro n; elim n; auto.",
            "VernacExtend",
            "285e2f5e9f571a73ec38c4957c322d207e15e13c"
        ],
        [
            "intros n0 H'.",
            "VernacExtend",
            "e2fb2fd64e9fcf20cb20ff783166d17b896ad0f0"
        ],
        [
            "rewrite <- (tech_exp e n0); auto.",
            "VernacExtend",
            "42b645a7201e874af45b51e0380debd0c48781b2"
        ],
        [
            "rewrite H'; auto.",
            "VernacExtend",
            "0481628cb42a32c108ba3d93a9fcf120cdc2ce19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma phi_exp : forall (a : U) (n m : nat), In U G a -> star (phi a n) (phi a m) = phi a (S (n + m)).",
            "VernacStartTheoremProof",
            "c037d59b1a805578bbeb39c7b50123e526ef0e8f"
        ],
        [
            "unfold phi in |- *.",
            "VernacExtend",
            "feabb0329b7e1cc658e93fb61dc08173a24a751b"
        ],
        [
            "intros a n m H'.",
            "VernacExtend",
            "05273fdc800c0938a7ed475a73b5cd8c7708d8c0"
        ],
        [
            "rewrite (add_exponents a (pos n) (pos m)); trivial.",
            "VernacExtend",
            "59f0c69ec0c54da5a2f83eb76b840f657b7201e8"
        ],
        [
            "rewrite (tech_add_pos_posZ n m); trivial.",
            "VernacExtend",
            "c51e3487d9f6deb3f9546dfa846b0f22c31a0915"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powers_repeat : forall (a : U) (n m : nat), In U G a -> phi a n = phi a (S (S (n + m))) -> phi a m = inv a.",
            "VernacStartTheoremProof",
            "1ece057d3b8fc4c4f9b070ec554e9d852ac8cb75"
        ],
        [
            "intros a n m H' H'0.",
            "VernacExtend",
            "ecb646622f3717157417f121d7beca1c4ebcd3aa"
        ],
        [
            "apply resolve'.",
            "VernacExtend",
            "ea365c8f8689cd62420f280563b0fc73a6b6c1b8"
        ],
        [
            "apply cancellation' with (a := phi a n).",
            "VernacExtend",
            "ed5f62b3a3413e16f667b61ed99068142cb1a355"
        ],
        [
            "rewrite (tech_exp a m); trivial.",
            "VernacExtend",
            "846249ec543b258ce9e97aef5d92772c2eb68beb"
        ],
        [
            "rewrite (phi_exp a n (S m)); trivial.",
            "VernacExtend",
            "315b86c06152efaf11af90fe963e3663c6e69cb3"
        ],
        [
            "rewrite <- (plus_n_Sm n m); auto.",
            "VernacExtend",
            "0f8fc903b2c692e7df1567c072e461a5380b87b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition psi := phi.",
            "VernacDefinition",
            "0c83704f5751b33232e0c207e73000fba0970ebc"
        ],
        [
            "Lemma psi_not_inj : forall a : U, In U H a -> ~ injective nat U (psi a).",
            "VernacStartTheoremProof",
            "44121032b92c6a39614108ac933c3f17639a8c8a"
        ],
        [
            "intros a H'; try assumption.",
            "VernacExtend",
            "f1f917428159dfc7e9d4d60d6f59e858b97242a9"
        ],
        [
            "apply Pigeonhole_bis with (A := Integers).",
            "VernacExtend",
            "638b9a43196e35251e4c9bcae499a44809811c51"
        ],
        [
            "exact Integers_infinite.",
            "VernacExtend",
            "291e9bffa5fb3d8f0923db0fa81ada4a663784d0"
        ],
        [
            "apply Finite_downward_closed with (A := H); auto.",
            "VernacExtend",
            "acaa7e1f3e7979a4df607da14576ee008326314f"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x H'0; elim H'0.",
            "VernacExtend",
            "801ba56784b1b1211a914a1c473c8096df085520"
        ],
        [
            "intro x0.",
            "VernacExtend",
            "e74c874e61a3691df9987468fe1f6ab72f4039f2"
        ],
        [
            "intros H'1 y H'2; rewrite H'2.",
            "VernacExtend",
            "7659205b2edf02083c33efe3541a4041c03aeef2"
        ],
        [
            "unfold psi at 1 in |- *; simpl in |- *.",
            "VernacExtend",
            "678c17dc069b478dc192c694c0c6e97d89ebcd9a"
        ],
        [
            "apply positive_powers; auto.",
            "VernacExtend",
            "b417f5878f996b6095412a652a0aa8fa45fbe488"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem remaining : forall a : U, In U H a -> exists r : nat, (exists m : nat, phi a r = phi a (S (S (r + m)))).",
            "VernacStartTheoremProof",
            "a26f01ffac11c782c9113a2df0da6926806ffe08"
        ],
        [
            "intros a ainH.",
            "VernacExtend",
            "a5de7dd69e88f5294b191a01cc8077f0ad788b65"
        ],
        [
            "lapply (not_injective_elim nat U (psi a)); [ intro H'2 | apply psi_not_inj; auto ].",
            "VernacExtend",
            "7a8817c1c1a4690ca271106661fe0ff826b084e0"
        ],
        [
            "elim H'2; clear H'2.",
            "VernacExtend",
            "4645fbc02960e3548ca68e9d3699b08fba1566c8"
        ],
        [
            "intros x H'.",
            "VernacExtend",
            "1864e43355295bd98e7920f89fb20cbad05f10d7"
        ],
        [
            "elim H'; clear H'.",
            "VernacExtend",
            "a9412d525dd7bc3b49a875e7b64c2751947e8495"
        ],
        [
            "intros x0 H'0; elim H'0; clear H'0.",
            "VernacExtend",
            "90f6b1ea284dba1d4ae5859608bcdc53eb20ac87"
        ],
        [
            "intros H'0 H'1.",
            "VernacExtend",
            "35706d3de8fea2a1a8d10ba2e17f53206242f36b"
        ],
        [
            "unfold psi in H'0; simpl in H'0.",
            "VernacExtend",
            "f9ec8d5d371710488697454efb5cdbb9e8d53552"
        ],
        [
            "cut (x0 <> x).",
            "VernacExtend",
            "962e0258946c8b5c90f7e1914c7f7d560cf32177"
        ],
        [
            "2: red in |- *; intro H'4; apply H'1; rewrite <- H'4; auto.",
            "VernacExtend",
            "95250017ffaad0fa77bb9ed8600a8a61122ea19b"
        ],
        [
            "intro H'.",
            "VernacExtend",
            "3160ba192fa58e5db60b3e67645ce925759bb788"
        ],
        [
            "elim (nat_total_order x0 x).",
            "VernacExtend",
            "4833beecbf14005a15f62609ab960cb8dc654d03"
        ],
        [
            "clear H'1 H'.",
            "VernacExtend",
            "1a9f2ed3febe95cacc55df84ab7a2bfec299d729"
        ],
        [
            "intro H'.",
            "VernacExtend",
            "3160ba192fa58e5db60b3e67645ce925759bb788"
        ],
        [
            "lapply (discrete_nat x0 x); [ intro H'4 | assumption ].",
            "VernacExtend",
            "ab422a08a8fffb2664f470b46d8737d219a21ef4"
        ],
        [
            "elim H'4; intro H'1; clear H'4.",
            "VernacExtend",
            "52d0240bcb4a311adfac74c0b461fd09fbc3f1e2"
        ],
        [
            "exists x0; exists 0.",
            "VernacExtend",
            "d64ba612bbf3c3dfd09955d8d18ec5b771a8639d"
        ],
        [
            "generalize H'0.",
            "VernacExtend",
            "b8656edae532182af5b431f86360583b33cc166c"
        ],
        [
            "rewrite <- H'1.",
            "VernacExtend",
            "72f25f27aa9f4989786041bbf0f442a67cdb1785"
        ],
        [
            "rewrite <- (tech_exp a x0).",
            "VernacExtend",
            "b3202e5b69d48c2f0086d9deeaa975cfaf5cb4cf"
        ],
        [
            "intro H'3.",
            "VernacExtend",
            "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
        ],
        [
            "lapply (sym_eq (x:=phi a x0) (y:=star (phi a x0) a)); [ intro H'9 | rewrite H'3; auto ].",
            "VernacExtend",
            "11fde68e5d627f58a1a7ce5848592a320a30c257"
        ],
        [
            "lapply (cancellation' (phi a x0) a); [ intro H'8 | assumption ].",
            "VernacExtend",
            "6c0dd29d4e1cdb02f6f669c6307fd33fd35d1621"
        ],
        [
            "rewrite H'8.",
            "VernacExtend",
            "f81e6aca136f4345530e6b34c34457472066eed0"
        ],
        [
            "rewrite (tech_exp' x0).",
            "VernacExtend",
            "2587e8cc5ec1f987d7bd76a49dd732aa15063255"
        ],
        [
            "rewrite (tech_exp' (S (S (x0 + 0)))); auto.",
            "VernacExtend",
            "86356cf6c02cd4bd86bd2658855a325b44f749fe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim H'1; intros r E; clear H'1.",
            "VernacExtend",
            "59af338b6089eccdd5682e1079bf707e3585d197"
        ],
        [
            "exists x0; exists r.",
            "VernacExtend",
            "d620a2a41f470a1d12e3c8c5f5cbec04d3cb1d6b"
        ],
        [
            "rewrite <- E; auto.",
            "VernacExtend",
            "11e2dd864cab569ddedc0bad448a4d752467a41f"
        ],
        [
            "clear H'1 H'.",
            "VernacExtend",
            "1a9f2ed3febe95cacc55df84ab7a2bfec299d729"
        ],
        [
            "intro H'.",
            "VernacExtend",
            "3160ba192fa58e5db60b3e67645ce925759bb788"
        ],
        [
            "lapply (discrete_nat x x0); [ intro H'4 | assumption ].",
            "VernacExtend",
            "cecfeee3e51f24bdc856eb8cc7e84f19d5fe75b1"
        ],
        [
            "elim H'4; intro H'1; clear H'4.",
            "VernacExtend",
            "52d0240bcb4a311adfac74c0b461fd09fbc3f1e2"
        ],
        [
            "exists x; exists 0.",
            "VernacExtend",
            "43c2b61c143ee1ec173b34739edcb727e0630bb9"
        ],
        [
            "generalize H'0.",
            "VernacExtend",
            "b8656edae532182af5b431f86360583b33cc166c"
        ],
        [
            "rewrite <- H'1.",
            "VernacExtend",
            "72f25f27aa9f4989786041bbf0f442a67cdb1785"
        ],
        [
            "rewrite <- (tech_exp a x).",
            "VernacExtend",
            "6e2b78639b15f4af6379ba2600432b30acbe4bc6"
        ],
        [
            "intro H'3.",
            "VernacExtend",
            "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
        ],
        [
            "lapply (cancellation' (phi a x) a); [ intro H'8 | rewrite <- H'3; auto ].",
            "VernacExtend",
            "ae396cf7c930baa928c75dcc11b11389535038e1"
        ],
        [
            "rewrite H'8.",
            "VernacExtend",
            "f81e6aca136f4345530e6b34c34457472066eed0"
        ],
        [
            "rewrite (tech_exp' x).",
            "VernacExtend",
            "c3d5a20501bd041a539dcbaad4b43fc6f92b84c0"
        ],
        [
            "rewrite (tech_exp' (S (S (x + 0)))); auto.",
            "VernacExtend",
            "7aa737635d85fcb1de82462fe1fecb84b0a44a58"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim H'1; intros r E; clear H'1.",
            "VernacExtend",
            "59af338b6089eccdd5682e1079bf707e3585d197"
        ],
        [
            "exists x; exists r.",
            "VernacExtend",
            "7bcedc97f4aa78ed9e24f987296e2a721075e896"
        ],
        [
            "rewrite <- E; auto.",
            "VernacExtend",
            "11e2dd864cab569ddedc0bad448a4d752467a41f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem T_1_6_4 : Setsubgroup U H Gr.",
            "VernacStartTheoremProof",
            "c62e05f20ae41deef600ab05e8da90dafab8c2e5"
        ],
        [
            "elim H_inhabited.",
            "VernacExtend",
            "3cb3fddf8d5cc165fee27dc08f049703bbb2ab2d"
        ],
        [
            "intros witness inH.",
            "VernacExtend",
            "fe8d9daf500b299e5826124d610cfb13fa2c3223"
        ],
        [
            "apply T_1_6_2 with (witness := witness); trivial.",
            "VernacExtend",
            "30691b6cbed03e59fa678ad161c9bc326ee85963"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros a H'.",
            "VernacExtend",
            "2b7514d481b1c49fc3070e8c7c3f241c036a4bba"
        ],
        [
            "cut (exists n : nat, inv a = phi a n).",
            "VernacExtend",
            "da61e58f425f9d67fe42e25f1974a8bd646a035e"
        ],
        [
            "intro H'0; elim H'0; intros n E; rewrite E; clear H'0.",
            "VernacExtend",
            "5c3e13e2710c803aab44105c40a1cd9573df72f7"
        ],
        [
            "apply positive_powers; trivial.",
            "VernacExtend",
            "3126f0a0575e3c4abde73b3915c72c0b88091b71"
        ],
        [
            "cut (exists r : nat, ex (fun m : nat => phi a r = phi a (S (S (r + m))))).",
            "VernacExtend",
            "f15eba106bb51efac4ce277a9a4e38861a36057d"
        ],
        [
            "intro H'0; elim H'0; intros r E; elim E; intros m E0; try exact E0; clear E H'0.",
            "VernacExtend",
            "569a03d9c3f65e8ccce851cf4103a5428513dbb3"
        ],
        [
            "cut (inv a = phi a m).",
            "VernacExtend",
            "325ee1cf23c423dfbf4734b24875bd8bbf3ac8b2"
        ],
        [
            "intro H'0; rewrite H'0.",
            "VernacExtend",
            "d43fe32448c8e2d0fb0270821aee767e43110eeb"
        ],
        [
            "exists m; trivial.",
            "VernacExtend",
            "af2d9c6c69ed9910d30e31af116b698fb059e167"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply powers_repeat with (n := r); trivial.",
            "VernacExtend",
            "aff97db38576d215c4f5082c4be07b25243e83ba"
        ],
        [
            "apply H_included_in_G; auto.",
            "VernacExtend",
            "0a14f23f0d34a0780c503678a896ace8809f6317"
        ],
        [
            "apply remaining; auto.",
            "VernacExtend",
            "c4062e045668502b27802cebe71749ba80e126ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Cinq.",
            "VernacEndSegment",
            "599db7af12e560dd54573d3bf3bee2d2ab23f51b"
        ]
    ],
    "proofs": [
        {
            "name": "h",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_unfold",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "unfold phi in |- *; auto.",
                        "VernacExtend",
                        "78772729de2c576b91cccba70a320a2d064dc7de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "positive_powers",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros a n; elim n; auto.",
                        "VernacExtend",
                        "3fba11a5f34f2b5f11e71d8ad285af6d2955cc41"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' H'0.",
                        "VernacExtend",
                        "ea8ac79a2800f0d8bdcdd37aaa48ae8cfeab89be"
                    ]
                },
                {
                    "command": [
                        "rewrite (phi_unfold a n0); auto.",
                        "VernacExtend",
                        "e83a1b68f6167ce1f75dac1524f6b27d02456d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_exp",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros a n; elim n; auto.",
                        "VernacExtend",
                        "3fba11a5f34f2b5f11e71d8ad285af6d2955cc41"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' H'0.",
                        "VernacExtend",
                        "ea8ac79a2800f0d8bdcdd37aaa48ae8cfeab89be"
                    ]
                },
                {
                    "command": [
                        "rewrite (phi_unfold a n0); auto.",
                        "VernacExtend",
                        "e83a1b68f6167ce1f75dac1524f6b27d02456d22"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (G1' a (phi a n0) a).",
                        "VernacExtend",
                        "998450f2bdbce578b33bba286d5d06f193137822"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; auto.",
                        "VernacExtend",
                        "0481628cb42a32c108ba3d93a9fcf120cdc2ce19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_exp'",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intro n; elim n; auto.",
                        "VernacExtend",
                        "285e2f5e9f571a73ec38c4957c322d207e15e13c"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'.",
                        "VernacExtend",
                        "e2fb2fd64e9fcf20cb20ff783166d17b896ad0f0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (tech_exp e n0); auto.",
                        "VernacExtend",
                        "42b645a7201e874af45b51e0380debd0c48781b2"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; auto.",
                        "VernacExtend",
                        "0481628cb42a32c108ba3d93a9fcf120cdc2ce19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "phi_exp",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "unfold phi in |- *.",
                        "VernacExtend",
                        "feabb0329b7e1cc658e93fb61dc08173a24a751b"
                    ]
                },
                {
                    "command": [
                        "intros a n m H'.",
                        "VernacExtend",
                        "05273fdc800c0938a7ed475a73b5cd8c7708d8c0"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_exponents a (pos n) (pos m)); trivial.",
                        "VernacExtend",
                        "59f0c69ec0c54da5a2f83eb76b840f657b7201e8"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_add_pos_posZ n m); trivial.",
                        "VernacExtend",
                        "c51e3487d9f6deb3f9546dfa846b0f22c31a0915"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powers_repeat",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros a n m H' H'0.",
                        "VernacExtend",
                        "ecb646622f3717157417f121d7beca1c4ebcd3aa"
                    ]
                },
                {
                    "command": [
                        "apply resolve'.",
                        "VernacExtend",
                        "ea365c8f8689cd62420f280563b0fc73a6b6c1b8"
                    ]
                },
                {
                    "command": [
                        "apply cancellation' with (a := phi a n).",
                        "VernacExtend",
                        "ed5f62b3a3413e16f667b61ed99068142cb1a355"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech_exp a m); trivial.",
                        "VernacExtend",
                        "846249ec543b258ce9e97aef5d92772c2eb68beb"
                    ]
                },
                {
                    "command": [
                        "rewrite (phi_exp a n (S m)); trivial.",
                        "VernacExtend",
                        "315b86c06152efaf11af90fe963e3663c6e69cb3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (plus_n_Sm n m); auto.",
                        "VernacExtend",
                        "0f8fc903b2c692e7df1567c072e461a5380b87b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "psi_not_inj",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros a H'; try assumption.",
                        "VernacExtend",
                        "f1f917428159dfc7e9d4d60d6f59e858b97242a9"
                    ]
                },
                {
                    "command": [
                        "apply Pigeonhole_bis with (A := Integers).",
                        "VernacExtend",
                        "638b9a43196e35251e4c9bcae499a44809811c51"
                    ]
                },
                {
                    "command": [
                        "exact Integers_infinite.",
                        "VernacExtend",
                        "291e9bffa5fb3d8f0923db0fa81ada4a663784d0"
                    ]
                },
                {
                    "command": [
                        "apply Finite_downward_closed with (A := H); auto.",
                        "VernacExtend",
                        "acaa7e1f3e7979a4df607da14576ee008326314f"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x H'0; elim H'0.",
                        "VernacExtend",
                        "801ba56784b1b1211a914a1c473c8096df085520"
                    ]
                },
                {
                    "command": [
                        "intro x0.",
                        "VernacExtend",
                        "e74c874e61a3691df9987468fe1f6ab72f4039f2"
                    ]
                },
                {
                    "command": [
                        "intros H'1 y H'2; rewrite H'2.",
                        "VernacExtend",
                        "7659205b2edf02083c33efe3541a4041c03aeef2"
                    ]
                },
                {
                    "command": [
                        "unfold psi at 1 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "678c17dc069b478dc192c694c0c6e97d89ebcd9a"
                    ]
                },
                {
                    "command": [
                        "apply positive_powers; auto.",
                        "VernacExtend",
                        "b417f5878f996b6095412a652a0aa8fa45fbe488"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T_1_6_4",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "elim H_inhabited.",
                        "VernacExtend",
                        "3cb3fddf8d5cc165fee27dc08f049703bbb2ab2d"
                    ]
                },
                {
                    "command": [
                        "intros witness inH.",
                        "VernacExtend",
                        "fe8d9daf500b299e5826124d610cfb13fa2c3223"
                    ]
                },
                {
                    "command": [
                        "apply T_1_6_2 with (witness := witness); trivial.",
                        "VernacExtend",
                        "30691b6cbed03e59fa678ad161c9bc326ee85963"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros a H'.",
                        "VernacExtend",
                        "2b7514d481b1c49fc3070e8c7c3f241c036a4bba"
                    ]
                },
                {
                    "command": [
                        "cut (exists n : nat, inv a = phi a n).",
                        "VernacExtend",
                        "da61e58f425f9d67fe42e25f1974a8bd646a035e"
                    ]
                },
                {
                    "command": [
                        "intro H'0; elim H'0; intros n E; rewrite E; clear H'0.",
                        "VernacExtend",
                        "5c3e13e2710c803aab44105c40a1cd9573df72f7"
                    ]
                },
                {
                    "command": [
                        "apply positive_powers; trivial.",
                        "VernacExtend",
                        "3126f0a0575e3c4abde73b3915c72c0b88091b71"
                    ]
                },
                {
                    "command": [
                        "cut (exists r : nat, ex (fun m : nat => phi a r = phi a (S (S (r + m))))).",
                        "VernacExtend",
                        "f15eba106bb51efac4ce277a9a4e38861a36057d"
                    ]
                },
                {
                    "command": [
                        "intro H'0; elim H'0; intros r E; elim E; intros m E0; try exact E0; clear E H'0.",
                        "VernacExtend",
                        "569a03d9c3f65e8ccce851cf4103a5428513dbb3"
                    ]
                },
                {
                    "command": [
                        "cut (inv a = phi a m).",
                        "VernacExtend",
                        "325ee1cf23c423dfbf4734b24875bd8bbf3ac8b2"
                    ]
                },
                {
                    "command": [
                        "intro H'0; rewrite H'0.",
                        "VernacExtend",
                        "d43fe32448c8e2d0fb0270821aee767e43110eeb"
                    ]
                },
                {
                    "command": [
                        "exists m; trivial.",
                        "VernacExtend",
                        "af2d9c6c69ed9910d30e31af116b698fb059e167"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "apply powers_repeat with (n := r); trivial.",
                        "VernacExtend",
                        "aff97db38576d215c4f5082c4be07b25243e83ba"
                    ]
                },
                {
                    "command": [
                        "apply H_included_in_G; auto.",
                        "VernacExtend",
                        "0a14f23f0d34a0780c503678a896ace8809f6317"
                    ]
                },
                {
                    "command": [
                        "apply remaining; auto.",
                        "VernacExtend",
                        "c4062e045668502b27802cebe71749ba80e126ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}