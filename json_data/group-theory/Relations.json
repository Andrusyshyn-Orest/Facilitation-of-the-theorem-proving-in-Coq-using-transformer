{
    "filename": "Relations.v",
    "coq_project": "group-theory",
    "vernac_cmds": [
        [
            "Section Relations.",
            "VernacBeginSection",
            "bf6f59f69467512bf8a23625ef392cd0002aa6be"
        ],
        [
            "Variable U : Type.",
            "VernacAssumption",
            "eb05258af3da16894daf420a97be779934a15d7e"
        ],
        [
            "Definition Relation := U -> U -> Prop.",
            "VernacDefinition",
            "610945956b86f3adf5dbed14cd75524f1a426ad2"
        ],
        [
            "Variable R : Relation.",
            "VernacAssumption",
            "aee3c7da53979a374754941b6dcdaf0f8b1ac105"
        ],
        [
            "Definition Reflexive : Prop := forall x : U, R x x.",
            "VernacDefinition",
            "636ab55fb48788bbb34840090795f4a40ad96c0a"
        ],
        [
            "Definition Transitive : Prop := forall x y z : U, R x y -> R y z -> R x z.",
            "VernacDefinition",
            "21fc871ef87a1238f99bd05aa1bc63ddb8808b48"
        ],
        [
            "Definition Antisymmetric : Prop := forall x y : U, R x y /\\ R y x -> x = y.",
            "VernacDefinition",
            "995f2c7db8406d33de09499224051460f00d0bbb"
        ],
        [
            "Definition Order : Prop := (Reflexive /\\ Transitive) /\\ Antisymmetric.",
            "VernacDefinition",
            "b46c8c652d6d9aedd1981c3ac6ddce8d6891bc29"
        ],
        [
            "Definition Symmetric : Prop := forall x y : U, R x y -> R y x.",
            "VernacDefinition",
            "3d00e5ace798855b2a0a1dbeda144484237a7f98"
        ],
        [
            "Definition Equivalence : Prop := (Reflexive /\\ Symmetric) /\\ Transitive.",
            "VernacDefinition",
            "e7f9426592fce7f8aeb78046e64c062f05d46ca2"
        ],
        [
            "Definition PER : Prop := Symmetric /\\ Transitive.",
            "VernacDefinition",
            "b8e7cd1613f247eaae28d49d5160e548625e11cb"
        ],
        [
            "End Relations.",
            "VernacEndSegment",
            "402e09534602736b8a1ac1f70d2548946943a832"
        ],
        [
            "Hint Unfold Reflexive.",
            "VernacHints",
            "72c5263c666b03ca6a6d5b62844757fc4b064c47"
        ],
        [
            "Hint Unfold Transitive.",
            "VernacHints",
            "8aac33b9bc6f6e5111700348c706906f579174ff"
        ],
        [
            "Hint Unfold Antisymmetric.",
            "VernacHints",
            "d819b3f72ec60eb8d34d84facf76461422eaaa3e"
        ],
        [
            "Hint Unfold Order.",
            "VernacHints",
            "04bf26efd3be1226ec6d8efdc47e97923525be31"
        ],
        [
            "Hint Unfold Symmetric.",
            "VernacHints",
            "76ad7f288a6f8ac5453b3e11758b446d08e17b82"
        ],
        [
            "Hint Unfold Equivalence.",
            "VernacHints",
            "1f1e16d2fcf68b4367c32217ce304c7aad7b6530"
        ],
        [
            "Hint Unfold PER.",
            "VernacHints",
            "aed90013005871fec04cdcf267619fc5a6cc563d"
        ],
        [
            "Theorem sym_not_P : forall (U : Type) (P : Relation U) (x y : U), Symmetric U P -> ~ P x y -> ~ P y x.",
            "VernacStartTheoremProof",
            "6d7f95af2c0c3a9131d41ff2d96645056ea088ef"
        ],
        [
            "intros U P x y H' H'0; unfold not at 1 in |- *; intro H'1.",
            "VernacExtend",
            "bbacb7c9b72f1b6703a4f254acf05781cfadf55f"
        ],
        [
            "apply H'0; apply H'; auto.",
            "VernacExtend",
            "ba87aabd3104ced104221e39636ffc3955a752dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Equiv_from_order : forall (U : Type) (R : Relation U), Order U R -> Equivalence U (fun x y : U => R x y /\\ R y x).",
            "VernacStartTheoremProof",
            "878ca38044bb151a437f4746d75d4b71f82f1ec0"
        ],
        [
            "intros U R H'; red in |- *.",
            "VernacExtend",
            "14600a13cb1e0c8d3fa399f0230cbd854ebeee0c"
        ],
        [
            "elim H'; intros H'0 H'1; elim H'0; intros H'2 H'3; clear H' H'0.",
            "VernacExtend",
            "1772c986cc29ed86cf4a35bd7da014a187226e14"
        ],
        [
            "split; [ split; red in |- * | red in |- * ].",
            "VernacExtend",
            "dfb7ba56631fb50a978b19a284f5b5bef54ec8bf"
        ],
        [
            "intro x; split; try exact (H'2 x).",
            "VernacExtend",
            "f089dc24447d266ae39428c22ed89b07c73ffa28"
        ],
        [
            "intros x y H'; elim H'; intros H'0 H'4; clear H'; auto.",
            "VernacExtend",
            "6e4fb527ce7894ad23bdf83d5009b9b5d632f085"
        ],
        [
            "intros x y z H' H'0; elim H'0; intros H'4 H'5; clear H'0; elim H'; intros H'6 H'7; clear H'.",
            "VernacExtend",
            "5cff56fd510c53bc4f3763b6cd90b30c30ad39e3"
        ],
        [
            "red in H'3.",
            "VernacExtend",
            "421cbd192a3aa685328fa1b596b2f4c9a2d6d4c7"
        ],
        [
            "split; apply H'3 with y; auto.",
            "VernacExtend",
            "828a86f2fcd3f69b0c92320999370859aef8ef83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Equiv_from_order.",
            "VernacHints",
            "9ae777f29899678580ccbf58ad4282cc9628a837"
        ]
    ],
    "proofs": [
        {
            "name": "sym_not_P",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros U P x y H' H'0; unfold not at 1 in |- *; intro H'1.",
                        "VernacExtend",
                        "bbacb7c9b72f1b6703a4f254acf05781cfadf55f"
                    ]
                },
                {
                    "command": [
                        "apply H'0; apply H'; auto.",
                        "VernacExtend",
                        "ba87aabd3104ced104221e39636ffc3955a752dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equiv_from_order",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros U R H'; red in |- *.",
                        "VernacExtend",
                        "14600a13cb1e0c8d3fa399f0230cbd854ebeee0c"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; elim H'0; intros H'2 H'3; clear H' H'0.",
                        "VernacExtend",
                        "1772c986cc29ed86cf4a35bd7da014a187226e14"
                    ]
                },
                {
                    "command": [
                        "split; [ split; red in |- * | red in |- * ].",
                        "VernacExtend",
                        "dfb7ba56631fb50a978b19a284f5b5bef54ec8bf"
                    ]
                },
                {
                    "command": [
                        "intro x; split; try exact (H'2 x).",
                        "VernacExtend",
                        "f089dc24447d266ae39428c22ed89b07c73ffa28"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; elim H'; intros H'0 H'4; clear H'; auto.",
                        "VernacExtend",
                        "6e4fb527ce7894ad23bdf83d5009b9b5d632f085"
                    ]
                },
                {
                    "command": [
                        "intros x y z H' H'0; elim H'0; intros H'4 H'5; clear H'0; elim H'; intros H'6 H'7; clear H'.",
                        "VernacExtend",
                        "5cff56fd510c53bc4f3763b6cd90b30c30ad39e3"
                    ]
                },
                {
                    "command": [
                        "red in H'3.",
                        "VernacExtend",
                        "421cbd192a3aa685328fa1b596b2f4c9a2d6d4c7"
                    ]
                },
                {
                    "command": [
                        "split; apply H'3 with y; auto.",
                        "VernacExtend",
                        "828a86f2fcd3f69b0c92320999370859aef8ef83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}