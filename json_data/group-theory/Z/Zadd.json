{
    "filename": "Z/Zadd.v",
    "coq_project": "group-theory",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Nat_complements.",
            "VernacRequire",
            "8689ff117ce667f4b6610c4c89b8b5979a26bd2f"
        ],
        [
            "Require Import Zbase.",
            "VernacRequire",
            "7210fd2aae32f34e173c287d78204d76166f0d46"
        ],
        [
            "Require Import Z_succ_pred.",
            "VernacRequire",
            "8f8d8dc1c96980b080130ff9092cca2f8152b50d"
        ],
        [
            "Fixpoint add1 (x2 : Z) (n : nat) {struct n} : Z := match n with | O => succZ x2 | S n0 => succZ (add1 x2 n0) end with add2 (x2 : Z) (n : nat) {struct n} : Z := match n with | O => predZ x2 | S n0 => predZ (add2 x2 n0) end.",
            "VernacFixpoint",
            "8b9e84ca908de12f20ee972e75b2532514f0c197"
        ],
        [
            "Definition addZ (x1 x2 : Z) : Z := match x1 with | OZ => x2 | pos n => add1 x2 n | neg n => add2 x2 n end.",
            "VernacDefinition",
            "a6a1a487434babed0a65014a325f7084178b4bd5"
        ],
        [
            "Lemma addZ_eq1 : forall y : Z, addZ OZ y = y.",
            "VernacStartTheoremProof",
            "b0e2e85a4f821b433362590ef062628b98b5b03a"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addZ_eq2 : forall y : Z, addZ (pos 0) y = succZ y.",
            "VernacStartTheoremProof",
            "8aa97fff8728a53961affcfe6c0e50f1eeae42ff"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addZ_eq3 : forall (n1 : nat) (y : Z), addZ (pos (S n1)) y = succZ (addZ (pos n1) y).",
            "VernacStartTheoremProof",
            "1c25fda516f89c5f272e2da84fd1ce1edadcd79b"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addZ_eq4 : forall y : Z, addZ (neg 0) y = predZ y.",
            "VernacStartTheoremProof",
            "105d55baa0a74281988c2236e007e4c056cb32aa"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addZ_eq5 : forall (n1 : nat) (y : Z), addZ (neg (S n1)) y = predZ (addZ (neg n1) y).",
            "VernacStartTheoremProof",
            "349a2f1f1061d46a3455a9fef4c02b59ddf45091"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_addZ_l : forall x y : Z, addZ (succZ x) y = succZ (addZ x y).",
            "VernacStartTheoremProof",
            "80483706a9a3d12bfe0e435a391b7309eac41b02"
        ],
        [
            "intro x; elim x; auto with arith.",
            "VernacExtend",
            "19e919eadf19d55b0e2be4296a615fdb89dd4411"
        ],
        [
            "intro n; elim n; auto with arith.",
            "VernacExtend",
            "f4fc0525df938a2e786bc4c6ceab1eaa9699fcbb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite succ_predZ; auto with arith.",
            "VernacExtend",
            "8f7d884c6adfb0d8d710f1d01b5ddaa6c9e74ef4"
        ],
        [
            "intros; symmetry in |- *; rewrite addZ_eq5.",
            "VernacExtend",
            "79f3a3b66589243c21570d9215f1f6624df25d6e"
        ],
        [
            "apply succ_predZ.",
            "VernacExtend",
            "9b75ef4d039bcd97840ae4975573c0272da626e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_addZ_l : forall x y : Z, addZ (predZ x) y = predZ (addZ x y).",
            "VernacStartTheoremProof",
            "8c3e1ce9abae552e1a9dbb6831a768d6f2891176"
        ],
        [
            "intros; elim x.",
            "VernacExtend",
            "9fec3e52677cda6ec1d2900b6b57b74724b54218"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple destruct n.",
            "VernacExtend",
            "183c183c72f2203480aa28be62ee9f41f2789554"
        ],
        [
            "simpl in |- *; rewrite pred_succZ; trivial with arith.",
            "VernacExtend",
            "7ffd841263f2f8937b6998bfd9d5c33252565a9e"
        ],
        [
            "intros; rewrite addZ_eq3; rewrite pred_succZ; trivial with arith.",
            "VernacExtend",
            "6924d7002303cccd1bd1b12cfe6fed03e1291256"
        ],
        [
            "trivial with arith.",
            "VernacExtend",
            "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_add_pos_succZ : forall (x : nat) (y : Z), addZ (pos (S x)) y = succZ (addZ (pos x) y).",
            "VernacStartTheoremProof",
            "253d7d6b5cfb7338d5a378c1fceccbe998d5067f"
        ],
        [
            "Proof addZ_eq3.",
            "VernacExactProof",
            "e3c4e76b8c40187b7b568e32b21b159cf6437ac0"
        ],
        [
            "Lemma tech_add_neg_predZ : forall (x : nat) (y : Z), addZ (neg (S x)) y = predZ (addZ (neg x) y).",
            "VernacStartTheoremProof",
            "f5adc9407cc74844ef3765c64d5fce2f6db8427a"
        ],
        [
            "Proof addZ_eq5.",
            "VernacExactProof",
            "3ff4f9eea84c83ab4b2edaf39de798f927645020"
        ],
        [
            "Lemma succ_addZ_r : forall x y : Z, addZ x (succZ y) = succZ (addZ x y).",
            "VernacStartTheoremProof",
            "ef9a5aa640860e19756c2038f6fd4543381dfdad"
        ],
        [
            "intros; elim x.",
            "VernacExtend",
            "9fec3e52677cda6ec1d2900b6b57b74724b54218"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite (tech_add_pos_succZ n0).",
            "VernacExtend",
            "f772e6ddae584a6fbd5896db0dd1e3bb57b8fc39"
        ],
        [
            "elim H; reflexivity.",
            "VernacExtend",
            "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; symmetry in |- *; apply succ_pred_pred_succZ.",
            "VernacExtend",
            "130ff7e80726a0e9523b9f36ac14c1cef701819c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite (tech_add_neg_predZ n0).",
            "VernacExtend",
            "30d73f1183b89e6ae10420914b252898474e42f2"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "symmetry in |- *; apply succ_pred_pred_succZ.",
            "VernacExtend",
            "85c4b2a17fdf02065b104ed41916adb7f7040c77"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_addZ_r : forall x y : Z, addZ x (predZ y) = predZ (addZ x y).",
            "VernacStartTheoremProof",
            "8576539fd006b41868eb58cf2be200e63c0198c6"
        ],
        [
            "intros; elim x.",
            "VernacExtend",
            "9fec3e52677cda6ec1d2900b6b57b74724b54218"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; apply succ_pred_pred_succZ.",
            "VernacExtend",
            "254f87b4109ffac0832c9ddf3112bde425feb8a8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite (tech_add_pos_succZ n0).",
            "VernacExtend",
            "f772e6ddae584a6fbd5896db0dd1e3bb57b8fc39"
        ],
        [
            "rewrite H; apply succ_pred_pred_succZ.",
            "VernacExtend",
            "9402126a648c5f4603156b2f2916d1f36d68bcee"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite (tech_add_neg_predZ n0).",
            "VernacExtend",
            "30d73f1183b89e6ae10420914b252898474e42f2"
        ],
        [
            "elim H; reflexivity.",
            "VernacExtend",
            "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_OZ : forall x : Z, addZ x OZ = x.",
            "VernacStartTheoremProof",
            "8e7d031196991ce7051c0e0c58da424cd3843db5"
        ],
        [
            "simple induction x.",
            "VernacExtend",
            "8950863b237a5d7b00a52d76e01fa941d437c6ea"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros; rewrite tech_add_pos_succZ; rewrite H; reflexivity.",
            "VernacExtend",
            "60b2f5a9a519e97ed0f0f0c086c239e0959bb0df"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros; rewrite tech_add_neg_predZ; rewrite H; reflexivity.",
            "VernacExtend",
            "934799df03d67129f071c14708e4a9465b1569c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_IZ_succZ : forall x : Z, addZ x IZ = succZ x.",
            "VernacStartTheoremProof",
            "b6423d8029837a514f76883c6ca0741af70aa08a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (succZ OZ = IZ); intros.",
            "VernacExtend",
            "8d9d586c7fcb1a4b96aeb546ae353b0d11ed2e8c"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite (succ_addZ_r x OZ); rewrite (add_OZ x); reflexivity.",
            "VernacExtend",
            "4193dc4bb7197c8db8c734f7ee21f6c5acb71d3f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_mIZ_predZ : forall x : Z, addZ x (neg 0) = predZ x.",
            "VernacStartTheoremProof",
            "aaaaeac108e500a3e29dda8eaa8a8074cc9179c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (predZ OZ = neg 0); intros.",
            "VernacExtend",
            "1f8751efd8ecf99f8ab4677fc2184c9b96369f36"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "rewrite (pred_addZ_r x OZ); rewrite (add_OZ x); reflexivity.",
            "VernacExtend",
            "f862b8112668af7abe41a7ed88aba29d1d3163f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition commutative (U : Set) (op : U -> U -> U) := forall x y : U, op x y = op y x.",
            "VernacDefinition",
            "6a522dc66e5b8938b895ed6388f54054cd138a13"
        ],
        [
            "Theorem addZ_commutativity : commutative Z addZ.",
            "VernacStartTheoremProof",
            "ec79b2d607b6a2934fd8cb2972df62e279b9f02a"
        ],
        [
            "unfold commutative in |- *; intros; elim x.",
            "VernacExtend",
            "e592f9c2a6fc49ffaa73fcf274b7c962ee1dc72b"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (add_OZ y).",
            "VernacExtend",
            "1c6110f819609521b1bc1f815888779ed1e706f1"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (add_IZ_succZ y).",
            "VernacExtend",
            "e48f3e550a6c24a5ff0fda984a0fcae256433510"
        ],
        [
            "intros; rewrite (tech_add_pos_succZ n0 y).",
            "VernacExtend",
            "9b0e62d07cbc9e4e696afa0743e5846591edb8d0"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "cut (succZ (pos n0) = pos (S n0)); intros.",
            "VernacExtend",
            "9ce5ff7e00e027620a7ae61e86ef4d4a2f872a43"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "rewrite (succ_addZ_r y (pos n0)); reflexivity.",
            "VernacExtend",
            "cba416f89d87d378cf8a8a6afa370876a029ce0c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (add_mIZ_predZ y).",
            "VernacExtend",
            "126c60214bd0366853d34b89b89e8aaf2112b207"
        ],
        [
            "intros; rewrite (tech_add_neg_predZ n0 y).",
            "VernacExtend",
            "6c28115d8832f46c8c58b9cad3c8aa97338bd52a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "cut (predZ (neg n0) = neg (S n0)); intros.",
            "VernacExtend",
            "62257195e0834127995f3d3866ad28664ffbfd44"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "rewrite (pred_addZ_r y (neg n0)); reflexivity.",
            "VernacExtend",
            "00f319f234322018debb04b10f5096c047d90783"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_add_pos_neg_posZ : forall n1 n2 : nat, n2 < n1 -> addZ (pos n1) (neg n2) = pos (n1 - S n2).",
            "VernacStartTheoremProof",
            "180a4b8e160fe7b356823eca0fa05402f41b619e"
        ],
        [
            "simple induction n2.",
            "VernacExtend",
            "f14547d00f90d5c98925abaa001cbce42ba153b6"
        ],
        [
            "intros; elim (addZ_commutativity (neg 0) (pos n1)).",
            "VernacExtend",
            "8ecbf4732f31e47b528985919be99fcf02b27cbf"
        ],
        [
            "rewrite addZ_eq4.",
            "VernacExtend",
            "941691f309c96a44605f0b66cb5a578cac4e82de"
        ],
        [
            "elim minus_n_Sm; trivial with arith.",
            "VernacExtend",
            "4705e9e1a91f89794ee79337e5d842c996776601"
        ],
        [
            "elim minus_n_O.",
            "VernacExtend",
            "cbcf89829b095e33ebbf630fd6d681104dca5460"
        ],
        [
            "apply tech_pred_posZ; trivial with arith.",
            "VernacExtend",
            "c2428fff104b5cade951390a15dceea66399e8e8"
        ],
        [
            "intros; elim (addZ_commutativity (neg (S n)) (pos n1)).",
            "VernacExtend",
            "81df81a90834557930abb10c8453ec7671572a8c"
        ],
        [
            "rewrite tech_add_neg_predZ.",
            "VernacExtend",
            "447e83f25770d8a48dfb6e727c8ed7bf2381fb3d"
        ],
        [
            "elim (addZ_commutativity (pos n1) (neg n)).",
            "VernacExtend",
            "43d7f149e6b6e61e9d92a0c3acdb1b05b3421eae"
        ],
        [
            "rewrite H; auto with arith.",
            "VernacExtend",
            "8392a856d0dbbc586f2ccf3f38a822850be88673"
        ],
        [
            "elim (minus_n_Sm n1 (S n) H0).",
            "VernacExtend",
            "fc22720afc1effae2bb3bbbbdef8a12d9b55bb19"
        ],
        [
            "apply tech_pred_posZ.",
            "VernacExtend",
            "f613b0cb5c3c27fea0134bb2cbee2dc039620e26"
        ],
        [
            "apply lt_minus2; trivial with arith.",
            "VernacExtend",
            "a56c7b5f5f734acb98976d8c68edcc4572b86781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition associative (U : Set) (op : U -> U -> U) := forall x y z : U, op x (op y z) = op (op x y) z.",
            "VernacDefinition",
            "6d88460dac3c018b4d2d1d87871edcfada0e4cae"
        ],
        [
            "Theorem addZ_associativity : associative Z addZ.",
            "VernacStartTheoremProof",
            "cd12506d1a8ce212df97c5c96db2334958474eac"
        ],
        [
            "unfold associative in |- *; intros; elim x.",
            "VernacExtend",
            "944f2b805fb34bb312d451d51691a031be4c28e2"
        ],
        [
            "unfold addZ in |- *; reflexivity.",
            "VernacExtend",
            "2b71f3118f260db7ee0f2d561e468f26725cf6fb"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (succ_addZ_l y z).",
            "VernacExtend",
            "a57accec938db9a27ade660f38899748407f4354"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite (tech_add_pos_succZ n0).",
            "VernacExtend",
            "f772e6ddae584a6fbd5896db0dd1e3bb57b8fc39"
        ],
        [
            "rewrite (succ_addZ_l (addZ (pos n0) y) z); elim H; reflexivity.",
            "VernacExtend",
            "bdfccdc946460c51633c9e279d9fb0a37b01cadd"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *; symmetry in |- *; exact (pred_addZ_l y z).",
            "VernacExtend",
            "0235dc40987a58ea1d2712d7046dd3ee9431a432"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 2 rewrite (tech_add_neg_predZ n0).",
            "VernacExtend",
            "30d73f1183b89e6ae10420914b252898474e42f2"
        ],
        [
            "rewrite (pred_addZ_l (addZ (neg n0) y) z); elim H; reflexivity.",
            "VernacExtend",
            "57d08f33678de34fcfee21946dfcf3ce2306aef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition IdZ (x : Z) := True.",
            "VernacDefinition",
            "c4d0a3ada7bd5dfd4802366ef52263af41904bf8"
        ],
        [
            "Definition neutral (S : Set) (G : S -> Prop) (Add : S -> S -> S) (O : S) := G O /\\ (forall x : S, G x -> Add x O = x /\\ Add O x = x).",
            "VernacDefinition",
            "c231bcb9f32879ad19ad5b15cdbb78dba2704aea"
        ],
        [
            "Theorem addZ_neutral : neutral Z IdZ addZ OZ.",
            "VernacStartTheoremProof",
            "5cddd3a7294eb3db076a48a6dcab82b7529b1108"
        ],
        [
            "unfold neutral in |- *; intros.",
            "VernacExtend",
            "fffc1ff25b615c89b0b1aa451867104a39a124f0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact I.",
            "VernacExtend",
            "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact (add_OZ x).",
            "VernacExtend",
            "034bec8fff42a4438d8fd5103cf99648e5511a5d"
        ],
        [
            "unfold addZ in |- *; reflexivity.",
            "VernacExtend",
            "2b71f3118f260db7ee0f2d561e468f26725cf6fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition oppZ (x : Z) := match x return Z with | OZ => OZ | pos n => neg n | neg n => pos n end.",
            "VernacDefinition",
            "2f64181767304698f1e19b9c59cf4a889c2e405e"
        ],
        [
            "Lemma opp_succZ : forall x : Z, oppZ (succZ x) = predZ (oppZ x).",
            "VernacStartTheoremProof",
            "71ae3780127a0ce445124791f977623b2b8d628f"
        ],
        [
            "simple destruct x.",
            "VernacExtend",
            "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "simple destruct n; intros; reflexivity.",
            "VernacExtend",
            "7611b4d1cb5479a563931b526f4202e6e78a17e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_predZ : forall x : Z, oppZ (predZ x) = succZ (oppZ x).",
            "VernacStartTheoremProof",
            "a18c17734ff228d0f3513e5bfeba422960e3b4ce"
        ],
        [
            "simple destruct x.",
            "VernacExtend",
            "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simple destruct n; intros; reflexivity.",
            "VernacExtend",
            "7611b4d1cb5479a563931b526f4202e6e78a17e7"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_add_pos_negZ : forall n : nat, addZ (pos n) (neg n) = OZ.",
            "VernacStartTheoremProof",
            "9b155baaf7b0279b4cc35d148e13b9af72a836eb"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros; rewrite (tech_add_pos_succZ n0).",
            "VernacExtend",
            "aa53e46f2abe46a3b035a8360c4ec4585763cd10"
        ],
        [
            "elim succ_addZ_r; exact H.",
            "VernacExtend",
            "38c86aecacd74ee1f1d17a727f4ed5222f8c0f86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_add_neg_posZ : forall n : nat, addZ (neg n) (pos n) = OZ.",
            "VernacStartTheoremProof",
            "82f8ea1930fbecce904ba08b1421c093318afdbb"
        ],
        [
            "intros; elim (addZ_commutativity (pos n) (neg n)); exact (tech_add_pos_negZ n).",
            "VernacExtend",
            "4c39e849d56cacd1f6b51a2249357e2fcc060e57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_add_pos_posZ : forall n m : nat, addZ (pos n) (pos m) = pos (S (n + m)).",
            "VernacStartTheoremProof",
            "744c80a459f1ef5a6c6893ffbdbee892b67b28f2"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros; rewrite (tech_add_pos_succZ n0 (pos m)); rewrite H; reflexivity.",
            "VernacExtend",
            "832740124c68a8e177582e408a0315d2e0946404"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_add_neg_negZ : forall n m : nat, addZ (neg n) (neg m) = neg (S (n + m)).",
            "VernacStartTheoremProof",
            "71e760bf02936ab4ef1fff1b6becbc5d15a38ea9"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros; rewrite (tech_add_neg_predZ n0 (neg m)); rewrite H; reflexivity.",
            "VernacExtend",
            "24028add659704a838280c82f63471bc6649a8dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem abs_eq_or_oppZ : forall x : Z, {absZ x = x} + {absZ x = oppZ x}.",
            "VernacStartTheoremProof",
            "25598f3e97450d74855d01c06df9f061a82c4b83"
        ],
        [
            "simple destruct x; auto with arith.",
            "VernacExtend",
            "81d03b338144b986f22f4421c60860fca672034c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_opp_pos_negZ : forall n : nat, oppZ (pos n) = neg n /\\ oppZ (neg n) = pos n.",
            "VernacStartTheoremProof",
            "d205c06513e135e0563f7b82a68290028fd8db45"
        ],
        [
            "simple induction n; auto with arith.",
            "VernacExtend",
            "571fcde038c183f0c8e58d9fb84eca09e40112fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "addZ_eq1",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addZ_eq2",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addZ_eq3",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addZ_eq4",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addZ_eq5",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_addZ_l",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intro x; elim x; auto with arith.",
                        "VernacExtend",
                        "19e919eadf19d55b0e2be4296a615fdb89dd4411"
                    ]
                },
                {
                    "command": [
                        "intro n; elim n; auto with arith.",
                        "VernacExtend",
                        "f4fc0525df938a2e786bc4c6ceab1eaa9699fcbb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_predZ; auto with arith.",
                        "VernacExtend",
                        "8f7d884c6adfb0d8d710f1d01b5ddaa6c9e74ef4"
                    ]
                },
                {
                    "command": [
                        "intros; symmetry in |- *; rewrite addZ_eq5.",
                        "VernacExtend",
                        "79f3a3b66589243c21570d9215f1f6624df25d6e"
                    ]
                },
                {
                    "command": [
                        "apply succ_predZ.",
                        "VernacExtend",
                        "9b75ef4d039bcd97840ae4975573c0272da626e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_addZ_l",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros; elim x.",
                        "VernacExtend",
                        "9fec3e52677cda6ec1d2900b6b57b74724b54218"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple destruct n.",
                        "VernacExtend",
                        "183c183c72f2203480aa28be62ee9f41f2789554"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite pred_succZ; trivial with arith.",
                        "VernacExtend",
                        "7ffd841263f2f8937b6998bfd9d5c33252565a9e"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite addZ_eq3; rewrite pred_succZ; trivial with arith.",
                        "VernacExtend",
                        "6924d7002303cccd1bd1b12cfe6fed03e1291256"
                    ]
                },
                {
                    "command": [
                        "trivial with arith.",
                        "VernacExtend",
                        "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_addZ_r",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros; elim x.",
                        "VernacExtend",
                        "9fec3e52677cda6ec1d2900b6b57b74724b54218"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (tech_add_pos_succZ n0).",
                        "VernacExtend",
                        "f772e6ddae584a6fbd5896db0dd1e3bb57b8fc39"
                    ]
                },
                {
                    "command": [
                        "elim H; reflexivity.",
                        "VernacExtend",
                        "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; apply succ_pred_pred_succZ.",
                        "VernacExtend",
                        "130ff7e80726a0e9523b9f36ac14c1cef701819c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (tech_add_neg_predZ n0).",
                        "VernacExtend",
                        "30d73f1183b89e6ae10420914b252898474e42f2"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *; apply succ_pred_pred_succZ.",
                        "VernacExtend",
                        "85c4b2a17fdf02065b104ed41916adb7f7040c77"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_addZ_r",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros; elim x.",
                        "VernacExtend",
                        "9fec3e52677cda6ec1d2900b6b57b74724b54218"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply succ_pred_pred_succZ.",
                        "VernacExtend",
                        "254f87b4109ffac0832c9ddf3112bde425feb8a8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (tech_add_pos_succZ n0).",
                        "VernacExtend",
                        "f772e6ddae584a6fbd5896db0dd1e3bb57b8fc39"
                    ]
                },
                {
                    "command": [
                        "rewrite H; apply succ_pred_pred_succZ.",
                        "VernacExtend",
                        "9402126a648c5f4603156b2f2916d1f36d68bcee"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (tech_add_neg_predZ n0).",
                        "VernacExtend",
                        "30d73f1183b89e6ae10420914b252898474e42f2"
                    ]
                },
                {
                    "command": [
                        "elim H; reflexivity.",
                        "VernacExtend",
                        "3cae1f66da8cdef2773f5c2435dceed1de69c5c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_OZ",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "simple induction x.",
                        "VernacExtend",
                        "8950863b237a5d7b00a52d76e01fa941d437c6ea"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite tech_add_pos_succZ; rewrite H; reflexivity.",
                        "VernacExtend",
                        "60b2f5a9a519e97ed0f0f0c086c239e0959bb0df"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite tech_add_neg_predZ; rewrite H; reflexivity.",
                        "VernacExtend",
                        "934799df03d67129f071c14708e4a9465b1569c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_IZ_succZ",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (succZ OZ = IZ); intros.",
                        "VernacExtend",
                        "8d9d586c7fcb1a4b96aeb546ae353b0d11ed2e8c"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite (succ_addZ_r x OZ); rewrite (add_OZ x); reflexivity.",
                        "VernacExtend",
                        "4193dc4bb7197c8db8c734f7ee21f6c5acb71d3f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_mIZ_predZ",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (predZ OZ = neg 0); intros.",
                        "VernacExtend",
                        "1f8751efd8ecf99f8ab4677fc2184c9b96369f36"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "rewrite (pred_addZ_r x OZ); rewrite (add_OZ x); reflexivity.",
                        "VernacExtend",
                        "f862b8112668af7abe41a7ed88aba29d1d3163f6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addZ_commutativity",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "unfold commutative in |- *; intros; elim x.",
                        "VernacExtend",
                        "e592f9c2a6fc49ffaa73fcf274b7c962ee1dc72b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (add_OZ y).",
                        "VernacExtend",
                        "1c6110f819609521b1bc1f815888779ed1e706f1"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (add_IZ_succZ y).",
                        "VernacExtend",
                        "e48f3e550a6c24a5ff0fda984a0fcae256433510"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_add_pos_succZ n0 y).",
                        "VernacExtend",
                        "9b0e62d07cbc9e4e696afa0743e5846591edb8d0"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "cut (succZ (pos n0) = pos (S n0)); intros.",
                        "VernacExtend",
                        "9ce5ff7e00e027620a7ae61e86ef4d4a2f872a43"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "rewrite (succ_addZ_r y (pos n0)); reflexivity.",
                        "VernacExtend",
                        "cba416f89d87d378cf8a8a6afa370876a029ce0c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (add_mIZ_predZ y).",
                        "VernacExtend",
                        "126c60214bd0366853d34b89b89e8aaf2112b207"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_add_neg_predZ n0 y).",
                        "VernacExtend",
                        "6c28115d8832f46c8c58b9cad3c8aa97338bd52a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "cut (predZ (neg n0) = neg (S n0)); intros.",
                        "VernacExtend",
                        "62257195e0834127995f3d3866ad28664ffbfd44"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "rewrite (pred_addZ_r y (neg n0)); reflexivity.",
                        "VernacExtend",
                        "00f319f234322018debb04b10f5096c047d90783"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_add_pos_neg_posZ",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "simple induction n2.",
                        "VernacExtend",
                        "f14547d00f90d5c98925abaa001cbce42ba153b6"
                    ]
                },
                {
                    "command": [
                        "intros; elim (addZ_commutativity (neg 0) (pos n1)).",
                        "VernacExtend",
                        "8ecbf4732f31e47b528985919be99fcf02b27cbf"
                    ]
                },
                {
                    "command": [
                        "rewrite addZ_eq4.",
                        "VernacExtend",
                        "941691f309c96a44605f0b66cb5a578cac4e82de"
                    ]
                },
                {
                    "command": [
                        "elim minus_n_Sm; trivial with arith.",
                        "VernacExtend",
                        "4705e9e1a91f89794ee79337e5d842c996776601"
                    ]
                },
                {
                    "command": [
                        "elim minus_n_O.",
                        "VernacExtend",
                        "cbcf89829b095e33ebbf630fd6d681104dca5460"
                    ]
                },
                {
                    "command": [
                        "apply tech_pred_posZ; trivial with arith.",
                        "VernacExtend",
                        "c2428fff104b5cade951390a15dceea66399e8e8"
                    ]
                },
                {
                    "command": [
                        "intros; elim (addZ_commutativity (neg (S n)) (pos n1)).",
                        "VernacExtend",
                        "81df81a90834557930abb10c8453ec7671572a8c"
                    ]
                },
                {
                    "command": [
                        "rewrite tech_add_neg_predZ.",
                        "VernacExtend",
                        "447e83f25770d8a48dfb6e727c8ed7bf2381fb3d"
                    ]
                },
                {
                    "command": [
                        "elim (addZ_commutativity (pos n1) (neg n)).",
                        "VernacExtend",
                        "43d7f149e6b6e61e9d92a0c3acdb1b05b3421eae"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto with arith.",
                        "VernacExtend",
                        "8392a856d0dbbc586f2ccf3f38a822850be88673"
                    ]
                },
                {
                    "command": [
                        "elim (minus_n_Sm n1 (S n) H0).",
                        "VernacExtend",
                        "fc22720afc1effae2bb3bbbbdef8a12d9b55bb19"
                    ]
                },
                {
                    "command": [
                        "apply tech_pred_posZ.",
                        "VernacExtend",
                        "f613b0cb5c3c27fea0134bb2cbee2dc039620e26"
                    ]
                },
                {
                    "command": [
                        "apply lt_minus2; trivial with arith.",
                        "VernacExtend",
                        "a56c7b5f5f734acb98976d8c68edcc4572b86781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addZ_associativity",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "unfold associative in |- *; intros; elim x.",
                        "VernacExtend",
                        "944f2b805fb34bb312d451d51691a031be4c28e2"
                    ]
                },
                {
                    "command": [
                        "unfold addZ in |- *; reflexivity.",
                        "VernacExtend",
                        "2b71f3118f260db7ee0f2d561e468f26725cf6fb"
                    ]
                },
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (succ_addZ_l y z).",
                        "VernacExtend",
                        "a57accec938db9a27ade660f38899748407f4354"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (tech_add_pos_succZ n0).",
                        "VernacExtend",
                        "f772e6ddae584a6fbd5896db0dd1e3bb57b8fc39"
                    ]
                },
                {
                    "command": [
                        "rewrite (succ_addZ_l (addZ (pos n0) y) z); elim H; reflexivity.",
                        "VernacExtend",
                        "bdfccdc946460c51633c9e279d9fb0a37b01cadd"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; symmetry in |- *; exact (pred_addZ_l y z).",
                        "VernacExtend",
                        "0235dc40987a58ea1d2712d7046dd3ee9431a432"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (tech_add_neg_predZ n0).",
                        "VernacExtend",
                        "30d73f1183b89e6ae10420914b252898474e42f2"
                    ]
                },
                {
                    "command": [
                        "rewrite (pred_addZ_l (addZ (neg n0) y) z); elim H; reflexivity.",
                        "VernacExtend",
                        "57d08f33678de34fcfee21946dfcf3ce2306aef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addZ_neutral",
            "line_nb": 148,
            "steps": [
                {
                    "command": [
                        "unfold neutral in |- *; intros.",
                        "VernacExtend",
                        "fffc1ff25b615c89b0b1aa451867104a39a124f0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact I.",
                        "VernacExtend",
                        "2cf10cb6670c94bac111ace6912ec2b66fc73c6f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact (add_OZ x).",
                        "VernacExtend",
                        "034bec8fff42a4438d8fd5103cf99648e5511a5d"
                    ]
                },
                {
                    "command": [
                        "unfold addZ in |- *; reflexivity.",
                        "VernacExtend",
                        "2b71f3118f260db7ee0f2d561e468f26725cf6fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_succZ",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "simple destruct x.",
                        "VernacExtend",
                        "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "simple destruct n; intros; reflexivity.",
                        "VernacExtend",
                        "7611b4d1cb5479a563931b526f4202e6e78a17e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_predZ",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "simple destruct x.",
                        "VernacExtend",
                        "7919ec97e07bd56a71dcc6f0830daec61ed1d758"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simple destruct n; intros; reflexivity.",
                        "VernacExtend",
                        "7611b4d1cb5479a563931b526f4202e6e78a17e7"
                    ]
                },
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_add_pos_negZ",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_add_pos_succZ n0).",
                        "VernacExtend",
                        "aa53e46f2abe46a3b035a8360c4ec4585763cd10"
                    ]
                },
                {
                    "command": [
                        "elim succ_addZ_r; exact H.",
                        "VernacExtend",
                        "38c86aecacd74ee1f1d17a727f4ed5222f8c0f86"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_add_neg_posZ",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros; elim (addZ_commutativity (pos n) (neg n)); exact (tech_add_pos_negZ n).",
                        "VernacExtend",
                        "4c39e849d56cacd1f6b51a2249357e2fcc060e57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_add_pos_posZ",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_add_pos_succZ n0 (pos m)); rewrite H; reflexivity.",
                        "VernacExtend",
                        "832740124c68a8e177582e408a0315d2e0946404"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_add_neg_negZ",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (tech_add_neg_predZ n0 (neg m)); rewrite H; reflexivity.",
                        "VernacExtend",
                        "24028add659704a838280c82f63471bc6649a8dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abs_eq_or_oppZ",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "simple destruct x; auto with arith.",
                        "VernacExtend",
                        "81d03b338144b986f22f4421c60860fca672034c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_opp_pos_negZ",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "simple induction n; auto with arith.",
                        "VernacExtend",
                        "571fcde038c183f0c8e58d9fb84eca09e40112fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}