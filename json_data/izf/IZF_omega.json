{
    "filename": "IZF_omega.v",
    "coq_project": "izf",
    "vernac_cmds": [
        [
            "Require Import IZF_logic.",
            "VernacRequire",
            "52d6015de36734d60c1a42214bb9167237caee73"
        ],
        [
            "Require Import IZF_base.",
            "VernacRequire",
            "cf80f06c6c174ef99f7aece7927143ff2e0e96f9"
        ],
        [
            "Require Import IZF_nat.",
            "VernacRequire",
            "189b83ccaf6a0422be0e6ec1b592b52f7e95ba6f"
        ],
        [
            "Definition unit : Typ1 := forall X : Typ0, X -> X.",
            "VernacDefinition",
            "c505cda697bf16688ce5046851abbf0cafde8e91"
        ],
        [
            "Definition id : unit := fun X x => x.",
            "VernacDefinition",
            "13e42de5a35623ba82b985d00e183554506c2bfe"
        ],
        [
            "Definition ZERO : Rel unit := fun _ _ => bot.",
            "VernacDefinition",
            "bfc59bd45506e2f84ef15cabcc18efd48e9b7da6"
        ],
        [
            "Lemma ZERO_elim : forall (X : Typ1) (A : Rel X) (a : X), ELT X A a unit ZERO id -> bot.",
            "VernacStartTheoremProof",
            "9ce85081446da4225fcae16f46e10ea22586768d"
        ],
        [
            "intros X A a H; apply H.",
            "VernacExtend",
            "0de9c2a742affab52119cf7aecfdaec7c67f8d02"
        ],
        [
            "intros b' H1 H2; exact H1.",
            "VernacExtend",
            "4893ca98bbc7270314a7abeb2c9fb7c2e4132de3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition SUCC (X : Typ1) (A : Rel X) (a : X) : Rel (opt X) := fun z' z => forall E : Prop, (forall x x' : X, eq (opt X) z (some X x) -> eq (opt X) z' (some X x') -> A x' x -> E) -> (forall x' : X, eq (opt X) z (none X) -> eq (opt X) z' (some X x') -> A x' a -> E) -> (eq (opt X) z (none X) -> eq (opt X) z' (some X a) -> E) -> E.",
            "VernacDefinition",
            "3a18167891629555647a24287df37c10c52ee3f2"
        ],
        [
            "Lemma SUCC_in : forall (X : Typ1) (A : Rel X) (a x x' : X), A x' x -> SUCC X A a (some X x') (some X x).",
            "VernacStartTheoremProof",
            "7ce2338fbf5a3c806abefaa877f156b7222d6863"
        ],
        [
            "Proof fun X A a x x' H E H1 _ _ => H1 x x' (eq_refl (opt X) (some X x)) (eq_refl (opt X) (some X x')) H.",
            "VernacExactProof",
            "0f5a58db180c28e011dc3a3ccff856d9ba018e85"
        ],
        [
            "Lemma SUCC_rt1 : forall (X : Typ1) (A : Rel X) (a x' : X), A x' a -> SUCC X A a (some X x') (none X).",
            "VernacStartTheoremProof",
            "901ca53bf93af445f5b355a65cbd5da7ed99db1e"
        ],
        [
            "Proof fun X A a x' H E _ H2 _ => H2 x' (eq_refl (opt X) (none X)) (eq_refl (opt X) (some X x')) H.",
            "VernacExactProof",
            "f027844f8ccc2db24ca0f8c06b2683f379f725aa"
        ],
        [
            "Lemma SUCC_rt2 : forall (X : Typ1) (A : Rel X) (a : X), SUCC X A a (some X a) (none X).",
            "VernacStartTheoremProof",
            "716378f89f070b64fed254561809b2d56b721937"
        ],
        [
            "Proof fun X A a E _ _ H3 => H3 (eq_refl (opt X) (none X)) (eq_refl (opt X) (some X a)).",
            "VernacExactProof",
            "31630a6f6a960e513f732b20cbf268ab2a59623b"
        ],
        [
            "Lemma SUCC_deloc : forall (X : Typ1) (A : Rel X) (a : X), deloc X A (opt X) (SUCC X A a) (some X).",
            "VernacStartTheoremProof",
            "7be37407feebe14f01603d4b82037290b9a7ba79"
        ],
        [
            "intros X A a; unfold deloc in |- *; apply and_intro.",
            "VernacExtend",
            "f5d5a900b2e07820018b6c2f5d7f4355c7de69c9"
        ],
        [
            "intros; apply SUCC_in; assumption.",
            "VernacExtend",
            "68be763d6e114d070e592cd7899462df0e353874"
        ],
        [
            "intros x y' H; apply H; clear H.",
            "VernacExtend",
            "29baa1ed1c635c0c7042b6afc57fe6d950ad2170"
        ],
        [
            "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
            "VernacExtend",
            "531bd998731a33ec53ad7d08b7dcc02044dd660a"
        ],
        [
            "apply (eq_sym _ _ _ (eq_some_some X x x0 H1)); assumption.",
            "VernacExtend",
            "6ab9953331ed110db6a36a7e15562aa32c1df5cd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros x' H1 H2 H3; apply (eq_some_none _ _ H1).",
            "VernacExtend",
            "43b7adc4a9b004b53299fdd574e9585f5498d8dd"
        ],
        [
            "intros H1 H2; apply (eq_some_none _ _ H1).",
            "VernacExtend",
            "076065650258df16081f113dde398038709bd478"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SUCC_eqv : forall (X : Typ1) (A : Rel X) (a x : X), EQV X A x (opt X) (SUCC X A a) (some X x).",
            "VernacStartTheoremProof",
            "355307b6317106372d55bc9abd34145b529f8f2a"
        ],
        [
            "intros X A a x; apply EQV_deloc; apply SUCC_deloc.",
            "VernacExtend",
            "b97eee857303df14b466a2342ac3d059d6efad6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SUCC_intro1 : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), ELT Y B b X A a -> ELT Y B b (opt X) (SUCC X A a) (none X).",
            "VernacStartTheoremProof",
            "56880fd27cad63e71c93b7ffa5c8931cd12da61f"
        ],
        [
            "intros X A a Y B b H; apply H; clear H; intros a' H1 H2.",
            "VernacExtend",
            "0a4c280245eb434eea4c9a3991b6cb9fa8409147"
        ],
        [
            "apply ELT_intro with (some X a').",
            "VernacExtend",
            "8a1bbb0dfcf8f278ce35455ce08b33bf1d1cd719"
        ],
        [
            "apply SUCC_rt1; assumption.",
            "VernacExtend",
            "547347dff50adb1e7ae0e06b849fcaeb40d36522"
        ],
        [
            "apply EQV_trans with X A a'.",
            "VernacExtend",
            "54e4a71adaa63d6c4dd37a4c80284712c4228bca"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply SUCC_eqv.",
            "VernacExtend",
            "db0ee35ab8050f18b11cf810e987a809a6cc2e54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SUCC_intro2 : forall (X : Typ1) (A : Rel X) (a : X), ELT X A a (opt X) (SUCC X A a) (none X).",
            "VernacStartTheoremProof",
            "98bca754a0cc6d6e1b2c99e1bca8da5bfb516114"
        ],
        [
            "intros X A a; apply ELT_intro with (some X a).",
            "VernacExtend",
            "8826fcc2856891e420f9cb1ac75351c80d6656b7"
        ],
        [
            "apply SUCC_rt2.",
            "VernacExtend",
            "aa8b16c49812bc4cea73ee6d0a3cf2243eb3211a"
        ],
        [
            "apply SUCC_eqv.",
            "VernacExtend",
            "db0ee35ab8050f18b11cf810e987a809a6cc2e54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SUCC_elim : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), ELT Y B b (opt X) (SUCC X A a) (none X) -> or (ELT Y B b X A a) (EQV Y B b X A a).",
            "VernacStartTheoremProof",
            "72a55ba2d4914143702408e2b3e35eff15865427"
        ],
        [
            "intros X A a Y B b H; apply H; clear H.",
            "VernacExtend",
            "2ffeb1f613c0f10a4c2fe1c187e76670ab0e5bd3"
        ],
        [
            "intros z' H H1; apply H; clear H.",
            "VernacExtend",
            "53033807b8478f49a3a96890ac4b02f7625af6b8"
        ],
        [
            "intros x x' H2 H3 H4; apply (eq_none_some _ _ H2).",
            "VernacExtend",
            "fe73384fe07d62fbc72a706fbfd45db51583b1a7"
        ],
        [
            "intros x' H2 H3 H4; apply or_inl; apply ELT_intro with x'.",
            "VernacExtend",
            "dea634d386dca9ef52c40155dbd43914c658dabd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply EQV_trans with (opt X) (SUCC X A a) (some X x').",
            "VernacExtend",
            "b25b7775835fa6c68cff749153b45c6cd1142c50"
        ],
        [
            "apply H3; assumption.",
            "VernacExtend",
            "5797d1cfc3adb7c1e34d2f0d332d89f950d72fea"
        ],
        [
            "apply EQV_sym; apply SUCC_eqv.",
            "VernacExtend",
            "f6cabe0acc9a23e97e67e066ce80b17aff137658"
        ],
        [
            "intros H2 H3; apply or_inr.",
            "VernacExtend",
            "07c5845025634b28929992c00cf8df0e495e56a6"
        ],
        [
            "apply EQV_trans with (opt X) (SUCC X A a) (some X a).",
            "VernacExtend",
            "90adc29d4d082cc5125eeb9bcaafeef2f613649d"
        ],
        [
            "apply H3; assumption.",
            "VernacExtend",
            "5797d1cfc3adb7c1e34d2f0d332d89f950d72fea"
        ],
        [
            "apply EQV_sym; apply SUCC_eqv.",
            "VernacExtend",
            "f6cabe0acc9a23e97e67e066ce80b17aff137658"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma successor : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), iff (ELT Y B b (opt X) (SUCC X A a) (none X)) (or (ELT Y B b X A a) (EQV Y B b X A a)).",
            "VernacStartTheoremProof",
            "d480e37b386fa1d8b0a31554fd94e64b40533691"
        ],
        [
            "intros X A a Y B b; unfold iff in |- *.",
            "VernacExtend",
            "3f64f192c9b524c3fb3f61dbc17dae1525ce6731"
        ],
        [
            "apply and_intro; intro H.",
            "VernacExtend",
            "680fbfdc287e87ba6286cf94143db61aeccb2967"
        ],
        [
            "apply SUCC_elim; assumption.",
            "VernacExtend",
            "fcdefce4c6c7ee54069ca56dbc04a970457618b2"
        ],
        [
            "apply H; clear H; intro H.",
            "VernacExtend",
            "b8ff445ea471378ecb8bff0401dd73e8e8538364"
        ],
        [
            "apply SUCC_intro1; assumption.",
            "VernacExtend",
            "e69baf6980be7cf713de1e1b86ef9db58af4f10e"
        ],
        [
            "apply ELT_compat_l with X A a.",
            "VernacExtend",
            "b950bb760ca8b6e2f7374ab98461ca5c482e1966"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply SUCC_intro2.",
            "VernacExtend",
            "e360d0a2c68f692c4c26a5472cc4beccd97f63ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SUCC_compat : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), EQV X A a Y B b -> EQV (opt X) (SUCC X A a) (none X) (opt Y) (SUCC Y B b) (none Y).",
            "VernacStartTheoremProof",
            "41495f5100cb4ae609be345278d84dedebd048a7"
        ],
        [
            "cut (forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), EQV X A a Y B b -> SUB (opt X) (SUCC X A a) (none X) (opt Y) (SUCC Y B b) (none Y)).",
            "VernacExtend",
            "bfbe14b601e3651cd9fa6b58fb2e01721da69821"
        ],
        [
            "intros H X A a Y B b H1; apply extensionality.",
            "VernacExtend",
            "dd319bc5989ec2dbde0a9e5bcd2bac3acf635f44"
        ],
        [
            "apply H; assumption.",
            "VernacExtend",
            "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
        ],
        [
            "apply H; apply EQV_sym; assumption.",
            "VernacExtend",
            "afe2cbc79a5afd2cd6f5f401dc141c946d30904f"
        ],
        [
            "unfold SUB in |- *; intros X A a Y B b H Z C c H1.",
            "VernacExtend",
            "20fef7cb9d83ca5fd742b1e4724d71c3219ef2fa"
        ],
        [
            "apply (SUCC_elim X A a Z C c H1); clear H1; intro H1.",
            "VernacExtend",
            "ebc75b45b0a9f69629da61fd64181911df6f959a"
        ],
        [
            "apply SUCC_intro1; apply ELT_compat_r with X A a; assumption.",
            "VernacExtend",
            "d360ce4151a7228f01b17212e334a32e42b55a89"
        ],
        [
            "apply ELT_compat_l with Y B b.",
            "VernacExtend",
            "cd2dcf82c7342fefd94cf82264bc0d80754e27cc"
        ],
        [
            "apply EQV_trans with X A a; assumption.",
            "VernacExtend",
            "1c1cff1dba5c1116520069aa31dd2202916a9c5b"
        ],
        [
            "apply SUCC_intro2.",
            "VernacExtend",
            "e360d0a2c68f692c4c26a5472cc4beccd97f63ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition OMEGA : Rel (opt nat) := fun z' z => forall E : Prop, (forall n n' : nat, eq (opt nat) z (some nat n) -> eq (opt nat) z' (some nat n') -> wf_nat n -> wf_nat n' -> lt n' n -> E) -> (forall n' : nat, eq (opt nat) z (none nat) -> eq (opt nat) z' (some nat n') -> wf_nat n' -> E) -> E.",
            "VernacDefinition",
            "95228da98377b388f7b95542d0f5f96dbf5f5acb"
        ],
        [
            "Lemma OMEGA_in : forall n : nat, wf_nat n -> forall m : nat, wf_nat m -> lt n m -> OMEGA (some nat n) (some nat m).",
            "VernacStartTheoremProof",
            "3f6e3688c1b985eb7c73995d179eaf6e6a59ec80"
        ],
        [
            "Proof fun n Hn m Hm H E H1 _ => H1 m n (eq_refl (opt nat) (some nat m)) (eq_refl (opt nat) (some nat n)) Hm Hn H.",
            "VernacExactProof",
            "eb5c2e245b203b8b8d050cd14516f49c935dd1e9"
        ],
        [
            "Lemma OMEGA_rt : forall n : nat, wf_nat n -> OMEGA (some nat n) (none nat).",
            "VernacStartTheoremProof",
            "f71149df068ae5c7dfd28809d432d1985a47157d"
        ],
        [
            "Proof fun n Hn E _ H2 => H2 n (eq_refl (opt nat) (none nat)) (eq_refl (opt nat) (some nat n)) Hn.",
            "VernacExactProof",
            "c2625f9c0a5df82a05219d3bccf4637678997c32"
        ],
        [
            "Lemma OMEGA_ZERO : EQV (opt nat) OMEGA (some nat O) unit ZERO id.",
            "VernacStartTheoremProof",
            "60c1ece8cd336f42116ccb1ac26a61e2f331c9a4"
        ],
        [
            "apply extensionality; unfold SUB in |- *; intros X A a H.",
            "VernacExtend",
            "0bf9be705dbe6d6819a0a22520fcb91649b168cf"
        ],
        [
            "apply H; clear H; intros z H H1; apply H; clear H.",
            "VernacExtend",
            "cf345318dac217fc7cb3ea32e1e70636690be9de"
        ],
        [
            "intros n m H2 H3 Hn Hm H4.",
            "VernacExtend",
            "01f55cb0f70f9969399a4da941ba6f5d3cf38149"
        ],
        [
            "generalize (eq_sym _ _ _ (eq_some_some _ _ _ H2)); intro H5.",
            "VernacExtend",
            "43b90355ee570e4814f4ca31a4f801e1622e7b2d"
        ],
        [
            "apply (lt_n_O m (H5 (lt m) H4)).",
            "VernacExtend",
            "64b68757f6955802af86a44bbd88a4cb136058a2"
        ],
        [
            "intros n H2 H3 Hn; apply (eq_some_none _ _ H2).",
            "VernacExtend",
            "86b70facc0be599b712c1bfd00bde780943ec25a"
        ],
        [
            "apply H; clear H; intros u H H1; apply H.",
            "VernacExtend",
            "0247374310f5d980763200c8539cac0897b182b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma OMEGA_SUCC : forall n : nat, wf_nat n -> EQV (opt nat) OMEGA (some nat (S n)) (opt (opt nat)) (SUCC (opt nat) OMEGA (some nat n)) (none (opt nat)).",
            "VernacStartTheoremProof",
            "d8f8a36ba5088576bf2c519d4232922951c16f3c"
        ],
        [
            "intros n Hn; apply extensionality; unfold SUB in |- *; intros X A a H.",
            "VernacExtend",
            "a97aae40bcb20e5880c88f53fcb03637764aa07a"
        ],
        [
            "apply H; clear H; intros z H H1; apply H; clear H.",
            "VernacExtend",
            "cf345318dac217fc7cb3ea32e1e70636690be9de"
        ],
        [
            "intros n0 m H H2 Hn0 Hm H3.",
            "VernacExtend",
            "fab9417056e1a0839d8b99ff96bbfa702180c0c1"
        ],
        [
            "generalize (eq_sym _ _ _ (eq_some_some _ _ _ H)); clear H; intro H.",
            "VernacExtend",
            "4e17fcf8e6379f27d6042ee9ef065734837a05f3"
        ],
        [
            "generalize (H (lt m) H3); clear H H3 Hn0 n0; intro H3.",
            "VernacExtend",
            "85fc61aa3bf06b760a1f308e2accc0c80ec4af9a"
        ],
        [
            "apply (lt_n_Sm m Hm n Hn H3); clear H3; intro H3.",
            "VernacExtend",
            "5f51a5a901a3f887d8dc184dc2b23a03669013c9"
        ],
        [
            "apply SUCC_intro1; apply ELT_intro with (some nat m).",
            "VernacExtend",
            "0b8bf6faedb94aa36daa4205839e8b33625fb82b"
        ],
        [
            "exact (OMEGA_in m Hm n Hn H3).",
            "VernacExtend",
            "5cd555bfc13cf435130f9cfa5700758e7b29d726"
        ],
        [
            "apply H2; assumption.",
            "VernacExtend",
            "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
        ],
        [
            "apply ELT_compat_l with (opt nat) OMEGA (some nat n).",
            "VernacExtend",
            "cf9b51eb96b65c8f92275aeecd11aba46f2f6ff8"
        ],
        [
            "apply H3; apply H2; assumption.",
            "VernacExtend",
            "4091462b35349d7aff500c102573f24e35ca5d61"
        ],
        [
            "apply SUCC_intro2.",
            "VernacExtend",
            "e360d0a2c68f692c4c26a5472cc4beccd97f63ca"
        ],
        [
            "intros m H H2 Hm; apply (eq_some_none _ _ H).",
            "VernacExtend",
            "cbc2c2e5b020a9dd8280735998348cc3eae8132d"
        ],
        [
            "apply (SUCC_elim _ _ _ _ _ _ H); clear H; intro H.",
            "VernacExtend",
            "deb26f42ee2c353438e62e36d95d612c5bbd1be0"
        ],
        [
            "apply H; clear H; intros z H H1; apply H; clear H.",
            "VernacExtend",
            "cf345318dac217fc7cb3ea32e1e70636690be9de"
        ],
        [
            "intros n0 m H H2 Hn0 Hm H3.",
            "VernacExtend",
            "fab9417056e1a0839d8b99ff96bbfa702180c0c1"
        ],
        [
            "generalize (eq_sym _ _ _ (eq_some_some _ _ _ H)); clear H; intro H.",
            "VernacExtend",
            "4e17fcf8e6379f27d6042ee9ef065734837a05f3"
        ],
        [
            "generalize (H (lt m) H3); clear H H3 Hn0 n0; intro H3.",
            "VernacExtend",
            "85fc61aa3bf06b760a1f308e2accc0c80ec4af9a"
        ],
        [
            "apply ELT_intro with (some nat m).",
            "VernacExtend",
            "0f6040bf4d8543fe566bf95d562224891706f668"
        ],
        [
            "exact (OMEGA_in m Hm (S n) (wf_nat_S n Hn) (lt_S m n H3)).",
            "VernacExtend",
            "710899c082bb77fb07ddbaed84dd098e342b3ae3"
        ],
        [
            "apply H2; assumption.",
            "VernacExtend",
            "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
        ],
        [
            "intros m H H2 Hm; apply (eq_some_none _ _ H).",
            "VernacExtend",
            "cbc2c2e5b020a9dd8280735998348cc3eae8132d"
        ],
        [
            "apply ELT_intro with (some nat n).",
            "VernacExtend",
            "d9f3837d6adda42f2f7339f0486b7d2b6e3908f2"
        ],
        [
            "exact (OMEGA_in n Hn (S n) (wf_nat_S n Hn) (lt_n_Sn n)).",
            "VernacExtend",
            "4020aaf6479134d82bdcf1885ee4a4dcd52f3b4a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem omega_zero : ELT unit ZERO id (opt nat) OMEGA (none nat).",
            "VernacStartTheoremProof",
            "d092f13e579e362f2cfcdda6e9101384db6ba86d"
        ],
        [
            "apply ELT_intro with (some nat O).",
            "VernacExtend",
            "6d1930ed461e8dd1a6c9c2bb8020090c033c4cb8"
        ],
        [
            "exact (OMEGA_rt O wf_nat_O).",
            "VernacExtend",
            "83f0a89aa232b2c70e83dc5dfebf9d069a40f7ee"
        ],
        [
            "apply EQV_sym; exact OMEGA_ZERO.",
            "VernacExtend",
            "3b29bbddd4b56f80f14d56a1c89116b9af7be14a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem omega_succ : forall (X : Typ1) (A : Rel X) (a : X), ELT X A a (opt nat) OMEGA (none nat) -> ELT (opt X) (SUCC X A a) (none X) (opt nat) OMEGA (none nat).",
            "VernacStartTheoremProof",
            "3c9a7493981060bd71b06f119c6b0971cef713d7"
        ],
        [
            "intros X A a H; apply H; clear H; intros z H H1; apply H; clear H.",
            "VernacExtend",
            "d730698b08ded8ce5ff8d852b9f7482ad0be1038"
        ],
        [
            "intros n m H H2 Hn Hm H3; apply (eq_none_some _ _ H).",
            "VernacExtend",
            "b53f4121052b51ac1e58e05628f99dfbc51d563e"
        ],
        [
            "intros n H0 H Hn; apply ELT_intro with (some nat (S n)).",
            "VernacExtend",
            "9d545117a5ea3ff9006b1896f9bc0a07782a8cbc"
        ],
        [
            "exact (OMEGA_rt (S n) (wf_nat_S n Hn)).",
            "VernacExtend",
            "ccc9881a560bd1ae516626555e4022adeb4583a6"
        ],
        [
            "apply EQV_trans with (opt (opt nat)) (SUCC (opt nat) OMEGA (some nat n)) (none (opt nat)).",
            "VernacExtend",
            "9cdc5ed52a736a190dd40164512b40b93a4b0992"
        ],
        [
            "apply SUCC_compat; apply H; assumption.",
            "VernacExtend",
            "168a4acc0c1ef2fa5099bf8629b9769cb50f6cfb"
        ],
        [
            "apply EQV_sym; apply OMEGA_SUCC; assumption.",
            "VernacExtend",
            "dcaa769e206db23df0e3a51763aeb4cdb7fa6c2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import IZF_select.",
            "VernacRequire",
            "f30dc64bffe0c7731b71d5482c73a3799dfbf89a"
        ],
        [
            "Theorem omega_ind : forall P : PRED, Compat P -> P unit ZERO id -> (forall (X : Typ1) (A : Rel X) (a : X), ELT X A a (opt nat) OMEGA (none nat) -> P X A a -> P (opt X) (SUCC X A a) (none X)) -> forall (X : Typ1) (A : Rel X) (a : X), ELT X A a (opt nat) OMEGA (none nat) -> P X A a.",
            "VernacStartTheoremProof",
            "5b9d1ffde40bce59daba650ca006f13efbe4824a"
        ],
        [
            "intros P HP HO HS X A a H; apply H; clear H.",
            "VernacExtend",
            "9540e36e86ffbc50bb20e9c928041c95c23fa56e"
        ],
        [
            "intros z H H1; apply H; clear H.",
            "VernacExtend",
            "87eaa6ae44c85c43c679d5a5e723acfd99259426"
        ],
        [
            "intros n m H H2 Hn Hm H3; apply (eq_none_some _ _ H).",
            "VernacExtend",
            "b53f4121052b51ac1e58e05628f99dfbc51d563e"
        ],
        [
            "intros n H0 H Hn; clear H0.",
            "VernacExtend",
            "ec08c1f28fde344d5420eddc32589bcc82d66798"
        ],
        [
            "apply (HP _ _ _ _ _ _ (EQV_sym _ _ _ _ _ _ H1)).",
            "VernacExtend",
            "63acc42ff6def43c16d5af4539b027fa3f9c5619"
        ],
        [
            "apply (eq_sym _ _ _ H); clear H H1 a A X z.",
            "VernacExtend",
            "058ab3181d0680cc23ed75a6c552172fd116dabe"
        ],
        [
            "apply (nat_ind' n Hn); clear Hn n.",
            "VernacExtend",
            "f788f883de046c5f51babad24ef0a7df0c15a728"
        ],
        [
            "apply HP with unit ZERO id.",
            "VernacExtend",
            "54597c592685247ec16a0bcbc1bc204eb51a0b65"
        ],
        [
            "apply EQV_sym; exact OMEGA_ZERO.",
            "VernacExtend",
            "3b29bbddd4b56f80f14d56a1c89116b9af7be14a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros n Hn Hind.",
            "VernacExtend",
            "939cd906f0bde46219b39ee778ede712cd04d4a8"
        ],
        [
            "apply HP with (opt (opt nat)) (SUCC (opt nat) OMEGA (some nat n)) (none (opt nat)).",
            "VernacExtend",
            "ed1e4ec2fa3b75776adac23cf6a6d91a02a0cf74"
        ],
        [
            "apply EQV_sym; apply OMEGA_SUCC; assumption.",
            "VernacExtend",
            "dcaa769e206db23df0e3a51763aeb4cdb7fa6c2d"
        ],
        [
            "apply HS.",
            "VernacExtend",
            "56757ef3b42e00f0eb90c6fbbc9c7f9b85de5ade"
        ],
        [
            "apply ELT_direct; apply OMEGA_rt; assumption.",
            "VernacExtend",
            "4627dec92e9e8c36cc5261cfff61b61524c7e282"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "ZERO_elim",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros X A a H; apply H.",
                        "VernacExtend",
                        "0de9c2a742affab52119cf7aecfdaec7c67f8d02"
                    ]
                },
                {
                    "command": [
                        "intros b' H1 H2; exact H1.",
                        "VernacExtend",
                        "4893ca98bbc7270314a7abeb2c9fb7c2e4132de3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SUCC_deloc",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros X A a; unfold deloc in |- *; apply and_intro.",
                        "VernacExtend",
                        "f5d5a900b2e07820018b6c2f5d7f4355c7de69c9"
                    ]
                },
                {
                    "command": [
                        "intros; apply SUCC_in; assumption.",
                        "VernacExtend",
                        "68be763d6e114d070e592cd7899462df0e353874"
                    ]
                },
                {
                    "command": [
                        "intros x y' H; apply H; clear H.",
                        "VernacExtend",
                        "29baa1ed1c635c0c7042b6afc57fe6d950ad2170"
                    ]
                },
                {
                    "command": [
                        "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
                        "VernacExtend",
                        "531bd998731a33ec53ad7d08b7dcc02044dd660a"
                    ]
                },
                {
                    "command": [
                        "apply (eq_sym _ _ _ (eq_some_some X x x0 H1)); assumption.",
                        "VernacExtend",
                        "6ab9953331ed110db6a36a7e15562aa32c1df5cd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros x' H1 H2 H3; apply (eq_some_none _ _ H1).",
                        "VernacExtend",
                        "43b7adc4a9b004b53299fdd574e9585f5498d8dd"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; apply (eq_some_none _ _ H1).",
                        "VernacExtend",
                        "076065650258df16081f113dde398038709bd478"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SUCC_eqv",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros X A a x; apply EQV_deloc; apply SUCC_deloc.",
                        "VernacExtend",
                        "b97eee857303df14b466a2342ac3d059d6efad6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SUCC_intro1",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b H; apply H; clear H; intros a' H1 H2.",
                        "VernacExtend",
                        "0a4c280245eb434eea4c9a3991b6cb9fa8409147"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with (some X a').",
                        "VernacExtend",
                        "8a1bbb0dfcf8f278ce35455ce08b33bf1d1cd719"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_rt1; assumption.",
                        "VernacExtend",
                        "547347dff50adb1e7ae0e06b849fcaeb40d36522"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with X A a'.",
                        "VernacExtend",
                        "54e4a71adaa63d6c4dd37a4c80284712c4228bca"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_eqv.",
                        "VernacExtend",
                        "db0ee35ab8050f18b11cf810e987a809a6cc2e54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SUCC_intro2",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros X A a; apply ELT_intro with (some X a).",
                        "VernacExtend",
                        "8826fcc2856891e420f9cb1ac75351c80d6656b7"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_rt2.",
                        "VernacExtend",
                        "aa8b16c49812bc4cea73ee6d0a3cf2243eb3211a"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_eqv.",
                        "VernacExtend",
                        "db0ee35ab8050f18b11cf810e987a809a6cc2e54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SUCC_elim",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b H; apply H; clear H.",
                        "VernacExtend",
                        "2ffeb1f613c0f10a4c2fe1c187e76670ab0e5bd3"
                    ]
                },
                {
                    "command": [
                        "intros z' H H1; apply H; clear H.",
                        "VernacExtend",
                        "53033807b8478f49a3a96890ac4b02f7625af6b8"
                    ]
                },
                {
                    "command": [
                        "intros x x' H2 H3 H4; apply (eq_none_some _ _ H2).",
                        "VernacExtend",
                        "fe73384fe07d62fbc72a706fbfd45db51583b1a7"
                    ]
                },
                {
                    "command": [
                        "intros x' H2 H3 H4; apply or_inl; apply ELT_intro with x'.",
                        "VernacExtend",
                        "dea634d386dca9ef52c40155dbd43914c658dabd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with (opt X) (SUCC X A a) (some X x').",
                        "VernacExtend",
                        "b25b7775835fa6c68cff749153b45c6cd1142c50"
                    ]
                },
                {
                    "command": [
                        "apply H3; assumption.",
                        "VernacExtend",
                        "5797d1cfc3adb7c1e34d2f0d332d89f950d72fea"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; apply SUCC_eqv.",
                        "VernacExtend",
                        "f6cabe0acc9a23e97e67e066ce80b17aff137658"
                    ]
                },
                {
                    "command": [
                        "intros H2 H3; apply or_inr.",
                        "VernacExtend",
                        "07c5845025634b28929992c00cf8df0e495e56a6"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with (opt X) (SUCC X A a) (some X a).",
                        "VernacExtend",
                        "90adc29d4d082cc5125eeb9bcaafeef2f613649d"
                    ]
                },
                {
                    "command": [
                        "apply H3; assumption.",
                        "VernacExtend",
                        "5797d1cfc3adb7c1e34d2f0d332d89f950d72fea"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; apply SUCC_eqv.",
                        "VernacExtend",
                        "f6cabe0acc9a23e97e67e066ce80b17aff137658"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "successor",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b; unfold iff in |- *.",
                        "VernacExtend",
                        "3f64f192c9b524c3fb3f61dbc17dae1525ce6731"
                    ]
                },
                {
                    "command": [
                        "apply and_intro; intro H.",
                        "VernacExtend",
                        "680fbfdc287e87ba6286cf94143db61aeccb2967"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_elim; assumption.",
                        "VernacExtend",
                        "fcdefce4c6c7ee54069ca56dbc04a970457618b2"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; intro H.",
                        "VernacExtend",
                        "b8ff445ea471378ecb8bff0401dd73e8e8538364"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_intro1; assumption.",
                        "VernacExtend",
                        "e69baf6980be7cf713de1e1b86ef9db58af4f10e"
                    ]
                },
                {
                    "command": [
                        "apply ELT_compat_l with X A a.",
                        "VernacExtend",
                        "b950bb760ca8b6e2f7374ab98461ca5c482e1966"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_intro2.",
                        "VernacExtend",
                        "e360d0a2c68f692c4c26a5472cc4beccd97f63ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SUCC_compat",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "cut (forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), EQV X A a Y B b -> SUB (opt X) (SUCC X A a) (none X) (opt Y) (SUCC Y B b) (none Y)).",
                        "VernacExtend",
                        "bfbe14b601e3651cd9fa6b58fb2e01721da69821"
                    ]
                },
                {
                    "command": [
                        "intros H X A a Y B b H1; apply extensionality.",
                        "VernacExtend",
                        "dd319bc5989ec2dbde0a9e5bcd2bac3acf635f44"
                    ]
                },
                {
                    "command": [
                        "apply H; assumption.",
                        "VernacExtend",
                        "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
                    ]
                },
                {
                    "command": [
                        "apply H; apply EQV_sym; assumption.",
                        "VernacExtend",
                        "afe2cbc79a5afd2cd6f5f401dc141c946d30904f"
                    ]
                },
                {
                    "command": [
                        "unfold SUB in |- *; intros X A a Y B b H Z C c H1.",
                        "VernacExtend",
                        "20fef7cb9d83ca5fd742b1e4724d71c3219ef2fa"
                    ]
                },
                {
                    "command": [
                        "apply (SUCC_elim X A a Z C c H1); clear H1; intro H1.",
                        "VernacExtend",
                        "ebc75b45b0a9f69629da61fd64181911df6f959a"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_intro1; apply ELT_compat_r with X A a; assumption.",
                        "VernacExtend",
                        "d360ce4151a7228f01b17212e334a32e42b55a89"
                    ]
                },
                {
                    "command": [
                        "apply ELT_compat_l with Y B b.",
                        "VernacExtend",
                        "cd2dcf82c7342fefd94cf82264bc0d80754e27cc"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with X A a; assumption.",
                        "VernacExtend",
                        "1c1cff1dba5c1116520069aa31dd2202916a9c5b"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_intro2.",
                        "VernacExtend",
                        "e360d0a2c68f692c4c26a5472cc4beccd97f63ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OMEGA_ZERO",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "apply extensionality; unfold SUB in |- *; intros X A a H.",
                        "VernacExtend",
                        "0bf9be705dbe6d6819a0a22520fcb91649b168cf"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; intros z H H1; apply H; clear H.",
                        "VernacExtend",
                        "cf345318dac217fc7cb3ea32e1e70636690be9de"
                    ]
                },
                {
                    "command": [
                        "intros n m H2 H3 Hn Hm H4.",
                        "VernacExtend",
                        "01f55cb0f70f9969399a4da941ba6f5d3cf38149"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_sym _ _ _ (eq_some_some _ _ _ H2)); intro H5.",
                        "VernacExtend",
                        "43b90355ee570e4814f4ca31a4f801e1622e7b2d"
                    ]
                },
                {
                    "command": [
                        "apply (lt_n_O m (H5 (lt m) H4)).",
                        "VernacExtend",
                        "64b68757f6955802af86a44bbd88a4cb136058a2"
                    ]
                },
                {
                    "command": [
                        "intros n H2 H3 Hn; apply (eq_some_none _ _ H2).",
                        "VernacExtend",
                        "86b70facc0be599b712c1bfd00bde780943ec25a"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; intros u H H1; apply H.",
                        "VernacExtend",
                        "0247374310f5d980763200c8539cac0897b182b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OMEGA_SUCC",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros n Hn; apply extensionality; unfold SUB in |- *; intros X A a H.",
                        "VernacExtend",
                        "a97aae40bcb20e5880c88f53fcb03637764aa07a"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; intros z H H1; apply H; clear H.",
                        "VernacExtend",
                        "cf345318dac217fc7cb3ea32e1e70636690be9de"
                    ]
                },
                {
                    "command": [
                        "intros n0 m H H2 Hn0 Hm H3.",
                        "VernacExtend",
                        "fab9417056e1a0839d8b99ff96bbfa702180c0c1"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_sym _ _ _ (eq_some_some _ _ _ H)); clear H; intro H.",
                        "VernacExtend",
                        "4e17fcf8e6379f27d6042ee9ef065734837a05f3"
                    ]
                },
                {
                    "command": [
                        "generalize (H (lt m) H3); clear H H3 Hn0 n0; intro H3.",
                        "VernacExtend",
                        "85fc61aa3bf06b760a1f308e2accc0c80ec4af9a"
                    ]
                },
                {
                    "command": [
                        "apply (lt_n_Sm m Hm n Hn H3); clear H3; intro H3.",
                        "VernacExtend",
                        "5f51a5a901a3f887d8dc184dc2b23a03669013c9"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_intro1; apply ELT_intro with (some nat m).",
                        "VernacExtend",
                        "0b8bf6faedb94aa36daa4205839e8b33625fb82b"
                    ]
                },
                {
                    "command": [
                        "exact (OMEGA_in m Hm n Hn H3).",
                        "VernacExtend",
                        "5cd555bfc13cf435130f9cfa5700758e7b29d726"
                    ]
                },
                {
                    "command": [
                        "apply H2; assumption.",
                        "VernacExtend",
                        "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
                    ]
                },
                {
                    "command": [
                        "apply ELT_compat_l with (opt nat) OMEGA (some nat n).",
                        "VernacExtend",
                        "cf9b51eb96b65c8f92275aeecd11aba46f2f6ff8"
                    ]
                },
                {
                    "command": [
                        "apply H3; apply H2; assumption.",
                        "VernacExtend",
                        "4091462b35349d7aff500c102573f24e35ca5d61"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_intro2.",
                        "VernacExtend",
                        "e360d0a2c68f692c4c26a5472cc4beccd97f63ca"
                    ]
                },
                {
                    "command": [
                        "intros m H H2 Hm; apply (eq_some_none _ _ H).",
                        "VernacExtend",
                        "cbc2c2e5b020a9dd8280735998348cc3eae8132d"
                    ]
                },
                {
                    "command": [
                        "apply (SUCC_elim _ _ _ _ _ _ H); clear H; intro H.",
                        "VernacExtend",
                        "deb26f42ee2c353438e62e36d95d612c5bbd1be0"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; intros z H H1; apply H; clear H.",
                        "VernacExtend",
                        "cf345318dac217fc7cb3ea32e1e70636690be9de"
                    ]
                },
                {
                    "command": [
                        "intros n0 m H H2 Hn0 Hm H3.",
                        "VernacExtend",
                        "fab9417056e1a0839d8b99ff96bbfa702180c0c1"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_sym _ _ _ (eq_some_some _ _ _ H)); clear H; intro H.",
                        "VernacExtend",
                        "4e17fcf8e6379f27d6042ee9ef065734837a05f3"
                    ]
                },
                {
                    "command": [
                        "generalize (H (lt m) H3); clear H H3 Hn0 n0; intro H3.",
                        "VernacExtend",
                        "85fc61aa3bf06b760a1f308e2accc0c80ec4af9a"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with (some nat m).",
                        "VernacExtend",
                        "0f6040bf4d8543fe566bf95d562224891706f668"
                    ]
                },
                {
                    "command": [
                        "exact (OMEGA_in m Hm (S n) (wf_nat_S n Hn) (lt_S m n H3)).",
                        "VernacExtend",
                        "710899c082bb77fb07ddbaed84dd098e342b3ae3"
                    ]
                },
                {
                    "command": [
                        "apply H2; assumption.",
                        "VernacExtend",
                        "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
                    ]
                },
                {
                    "command": [
                        "intros m H H2 Hm; apply (eq_some_none _ _ H).",
                        "VernacExtend",
                        "cbc2c2e5b020a9dd8280735998348cc3eae8132d"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with (some nat n).",
                        "VernacExtend",
                        "d9f3837d6adda42f2f7339f0486b7d2b6e3908f2"
                    ]
                },
                {
                    "command": [
                        "exact (OMEGA_in n Hn (S n) (wf_nat_S n Hn) (lt_n_Sn n)).",
                        "VernacExtend",
                        "4020aaf6479134d82bdcf1885ee4a4dcd52f3b4a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "omega_zero",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "apply ELT_intro with (some nat O).",
                        "VernacExtend",
                        "6d1930ed461e8dd1a6c9c2bb8020090c033c4cb8"
                    ]
                },
                {
                    "command": [
                        "exact (OMEGA_rt O wf_nat_O).",
                        "VernacExtend",
                        "83f0a89aa232b2c70e83dc5dfebf9d069a40f7ee"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; exact OMEGA_ZERO.",
                        "VernacExtend",
                        "3b29bbddd4b56f80f14d56a1c89116b9af7be14a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "omega_succ",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros X A a H; apply H; clear H; intros z H H1; apply H; clear H.",
                        "VernacExtend",
                        "d730698b08ded8ce5ff8d852b9f7482ad0be1038"
                    ]
                },
                {
                    "command": [
                        "intros n m H H2 Hn Hm H3; apply (eq_none_some _ _ H).",
                        "VernacExtend",
                        "b53f4121052b51ac1e58e05628f99dfbc51d563e"
                    ]
                },
                {
                    "command": [
                        "intros n H0 H Hn; apply ELT_intro with (some nat (S n)).",
                        "VernacExtend",
                        "9d545117a5ea3ff9006b1896f9bc0a07782a8cbc"
                    ]
                },
                {
                    "command": [
                        "exact (OMEGA_rt (S n) (wf_nat_S n Hn)).",
                        "VernacExtend",
                        "ccc9881a560bd1ae516626555e4022adeb4583a6"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with (opt (opt nat)) (SUCC (opt nat) OMEGA (some nat n)) (none (opt nat)).",
                        "VernacExtend",
                        "9cdc5ed52a736a190dd40164512b40b93a4b0992"
                    ]
                },
                {
                    "command": [
                        "apply SUCC_compat; apply H; assumption.",
                        "VernacExtend",
                        "168a4acc0c1ef2fa5099bf8629b9769cb50f6cfb"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; apply OMEGA_SUCC; assumption.",
                        "VernacExtend",
                        "dcaa769e206db23df0e3a51763aeb4cdb7fa6c2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "omega_ind",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros P HP HO HS X A a H; apply H; clear H.",
                        "VernacExtend",
                        "9540e36e86ffbc50bb20e9c928041c95c23fa56e"
                    ]
                },
                {
                    "command": [
                        "intros z H H1; apply H; clear H.",
                        "VernacExtend",
                        "87eaa6ae44c85c43c679d5a5e723acfd99259426"
                    ]
                },
                {
                    "command": [
                        "intros n m H H2 Hn Hm H3; apply (eq_none_some _ _ H).",
                        "VernacExtend",
                        "b53f4121052b51ac1e58e05628f99dfbc51d563e"
                    ]
                },
                {
                    "command": [
                        "intros n H0 H Hn; clear H0.",
                        "VernacExtend",
                        "ec08c1f28fde344d5420eddc32589bcc82d66798"
                    ]
                },
                {
                    "command": [
                        "apply (HP _ _ _ _ _ _ (EQV_sym _ _ _ _ _ _ H1)).",
                        "VernacExtend",
                        "63acc42ff6def43c16d5af4539b027fa3f9c5619"
                    ]
                },
                {
                    "command": [
                        "apply (eq_sym _ _ _ H); clear H H1 a A X z.",
                        "VernacExtend",
                        "058ab3181d0680cc23ed75a6c552172fd116dabe"
                    ]
                },
                {
                    "command": [
                        "apply (nat_ind' n Hn); clear Hn n.",
                        "VernacExtend",
                        "f788f883de046c5f51babad24ef0a7df0c15a728"
                    ]
                },
                {
                    "command": [
                        "apply HP with unit ZERO id.",
                        "VernacExtend",
                        "54597c592685247ec16a0bcbc1bc204eb51a0b65"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; exact OMEGA_ZERO.",
                        "VernacExtend",
                        "3b29bbddd4b56f80f14d56a1c89116b9af7be14a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros n Hn Hind.",
                        "VernacExtend",
                        "939cd906f0bde46219b39ee778ede712cd04d4a8"
                    ]
                },
                {
                    "command": [
                        "apply HP with (opt (opt nat)) (SUCC (opt nat) OMEGA (some nat n)) (none (opt nat)).",
                        "VernacExtend",
                        "ed1e4ec2fa3b75776adac23cf6a6d91a02a0cf74"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; apply OMEGA_SUCC; assumption.",
                        "VernacExtend",
                        "dcaa769e206db23df0e3a51763aeb4cdb7fa6c2d"
                    ]
                },
                {
                    "command": [
                        "apply HS.",
                        "VernacExtend",
                        "56757ef3b42e00f0eb90c6fbbc9c7f9b85de5ade"
                    ]
                },
                {
                    "command": [
                        "apply ELT_direct; apply OMEGA_rt; assumption.",
                        "VernacExtend",
                        "4627dec92e9e8c36cc5261cfff61b61524c7e282"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}