{
    "filename": "IZF_power.v",
    "coq_project": "izf",
    "vernac_cmds": [
        [
            "Require Import IZF_logic.",
            "VernacRequire",
            "52d6015de36734d60c1a42214bb9167237caee73"
        ],
        [
            "Require Import IZF_base.",
            "VernacRequire",
            "cf80f06c6c174ef99f7aece7927143ff2e0e96f9"
        ],
        [
            "Definition POWER (X : Typ1) (A : Rel X) (a : X) (z' z : sum X (X -> Prop)) := forall E : Prop, (forall x x' : X, eq (sum X (X -> Prop)) z' (inl X (X -> Prop) x') -> eq (sum X (X -> Prop)) z (inl X (X -> Prop) x) -> A x' x -> E) -> (forall (x' : X) (p : X -> Prop), eq (sum X (X -> Prop)) z' (inl X (X -> Prop) x') -> eq (sum X (X -> Prop)) z (inr X (X -> Prop) p) -> A x' a -> p x' -> E) -> (forall p : X -> Prop, eq (sum X (X -> Prop)) z' (inr X (X -> Prop) p) -> eq (sum X (X -> Prop)) z (out X (X -> Prop)) -> E) -> E.",
            "VernacDefinition",
            "f271553dcbac9ef834d58e8e76afff1f915fbaed"
        ],
        [
            "Lemma POWER_in1 : forall (X : Typ1) (A : Rel X) (a x x' : X), A x' x -> POWER X A a (inl X (X -> Prop) x') (inl X (X -> Prop) x).",
            "VernacStartTheoremProof",
            "c02f7043f7547a24967741daef7ffd1a25e606db"
        ],
        [
            "Proof fun X A a x x' H E e _ _ => e x x' (eq_refl (sum X (X -> Prop)) (inl X (X -> Prop) x')) (eq_refl (sum X (X -> Prop)) (inl X (X -> Prop) x)) H.",
            "VernacExactProof",
            "0b38bc87953782fadee8c06274f6d28f97c6d646"
        ],
        [
            "Lemma POWER_in2 : forall (X : Typ1) (A : Rel X) (a x' : X) (p : X -> Prop), A x' a -> p x' -> POWER X A a (inl X (X -> Prop) x') (inr X (X -> Prop) p).",
            "VernacStartTheoremProof",
            "f38346209dd995b25f514be0fb4d886e8e15dbe6"
        ],
        [
            "Proof fun X A a x' p H1 H2 E _ e _ => e x' p (eq_refl (sum X (X -> Prop)) (inl X (X -> Prop) x')) (eq_refl (sum X (X -> Prop)) (inr X (X -> Prop) p)) H1 H2.",
            "VernacExactProof",
            "0b17b99a91b77694c3a86b40419342b90675e0c4"
        ],
        [
            "Lemma POWER_rt : forall (X : Typ1) (A : Rel X) (a : X) (p : X -> Prop), POWER X A a (inr X (X -> Prop) p) (out X (X -> Prop)).",
            "VernacStartTheoremProof",
            "af65ee420f1a8624b4bf4495c616042de3219519"
        ],
        [
            "Proof fun X A a p E _ _ e => e p (eq_refl (sum X (X -> Prop)) (inr X (X -> Prop) p)) (eq_refl (sum X (X -> Prop)) (out X (X -> Prop))).",
            "VernacExactProof",
            "21cfa9ef69c027f398cfa2d6ff88fb70626dd71e"
        ],
        [
            "Lemma POWER_deloc : forall (X : Typ1) (A : Rel X) (a : X), deloc X A (sum X (X -> Prop)) (POWER X A a) (inl X (X -> Prop)).",
            "VernacStartTheoremProof",
            "8cd563377f525b6fac598d15636506e3084ca5e1"
        ],
        [
            "intros X A a; unfold deloc in |- *; apply and_intro.",
            "VernacExtend",
            "f5d5a900b2e07820018b6c2f5d7f4355c7de69c9"
        ],
        [
            "exact (POWER_in1 X A a).",
            "VernacExtend",
            "a1330aa07b32e06640c93913ba6e18a5b821d448"
        ],
        [
            "intros x y' H; apply H; clear H.",
            "VernacExtend",
            "29baa1ed1c635c0c7042b6afc57fe6d950ad2170"
        ],
        [
            "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
            "VernacExtend",
            "531bd998731a33ec53ad7d08b7dcc02044dd660a"
        ],
        [
            "apply (eq_sym _ _ _ (eq_inl_inl X (X -> Prop) x x0 H2)); assumption.",
            "VernacExtend",
            "9d8ca9b583d3f5166ef17226b8e14e4f937fa78b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros x' p H1 H2 H3 H4; apply (eq_inl_inr X (X -> Prop) x p H2).",
            "VernacExtend",
            "d0232b1f10ef9967b57e67e3640c16173db8f5cf"
        ],
        [
            "intros p H1 H2; apply (eq_inl_out X (X -> Prop) x H2).",
            "VernacExtend",
            "f4ea1d0fe91b7638c3e3eb72669a7f0a7aad3277"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma POWER_eqv : forall (X : Typ1) (A : Rel X) (a x : X), EQV X A x (sum X (X -> Prop)) (POWER X A a) (inl X (X -> Prop) x).",
            "VernacStartTheoremProof",
            "09201f92f517355013bdaefc8a77bfa8abfbd774"
        ],
        [
            "intros X A a x; apply EQV_deloc; apply POWER_deloc.",
            "VernacExtend",
            "af148173d3cd66cb9bec53e7827c30f2464d8c9f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma POWER_subset_eqv : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), SUB Y B b X A a -> EQV Y B b (sum X (X -> Prop)) (POWER X A a) (inr X (X -> Prop) (fun x' => and (A x' a) (ELT X A x' Y B b))).",
            "VernacStartTheoremProof",
            "37d2a8473e2d4a9026dd97728f036de365972b67"
        ],
        [
            "intros X A a Y B b H1; apply extensionality.",
            "VernacExtend",
            "566ab06379d7a88a631bf99b3e56e546ca5db17e"
        ],
        [
            "unfold SUB in |- *; intros Z C c H2.",
            "VernacExtend",
            "7126a4d50c8094e6abc1f2a7979f98d68f9722bd"
        ],
        [
            "apply (H1 Z C c H2); intros x' H3 H4.",
            "VernacExtend",
            "7310831c9a1af0c045be78fec4df03add39e7587"
        ],
        [
            "apply ELT_intro with (inl X (X -> Prop) x').",
            "VernacExtend",
            "dc4f8ddf6c550e75abcfc7dfe887664d0ae04ca8"
        ],
        [
            "apply POWER_in2.",
            "VernacExtend",
            "6b6917f66a01ca249c3954d73289288f8a8f95c2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply and_intro.",
            "VernacExtend",
            "7f2fc5fa647da214c009ccac462775941c432d9e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply ELT_compat_l with Z C c.",
            "VernacExtend",
            "d31011d9cb534ca410a25ed90ba204b1c8d0811e"
        ],
        [
            "apply EQV_sym; assumption.",
            "VernacExtend",
            "57e40075ac4f9f2cf160e5b97f74e59cdea2ba77"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply EQV_trans with X A x'.",
            "VernacExtend",
            "4193bf1f73c3b9205db3bb163a29665eb3c5b16f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply POWER_eqv; assumption.",
            "VernacExtend",
            "bfd70bab9eda2805761b746b9be9c44427ab36b5"
        ],
        [
            "unfold SUB in |- *; intros Z C c H2; apply H2; clear H2.",
            "VernacExtend",
            "dba6711126d67a03832dc9c79311058db153712d"
        ],
        [
            "intros z H2 H3; apply H2; clear H2.",
            "VernacExtend",
            "12c246ad1d7ecef06c13d9f5b26a37af465ba4b4"
        ],
        [
            "intros x x' H4 H5 H6; apply (eq_inr_inl _ _ _ _ H5).",
            "VernacExtend",
            "171a2edee9d536ae13a2c46030f8f84034bdfc3a"
        ],
        [
            "intros x' p H4 H5 H6 H7; generalize (eq_inr_inr _ _ _ _ H5); intro H8.",
            "VernacExtend",
            "b25c5872de5800990c8f38444f2d7fd6a7abc41d"
        ],
        [
            "generalize (eq_sym _ _ _ H8 (fun q => q x') H7); clear H8; intro H8.",
            "VernacExtend",
            "aab1b16d70dfb18ed5fed291ee491680dc3cdc92"
        ],
        [
            "apply H8; clear H8; intros H8 H9; apply ELT_compat_l with X A x'.",
            "VernacExtend",
            "c4e0a0c44f6c450bf30fe79b640d05f93c857fbc"
        ],
        [
            "apply EQV_trans with (sum X (X -> Prop)) (POWER X A a) (inl X (X -> Prop) x').",
            "VernacExtend",
            "dd26c4487125d962a988e751ddbe9e2417ae08d4"
        ],
        [
            "apply H4; assumption.",
            "VernacExtend",
            "ed2481e3b356eac580ff85aa054528aba71fc300"
        ],
        [
            "apply EQV_sym; apply POWER_eqv.",
            "VernacExtend",
            "27d026df86dd1b000077d3dbe66eba6281c1e8cf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros p H4 H5; apply (eq_inr_out _ _ _ H5).",
            "VernacExtend",
            "cb9a783cc9da29b1713e9dc624bcb34e8b251863"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerset_intro : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), SUB Y B b X A a -> ELT Y B b (sum X (X -> Prop)) (POWER X A a) (out X (X -> Prop)).",
            "VernacStartTheoremProof",
            "35e063fbf5215722498bd7fc61eda9442671f318"
        ],
        [
            "intros X A a Y B b H; apply ELT_intro with (inr X (X -> Prop) (fun x' => and (A x' a) (ELT X A x' Y B b))).",
            "VernacExtend",
            "256e8fde1a21ae80d11ecb7eca82879fdb5ef1dd"
        ],
        [
            "apply POWER_rt.",
            "VernacExtend",
            "e08d131d8d8751be5f53783a9ab37005a11ee4a6"
        ],
        [
            "apply POWER_subset_eqv; assumption.",
            "VernacExtend",
            "80adae79aea40a65fbdb06ab91ba393ebd59ad7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerset_elim : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), ELT Y B b (sum X (X -> Prop)) (POWER X A a) (out X (X -> Prop)) -> SUB Y B b X A a.",
            "VernacStartTheoremProof",
            "248a9f4798b215133e5a6b8ec3c1fbb511f68bc6"
        ],
        [
            "intros X A a Y B b H; apply H; clear H.",
            "VernacExtend",
            "2ffeb1f613c0f10a4c2fe1c187e76670ab0e5bd3"
        ],
        [
            "intros z H1 H2; apply H1; clear H1.",
            "VernacExtend",
            "e4ccadcbb8c8064d6676db9d731e5599aaf1aae4"
        ],
        [
            "intros x x' H3 H4 H5; apply (eq_out_inl _ _ _ H4).",
            "VernacExtend",
            "371bb2bbbf887282c654a07f79037e8caf14775a"
        ],
        [
            "intros x' p H3 H4 H5 H6; apply (eq_out_inr _ _ _ H4).",
            "VernacExtend",
            "3b0d73c7efaef597aedb2609c5a0bef96c18c3ef"
        ],
        [
            "unfold SUB in |- *; intros p H3 H4 Z C c H5.",
            "VernacExtend",
            "9bbbb4863ff3d8440e4688f36dfccb24a147a2ff"
        ],
        [
            "apply (ELT_compat_r _ _ _ _ _ _ _ _ _ H5 H2).",
            "VernacExtend",
            "d2db3051eca358a0bcdbd5dbe82110f0919fc502"
        ],
        [
            "intros z' H6 H7; apply H6; clear H6.",
            "VernacExtend",
            "3ec7960f5b9058f5011b06e8ca3a02e248c18e60"
        ],
        [
            "intros x x' H8 H9 H10.",
            "VernacExtend",
            "6b78bba9813a1d204dfd238c7832caf2d8717fab"
        ],
        [
            "apply (eq_inl_inr _ _ _ _ (eq_trans _ _ _ _ (eq_sym _ _ _ H9) H3)).",
            "VernacExtend",
            "8350cf15e6ae2a5c903c0dc44ecc3933868d54fc"
        ],
        [
            "intros x' p0 H8 H9 H10 H11; apply ELT_intro with x'.",
            "VernacExtend",
            "af6fb57bf8a3807824ecd1a2bf0b93d83993b44c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply EQV_trans with (sum X (X -> Prop)) (POWER X A a) (inl X (X -> Prop) x').",
            "VernacExtend",
            "dd26c4487125d962a988e751ddbe9e2417ae08d4"
        ],
        [
            "apply H8; assumption.",
            "VernacExtend",
            "df19cbbb8259b05d203bfb898a30426965421383"
        ],
        [
            "apply EQV_sym; apply POWER_eqv.",
            "VernacExtend",
            "27d026df86dd1b000077d3dbe66eba6281c1e8cf"
        ],
        [
            "intros p0 H8 H9.",
            "VernacExtend",
            "f86dde3790a819ae0fef1c76c6ec9673cd4ee58f"
        ],
        [
            "apply (eq_inr_out _ _ _ (eq_trans _ _ _ _ (eq_sym _ _ _ H3) H9)).",
            "VernacExtend",
            "ad0816a1408491ccbe2b3619fbb304bb7eeeb248"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem powerset : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), iff (ELT Y B b (sum X (X -> Prop)) (POWER X A a) (out X (X -> Prop))) (SUB Y B b X A a).",
            "VernacStartTheoremProof",
            "427d1645537f41fe3d79523c23574b5f466eb25e"
        ],
        [
            "intros X A a Y B b; unfold iff in |- *; apply and_intro.",
            "VernacExtend",
            "26772039090e52a9888cacce147988c956016d66"
        ],
        [
            "intro; apply powerset_elim; assumption.",
            "VernacExtend",
            "f758eccf41fcb9afdae14ba9ab9e71234ead9e31"
        ],
        [
            "intro; apply powerset_intro; assumption.",
            "VernacExtend",
            "f8d9aea96eab9b68cd63b60a8036f03b924e58eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "POWER_deloc",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros X A a; unfold deloc in |- *; apply and_intro.",
                        "VernacExtend",
                        "f5d5a900b2e07820018b6c2f5d7f4355c7de69c9"
                    ]
                },
                {
                    "command": [
                        "exact (POWER_in1 X A a).",
                        "VernacExtend",
                        "a1330aa07b32e06640c93913ba6e18a5b821d448"
                    ]
                },
                {
                    "command": [
                        "intros x y' H; apply H; clear H.",
                        "VernacExtend",
                        "29baa1ed1c635c0c7042b6afc57fe6d950ad2170"
                    ]
                },
                {
                    "command": [
                        "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
                        "VernacExtend",
                        "531bd998731a33ec53ad7d08b7dcc02044dd660a"
                    ]
                },
                {
                    "command": [
                        "apply (eq_sym _ _ _ (eq_inl_inl X (X -> Prop) x x0 H2)); assumption.",
                        "VernacExtend",
                        "9d8ca9b583d3f5166ef17226b8e14e4f937fa78b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros x' p H1 H2 H3 H4; apply (eq_inl_inr X (X -> Prop) x p H2).",
                        "VernacExtend",
                        "d0232b1f10ef9967b57e67e3640c16173db8f5cf"
                    ]
                },
                {
                    "command": [
                        "intros p H1 H2; apply (eq_inl_out X (X -> Prop) x H2).",
                        "VernacExtend",
                        "f4ea1d0fe91b7638c3e3eb72669a7f0a7aad3277"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "POWER_eqv",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros X A a x; apply EQV_deloc; apply POWER_deloc.",
                        "VernacExtend",
                        "af148173d3cd66cb9bec53e7827c30f2464d8c9f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "POWER_subset_eqv",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b H1; apply extensionality.",
                        "VernacExtend",
                        "566ab06379d7a88a631bf99b3e56e546ca5db17e"
                    ]
                },
                {
                    "command": [
                        "unfold SUB in |- *; intros Z C c H2.",
                        "VernacExtend",
                        "7126a4d50c8094e6abc1f2a7979f98d68f9722bd"
                    ]
                },
                {
                    "command": [
                        "apply (H1 Z C c H2); intros x' H3 H4.",
                        "VernacExtend",
                        "7310831c9a1af0c045be78fec4df03add39e7587"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with (inl X (X -> Prop) x').",
                        "VernacExtend",
                        "dc4f8ddf6c550e75abcfc7dfe887664d0ae04ca8"
                    ]
                },
                {
                    "command": [
                        "apply POWER_in2.",
                        "VernacExtend",
                        "6b6917f66a01ca249c3954d73289288f8a8f95c2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply and_intro.",
                        "VernacExtend",
                        "7f2fc5fa647da214c009ccac462775941c432d9e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply ELT_compat_l with Z C c.",
                        "VernacExtend",
                        "d31011d9cb534ca410a25ed90ba204b1c8d0811e"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; assumption.",
                        "VernacExtend",
                        "57e40075ac4f9f2cf160e5b97f74e59cdea2ba77"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with X A x'.",
                        "VernacExtend",
                        "4193bf1f73c3b9205db3bb163a29665eb3c5b16f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply POWER_eqv; assumption.",
                        "VernacExtend",
                        "bfd70bab9eda2805761b746b9be9c44427ab36b5"
                    ]
                },
                {
                    "command": [
                        "unfold SUB in |- *; intros Z C c H2; apply H2; clear H2.",
                        "VernacExtend",
                        "dba6711126d67a03832dc9c79311058db153712d"
                    ]
                },
                {
                    "command": [
                        "intros z H2 H3; apply H2; clear H2.",
                        "VernacExtend",
                        "12c246ad1d7ecef06c13d9f5b26a37af465ba4b4"
                    ]
                },
                {
                    "command": [
                        "intros x x' H4 H5 H6; apply (eq_inr_inl _ _ _ _ H5).",
                        "VernacExtend",
                        "171a2edee9d536ae13a2c46030f8f84034bdfc3a"
                    ]
                },
                {
                    "command": [
                        "intros x' p H4 H5 H6 H7; generalize (eq_inr_inr _ _ _ _ H5); intro H8.",
                        "VernacExtend",
                        "b25c5872de5800990c8f38444f2d7fd6a7abc41d"
                    ]
                },
                {
                    "command": [
                        "generalize (eq_sym _ _ _ H8 (fun q => q x') H7); clear H8; intro H8.",
                        "VernacExtend",
                        "aab1b16d70dfb18ed5fed291ee491680dc3cdc92"
                    ]
                },
                {
                    "command": [
                        "apply H8; clear H8; intros H8 H9; apply ELT_compat_l with X A x'.",
                        "VernacExtend",
                        "c4e0a0c44f6c450bf30fe79b640d05f93c857fbc"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with (sum X (X -> Prop)) (POWER X A a) (inl X (X -> Prop) x').",
                        "VernacExtend",
                        "dd26c4487125d962a988e751ddbe9e2417ae08d4"
                    ]
                },
                {
                    "command": [
                        "apply H4; assumption.",
                        "VernacExtend",
                        "ed2481e3b356eac580ff85aa054528aba71fc300"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; apply POWER_eqv.",
                        "VernacExtend",
                        "27d026df86dd1b000077d3dbe66eba6281c1e8cf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros p H4 H5; apply (eq_inr_out _ _ _ H5).",
                        "VernacExtend",
                        "cb9a783cc9da29b1713e9dc624bcb34e8b251863"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerset_intro",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b H; apply ELT_intro with (inr X (X -> Prop) (fun x' => and (A x' a) (ELT X A x' Y B b))).",
                        "VernacExtend",
                        "256e8fde1a21ae80d11ecb7eca82879fdb5ef1dd"
                    ]
                },
                {
                    "command": [
                        "apply POWER_rt.",
                        "VernacExtend",
                        "e08d131d8d8751be5f53783a9ab37005a11ee4a6"
                    ]
                },
                {
                    "command": [
                        "apply POWER_subset_eqv; assumption.",
                        "VernacExtend",
                        "80adae79aea40a65fbdb06ab91ba393ebd59ad7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerset_elim",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b H; apply H; clear H.",
                        "VernacExtend",
                        "2ffeb1f613c0f10a4c2fe1c187e76670ab0e5bd3"
                    ]
                },
                {
                    "command": [
                        "intros z H1 H2; apply H1; clear H1.",
                        "VernacExtend",
                        "e4ccadcbb8c8064d6676db9d731e5599aaf1aae4"
                    ]
                },
                {
                    "command": [
                        "intros x x' H3 H4 H5; apply (eq_out_inl _ _ _ H4).",
                        "VernacExtend",
                        "371bb2bbbf887282c654a07f79037e8caf14775a"
                    ]
                },
                {
                    "command": [
                        "intros x' p H3 H4 H5 H6; apply (eq_out_inr _ _ _ H4).",
                        "VernacExtend",
                        "3b0d73c7efaef597aedb2609c5a0bef96c18c3ef"
                    ]
                },
                {
                    "command": [
                        "unfold SUB in |- *; intros p H3 H4 Z C c H5.",
                        "VernacExtend",
                        "9bbbb4863ff3d8440e4688f36dfccb24a147a2ff"
                    ]
                },
                {
                    "command": [
                        "apply (ELT_compat_r _ _ _ _ _ _ _ _ _ H5 H2).",
                        "VernacExtend",
                        "d2db3051eca358a0bcdbd5dbe82110f0919fc502"
                    ]
                },
                {
                    "command": [
                        "intros z' H6 H7; apply H6; clear H6.",
                        "VernacExtend",
                        "3ec7960f5b9058f5011b06e8ca3a02e248c18e60"
                    ]
                },
                {
                    "command": [
                        "intros x x' H8 H9 H10.",
                        "VernacExtend",
                        "6b78bba9813a1d204dfd238c7832caf2d8717fab"
                    ]
                },
                {
                    "command": [
                        "apply (eq_inl_inr _ _ _ _ (eq_trans _ _ _ _ (eq_sym _ _ _ H9) H3)).",
                        "VernacExtend",
                        "8350cf15e6ae2a5c903c0dc44ecc3933868d54fc"
                    ]
                },
                {
                    "command": [
                        "intros x' p0 H8 H9 H10 H11; apply ELT_intro with x'.",
                        "VernacExtend",
                        "af6fb57bf8a3807824ecd1a2bf0b93d83993b44c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with (sum X (X -> Prop)) (POWER X A a) (inl X (X -> Prop) x').",
                        "VernacExtend",
                        "dd26c4487125d962a988e751ddbe9e2417ae08d4"
                    ]
                },
                {
                    "command": [
                        "apply H8; assumption.",
                        "VernacExtend",
                        "df19cbbb8259b05d203bfb898a30426965421383"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; apply POWER_eqv.",
                        "VernacExtend",
                        "27d026df86dd1b000077d3dbe66eba6281c1e8cf"
                    ]
                },
                {
                    "command": [
                        "intros p0 H8 H9.",
                        "VernacExtend",
                        "f86dde3790a819ae0fef1c76c6ec9673cd4ee58f"
                    ]
                },
                {
                    "command": [
                        "apply (eq_inr_out _ _ _ (eq_trans _ _ _ _ (eq_sym _ _ _ H3) H9)).",
                        "VernacExtend",
                        "ad0816a1408491ccbe2b3619fbb304bb7eeeb248"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerset",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b; unfold iff in |- *; apply and_intro.",
                        "VernacExtend",
                        "26772039090e52a9888cacce147988c956016d66"
                    ]
                },
                {
                    "command": [
                        "intro; apply powerset_elim; assumption.",
                        "VernacExtend",
                        "f758eccf41fcb9afdae14ba9ab9e71234ead9e31"
                    ]
                },
                {
                    "command": [
                        "intro; apply powerset_intro; assumption.",
                        "VernacExtend",
                        "f8d9aea96eab9b68cd63b60a8036f03b924e58eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}