{
    "filename": "IZF_select.v",
    "coq_project": "izf",
    "vernac_cmds": [
        [
            "Require Import IZF_logic.",
            "VernacRequire",
            "52d6015de36734d60c1a42214bb9167237caee73"
        ],
        [
            "Require Import IZF_base.",
            "VernacRequire",
            "cf80f06c6c174ef99f7aece7927143ff2e0e96f9"
        ],
        [
            "Definition PRED := forall X : Typ1, Rel X -> X -> Prop.",
            "VernacDefinition",
            "a32d6bbad4444f0b1a4f01e03cd4acdfb2b72f2b"
        ],
        [
            "Definition Compat (P : PRED) : Prop := forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), EQV X A a Y B b -> P X A a -> P Y B b.",
            "VernacDefinition",
            "cae6dd623990d29e4ab878af1de8b3d43946e77a"
        ],
        [
            "Definition SELECT (X : Typ1) (A : Rel X) (a : X) (P : PRED) : Rel (opt X) := fun z' z : opt X => forall E : Prop, (forall x x' : X, eq (opt X) z (some X x) -> eq (opt X) z' (some X x') -> A x' x -> E) -> (forall x' : X, eq (opt X) z' (some X x') -> eq (opt X) z (none X) -> A x' a -> P X A x' -> E) -> E.",
            "VernacDefinition",
            "4f390386f34a1e42d981be5d5889fca7a2323583"
        ],
        [
            "Lemma SELECT_in : forall (X : Typ1) (A : Rel X) (a : X) (P : PRED) (x x' : X), A x' x -> SELECT X A a P (some X x') (some X x).",
            "VernacStartTheoremProof",
            "277d5036a8b3a5613d7c6dee1ce63cef1baf2b11"
        ],
        [
            "Proof fun X A a P x x' H E e _ => e x x' (eq_refl (opt X) (some X x)) (eq_refl (opt X) (some X x')) H.",
            "VernacExactProof",
            "61f46a2e32077f0df0383e052fd04df089747457"
        ],
        [
            "Lemma SELECT_rt : forall (X : Typ1) (A : Rel X) (a : X) (P : PRED) (x' : X), A x' a -> P X A x' -> SELECT X A a P (some X x') (none X).",
            "VernacStartTheoremProof",
            "f46136a1725a3f4e92427317119a3a0cece24cf8"
        ],
        [
            "Proof fun X A a P x' H1 H2 E _ e => e x' (eq_refl (opt X) (some X x')) (eq_refl (opt X) (none X)) H1 H2.",
            "VernacExactProof",
            "fdad5f236c7887c4ad151417efdcc34a08b3e859"
        ],
        [
            "Lemma SELECT_deloc : forall (X : Typ1) (A : Rel X) (a : X) (P : PRED), deloc X A (opt X) (SELECT X A a P) (some X).",
            "VernacStartTheoremProof",
            "5ba4f66437f8601bdb05090a9d3d4f55d8bdefd8"
        ],
        [
            "intros X A a P; unfold deloc in |- *; apply and_intro.",
            "VernacExtend",
            "053b0e0cb7e056bd8861c03983bab8116716735c"
        ],
        [
            "exact (SELECT_in X A a P).",
            "VernacExtend",
            "7c7c23332a70b99376ce72475db85d081b14d4f5"
        ],
        [
            "intros x z' H; apply H; clear H.",
            "VernacExtend",
            "d4148f8d7a3c78c7f57c4c281bba5349ff83f40a"
        ],
        [
            "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
            "VernacExtend",
            "531bd998731a33ec53ad7d08b7dcc02044dd660a"
        ],
        [
            "apply (eq_sym _ _ _ (eq_some_some X x x0 H1)); assumption.",
            "VernacExtend",
            "6ab9953331ed110db6a36a7e15562aa32c1df5cd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros x' H1 H2 H3 H4; apply (eq_some_none X x H2).",
            "VernacExtend",
            "8ef4c0d0d119d2a1edb19cf5b4c9f4d13d754c24"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma SELECT_eqv : forall (X : Typ1) (A : Rel X) (a : X) (P : PRED) (x : X), EQV X A x (opt X) (SELECT X A a P) (some X x).",
            "VernacStartTheoremProof",
            "1987f535e883856407c62fe3d6fac0b6b80661ee"
        ],
        [
            "intros X A a P x; apply EQV_deloc; apply SELECT_deloc.",
            "VernacExtend",
            "2f67d9a0aea7e07cc1da96e4f197a095e92de854"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma selection_intro : forall (X : Typ1) (A : Rel X) (a : X) (P : PRED), Compat P -> forall (Y : Typ1) (B : Rel Y) (b : Y), ELT Y B b X A a -> P Y B b -> ELT Y B b (opt X) (SELECT X A a P) (none X).",
            "VernacStartTheoremProof",
            "7c2893c8f0a40c4164f905a8ac612b52385bb447"
        ],
        [
            "intros X A a P H1 Y B b H H2; apply H; clear H; intros x' H3 H4.",
            "VernacExtend",
            "498596b832fc86ca1688b87dc45ca01fe7524fca"
        ],
        [
            "apply ELT_intro with (some X x').",
            "VernacExtend",
            "506a9b65741121ea650f56703116f7a816bab7a3"
        ],
        [
            "apply SELECT_rt; [ assumption | exact (H1 _ _ _ _ _ _ H4 H2) ].",
            "VernacExtend",
            "2a3f81f6dd52df3c5a2ff840e4c21dd3c2639d59"
        ],
        [
            "apply EQV_trans with X A x'; [ assumption | apply SELECT_eqv ].",
            "VernacExtend",
            "10db710b323255ef486db8679fc3549d29f18863"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma selection_elim : forall (X : Typ1) (A : Rel X) (a : X) (P : PRED), Compat P -> forall (Y : Typ1) (B : Rel Y) (b : Y), ELT Y B b (opt X) (SELECT X A a P) (none X) -> and (ELT Y B b X A a) (P Y B b).",
            "VernacStartTheoremProof",
            "3182fa179adf2f3895f72ea7418c1c7099575851"
        ],
        [
            "intros X A a P H1 Y B b H; apply H; clear H.",
            "VernacExtend",
            "d2d62c88806b0ab4a6c9b4268a34f7b6fd1c89cb"
        ],
        [
            "intros z' H H2; apply H; clear H.",
            "VernacExtend",
            "021a9194e0e7cb040110fcdc457375b9f76c2375"
        ],
        [
            "intros x x' H3 H4 H5; apply (eq_none_some X x H3).",
            "VernacExtend",
            "8116f9d5ca44c5cbfe276a527c597996278eb793"
        ],
        [
            "intros x' H3 H4 H5 H6; apply and_intro.",
            "VernacExtend",
            "a6113cd0fe48c65e6e18d9bb98b1ea8e4ce26c33"
        ],
        [
            "apply ELT_intro with x'.",
            "VernacExtend",
            "42b0bd23cd1b7066bc35575d2bf2d5bdad599458"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply EQV_trans with (opt X) (SELECT X A a P) z'.",
            "VernacExtend",
            "10158afc1fa9b44ab08d182aeccdbf5419ba25bd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (eq_sym _ _ _ H3); apply EQV_sym; apply SELECT_eqv.",
            "VernacExtend",
            "c245b8a5434ebe6b9add93b456a4eec98baeb849"
        ],
        [
            "apply H1 with X A x'.",
            "VernacExtend",
            "422230ad19dc78dfb72291e694587502c1ebe9bf"
        ],
        [
            "apply EQV_trans with (opt X) (SELECT X A a P) z'.",
            "VernacExtend",
            "10158afc1fa9b44ab08d182aeccdbf5419ba25bd"
        ],
        [
            "apply (eq_sym _ _ _ H3); apply SELECT_eqv.",
            "VernacExtend",
            "1df2f6e3cb39c9d31577729c40c5181786db9778"
        ],
        [
            "apply EQV_sym; assumption.",
            "VernacExtend",
            "57e40075ac4f9f2cf160e5b97f74e59cdea2ba77"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem selection : forall (X : Typ1) (A : Rel X) (a : X) (P : PRED), Compat P -> forall (Y : Typ1) (B : Rel Y) (b : Y), iff (ELT Y B b (opt X) (SELECT X A a P) (none X)) (and (ELT Y B b X A a) (P Y B b)).",
            "VernacStartTheoremProof",
            "beb9650a825aa650e038ca4c4f63bf72121459b8"
        ],
        [
            "intros X A a P H1 Y B b; unfold iff in |- *; apply and_intro.",
            "VernacExtend",
            "b969f6fd00fe111053e86e51e805f52515eb2999"
        ],
        [
            "intro; apply selection_elim; assumption.",
            "VernacExtend",
            "3183847e69b2d7d0407d0e62b1746aea726bbe61"
        ],
        [
            "intro H; apply H; intros; apply selection_intro; assumption.",
            "VernacExtend",
            "c8fce223c45e601225f4627f401661cd2959f72d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "SELECT_deloc",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros X A a P; unfold deloc in |- *; apply and_intro.",
                        "VernacExtend",
                        "053b0e0cb7e056bd8861c03983bab8116716735c"
                    ]
                },
                {
                    "command": [
                        "exact (SELECT_in X A a P).",
                        "VernacExtend",
                        "7c7c23332a70b99376ce72475db85d081b14d4f5"
                    ]
                },
                {
                    "command": [
                        "intros x z' H; apply H; clear H.",
                        "VernacExtend",
                        "d4148f8d7a3c78c7f57c4c281bba5349ff83f40a"
                    ]
                },
                {
                    "command": [
                        "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
                        "VernacExtend",
                        "531bd998731a33ec53ad7d08b7dcc02044dd660a"
                    ]
                },
                {
                    "command": [
                        "apply (eq_sym _ _ _ (eq_some_some X x x0 H1)); assumption.",
                        "VernacExtend",
                        "6ab9953331ed110db6a36a7e15562aa32c1df5cd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros x' H1 H2 H3 H4; apply (eq_some_none X x H2).",
                        "VernacExtend",
                        "8ef4c0d0d119d2a1edb19cf5b4c9f4d13d754c24"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "SELECT_eqv",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros X A a P x; apply EQV_deloc; apply SELECT_deloc.",
                        "VernacExtend",
                        "2f67d9a0aea7e07cc1da96e4f197a095e92de854"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "selection_intro",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros X A a P H1 Y B b H H2; apply H; clear H; intros x' H3 H4.",
                        "VernacExtend",
                        "498596b832fc86ca1688b87dc45ca01fe7524fca"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with (some X x').",
                        "VernacExtend",
                        "506a9b65741121ea650f56703116f7a816bab7a3"
                    ]
                },
                {
                    "command": [
                        "apply SELECT_rt; [ assumption | exact (H1 _ _ _ _ _ _ H4 H2) ].",
                        "VernacExtend",
                        "2a3f81f6dd52df3c5a2ff840e4c21dd3c2639d59"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with X A x'; [ assumption | apply SELECT_eqv ].",
                        "VernacExtend",
                        "10db710b323255ef486db8679fc3549d29f18863"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "selection_elim",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros X A a P H1 Y B b H; apply H; clear H.",
                        "VernacExtend",
                        "d2d62c88806b0ab4a6c9b4268a34f7b6fd1c89cb"
                    ]
                },
                {
                    "command": [
                        "intros z' H H2; apply H; clear H.",
                        "VernacExtend",
                        "021a9194e0e7cb040110fcdc457375b9f76c2375"
                    ]
                },
                {
                    "command": [
                        "intros x x' H3 H4 H5; apply (eq_none_some X x H3).",
                        "VernacExtend",
                        "8116f9d5ca44c5cbfe276a527c597996278eb793"
                    ]
                },
                {
                    "command": [
                        "intros x' H3 H4 H5 H6; apply and_intro.",
                        "VernacExtend",
                        "a6113cd0fe48c65e6e18d9bb98b1ea8e4ce26c33"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with x'.",
                        "VernacExtend",
                        "42b0bd23cd1b7066bc35575d2bf2d5bdad599458"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with (opt X) (SELECT X A a P) z'.",
                        "VernacExtend",
                        "10158afc1fa9b44ab08d182aeccdbf5419ba25bd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply (eq_sym _ _ _ H3); apply EQV_sym; apply SELECT_eqv.",
                        "VernacExtend",
                        "c245b8a5434ebe6b9add93b456a4eec98baeb849"
                    ]
                },
                {
                    "command": [
                        "apply H1 with X A x'.",
                        "VernacExtend",
                        "422230ad19dc78dfb72291e694587502c1ebe9bf"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with (opt X) (SELECT X A a P) z'.",
                        "VernacExtend",
                        "10158afc1fa9b44ab08d182aeccdbf5419ba25bd"
                    ]
                },
                {
                    "command": [
                        "apply (eq_sym _ _ _ H3); apply SELECT_eqv.",
                        "VernacExtend",
                        "1df2f6e3cb39c9d31577729c40c5181786db9778"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; assumption.",
                        "VernacExtend",
                        "57e40075ac4f9f2cf160e5b97f74e59cdea2ba77"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "selection",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros X A a P H1 Y B b; unfold iff in |- *; apply and_intro.",
                        "VernacExtend",
                        "b969f6fd00fe111053e86e51e805f52515eb2999"
                    ]
                },
                {
                    "command": [
                        "intro; apply selection_elim; assumption.",
                        "VernacExtend",
                        "3183847e69b2d7d0407d0e62b1746aea726bbe61"
                    ]
                },
                {
                    "command": [
                        "intro H; apply H; intros; apply selection_intro; assumption.",
                        "VernacExtend",
                        "c8fce223c45e601225f4627f401661cd2959f72d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}