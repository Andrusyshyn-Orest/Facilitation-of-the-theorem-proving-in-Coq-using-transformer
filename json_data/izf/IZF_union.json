{
    "filename": "IZF_union.v",
    "coq_project": "izf",
    "vernac_cmds": [
        [
            "Require Import IZF_logic.",
            "VernacRequire",
            "52d6015de36734d60c1a42214bb9167237caee73"
        ],
        [
            "Require Import IZF_base.",
            "VernacRequire",
            "cf80f06c6c174ef99f7aece7927143ff2e0e96f9"
        ],
        [
            "Definition UNION (X : Typ1) (A : Rel X) (a : X) (z' z : opt X) := forall E : Prop, (forall x x' : X, eq (opt X) z' (some X x') -> eq (opt X) z (some X x) -> A x' x -> E) -> (forall x x' : X, eq (opt X) z' (some X x') -> eq (opt X) z (none X) -> A x' x -> A x a -> E) -> E.",
            "VernacDefinition",
            "04cebcb294d44de178e16623f080d157d48bed10"
        ],
        [
            "Lemma UNION_in : forall (X : Typ1) (A : Rel X) (a x x' : X), A x' x -> UNION X A a (some X x') (some X x).",
            "VernacStartTheoremProof",
            "e7a02ec948f7a1cee0ceb13a73b23062eda78b3d"
        ],
        [
            "Proof fun X A a x x' H E e _ => e x x' (eq_refl (opt X) (some X x')) (eq_refl (opt X) (some X x)) H.",
            "VernacExactProof",
            "4abbb06e2c57fca4e88c7a81fc378afd354c3450"
        ],
        [
            "Lemma UNION_rt : forall (X : Typ1) (A : Rel X) (a x x' : X), A x' x -> A x a -> UNION X A a (some X x') (none X).",
            "VernacStartTheoremProof",
            "216e809f8f3a7ed4373d56d316c8123188fa3735"
        ],
        [
            "Proof fun X A a x x' H1 H2 E _ e => e x x' (eq_refl (opt X) (some X x')) (eq_refl (opt X) (none X)) H1 H2.",
            "VernacExactProof",
            "3085063ecbb0af673fce8ee5919268bfa3f608e8"
        ],
        [
            "Lemma UNION_deloc : forall (X : Typ1) (A : Rel X) (a : X), deloc X A (opt X) (UNION X A a) (some X).",
            "VernacStartTheoremProof",
            "fcf49a64f18ab38a87b1877a7862527718ddd83f"
        ],
        [
            "intros X A a; unfold deloc in |- *; apply and_intro.",
            "VernacExtend",
            "f5d5a900b2e07820018b6c2f5d7f4355c7de69c9"
        ],
        [
            "exact (UNION_in X A a).",
            "VernacExtend",
            "74d238cdc16b96449ab3f29d01b939fc41a88b14"
        ],
        [
            "intros x y' H; apply H; clear H.",
            "VernacExtend",
            "29baa1ed1c635c0c7042b6afc57fe6d950ad2170"
        ],
        [
            "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
            "VernacExtend",
            "531bd998731a33ec53ad7d08b7dcc02044dd660a"
        ],
        [
            "apply (eq_sym _ _ _ (eq_some_some _ _ _ H2)); assumption.",
            "VernacExtend",
            "873626f7730f47d0293441c6401fa78aa9c810d3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros x0 x' H1 H2 H3 H4; apply (eq_some_none _ _ H2).",
            "VernacExtend",
            "a258201b09420961ce5a967f86059c81cb7b4f9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UNION_eqv : forall (X : Typ1) (A : Rel X) (a x : X), EQV X A x (opt X) (UNION X A a) (some X x).",
            "VernacStartTheoremProof",
            "b2a84fa0a214a2b582e10cb74b87973dd7c4c908"
        ],
        [
            "intros X A a x; apply EQV_deloc; apply UNION_deloc.",
            "VernacExtend",
            "dc5829ee8de6dd1df08760aabc2a53065e2085a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_intro : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y) (Z : Typ1) (C : Rel Z) (c : Z), ELT Y B b Z C c -> ELT Z C c X A a -> ELT Y B b (opt X) (UNION X A a) (none X).",
            "VernacStartTheoremProof",
            "d109606a211edf590c1f61fe0924295ec51ba22e"
        ],
        [
            "intros X A a Y B b Z C c H H'.",
            "VernacExtend",
            "2137ca14cd5fe6f3a10f51fc015d6f2e235340b9"
        ],
        [
            "apply H'; clear H'; intros x H1 H2.",
            "VernacExtend",
            "cd883d50b2a55347c7875a5ad9423d3d3438f55d"
        ],
        [
            "apply (ELT_compat_r _ _ _ _ _ _ _ _ _ H H2); clear H; intros x' H3 H4.",
            "VernacExtend",
            "db397888f7ff43e231003193ca01442eb2e71136"
        ],
        [
            "apply ELT_intro with (some X x').",
            "VernacExtend",
            "506a9b65741121ea650f56703116f7a816bab7a3"
        ],
        [
            "apply UNION_rt with x; assumption.",
            "VernacExtend",
            "139b82d2c274eb22c88797350767fa4c31e96e34"
        ],
        [
            "apply EQV_trans with X A x'; [ assumption | apply UNION_eqv ].",
            "VernacExtend",
            "e7237d17a2dfdc33f4b54464adb2c3e8883e52ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_elim : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), ELT Y B b (opt X) (UNION X A a) (none X) -> exG (fun Z C c => and (ELT Y B b Z C c) (ELT Z C c X A a)).",
            "VernacStartTheoremProof",
            "6b43ca9ed74407e3b07cbf6a09890052dc2c0fce"
        ],
        [
            "intros X A a Y B b H; apply H; clear H; intros z H H1.",
            "VernacExtend",
            "b5ea33da766d1746d62ad7ce06e717fdfc2f2d32"
        ],
        [
            "apply H; clear H.",
            "VernacExtend",
            "9f55f05b2513216b0ca4274d81a8d43b208d0874"
        ],
        [
            "intros x x' H2 H3 H4; apply (eq_none_some _ _ H3).",
            "VernacExtend",
            "c6fde424618a5ef872cccc327968528ed7ba1998"
        ],
        [
            "intros x x' H2 H3 H4 H5.",
            "VernacExtend",
            "81227ec9e9a026a606b355df9527595427052b81"
        ],
        [
            "apply exG_intro with (opt X) (UNION X A a) (some X x).",
            "VernacExtend",
            "8055d0fcc75a896d9ca35df7127e588f446c3964"
        ],
        [
            "apply and_intro.",
            "VernacExtend",
            "7f2fc5fa647da214c009ccac462775941c432d9e"
        ],
        [
            "apply ELT_intro with (some X x').",
            "VernacExtend",
            "506a9b65741121ea650f56703116f7a816bab7a3"
        ],
        [
            "apply UNION_in; assumption.",
            "VernacExtend",
            "e4e3c50de285f568429076a57a30be93972370b3"
        ],
        [
            "apply H2; assumption.",
            "VernacExtend",
            "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
        ],
        [
            "apply ELT_compat_l with X A x.",
            "VernacExtend",
            "940c359a3661f34af164674eac38d0292a245b4d"
        ],
        [
            "apply EQV_sym; apply UNION_eqv.",
            "VernacExtend",
            "4badda2cbf4fefeef85889a6c09daf84014016af"
        ],
        [
            "apply ELT_direct; assumption.",
            "VernacExtend",
            "a193374b6cc92de35a9ec1cd4147ada377ad7200"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union : forall (X : Typ1) (A : Rel X) (a : X) (Y : Typ1) (B : Rel Y) (b : Y), iff (ELT Y B b (opt X) (UNION X A a) (none X)) (exG (fun Z C c => and (ELT Y B b Z C c) (ELT Z C c X A a))).",
            "VernacStartTheoremProof",
            "9494a84358b231f2bce5a9407b5e724c7d2e060b"
        ],
        [
            "intros X A a Y B b; unfold iff in |- *; apply and_intro.",
            "VernacExtend",
            "26772039090e52a9888cacce147988c956016d66"
        ],
        [
            "intro; apply union_elim; assumption.",
            "VernacExtend",
            "8fbdc3e093c9eee46b58125ffd4f601bf72caa6a"
        ],
        [
            "intro H; apply H; clear H; intros Z C c H.",
            "VernacExtend",
            "d34b721baa9eb342d12214d3083dc2921c1ca3fa"
        ],
        [
            "apply H; clear H; intros H1 H2.",
            "VernacExtend",
            "0d70143bc97ab344d4776ce90fd54b2751c33b7d"
        ],
        [
            "apply union_intro with Z C c; assumption.",
            "VernacExtend",
            "25143680dd1fed62472630d154837096d74f1b1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "UNION_deloc",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros X A a; unfold deloc in |- *; apply and_intro.",
                        "VernacExtend",
                        "f5d5a900b2e07820018b6c2f5d7f4355c7de69c9"
                    ]
                },
                {
                    "command": [
                        "exact (UNION_in X A a).",
                        "VernacExtend",
                        "74d238cdc16b96449ab3f29d01b939fc41a88b14"
                    ]
                },
                {
                    "command": [
                        "intros x y' H; apply H; clear H.",
                        "VernacExtend",
                        "29baa1ed1c635c0c7042b6afc57fe6d950ad2170"
                    ]
                },
                {
                    "command": [
                        "intros x0 x' H1 H2 H3; apply ex2_intro with x'.",
                        "VernacExtend",
                        "531bd998731a33ec53ad7d08b7dcc02044dd660a"
                    ]
                },
                {
                    "command": [
                        "apply (eq_sym _ _ _ (eq_some_some _ _ _ H2)); assumption.",
                        "VernacExtend",
                        "873626f7730f47d0293441c6401fa78aa9c810d3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros x0 x' H1 H2 H3 H4; apply (eq_some_none _ _ H2).",
                        "VernacExtend",
                        "a258201b09420961ce5a967f86059c81cb7b4f9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UNION_eqv",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros X A a x; apply EQV_deloc; apply UNION_deloc.",
                        "VernacExtend",
                        "dc5829ee8de6dd1df08760aabc2a53065e2085a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_intro",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b Z C c H H'.",
                        "VernacExtend",
                        "2137ca14cd5fe6f3a10f51fc015d6f2e235340b9"
                    ]
                },
                {
                    "command": [
                        "apply H'; clear H'; intros x H1 H2.",
                        "VernacExtend",
                        "cd883d50b2a55347c7875a5ad9423d3d3438f55d"
                    ]
                },
                {
                    "command": [
                        "apply (ELT_compat_r _ _ _ _ _ _ _ _ _ H H2); clear H; intros x' H3 H4.",
                        "VernacExtend",
                        "db397888f7ff43e231003193ca01442eb2e71136"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with (some X x').",
                        "VernacExtend",
                        "506a9b65741121ea650f56703116f7a816bab7a3"
                    ]
                },
                {
                    "command": [
                        "apply UNION_rt with x; assumption.",
                        "VernacExtend",
                        "139b82d2c274eb22c88797350767fa4c31e96e34"
                    ]
                },
                {
                    "command": [
                        "apply EQV_trans with X A x'; [ assumption | apply UNION_eqv ].",
                        "VernacExtend",
                        "e7237d17a2dfdc33f4b54464adb2c3e8883e52ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_elim",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b H; apply H; clear H; intros z H H1.",
                        "VernacExtend",
                        "b5ea33da766d1746d62ad7ce06e717fdfc2f2d32"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H.",
                        "VernacExtend",
                        "9f55f05b2513216b0ca4274d81a8d43b208d0874"
                    ]
                },
                {
                    "command": [
                        "intros x x' H2 H3 H4; apply (eq_none_some _ _ H3).",
                        "VernacExtend",
                        "c6fde424618a5ef872cccc327968528ed7ba1998"
                    ]
                },
                {
                    "command": [
                        "intros x x' H2 H3 H4 H5.",
                        "VernacExtend",
                        "81227ec9e9a026a606b355df9527595427052b81"
                    ]
                },
                {
                    "command": [
                        "apply exG_intro with (opt X) (UNION X A a) (some X x).",
                        "VernacExtend",
                        "8055d0fcc75a896d9ca35df7127e588f446c3964"
                    ]
                },
                {
                    "command": [
                        "apply and_intro.",
                        "VernacExtend",
                        "7f2fc5fa647da214c009ccac462775941c432d9e"
                    ]
                },
                {
                    "command": [
                        "apply ELT_intro with (some X x').",
                        "VernacExtend",
                        "506a9b65741121ea650f56703116f7a816bab7a3"
                    ]
                },
                {
                    "command": [
                        "apply UNION_in; assumption.",
                        "VernacExtend",
                        "e4e3c50de285f568429076a57a30be93972370b3"
                    ]
                },
                {
                    "command": [
                        "apply H2; assumption.",
                        "VernacExtend",
                        "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
                    ]
                },
                {
                    "command": [
                        "apply ELT_compat_l with X A x.",
                        "VernacExtend",
                        "940c359a3661f34af164674eac38d0292a245b4d"
                    ]
                },
                {
                    "command": [
                        "apply EQV_sym; apply UNION_eqv.",
                        "VernacExtend",
                        "4badda2cbf4fefeef85889a6c09daf84014016af"
                    ]
                },
                {
                    "command": [
                        "apply ELT_direct; assumption.",
                        "VernacExtend",
                        "a193374b6cc92de35a9ec1cd4147ada377ad7200"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros X A a Y B b; unfold iff in |- *; apply and_intro.",
                        "VernacExtend",
                        "26772039090e52a9888cacce147988c956016d66"
                    ]
                },
                {
                    "command": [
                        "intro; apply union_elim; assumption.",
                        "VernacExtend",
                        "8fbdc3e093c9eee46b58125ffd4f601bf72caa6a"
                    ]
                },
                {
                    "command": [
                        "intro H; apply H; clear H; intros Z C c H.",
                        "VernacExtend",
                        "d34b721baa9eb342d12214d3083dc2921c1ca3fa"
                    ]
                },
                {
                    "command": [
                        "apply H; clear H; intros H1 H2.",
                        "VernacExtend",
                        "0d70143bc97ab344d4776ce90fd54b2751c33b7d"
                    ]
                },
                {
                    "command": [
                        "apply union_intro with Z C c; assumption.",
                        "VernacExtend",
                        "25143680dd1fed62472630d154837096d74f1b1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}