{
    "filename": "Ramsey.v",
    "coq_project": "ramsey",
    "vernac_cmds": [
        [
            "Require Import Lt.",
            "VernacRequire",
            "fe47d80ebda42c5f075a36fb67288742f8593767"
        ],
        [
            "Require Import Plus.",
            "VernacRequire",
            "a18284a3c28ae9356bfc5084ee8540c5d50631e5"
        ],
        [
            "Definition increasing (f : nat -> nat) := forall x y : nat, x < y -> f x < f y.",
            "VernacDefinition",
            "0f3cf2f67018242b02df489b9f54f4ff6fb6e0a5"
        ],
        [
            "Lemma compose_increasing : forall f g : nat -> nat, increasing f -> increasing g -> increasing (fun x : nat => f (g x)).",
            "VernacStartTheoremProof",
            "a159156c290eec74331bc311d75a03cd65c8979b"
        ],
        [
            "unfold increasing in |- *; auto with arith.",
            "VernacExtend",
            "a29e70f75d7143e38c7ac279464fee42766b135c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve compose_increasing.",
            "VernacHints",
            "77a79dfe0a9d9ceaba387525ecd1ebaf07036144"
        ],
        [
            "Lemma increasingbystep : forall f : nat -> nat, (forall n : nat, f n < f (S n)) -> increasing f.",
            "VernacStartTheoremProof",
            "59de61d8cbddc4f18ed1295c3ebc402c2a1e3d32"
        ],
        [
            "unfold increasing in |- *; intros f i x y ltxy.",
            "VernacExtend",
            "e7253e17ec05fadd7c9f64b03bb1e538f30f0463"
        ],
        [
            "elim ltxy; trivial with arith.",
            "VernacExtend",
            "e7dc2f06dab5f96a0db4dc359ed2497097eed6e5"
        ],
        [
            "intros; apply lt_trans with (f m); auto with arith.",
            "VernacExtend",
            "2e4c867fd64a906b1719b765a3383ea519217741"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition full (A : nat -> Prop) (Y : (nat -> nat) -> nat) := forall f : nat -> nat, increasing f -> A (f (Y f)).",
            "VernacDefinition",
            "85b61815a651f6849433a492267922ff3510897d"
        ],
        [
            "Definition enumerate (Y : (nat -> nat) -> nat) := (fix F (x : nat) : nat := match x return nat with | O => Y (fun n : nat => n) | S y => Y (fun n : nat => n + S (F y)) + S (F y) end).",
            "VernacDefinition",
            "ebc0b2592842f0a02ea464704a89772498577433"
        ],
        [
            "Lemma increasing_enumerate : forall Y : (nat -> nat) -> nat, increasing (enumerate Y).",
            "VernacStartTheoremProof",
            "3e88118230262f0790b8322d79d42ef863cecb3c"
        ],
        [
            "intro; apply increasingbystep; unfold enumerate in |- *; auto with arith.",
            "VernacExtend",
            "98404bf739d2e1ead16a025db22f76a9a3920269"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section dimension_one.",
            "VernacBeginSection",
            "d5288cf7e0b15c7ba108e72a4916e5699100f42e"
        ],
        [
            "Variable A : nat -> Prop.",
            "VernacAssumption",
            "2de133ca9d48125ecd5159e20c7e0ac69590b076"
        ],
        [
            "Variable YA : (nat -> nat) -> nat.",
            "VernacAssumption",
            "d9fd4661aaa57caada2e07420a5dd371826e22f0"
        ],
        [
            "Definition FYA (x n : nat) := n + S (enumerate YA x).",
            "VernacDefinition",
            "00c2b113cd945a77a641d248e53af535dfe8127c"
        ],
        [
            "Lemma increasing_FYA : forall x : nat, increasing (FYA x).",
            "VernacStartTheoremProof",
            "9108047cf4ba0d157bc7791f8d0572a328fb3e1e"
        ],
        [
            "unfold increasing, FYA in |- *.",
            "VernacExtend",
            "63c1c9e2331bfde25f01c297cda0c0ee0e12cd6f"
        ],
        [
            "intros; apply plus_lt_compat_r; trivial with arith.",
            "VernacExtend",
            "3d23a03d8d12e45b7572c3b1993e3367984ad2e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve increasing_FYA.",
            "VernacHints",
            "0f7db2f99992290639a0fb6f09fd12e21e0919ba"
        ],
        [
            "Lemma enumerate_YA : full A YA -> forall x : nat, A (enumerate YA x).",
            "VernacStartTheoremProof",
            "397b824c7b34acc2e7cd65c58726deb45795c931"
        ],
        [
            "intro YAfull; unfold enumerate in |- *; simple induction x.",
            "VernacExtend",
            "f3f98d15a6083558563bda3f74d32a363977393c"
        ],
        [
            "apply (YAfull (fun n : nat => n)).",
            "VernacExtend",
            "1f8684e00f63e692ac291f8c872af899cb6075ff"
        ],
        [
            "unfold increasing in |- *; trivial with arith.",
            "VernacExtend",
            "a3defe51bada5ae9bfec862ea5a99eac48fa8ad5"
        ],
        [
            "intros y H.",
            "VernacExtend",
            "b13857a6f2921c7c94ecf876feb0c6ba8a8482cf"
        ],
        [
            "change (A (FYA y (YA (FYA y)))) in |- *.",
            "VernacExtend",
            "41060f44cd89e111aae9b3cc7c7fde9725bcfb93"
        ],
        [
            "apply YAfull; auto with arith.",
            "VernacExtend",
            "1a7cb9942c9529764298e35968de47606199691a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable B : nat -> Prop.",
            "VernacAssumption",
            "461c60e476b7ff873e523d3923e06101d818f723"
        ],
        [
            "Variable YB : (nat -> nat) -> nat.",
            "VernacAssumption",
            "815e6f31594fbc6fa7269c925554167903ff38b2"
        ],
        [
            "Lemma YB_enumerate_YA : full B YB -> B (enumerate YA (YB (enumerate YA))).",
            "VernacStartTheoremProof",
            "09c07e88520c4eb684c4a9cb426e6e61bf7f5111"
        ],
        [
            "intro YBfull.",
            "VernacExtend",
            "85f26500f36384edb57454d4cc4c7845cc94fa14"
        ],
        [
            "apply YBfull.",
            "VernacExtend",
            "917cbe5e342ddcb88c3cf071585d9999ac7c58f9"
        ],
        [
            "apply increasing_enumerate.",
            "VernacExtend",
            "3581c8b438e67b38b615b5b1a5a98ed7865356eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pre_Ramsey1 : full A YA -> full B YB -> A (enumerate YA (YB (enumerate YA))) /\\ B (enumerate YA (YB (enumerate YA))).",
            "VernacStartTheoremProof",
            "5b9ee71ed8d4667b5b5fe7d0f0be9b6930855a4b"
        ],
        [
            "intros YAfull YBfull; split.",
            "VernacExtend",
            "fd73abc3ded7aec1c955322549b3345d2c8bd218"
        ],
        [
            "apply enumerate_YA; trivial with arith.",
            "VernacExtend",
            "e89fa98e7f5d7426f17cb64d20343a6365c16d3f"
        ],
        [
            "apply YB_enumerate_YA; trivial with arith.",
            "VernacExtend",
            "20fbec4d57e52c0b9abed4659777a1eb1096ac1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End dimension_one.",
            "VernacEndSegment",
            "17e811223226605dbf7c8ccf0efbb0961cd5deb7"
        ],
        [
            "Definition inter (A B : nat -> Prop) (n : nat) := A n /\\ B n.",
            "VernacDefinition",
            "6402a776d381fde6351443516afd4ccb575bef40"
        ],
        [
            "Definition combine (YA YB : (nat -> nat) -> nat) (f : nat -> nat) := enumerate (fun g : nat -> nat => YA (fun x : nat => f (g x))) ((fun g : nat -> nat => YB (fun x : nat => f (g x))) (enumerate (fun g : nat -> nat => YA (fun x : nat => f (g x))))).",
            "VernacDefinition",
            "c8ae034c54c0f1df9bb57e64c27da90715058bfe"
        ],
        [
            "Theorem Ramsey1 : forall (A B : nat -> Prop) (YA YB : (nat -> nat) -> nat), full A YA -> full B YB -> full (inter A B) (combine YA YB).",
            "VernacStartTheoremProof",
            "ec9b63c8305edb947ce23b3b7a8bfd6c597a3c3c"
        ],
        [
            "unfold full, inter, combine in |- *; intros A B YA YB FAYA FBYB f If.",
            "VernacExtend",
            "f8f4ea2824359a15050339797552e582ae417ef5"
        ],
        [
            "apply (pre_Ramsey1 (fun x : nat => A (f x)) (fun g : nat -> nat => YA (fun x : nat => f (g x))) (fun x : nat => B (f x)) (fun g : nat -> nat => YB (fun x : nat => f (g x)))); unfold full in |- *; intros g Ig.",
            "VernacExtend",
            "2cbea2b5cbe8cfcebbbc2fec2511470c1aa86fe7"
        ],
        [
            "apply (FAYA (fun x : nat => f (g x))); auto with arith.",
            "VernacExtend",
            "78207e55db71893b6a2232b095e7602234ed6379"
        ],
        [
            "apply (FBYB (fun x : nat => f (g x))); auto with arith.",
            "VernacExtend",
            "dd35a60ba2af527ae3121c8caffe83d04bbc0db7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "compose_increasing",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "unfold increasing in |- *; auto with arith.",
                        "VernacExtend",
                        "a29e70f75d7143e38c7ac279464fee42766b135c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "increasingbystep",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "unfold increasing in |- *; intros f i x y ltxy.",
                        "VernacExtend",
                        "e7253e17ec05fadd7c9f64b03bb1e538f30f0463"
                    ]
                },
                {
                    "command": [
                        "elim ltxy; trivial with arith.",
                        "VernacExtend",
                        "e7dc2f06dab5f96a0db4dc359ed2497097eed6e5"
                    ]
                },
                {
                    "command": [
                        "intros; apply lt_trans with (f m); auto with arith.",
                        "VernacExtend",
                        "2e4c867fd64a906b1719b765a3383ea519217741"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "increasing_enumerate",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intro; apply increasingbystep; unfold enumerate in |- *; auto with arith.",
                        "VernacExtend",
                        "98404bf739d2e1ead16a025db22f76a9a3920269"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "increasing_FYA",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold increasing, FYA in |- *.",
                        "VernacExtend",
                        "63c1c9e2331bfde25f01c297cda0c0ee0e12cd6f"
                    ]
                },
                {
                    "command": [
                        "intros; apply plus_lt_compat_r; trivial with arith.",
                        "VernacExtend",
                        "3d23a03d8d12e45b7572c3b1993e3367984ad2e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "enumerate_YA",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intro YAfull; unfold enumerate in |- *; simple induction x.",
                        "VernacExtend",
                        "f3f98d15a6083558563bda3f74d32a363977393c"
                    ]
                },
                {
                    "command": [
                        "apply (YAfull (fun n : nat => n)).",
                        "VernacExtend",
                        "1f8684e00f63e692ac291f8c872af899cb6075ff"
                    ]
                },
                {
                    "command": [
                        "unfold increasing in |- *; trivial with arith.",
                        "VernacExtend",
                        "a3defe51bada5ae9bfec862ea5a99eac48fa8ad5"
                    ]
                },
                {
                    "command": [
                        "intros y H.",
                        "VernacExtend",
                        "b13857a6f2921c7c94ecf876feb0c6ba8a8482cf"
                    ]
                },
                {
                    "command": [
                        "change (A (FYA y (YA (FYA y)))) in |- *.",
                        "VernacExtend",
                        "41060f44cd89e111aae9b3cc7c7fde9725bcfb93"
                    ]
                },
                {
                    "command": [
                        "apply YAfull; auto with arith.",
                        "VernacExtend",
                        "1a7cb9942c9529764298e35968de47606199691a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "YB_enumerate_YA",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intro YBfull.",
                        "VernacExtend",
                        "85f26500f36384edb57454d4cc4c7845cc94fa14"
                    ]
                },
                {
                    "command": [
                        "apply YBfull.",
                        "VernacExtend",
                        "917cbe5e342ddcb88c3cf071585d9999ac7c58f9"
                    ]
                },
                {
                    "command": [
                        "apply increasing_enumerate.",
                        "VernacExtend",
                        "3581c8b438e67b38b615b5b1a5a98ed7865356eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pre_Ramsey1",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros YAfull YBfull; split.",
                        "VernacExtend",
                        "fd73abc3ded7aec1c955322549b3345d2c8bd218"
                    ]
                },
                {
                    "command": [
                        "apply enumerate_YA; trivial with arith.",
                        "VernacExtend",
                        "e89fa98e7f5d7426f17cb64d20343a6365c16d3f"
                    ]
                },
                {
                    "command": [
                        "apply YB_enumerate_YA; trivial with arith.",
                        "VernacExtend",
                        "20fbec4d57e52c0b9abed4659777a1eb1096ac1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ramsey1",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "unfold full, inter, combine in |- *; intros A B YA YB FAYA FBYB f If.",
                        "VernacExtend",
                        "f8f4ea2824359a15050339797552e582ae417ef5"
                    ]
                },
                {
                    "command": [
                        "apply (pre_Ramsey1 (fun x : nat => A (f x)) (fun g : nat -> nat => YA (fun x : nat => f (g x))) (fun x : nat => B (f x)) (fun g : nat -> nat => YB (fun x : nat => f (g x)))); unfold full in |- *; intros g Ig.",
                        "VernacExtend",
                        "2cbea2b5cbe8cfcebbbc2fec2511470c1aa86fe7"
                    ]
                },
                {
                    "command": [
                        "apply (FAYA (fun x : nat => f (g x))); auto with arith.",
                        "VernacExtend",
                        "78207e55db71893b6a2232b095e7602234ed6379"
                    ]
                },
                {
                    "command": [
                        "apply (FBYB (fun x : nat => f (g x))); auto with arith.",
                        "VernacExtend",
                        "dd35a60ba2af527ae3121c8caffe83d04bbc0db7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}