{
    "filename": "area_elimination_lemmas.v",
    "coq_project": "area-method",
    "vernac_cmds": [
        [
            "Require Export advanced_parallel_lemmas.",
            "VernacRequire",
            "b8b5492a555f31a54da865cdbb97f97a4ffaa774"
        ],
        [
            "Require Export geometry_tools.",
            "VernacRequire",
            "54a962158d255366810ac983bd9449926a331c37"
        ],
        [
            "Theorem non_zero_denom_on_line_area : forall A B C : Point, on_line A B C -> B <> C.",
            "VernacStartTheoremProof",
            "8d33971a0aca041614b84739b0850894dcf20b37"
        ],
        [
            "unfold on_line in |- *.",
            "VernacExtend",
            "014a77f206b04c9193c2fa30b5a13f0c948080b0"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem non_zero_denom_inter_ll_area : forall A B C D E : Point, inter_ll A B C D E -> S4 B D C E <> 0.",
            "VernacStartTheoremProof",
            "7cfb316a0ffa2dbbd3f86efeda0233da515cb49e"
        ],
        [
            "unfold inter_ll in |- *.",
            "VernacExtend",
            "bdbd94472f365bd3126356fcffda007113fdc4e9"
        ],
        [
            "unfold parallel in |- *.",
            "VernacExtend",
            "1db2ae8c6adf068d2c0b937bd0259b8d01a7304c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem non_zero_denom_on_parallel_d_area : forall A B C D : Point, on_parallel A B C D -> C <> D.",
            "VernacStartTheoremProof",
            "8cffc83d42c159fa5b4a18c6da25c3e70056d1b3"
        ],
        [
            "unfold on_parallel in |- *.",
            "VernacExtend",
            "72938949fa369e0a9d2956b9c359a44585626a52"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem non_zero_denom_on_inter_line_parallel_area : forall A B C D E G : Point, on_inter_line_parallel A B C D E G -> S4 E C G D <> 0.",
            "VernacStartTheoremProof",
            "2fe7b84e2d1af253cb9872c06e0428e5a16ee3d2"
        ],
        [
            "unfold on_inter_line_parallel in |- *.",
            "VernacExtend",
            "fa6045544b19717853b6c2c60bad487ff350e8d7"
        ],
        [
            "unfold parallel in |- *.",
            "VernacExtend",
            "1db2ae8c6adf068d2c0b937bd0259b8d01a7304c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem non_zero_denom_on_inter_parallel_parallel_area : forall A B C D E G H : Point, on_inter_parallel_parallel A B C D E G H -> S4 C G D H <> 0.",
            "VernacStartTheoremProof",
            "2b19d3ccb183dfb2548c125b9c1590c7b8b1a353"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold on_inter_parallel_parallel in |- *.",
            "VernacExtend",
            "ff8ce84e0dd6fd697e1380e9949dfd4266230845"
        ],
        [
            "unfold parallel in |- *.",
            "VernacExtend",
            "1db2ae8c6adf068d2c0b937bd0259b8d01a7304c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S4 G C H D = - S4 C G D H)...",
            "VernacExtend",
            "34efc1fdde53da50d492cfdfc5fb5c0d3260f83c"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elim_area_on_line_d : forall (A B P Q Y : Point) (lambda : F), on_line_d Y P Q lambda -> S A B Y = lambda * S A B Q + (1 - lambda) * S A B P.",
            "VernacStartTheoremProof",
            "b3e316adc19f71819f16038520f52063a003059e"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold on_line_d in *.",
            "VernacExtend",
            "78edfbd0c0ee8e5ead2fa145af81f63e7b7dc44f"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "RewriteVar lambda H3...",
            "VernacExtend",
            "2588086e140e01e2b6feee7a2fd560283de81a33"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "assert (1 - P ** Y / P ** Q = Y ** Q / P ** Q)...",
            "VernacExtend",
            "d4670ffbcbefe20c5048d40ed6bf2ece5fc546a8"
        ],
        [
            "assert (Y ** P + P ** Q = Y ** Q)...",
            "VernacExtend",
            "8bd615cb075866384a99abe10a279903df5fafd4"
        ],
        [
            "rewrite <- H1...",
            "VernacExtend",
            "7fbcf34b92a0613077c9d29de6243089e4963a58"
        ],
        [
            "assert (P ** Y = - Y ** P)...",
            "VernacExtend",
            "a20a82070c4cf9e74ba1882cbb44bde18ad4a53f"
        ],
        [
            "rewrite H3; field...",
            "VernacExtend",
            "ea916524f333573a948c022ea799ff2859f4c308"
        ],
        [
            "rewrite H1...",
            "VernacExtend",
            "ea2378a230b97c3935b9ba0f0107ca3d47b65218"
        ],
        [
            "replace (S A B Y) with (S Y A B)...",
            "VernacExtend",
            "a31c377b55132f3f002a2601dc35196a0cddd0b6"
        ],
        [
            "replace (S A B Q) with (S Q A B)...",
            "VernacExtend",
            "6bee771f9b79511d0021ab217135b77135a4135f"
        ],
        [
            "replace (S A B P) with (S P A B)...",
            "VernacExtend",
            "b7e03eea6a11810b9eec63fe8e803910abe5e257"
        ],
        [
            "apply l2_9...",
            "VernacExtend",
            "e2037d78dc22b61e7a7b5b91945a3594a1867cad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elim_area_on_line : forall A B P Q Y : Point, on_line Y P Q -> S A B Y = P ** Y / P ** Q * S A B Q + (1 - P ** Y / P ** Q) * S A B P.",
            "VernacStartTheoremProof",
            "4d13fb2840cf22a6e1f64c99eb57f9954e6d3706"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (on_line_d Y P Q (P ** Y / P ** Q)).",
            "VernacExtend",
            "d0949a0238569f872243c96b40c16878d97260c6"
        ],
        [
            "apply on_line_to_on_line_d...",
            "VernacExtend",
            "f4fced42732a849dffa6f3104d1b958326fead05"
        ],
        [
            "apply elim_area_on_line_d...",
            "VernacExtend",
            "b88bed0d825b971b3572a02f7b812cf6b2835fb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elim_area_inter_ll : forall A B P Q U V Y : Point, inter_ll Y P Q U V -> S A B Y = 1 / S4 P U Q V * (S P U V * S A B Q + S Q V U * S A B P).",
            "VernacStartTheoremProof",
            "16f7c5c8635f092a4fb211224f66a0ab60c6d861"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold inter_ll in *.",
            "VernacExtend",
            "d6d31a91f9981aa442766b74e228a27d95d78ee5"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "assert (P <> Q);eauto with Geom.",
            "VernacExtend",
            "225619a1c46c20e688bec33f2392e3e3c510d741"
        ],
        [
            "assert (S Y A B = P ** Y / P ** Q * S Q A B + Y ** Q / P ** Q * S P A B)...",
            "VernacExtend",
            "93ac6bcc026c1d3f16485ee93caae6f5b5574fe8"
        ],
        [
            "apply l2_9...",
            "VernacExtend",
            "e2037d78dc22b61e7a7b5b91945a3594a1867cad"
        ],
        [
            "unfold parallel in H3.",
            "VernacExtend",
            "86584c97c8dca3798f6dab244365615bffaf41d2"
        ],
        [
            "assert (P ** Y / P ** Q = S P U V / S4 P U Q V)...",
            "VernacExtend",
            "3d42d25f07a9e2b69722d70283e689e7015ca6bc"
        ],
        [
            "assert (Q ** Y / P ** Q = S Q U V / S4 P U Q V)...",
            "VernacExtend",
            "524c5ee53b6a8a5849cd368d55d83eaf62a9bad8"
        ],
        [
            "replace (Q**Y) with (- Y**Q) in H5.",
            "VernacExtend",
            "48e3b8ec7fcbc01fd3ae7071f2faa342546e2fbe"
        ],
        [
            "2:symmetry;Geometry.",
            "VernacExtend",
            "b8b74e5494acf1729413c2396905d409c9540600"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "IsoleVar (Y ** Q) H5...",
            "VernacExtend",
            "8e7abf2f6897c92198849dce536193b9cf25dab1"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elim_area_on_parallel_d : forall (A B P Q R Y : Point) (lambda : F), on_parallel_d Y R P Q lambda -> S A B Y = S A B R + lambda * S4 A P B Q.",
            "VernacStartTheoremProof",
            "d0ae07adbce295b1b2e89642c293606e59ddf2f4"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold on_parallel_d in H.",
            "VernacExtend",
            "9eca9d96720b67b2bc22d55c8f554deeaed12873"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "cases_equality R Y.",
            "VernacExtend",
            "9d71c9c8f1673bb9c4f602bc01e768649009f7a2"
        ],
        [
            "subst R;basic_simpl.",
            "VernacExtend",
            "f1dc27e598dc66d06d10f872b5041f3dd9829d20"
        ],
        [
            "IsoleVar lambda H3...",
            "VernacExtend",
            "54836b33916eafc3c8d6f2659f0185ec4403bc88"
        ],
        [
            "assert (lambda = 0).",
            "VernacExtend",
            "eb3b44e5aa8f64e106c8d1ebe44760fba4fadddc"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (parallel R Y P Q)...",
            "VernacExtend",
            "771dceef5ca8d6d4b23b09a9af6cc38e6e7931d0"
        ],
        [
            "assert (Th := on_line_dex_spec_strong_f R Y P Q H1 H)...",
            "VernacExtend",
            "e25226dc21986dfcf72cf7e74de3c24cb069e750"
        ],
        [
            "DecompExAnd Th T.",
            "VernacExtend",
            "6302e20825889cd04dde992781ff8469875d9f0f"
        ],
        [
            "assert (R <> T).",
            "VernacExtend",
            "d35e5173738f560f1df0ba146248f6d4d9d0b1c0"
        ],
        [
            "unfold not;intro;subst R;basic_simpl...",
            "VernacExtend",
            "34f0d121f39ca41465c3fdf691cca6649455f19a"
        ],
        [
            "assert (S A B Y = lambda * S A B T + (1 - lambda) * S A B R).",
            "VernacExtend",
            "2f699aa6704f46be823a47b3583896509e03a747"
        ],
        [
            "apply elim_area_on_line_d.",
            "VernacExtend",
            "ba71158d449a5f5b759affacbe65c0e34ebb3cee"
        ],
        [
            "rewrite <- H7 in H3.",
            "VernacExtend",
            "3c49865f1659303440a039a9cefc976f3af77608"
        ],
        [
            "unfold on_line_d in *...",
            "VernacExtend",
            "c6fd80544058b4b549628ee6e055ec5f737813cb"
        ],
        [
            "assert (S R A B + S Q A B = S T A B + S P A B).",
            "VernacExtend",
            "01353e6ca2f46a4695344f15b125ed666c3ef012"
        ],
        [
            "apply l2_11a_strong_strong_strong...",
            "VernacExtend",
            "1243c5f83ac4181944edebffb478c578114012f9"
        ],
        [
            "IsoleVar (S T A B) H9.",
            "VernacExtend",
            "0a9b97d0fd67eb8596babb171d910c0fb7454d66"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite H9 in H6.",
            "VernacExtend",
            "4def8d5b4f4b00f126bad945f3cab7975d32ca8b"
        ],
        [
            "replace (S4 A P B Q) with (S Q A B - S P A B).",
            "VernacExtend",
            "f0742b63389fad0c93c54c784ba29e65f7550d60"
        ],
        [
            "rewrite H6;ring.",
            "VernacExtend",
            "03b0d5b0bb033d7ab731291c48ea34e4b0117977"
        ],
        [
            "unfold S4 in |- *;uniformize_signed_areas;ring.",
            "VernacExtend",
            "62a6c6c7e8bb03a04eec3f6e069e0777fff4ede4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem elim_area_on_parallel : forall A B P Q R Y : Point, on_parallel Y R P Q -> S A B Y = S A B R + R ** Y / P ** Q * S4 A P B Q.",
            "VernacStartTheoremProof",
            "625a8c8f62b2c502c8f152be3d8d696fdbf5103a"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (on_parallel_d Y R P Q (R ** Y / P ** Q)).",
            "VernacExtend",
            "6c77716b56e118d39b6653e15efc2b86ee91e908"
        ],
        [
            "apply on_parallel_to_on_parallel_d...",
            "VernacExtend",
            "6de56b0d8b6097be27a144bc08d8ebe8fa3d23a2"
        ],
        [
            "apply elim_area_on_parallel_d...",
            "VernacExtend",
            "d8495702ee17224249737a9ee2d426489d081e2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallel_transitivity : forall A B C D E F, C<> D -> parallel A B C D -> parallel C D E F -> parallel A B E F.",
            "VernacStartTheoremProof",
            "277f12cbf0a760cba942fca9ffdb6690b018187b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "subst;Geometry.",
            "VernacExtend",
            "ebb66d0e2fd546ab9f6811d1733a3b219c3cb73c"
        ],
        [
            "assert (on_parallel E F C D).",
            "VernacExtend",
            "2e728c5c17e156f5213095641cd3ea5fd47dd305"
        ],
        [
            "unfold on_parallel;intuition Geometry.",
            "VernacExtend",
            "14cf1d5d29d5fbc6a1dc6be5661445282f801e48"
        ],
        [
            "assert (on_parallel_d E F C D (F ** E / C ** D)).",
            "VernacExtend",
            "ddbf33d866eeba83d2afc899b1eca1368267562f"
        ],
        [
            "apply on_parallel_to_on_parallel_d.",
            "VernacExtend",
            "5d6058b164e3d7013cdcd8a130e515d25c2fc170"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "set (F ** E / C ** D).",
            "VernacExtend",
            "06e19b59814ccae2e3ebb7d5fcb2e6ec9048e305"
        ],
        [
            "unfold parallel,S4.",
            "VernacExtend",
            "d8b44f5b7fd86253f83f625286d4f55cc07c4264"
        ],
        [
            "replace (S A E B) with (S B A E) by Geometry.",
            "VernacExtend",
            "90b9dbcb6f2f180bf6ecde90d2f1477bb3704ab5"
        ],
        [
            "assert (T: S B A E = S B A F + f * S4 B C A D).",
            "VernacExtend",
            "a7274892cd554fcca899570ad045dbbef2194ce8"
        ],
        [
            "apply (elim_area_on_parallel_d B A C D F E).",
            "VernacExtend",
            "3e373adc21c09754a9946887ccb3b392326a8c41"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite T.",
            "VernacExtend",
            "53a33f68808157ebaeeb257231f3ebd76f0ec487"
        ],
        [
            "unfold S4.",
            "VernacExtend",
            "8227026cc3b74e881e1bd2383e572f1fb91ac57b"
        ],
        [
            "replace (S B C A) with (S A B C) by Geometry.",
            "VernacExtend",
            "9a6c6e6fdef409af3af7638c021efa57baccffa1"
        ],
        [
            "assert (on_parallel_d C D A B ( D ** C / A ** B)).",
            "VernacExtend",
            "74e4d29a075b83d0b76454733e0e81b34d5f71f2"
        ],
        [
            "unfold on_parallel_d.",
            "VernacExtend",
            "976bf537dcdda5abc66af12a9ebbacbdc130479c"
        ],
        [
            "repeat split;Geometry.",
            "VernacExtend",
            "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
        ],
        [
            "field;Geometry.",
            "VernacExtend",
            "6819c80981be188830379c4c62f906ad20dbd742"
        ],
        [
            "set (D ** C / A ** B).",
            "VernacExtend",
            "d5b824f1a4c2dae9acede32d4707285ca00f10de"
        ],
        [
            "replace (S A B C) with (S A B D + f0 * S4 A A B B).",
            "VernacExtend",
            "7f318113a7a16b92073acb9fbe8df5f782e813a9"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply elim_area_on_parallel_d.",
            "VernacExtend",
            "cc0ca20e66a1a90f5aa225f539570b05bb4bed6d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elim_area_on_inter_line_parallel : forall P Q R U V Y A B : Point, on_inter_line_parallel Y R U V P Q -> R <>Y -> S A B Y = (S4 P U Q R * S A B V - S4 P V Q R * S A B U) / S4 P U Q V.",
            "VernacStartTheoremProof",
            "cd597841128890f00715a28c37539543be16164d"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold on_inter_line_parallel in H.",
            "VernacExtend",
            "f8c79a8a60d47b02c0c7a539692e586599fc7820"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "assert (P<>Q);eauto with Geom.",
            "VernacExtend",
            "225619a1c46c20e688bec33f2392e3e3c510d741"
        ],
        [
            "assert (parallel R Y P Q)...",
            "VernacExtend",
            "771dceef5ca8d6d4b23b09a9af6cc38e6e7931d0"
        ],
        [
            "assert (~ Col R Y Q).",
            "VernacExtend",
            "724d70bbcfda836b5938773ad98040e3ec05fb56"
        ],
        [
            "eapply diff_not_col_par_not_col.",
            "VernacExtend",
            "f5fc55272c068325c61a9fa08e9bc8a2d2541fbd"
        ],
        [
            "2:apply H1.",
            "VernacExtend",
            "d18188d8e2990d57fcbebf2544560d72952a1c9f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (Th:= (on_line_dex_spec_strong R Y P Q H4 H H6)).",
            "VernacExtend",
            "51583204fa074e4e15f656dedaa8370e1f345ef8"
        ],
        [
            "DecompExAnd Th T.",
            "VernacExtend",
            "6302e20825889cd04dde992781ff8469875d9f0f"
        ],
        [
            "assert (R<>T).",
            "VernacExtend",
            "d35e5173738f560f1df0ba146248f6d4d9d0b1c0"
        ],
        [
            "unfold not;intro;subst T.",
            "VernacExtend",
            "6fdfe432ffe6d383bb14e27b3c9815b72748f3c1"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "assert (~ parallel U V T R).",
            "VernacExtend",
            "1395859dc0eee4d7f4a78c68ae7496bf218081b9"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "unfold parallelogram in *.",
            "VernacExtend",
            "de304f68dfdc6ecb2f2c0374632e3343b0b8fe3b"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "assert (parallel T R P Q)...",
            "VernacExtend",
            "debd4fcbd69a61addfe1a50761da73a45208a799"
        ],
        [
            "assert (parallel U V P Q).",
            "VernacExtend",
            "fd4807ad5b5c82abaa30b52e44b0069ddefb9697"
        ],
        [
            "eapply parallel_transitivity.",
            "VernacExtend",
            "053e3f713b32c7188ff89fbd98cdaa5d184d6af4"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert ((S A B Y) = 1 / (S4 U T V R) * ((S U T R)*(S A B V) + (S V R T)*(S A B U))).",
            "VernacExtend",
            "150fd2aae470e28df4c3b85e5fc2b9206a25e729"
        ],
        [
            "apply elim_area_inter_ll...",
            "VernacExtend",
            "de85c78093ec752b6bf9f304088a47cc07547f84"
        ],
        [
            "unfold inter_ll...",
            "VernacExtend",
            "976ccb1425155c81e736cb1d4054c720022c14a3"
        ],
        [
            "assert ((S4 U R V T) = (S4 U P V Q)).",
            "VernacExtend",
            "92b56c7a6bf88c0fa1b2cef196620037cd7f3f1a"
        ],
        [
            "apply l2_11b...",
            "VernacExtend",
            "42c81115e776d573b12184b30155d441c8697955"
        ],
        [
            "assert ((S U R T) = (S4 U P R Q)).",
            "VernacExtend",
            "6308f6a4c2d111744af5287c8634b55611d9b154"
        ],
        [
            "apply l2_12b...",
            "VernacExtend",
            "2434e5d07855e5f69965b5ef657d4c1b4d3b82df"
        ],
        [
            "assert ((S V R T) = (S4 V P R Q)).",
            "VernacExtend",
            "6b285a04ca1826415fbba4aac9b0004213c61548"
        ],
        [
            "apply l2_12b...",
            "VernacExtend",
            "2434e5d07855e5f69965b5ef657d4c1b4d3b82df"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "replace (S4 P U Q V) with (- S4 U P V Q)...",
            "VernacExtend",
            "32cb66a6e5617eb4906bbe1f16a3ed08f0f0538e"
        ],
        [
            "rewrite <- H13.",
            "VernacExtend",
            "6c85a10bc571ed18b4943b05e16b8e82ed668a71"
        ],
        [
            "replace (S4 U R V T) with (- S4 U T V R)...",
            "VernacExtend",
            "491941b625045e464f806d40433765859333ad8a"
        ],
        [
            "replace (S U T R) with (- S U R T)...",
            "VernacExtend",
            "9bd302eabd69b94cd1391f53b740e8198d613689"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "rewrite H15.",
            "VernacExtend",
            "63b8b0d0c08cef2e135c7c663a2c78a6e22fdeb6"
        ],
        [
            "replace (S4 V P R Q) with (- S4 P V Q R)...",
            "VernacExtend",
            "bd5057ed924e2b7d982f30cb2ccae8cd9e350f6f"
        ],
        [
            "replace (S4 U P R Q) with (- S4 P U Q R)...",
            "VernacExtend",
            "5d3e9318f19d17bd78148da44288e2afee710fc9"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "assert (S4 U T V R<>0)...",
            "VernacExtend",
            "b8805fc46eb7d8abbb1cbb429bdf5ac42d245be2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "non_zero_denom_on_line_area",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "unfold on_line in |- *.",
                        "VernacExtend",
                        "014a77f206b04c9193c2fa30b5a13f0c948080b0"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_zero_denom_inter_ll_area",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "unfold inter_ll in |- *.",
                        "VernacExtend",
                        "bdbd94472f365bd3126356fcffda007113fdc4e9"
                    ]
                },
                {
                    "command": [
                        "unfold parallel in |- *.",
                        "VernacExtend",
                        "1db2ae8c6adf068d2c0b937bd0259b8d01a7304c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_zero_denom_on_parallel_d_area",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "unfold on_parallel in |- *.",
                        "VernacExtend",
                        "72938949fa369e0a9d2956b9c359a44585626a52"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_zero_denom_on_inter_line_parallel_area",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "unfold on_inter_line_parallel in |- *.",
                        "VernacExtend",
                        "fa6045544b19717853b6c2c60bad487ff350e8d7"
                    ]
                },
                {
                    "command": [
                        "unfold parallel in |- *.",
                        "VernacExtend",
                        "1db2ae8c6adf068d2c0b937bd0259b8d01a7304c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parallel_transitivity",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cases_equality A B.",
                        "VernacExtend",
                        "922c1da3ede1bb19316db5c6ed21721479b29b66"
                    ]
                },
                {
                    "command": [
                        "subst;Geometry.",
                        "VernacExtend",
                        "ebb66d0e2fd546ab9f6811d1733a3b219c3cb73c"
                    ]
                },
                {
                    "command": [
                        "assert (on_parallel E F C D).",
                        "VernacExtend",
                        "2e728c5c17e156f5213095641cd3ea5fd47dd305"
                    ]
                },
                {
                    "command": [
                        "unfold on_parallel;intuition Geometry.",
                        "VernacExtend",
                        "14cf1d5d29d5fbc6a1dc6be5661445282f801e48"
                    ]
                },
                {
                    "command": [
                        "assert (on_parallel_d E F C D (F ** E / C ** D)).",
                        "VernacExtend",
                        "ddbf33d866eeba83d2afc899b1eca1368267562f"
                    ]
                },
                {
                    "command": [
                        "apply on_parallel_to_on_parallel_d.",
                        "VernacExtend",
                        "5d6058b164e3d7013cdcd8a130e515d25c2fc170"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "set (F ** E / C ** D).",
                        "VernacExtend",
                        "06e19b59814ccae2e3ebb7d5fcb2e6ec9048e305"
                    ]
                },
                {
                    "command": [
                        "unfold parallel,S4.",
                        "VernacExtend",
                        "d8b44f5b7fd86253f83f625286d4f55cc07c4264"
                    ]
                },
                {
                    "command": [
                        "replace (S A E B) with (S B A E) by Geometry.",
                        "VernacExtend",
                        "90b9dbcb6f2f180bf6ecde90d2f1477bb3704ab5"
                    ]
                },
                {
                    "command": [
                        "assert (T: S B A E = S B A F + f * S4 B C A D).",
                        "VernacExtend",
                        "a7274892cd554fcca899570ad045dbbef2194ce8"
                    ]
                },
                {
                    "command": [
                        "apply (elim_area_on_parallel_d B A C D F E).",
                        "VernacExtend",
                        "3e373adc21c09754a9946887ccb3b392326a8c41"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite T.",
                        "VernacExtend",
                        "53a33f68808157ebaeeb257231f3ebd76f0ec487"
                    ]
                },
                {
                    "command": [
                        "unfold S4.",
                        "VernacExtend",
                        "8227026cc3b74e881e1bd2383e572f1fb91ac57b"
                    ]
                },
                {
                    "command": [
                        "replace (S B C A) with (S A B C) by Geometry.",
                        "VernacExtend",
                        "9a6c6e6fdef409af3af7638c021efa57baccffa1"
                    ]
                },
                {
                    "command": [
                        "assert (on_parallel_d C D A B ( D ** C / A ** B)).",
                        "VernacExtend",
                        "74e4d29a075b83d0b76454733e0e81b34d5f71f2"
                    ]
                },
                {
                    "command": [
                        "unfold on_parallel_d.",
                        "VernacExtend",
                        "976bf537dcdda5abc66af12a9ebbacbdc130479c"
                    ]
                },
                {
                    "command": [
                        "repeat split;Geometry.",
                        "VernacExtend",
                        "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
                    ]
                },
                {
                    "command": [
                        "field;Geometry.",
                        "VernacExtend",
                        "6819c80981be188830379c4c62f906ad20dbd742"
                    ]
                },
                {
                    "command": [
                        "set (D ** C / A ** B).",
                        "VernacExtend",
                        "d5b824f1a4c2dae9acede32d4707285ca00f10de"
                    ]
                },
                {
                    "command": [
                        "replace (S A B C) with (S A B D + f0 * S4 A A B B).",
                        "VernacExtend",
                        "7f318113a7a16b92073acb9fbe8df5f782e813a9"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "uniformize_signed_areas.",
                        "VernacExtend",
                        "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply elim_area_on_parallel_d.",
                        "VernacExtend",
                        "cc0ca20e66a1a90f5aa225f539570b05bb4bed6d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}