{
    "filename": "construction_lemmas.v",
    "coq_project": "area-method",
    "vernac_cmds": [
        [
            "Require Export parallel_lemmas.",
            "VernacRequire",
            "21b9e305a181aca32f257456212beebd73498b3e"
        ],
        [
            "Definition on_line (A B C : Point) : Prop := Col A B C /\\ B <> C.",
            "VernacDefinition",
            "776758c6b5f33bc1c7d8e3a882c1770a91eafb4e"
        ],
        [
            "Definition on_line_d (A B C : Point) (lambda : F) : Prop := Col A B C /\\ B <> C /\\ B ** A = lambda * B ** C.",
            "VernacDefinition",
            "7996a95906a8eb60d637cf765ec327382e74e09d"
        ],
        [
            "Definition inter_ll (I A B C D : Point) : Prop := Col I A B /\\ Col I C D /\\ ~ parallel A B C D.",
            "VernacDefinition",
            "9077963aa1933dc2d863610ee7fa3b62d3ede025"
        ],
        [
            "Definition on_parallel (A' A B C : Point) : Prop := B <> C /\\ parallel A A' B C.",
            "VernacDefinition",
            "5c730b689003ea39688db7ddbc1eab9088047161"
        ],
        [
            "Definition on_parallel_d (Y R P Q : Point) (lambda : F) : Prop := P <> Q /\\ parallel Y R P Q /\\ R ** Y = lambda * P ** Q.",
            "VernacDefinition",
            "640bd2e39ed14553386e2e88b47e176db993b701"
        ],
        [
            "Definition on_inter_line_parallel (Y R U V P Q : Point) : Prop := ~Col R P Q /\\ Col Y U V /\\ parallel Y R P Q /\\ ~ parallel P Q U V.",
            "VernacDefinition",
            "65102f2f74f88d92a5f9c600521eae968e04688d"
        ],
        [
            "Definition on_inter_parallel_parallel (Y R U V W P Q : Point) : Prop := ~Col R P Q /\\ parallel Y R U V /\\ parallel Y W P Q /\\ ~ parallel P Q U V.",
            "VernacDefinition",
            "bfe2163d217515c65262c50af2eb59b871926e67"
        ],
        [
            "Definition is_midpoint (I A B : Point) := on_line_d I A B (1 / 2).",
            "VernacDefinition",
            "5b7f2634240b817c5ae01d0818e0fd4d760416f2"
        ],
        [
            "Definition mratio (Y U V : Point) (r : F) := on_parallel_d Y U U V (r / (1 + r)) /\\ 1 + r <> 0.",
            "VernacDefinition",
            "3dcef9604de9197ce773845ed1279e5366274f2a"
        ],
        [
            "Lemma on_line_to_on_line_d : forall A B C, on_line A B C -> on_line_d A B C (B**A / B**C).",
            "VernacStartTheoremProof",
            "61fb9b0256f47f8f43d0ab3d66902c9dd2d52182"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold on_line, on_line_d in *.",
            "VernacExtend",
            "941662937576cf9e83f7a48d9724aec879e29436"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on_parallel_to_on_parallel_d : forall Y T A B, on_parallel Y T A B -> on_parallel_d Y T A B (T**Y / A**B).",
            "VernacStartTheoremProof",
            "e8ed8b87c3ce294769230a12fb60388b4e4a6d18"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold on_parallel, on_parallel_d in *.",
            "VernacExtend",
            "43fc45beaf9723753e60bbf3245442791b078606"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem on_lineex : forall P Q : Point, P <> Q -> {Y : Point | Col Y P Q}.",
            "VernacStartTheoremProof",
            "34e1a5cf3b8c1fc3edad7a222710705fb06d1ee9"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T := A2a P Q 1)...",
            "VernacExtend",
            "632f580e17649236b0a02e3742b6b7cadd229af4"
        ],
        [
            "DecompExAnd T X.",
            "VernacExtend",
            "49c6b9e2ad77468040e745493cb85022a721f4a6"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem on_line_ex : forall P Q : Point, P<>Q -> exists Y, on_line Y P Q.",
            "VernacStartTheoremProof",
            "07a8f2765d8e36fe1fcafb887ee95ef92143e8b0"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert {Y : Point | Col Y P Q}.",
            "VernacExtend",
            "aec89be365192ceee98ebb07dbcffa79f1d866cf"
        ],
        [
            "apply on_lineex...",
            "VernacExtend",
            "092eabcaf7be9c0da0a21c601f353ac74fe30850"
        ],
        [
            "DecompEx H0 Y.",
            "VernacExtend",
            "78b2be8741daf4036a0f5363b6265f2e122b681d"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "unfold on_line...",
            "VernacExtend",
            "4690f16f9a61ed7120f725c24bc21ab118cd0118"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem on_line_dex : forall (P Q : Point) (lambda : F), P <> Q -> {Y : Point | Col Y P Q /\\ P ** Y = lambda * P ** Q}.",
            "VernacStartTheoremProof",
            "13c700c75710c4b1ffb4c626731f8d7ca6fd8cb4"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T := A2a P Q lambda).",
            "VernacExtend",
            "b4c9c63bb5b191a7dbbc3014edb3e694e724ac96"
        ],
        [
            "DecompExAnd T X.",
            "VernacExtend",
            "49c6b9e2ad77468040e745493cb85022a721f4a6"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inter_llex : forall P Q U V : Point, ~ parallel P Q U V -> {Y : Point | Col Y P Q /\\ Col Y U V}.",
            "VernacStartTheoremProof",
            "dfffc577dff04fbdd405dcf74c6d23ecac9046bd"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (P <> Q).",
            "VernacExtend",
            "4e2ec8bb8e15e6e481f1c8df4c18fbfba93e99af"
        ],
        [
            "eapply par_aux_1.",
            "VernacExtend",
            "ed1419a7d56895588f1fc0a1462e0ce6abf4f503"
        ],
        [
            "apply H...",
            "VernacExtend",
            "e11f00a407e5296f27bbf4936af1a81bc964a46d"
        ],
        [
            "assert (T := A2a P Q (S P U V / S4 P U Q V))...",
            "VernacExtend",
            "1d50f051829240b3b55f65dceadac3b5e948a3b0"
        ],
        [
            "elim T; intro O; intros...",
            "VernacExtend",
            "82e8faaa61987825c036e1c78eadd6be47f5a12f"
        ],
        [
            "decompose [and] p...",
            "VernacExtend",
            "d7089b53fa555e0c736b053882528c1c041b93c9"
        ],
        [
            "clear T p...",
            "VernacExtend",
            "4b2e840bb125df821b40ad05462d7812f1a9b72c"
        ],
        [
            "cut (O ** Q / P ** Q = - (S Q U V / S4 P U Q V))...",
            "VernacExtend",
            "68eff637ae4e4800a51a47a19d43ad3c54126abf"
        ],
        [
            "intro...",
            "VernacExtend",
            "7274cb42adf060ad435addc8c1ce77d7b7ea4ef8"
        ],
        [
            "assert (S O U V = P ** O / P ** Q * S Q U V + O ** Q / P ** Q * S P U V)...",
            "VernacExtend",
            "973479a30aaf11cc4c50f88fe0a99a22de211a8b"
        ],
        [
            "apply l2_9...",
            "VernacExtend",
            "e2037d78dc22b61e7a7b5b91945a3594a1867cad"
        ],
        [
            "assert (P ** O / P ** Q = S P U V / S4 P U Q V)...",
            "VernacExtend",
            "2453b01c5bb7a287356dff19e66f512e63cb096d"
        ],
        [
            "rewrite H2...",
            "VernacExtend",
            "59a3b8ab9c5b741031bf1d6dfb13a5676578ac33"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "clear H2; rename H5 into H2...",
            "VernacExtend",
            "2f89abd9900cd066ccf05230fca6bfacb1cf0769"
        ],
        [
            "rewrite H2 in H4...",
            "VernacExtend",
            "94d54c05059e1427feee7faf71049e1fd5b2b281"
        ],
        [
            "rewrite H3 in H4...",
            "VernacExtend",
            "6ab7bfafdd63a87c9a7f26b0de8d21b9d056eb7d"
        ],
        [
            "assert (S O U V = 0)...",
            "VernacExtend",
            "6f4a3ccb23ef4d8578bd07c40a6dc011c1451c1a"
        ],
        [
            "rewrite H4; field...",
            "VernacExtend",
            "2cd81b6ad1ddf8ce30c7eb7bc16bb02a47ed53db"
        ],
        [
            "exists O...",
            "VernacExtend",
            "7da9b5ebebe740f0a9b46eaecb63b3c319ba52dd"
        ],
        [
            "assert (P ** O / P ** Q = S P U V / S4 P U Q V)...",
            "VernacExtend",
            "2453b01c5bb7a287356dff19e66f512e63cb096d"
        ],
        [
            "rewrite H2; field...",
            "VernacExtend",
            "526997ffd0e24e2093042cd3e5d5142e771b229f"
        ],
        [
            "clear H2; rename H3 into H2...",
            "VernacExtend",
            "c7cc7a31a580c126e4be70058db829099145c5d1"
        ],
        [
            "assert (P ** Q + Q ** O = P ** O)...",
            "VernacExtend",
            "1c0ee0c9d64ff8c593f823f79f6a887a79f687b8"
        ],
        [
            "rewrite <- H3 in H2...",
            "VernacExtend",
            "609bff29f97024c975abfe49f5ac5b644b67ffee"
        ],
        [
            "assert (O ** Q / P ** Q = 1 - S P U V / S4 P U Q V)...",
            "VernacExtend",
            "259af0d1a138446caea93930b7396eb4633ef00b"
        ],
        [
            "rewrite <- H2...",
            "VernacExtend",
            "39f603c621cc7b23d5b00762595b4183eb87bcb1"
        ],
        [
            "assert (O ** Q = - Q ** O)...",
            "VernacExtend",
            "d4de46505bb2b3d1b7f6a2d8eb7eb8572c97a7aa"
        ],
        [
            "rewrite H4...",
            "VernacExtend",
            "aeb082c71ae62cc460cefe3cd504de4d1011d239"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (1 - S P U V / S4 P U Q V = (S4 P U Q V - S P U V) / S4 P U Q V)...",
            "VernacExtend",
            "6201155bf7f6877fbd33c6eb3228008da9461ff9"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H5 in H4...",
            "VernacExtend",
            "e7046f981b2f6ce3179c6943dbbbec4608008088"
        ],
        [
            "clear H5...",
            "VernacExtend",
            "b7735bcf9426fe835fa1697030f3cf81c60794b9"
        ],
        [
            "unfold S4 in H4...",
            "VernacExtend",
            "442c756595b7f5a9da3d7afd1e86af6087506f72"
        ],
        [
            "assert (S P U Q + S P Q V - S P U V = - S Q U V)...",
            "VernacExtend",
            "f7e7ce0676837301d82d12ba682d9998db716010"
        ],
        [
            "assert (S P Q V = S P Q U + S P U V + S U Q V)...",
            "VernacExtend",
            "ba9fef29a5b5ab30e8b8302792934d520a8b9a64"
        ],
        [
            "rewrite H5...",
            "VernacExtend",
            "e21c470139807fef352aeff02b29dba2842f8edf"
        ],
        [
            "assert (S P Q U = - S P U Q)...",
            "VernacExtend",
            "3b1292090dd3d83369e65bfa2fd58704cd518fdd"
        ],
        [
            "rewrite H6...",
            "VernacExtend",
            "088edcdb375a8df0dd0fe0211e99d26ea89ea667"
        ],
        [
            "assert (S U Q V = - S Q U V)...",
            "VernacExtend",
            "6fa8e6a9cd55a571496f071f3e017cab284db0db"
        ],
        [
            "rewrite H7...",
            "VernacExtend",
            "865b3855aa400702f0b0efa51ddfa86d93e933c9"
        ],
        [
            "ring...",
            "VernacExtend",
            "1ba409b27e9f97c74f4dc663370ed436d64ac388"
        ],
        [
            "rewrite H5 in H4...",
            "VernacExtend",
            "e7046f981b2f6ce3179c6943dbbbec4608008088"
        ],
        [
            "rewrite H4...",
            "VernacExtend",
            "aeb082c71ae62cc460cefe3cd504de4d1011d239"
        ],
        [
            "unfold S4 in |- *...",
            "VernacExtend",
            "b31a6ab46b94d03a26cb7747ca3a2abcbb8babda"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_ll_ex : forall P Q U V : Point, ~ parallel P Q U V -> exists Y, inter_ll Y P Q U V.",
            "VernacStartTheoremProof",
            "c4f61209b5abeaa1bc3b664012318fb6b6e1c9a7"
        ],
        [
            "Proof with intuition.",
            "VernacProof",
            "9d7dd018a025ee77d546c146ed0932559cdd889e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert {Y : Point | Col Y P Q /\\ Col Y U V}.",
            "VernacExtend",
            "8f5a07a62031dbcd87f47b23ef1b29ed5aed3115"
        ],
        [
            "apply inter_llex...",
            "VernacExtend",
            "4f185c5323573ce92737b43d0faace970964eae1"
        ],
        [
            "DecompExAnd H0 Y.",
            "VernacExtend",
            "800c693d67896aff4b4dd5228f5dba31d5fae3ee"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "unfold inter_ll...",
            "VernacExtend",
            "976ccb1425155c81e736cb1d4054c720022c14a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem on_parallelex : forall P Q R : Point, Q<>R -> ~ Col P Q R -> exists Y, parallel Q R P Y.",
            "VernacStartTheoremProof",
            "c768c165fa6c84f7dbddce0dc8bad623d3d3a850"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ({Y : Point | parallel Q R P Y}).",
            "VernacExtend",
            "ccd59563cb13fab318680653d0dbaac739dfcf39"
        ],
        [
            "apply euclid_parallel_existence.",
            "VernacExtend",
            "6dc12adb656b98d364c0afe97c71e99467f02ca6"
        ],
        [
            "DecompEx H1 Y.",
            "VernacExtend",
            "7732c9697917da20a92ff630e4775fc901038cdc"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem on_parallel_ex : forall P Q R : Point, Q<>R -> ~ Col P Q R -> exists Y, on_parallel Y P Q R.",
            "VernacStartTheoremProof",
            "9359f76b548300f3008ba9761bb97947c6be0d94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ({Y : Point | parallel Q R P Y}).",
            "VernacExtend",
            "ccd59563cb13fab318680653d0dbaac739dfcf39"
        ],
        [
            "apply euclid_parallel_existence.",
            "VernacExtend",
            "6dc12adb656b98d364c0afe97c71e99467f02ca6"
        ],
        [
            "elim H1;intros.",
            "VernacExtend",
            "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "unfold on_parallel.",
            "VernacExtend",
            "72938949fa369e0a9d2956b9c359a44585626a52"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on_parallel_d_ex : forall (P Q R : Point) (lambda : F), P<>Q -> ~ Col P Q R -> exists Y, on_parallel_d Y R P Q lambda.",
            "VernacStartTheoremProof",
            "129d2e7ed925d0e50a8b76700afc44aed290e1f4"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ({Y':Point | (parallel P Q R Y') /\\ R<>Y'}).",
            "VernacExtend",
            "4c5f1e5b2214addf71a1fdaab343c80d4de114c7"
        ],
        [
            "apply euclid_parallel_existence_strong...",
            "VernacExtend",
            "31dd5151000a174b5ba664d701d5d51a9cbf85c2"
        ],
        [
            "DecompExAnd H1 Y'.",
            "VernacExtend",
            "fd84373b0c5918911f57718e1630a029d870f4bb"
        ],
        [
            "assert {Y : Point | Col Y R Y' /\\ R ** Y = (lambda * P**Q/R**Y') * R ** Y'}.",
            "VernacExtend",
            "cb4b5a7a8f896fefae8567d1e8db6f307eae128c"
        ],
        [
            "apply on_line_dex...",
            "VernacExtend",
            "ba8cebd7c8e990c04701bc59ab1c93c9fd36af15"
        ],
        [
            "DecompExAnd H1 Y.",
            "VernacExtend",
            "78ca448915b24bef912032c41484ceac5dd6fe2e"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "unfold on_parallel_d.",
            "VernacExtend",
            "976bf537dcdda5abc66af12a9ebbacbdc130479c"
        ],
        [
            "repeat split...",
            "VernacExtend",
            "0321435bc7cb77f3f3ae66f45e4ed580fdab4f58"
        ],
        [
            "cut (parallel P Q R Y).",
            "VernacExtend",
            "13a9eb86546f70901b3de999cfe28659321deb0f"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "eapply col_par_par.",
            "VernacExtend",
            "4cd16fb268f46af064e97cd816500daef9eb1c3a"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "on_line_to_on_line_d",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold on_line, on_line_d in *.",
                        "VernacExtend",
                        "941662937576cf9e83f7a48d9724aec879e29436"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on_parallel_to_on_parallel_d",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold on_parallel, on_parallel_d in *.",
                        "VernacExtend",
                        "43fc45beaf9723753e60bbf3245442791b078606"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on_parallelex",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ({Y : Point | parallel Q R P Y}).",
                        "VernacExtend",
                        "ccd59563cb13fab318680653d0dbaac739dfcf39"
                    ]
                },
                {
                    "command": [
                        "apply euclid_parallel_existence.",
                        "VernacExtend",
                        "6dc12adb656b98d364c0afe97c71e99467f02ca6"
                    ]
                },
                {
                    "command": [
                        "DecompEx H1 Y.",
                        "VernacExtend",
                        "7732c9697917da20a92ff630e4775fc901038cdc"
                    ]
                },
                {
                    "command": [
                        "exists Y.",
                        "VernacExtend",
                        "49394996b896109363dce3db54779891f7a20742"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on_parallel_ex",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert ({Y : Point | parallel Q R P Y}).",
                        "VernacExtend",
                        "ccd59563cb13fab318680653d0dbaac739dfcf39"
                    ]
                },
                {
                    "command": [
                        "apply euclid_parallel_existence.",
                        "VernacExtend",
                        "6dc12adb656b98d364c0afe97c71e99467f02ca6"
                    ]
                },
                {
                    "command": [
                        "elim H1;intros.",
                        "VernacExtend",
                        "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "unfold on_parallel.",
                        "VernacExtend",
                        "72938949fa369e0a9d2956b9c359a44585626a52"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}