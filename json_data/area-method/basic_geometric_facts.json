{
    "filename": "basic_geometric_facts.v",
    "coq_project": "area-method",
    "vernac_cmds": [
        [
            "Require Export geometry_tools.",
            "VernacRequire",
            "54a962158d255366810ac983bd9449926a331c37"
        ],
        [
            "Theorem field_prop1 : forall a : F, -a=0 -> a=0.",
            "VernacStartTheoremProof",
            "a5f6bc39bfa917d281088e26cb2312fd9483319b"
        ],
        [
            "Proof with try solve [ ring | congruence ].",
            "VernacProof",
            "7a54d2e518b1a2d07863db4324e7c7b6c9b59093"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (- -a=-0).",
            "VernacExtend",
            "b0b064ca6011939093441bacaccbe42771badbef"
        ],
        [
            "rewrite H...",
            "VernacExtend",
            "2ded38871f6ef5ae4e687aa3245494ae541f7202"
        ],
        [
            "assert (- -a=a)...",
            "VernacExtend",
            "163b14c884e107a7495b089c4600afdf2970e2ae"
        ],
        [
            "assert (-0=0)...",
            "VernacExtend",
            "51adda33e7a0cb07d89f8aa62973b6a620fa0b2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve field_prop1 : Geom.",
            "VernacHints",
            "f6edd97e6d22ed623ef136dabd83601fe733a5f6"
        ],
        [
            "Theorem col_1 : forall A B C : Point, Col A B C -> Col B A C.",
            "VernacStartTheoremProof",
            "caa3dc7b3447aa1d159cdfed6f2080e6b067939c"
        ],
        [
            "Proof with uniformize_signed_areas;Geometry.",
            "VernacProof",
            "56455ff7893c03e273f22f3e2e8f9309174b75bc"
        ],
        [
            "unfold Col in |- *.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem col_2 : forall A B C : Point, Col A B C -> Col A C B.",
            "VernacStartTheoremProof",
            "e487d19961ff3fe1df00c136e435f325e48f1ab4"
        ],
        [
            "Proof with uniformize_signed_areas;Geometry.",
            "VernacProof",
            "56455ff7893c03e273f22f3e2e8f9309174b75bc"
        ],
        [
            "unfold Col in |- *.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem col_3 : forall A B C : Point, Col A B C -> Col B C A.",
            "VernacStartTheoremProof",
            "bc61e662fc500f1a0b62895f7535fb365f641ed5"
        ],
        [
            "Proof with uniformize_signed_areas;Geometry.",
            "VernacProof",
            "56455ff7893c03e273f22f3e2e8f9309174b75bc"
        ],
        [
            "unfold Col in |- *.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem col_4 : forall A B C : Point, Col A B C -> Col C B A.",
            "VernacStartTheoremProof",
            "4beaa53ebe16d32e70509d35fef446608fb273be"
        ],
        [
            "Proof with uniformize_signed_areas;Geometry.",
            "VernacProof",
            "56455ff7893c03e273f22f3e2e8f9309174b75bc"
        ],
        [
            "unfold Col in |- *.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem col_5 : forall A B C : Point, Col A B C -> Col C A B.",
            "VernacStartTheoremProof",
            "f6de57ece7f7e513c7d52538cb66b98a8c24a8fb"
        ],
        [
            "Proof with uniformize_signed_areas;Geometry.",
            "VernacProof",
            "56455ff7893c03e273f22f3e2e8f9309174b75bc"
        ],
        [
            "unfold Col in |- *.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve col_1 col_2 col_3 col_4 col_5: Geom.",
            "VernacHints",
            "c27891fc01dd91e029307281e870123e15084c63"
        ],
        [
            "Theorem noteqnotzero : forall A B : Point, A <> B -> A ** B <> 0.",
            "VernacStartTheoremProof",
            "b8f9dff2201c51aec95872d42649bcf30dc87f09"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A ** B = 0 <-> A = B).",
            "VernacExtend",
            "e10e3be0ffeb93cba37f9b507675c7ec4eebbc9c"
        ],
        [
            "apply A1b.",
            "VernacExtend",
            "cd9c2dcf466e31065dae0097df638b65ac017243"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve noteqnotzero: Geom.",
            "VernacHints",
            "6674c710e4e51fd6d1a967fe83d65522f81ff91f"
        ],
        [
            "Theorem egalcol : forall A B C : Point, A = B -> Col A B C.",
            "VernacStartTheoremProof",
            "54b86e1167159f7064b2d4f1c94318ca64cd5329"
        ],
        [
            "Proof with try solve [ Geometry | congruence ].",
            "VernacProof",
            "951fd48154286a5785fa8f2b23d0da9c164bac64"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Col.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "rewrite H...",
            "VernacExtend",
            "2ded38871f6ef5ae4e687aa3245494ae541f7202"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem notcolnotegal_1 : forall A B C : Point, ~ Col A B C -> A <> B.",
            "VernacStartTheoremProof",
            "22ce16b68158d941283caa93b16df55490892316"
        ],
        [
            "unfold Col in |- *.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (T := egalcol A B C H0).",
            "VernacExtend",
            "312ffcf8324b872982cfa9de6ea947c76a54dd20"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem notcolnotegal_2 : forall A B C : Point, ~ Col A B C -> B <> C.",
            "VernacStartTheoremProof",
            "e2c97d4aa815cec47d6f12016d561ba185c4dfb9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ Col A B C -> ~ Col B C A).",
            "VernacExtend",
            "3e8919aaa00fb8f62a4808deec231d8f17677f97"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (~ Col B C A).",
            "VernacExtend",
            "f2ccde2b3f06377cdf6767f60a87564e90095b27"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply notcolnotegal_1.",
            "VernacExtend",
            "259690771bbc9b6e91e096c1c5a1a9d910a63108"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem notcolnotegal_3 : forall A B C : Point, ~ Col A B C -> A <> C.",
            "VernacStartTheoremProof",
            "35f16c08d203da1d29dc8dfcad472f120f779a27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ Col A B C -> ~ Col A C B).",
            "VernacExtend",
            "5ffdf1d26a04e1627470c7ed85b0ed7bd191f5c0"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (~ Col A C B).",
            "VernacExtend",
            "3107643230c41d6aa35c76ec632c3401d8b052b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply notcolnotegal_1.",
            "VernacExtend",
            "259690771bbc9b6e91e096c1c5a1a9d910a63108"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve notcolnotegal_1 notcolnotegal_2 notcolnotegal_3: Geom.",
            "VernacHints",
            "f108a5d005331a1bdb8bae67821a8489a462a0fd"
        ],
        [
            "Theorem notparallelnotegal_1 : forall A B C D, ~ parallel A B C D -> A<>B.",
            "VernacStartTheoremProof",
            "ef539d1d5d77c616ae9ad1ed3c8ccbda59b3cb3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem notparallelnotegal_2 : forall A B C D, ~ parallel A B C D -> C<>D.",
            "VernacStartTheoremProof",
            "4aa71a696150f8d91aa2041ac15ac2f254ed95b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve notparallelnotegal_1 notparallelnotegal_2 : Geom.",
            "VernacHints",
            "47b27a4b24554a3b7b61df77b9f0ba4489c37020"
        ],
        [
            "Theorem dirseg_1 : forall A B C D : Point, D ** C <> 0 -> A ** B / C ** D = B ** A / D ** C.",
            "VernacStartTheoremProof",
            "b6cea3a3bc1cf1cd13bde39eeef7bbd99e71bba7"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "uniformize_dir_seg.",
            "VernacExtend",
            "bd7c479007e309aaba93aa45ceef95465c42d0c7"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dirseg_1: Geom.",
            "VernacHints",
            "2956e383a1f885270bfc3e7630b0faa8a61dab58"
        ],
        [
            "Theorem dirseg_2 : forall A B C D : Point, A ** B = C ** D -> B ** A = D ** C.",
            "VernacStartTheoremProof",
            "1b75f656bed7b3c1b5d0f6cef445a68eca470556"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "uniformize_dir_seg.",
            "VernacExtend",
            "bd7c479007e309aaba93aa45ceef95465c42d0c7"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dirseg_2: Geom.",
            "VernacHints",
            "a7425838cdbeb8d4dc96525f024379f49dcc5dc6"
        ],
        [
            "Theorem dirseg_3 : forall A B C D : Point, C ** D <> 0 -> A ** B / C ** D = - (B ** A / C ** D).",
            "VernacStartTheoremProof",
            "9979b282df822e7bdf995d90ab8bfff5dceec676"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "uniformize_dir_seg.",
            "VernacExtend",
            "bd7c479007e309aaba93aa45ceef95465c42d0c7"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dirseg_4 : forall A B C D : Point, C ** D <> 0 -> A ** B / C ** D = - (A ** B / D ** C).",
            "VernacStartTheoremProof",
            "76fea6ab58be200cfadc369168fbf0267a100c4d"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "uniformize_dir_seg.",
            "VernacExtend",
            "bd7c479007e309aaba93aa45ceef95465c42d0c7"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dirseg_3 dirseg_4: Geom.",
            "VernacHints",
            "c1f492a195dd5a267384e33851fe3874d2ee14db"
        ],
        [
            "Theorem dirseg_simpl_1 : forall A B, A<>B -> A**B / A**B = 1.",
            "VernacStartTheoremProof",
            "ae9390b16c9451cc158f47ec33ba1196af677859"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "field;auto with Geom.",
            "VernacExtend",
            "2de65a1b7de4aa7c0a858aa5c7c65a478c26d278"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dirseg_simpl_2 : forall A B, A<>B -> B**A / A**B = -(1).",
            "VernacStartTheoremProof",
            "dc044f915c78806e8a07fe6c1a5dc3d908cd23b4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (B**A) with (- A**B).",
            "VernacExtend",
            "8df1395d43cdf2cddc691221a0100e3bf6263d48"
        ],
        [
            "field;auto with Geom.",
            "VernacExtend",
            "2de65a1b7de4aa7c0a858aa5c7c65a478c26d278"
        ],
        [
            "symmetry;auto with Geom.",
            "VernacExtend",
            "faf68225a9a97c0881ee4aa15c9449b72508f2a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dirsur_1 : forall A B C D E F : Point, ~ Col D E F -> S A B C / S D E F = S A C B / S D F E.",
            "VernacStartTheoremProof",
            "5f1ff6a774bf6b1338562e3e360cd3a42a82a99d"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dirsur_1: Geom.",
            "VernacHints",
            "c48abf99d8b4baa6828a5f4ac746cdc2e3fcfb7a"
        ],
        [
            "Theorem col_trans_1 : forall A B C D : Point, A <> B -> Col A B C -> Col A B D -> Col A C D.",
            "VernacStartTheoremProof",
            "7286c08c8f4d9af995c112d2bf969fb0ce5f20b9"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S A B C = S A B D + S A D C + S D B C)...",
            "VernacExtend",
            "85789ebddb3ba06329c24adebfbbb861e453b657"
        ],
        [
            "rewrite H0 in H2.",
            "VernacExtend",
            "a4d82e65c345819bdd50b79b067ee218c42a8857"
        ],
        [
            "rewrite H1 in H2.",
            "VernacExtend",
            "3ddaddaf8f89728f77671f580e26162e25035230"
        ],
        [
            "cases_col A D C...",
            "VernacExtend",
            "fc87df67142266f3529f2a7ba7c2a1d409ca885c"
        ],
        [
            "cases_equality C A...",
            "VernacExtend",
            "ba40a53a19cf2a4445d2dbe99d4493ee54627cf3"
        ],
        [
            "apply egalcol...",
            "VernacExtend",
            "cbdd9a72bca2a04b6b5ddb8c24152b9bdb9d7b84"
        ],
        [
            "NormalizeRing H2...",
            "VernacExtend",
            "f740a286c9181a98f9a5592a1405c31e2c63573e"
        ],
        [
            "assert (C ** B / C ** A = S D C B / S D C A)...",
            "VernacExtend",
            "7a56eac29d27de0b6d88936a4ae07095113f9bf6"
        ],
        [
            "assert (C ** A + A ** B = C ** B)...",
            "VernacExtend",
            "969ec712366c6e047370072cf7e5fc1f080e6656"
        ],
        [
            "rewrite <- H6 in H5...",
            "VernacExtend",
            "636946005b5109973032b067e0b5616255fc4bfd"
        ],
        [
            "assert ((C ** A + A ** B) / C ** A = 1 + A ** B / C ** A)...",
            "VernacExtend",
            "af9b05c3c1d1f83d57ed3f1a068c128bf22dceb3"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H7 in H5.",
            "VernacExtend",
            "e92784956538dea547fb4d09620f99424e4a73cc"
        ],
        [
            "clear H7 H6.",
            "VernacExtend",
            "e62da95dad69eb157b82b79ebc2630c39c559fc6"
        ],
        [
            "assert (S D B C = - S D C B)...",
            "VernacExtend",
            "30da5f3055ff4f3aafcea26ba2d06573d7780f0c"
        ],
        [
            "rewrite H6 in H2...",
            "VernacExtend",
            "98dd5c5fcb897d812c4c5f8f88989df948a30886"
        ],
        [
            "assert (S A D C = S D C A)...",
            "VernacExtend",
            "f85eebe7af3bef1fce584d7c585a7d5a16119277"
        ],
        [
            "rewrite H7 in H2...",
            "VernacExtend",
            "3f03af8d63ef6adc0645288b284e32092b4dea7a"
        ],
        [
            "IsoleVarRing (S D C B) H2...",
            "VernacExtend",
            "70f5d1110077b60ad1a6189c27debc13f8bb7ade"
        ],
        [
            "rewrite H2 in H5...",
            "VernacExtend",
            "0dc9b06718d1e59f9c076d6066961007a4d3e188"
        ],
        [
            "assert (S D C A / S D C A = 1)...",
            "VernacExtend",
            "fbd9be98bc61f4d3d98046ef95a4299900b9e930"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H8 in H5.",
            "VernacExtend",
            "d1f0a58fe6fce7615e114e391cab67ca89c6e81d"
        ],
        [
            "clear H6 H7 H8.",
            "VernacExtend",
            "485119b998c6e7ae279f26042373a2f7c5575513"
        ],
        [
            "IsoleVarRing (A ** B) H5...",
            "VernacExtend",
            "f40d18a70108150ba24166afa512b5982686448c"
        ],
        [
            "assert (A = B)...",
            "VernacExtend",
            "7c4599ef634e9beab07b48818528be983407c6e7"
        ],
        [
            "intuition...",
            "VernacExtend",
            "6a84eb80fb30aaad8b64a8457cf4a5faa48044e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve col_trans_1.",
            "VernacHints",
            "78bca1f1e757f33c249ff7f7a0e8d4701e5fcbc1"
        ],
        [
            "Lemma build_point_not_collinear_1 : forall A B, A<>B -> exists C, ~ Col A B C.",
            "VernacStartTheoremProof",
            "d62adc73baac69cb7336f68789d1ea9411818d93"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "assert ({A : Point & {B : Point & {C : Point | ~ Col A B C}}}).",
            "VernacExtend",
            "fb98d68c73d1665ad146fc08af03240f42478cfa"
        ],
        [
            "apply A4.",
            "VernacExtend",
            "ed50f026b9f0ab74220c6b488cb86e974e33ca7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H;intro X;intros.",
            "VernacExtend",
            "b80d80a8e50e3c83cd84edff9151f42250eaa8bb"
        ],
        [
            "elim p;intro Y;intros.",
            "VernacExtend",
            "eac4242477bab33814fdd3dc595b7f737f63ec09"
        ],
        [
            "elim p0;intro Z;intros.",
            "VernacExtend",
            "75ddb432961f50e0a9b0865ebd433538d52f0356"
        ],
        [
            "cases_col A B X.",
            "VernacExtend",
            "3b6667b54b1c43f9c48ce49e7fcf2cf0f24fe7c6"
        ],
        [
            "cases_col A B Y.",
            "VernacExtend",
            "2cb2dfc0f1441e690f9f66ce81b108730b962d45"
        ],
        [
            "cases_col A B Z.",
            "VernacExtend",
            "a01bb350b8b23b1b7a5927d48c0111a4e5982b8e"
        ],
        [
            "cases_equality Y A.",
            "VernacExtend",
            "a690d7194ea2463c8c34eebc9ea7d9922ea0aff0"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "assert (Col A X Z).",
            "VernacExtend",
            "bd9c7c3b0ddb2c06ed5351c838f7db68f1c34e66"
        ],
        [
            "eapply col_trans_1 with (B:=B)...",
            "VernacExtend",
            "c85069b05e4d85400a602cf688df88191050b05f"
        ],
        [
            "assert (Col X A Z)...",
            "VernacExtend",
            "d60052e63c975b0b585c85f9465b104a48e23ae2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col A Y Z).",
            "VernacExtend",
            "a413098d7a5601fd80aa2cef02ffb384780e4ab6"
        ],
        [
            "eapply col_trans_1 with (B:=B)...",
            "VernacExtend",
            "c85069b05e4d85400a602cf688df88191050b05f"
        ],
        [
            "assert (Col A Y X).",
            "VernacExtend",
            "f0c2a3b17674f0045d5ec3e73e6bdfa493ae278b"
        ],
        [
            "eapply col_trans_1 with (B:=B)...",
            "VernacExtend",
            "c85069b05e4d85400a602cf688df88191050b05f"
        ],
        [
            "assert (Col Y X Z).",
            "VernacExtend",
            "a6ecf0bbe4f5f703ce5b163fb2b5ce69c2db78db"
        ],
        [
            "eapply col_trans_1 with (B:=A)...",
            "VernacExtend",
            "cf7db40873dcde7b29f440b881b36eec4679d76c"
        ],
        [
            "assert (Col X Y Z)...",
            "VernacExtend",
            "346efea8b186b880011be502214026656f1b51a8"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists Z...",
            "VernacExtend",
            "4175d6c0a1d37ebe66467cfc854fd78f91d81490"
        ],
        [
            "exists Y...",
            "VernacExtend",
            "3da569fdb3a3a84d07462b646d09b013e7356fd1"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma build_point_not_collinear_2 : forall A, exists B, exists C, ~ Col A B C.",
            "VernacStartTheoremProof",
            "16327152f6b197ff811e24cea35f33d7c4250d50"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert ({A : Point & {B : Point & {C : Point | ~ Col A B C}}}).",
            "VernacExtend",
            "fb98d68c73d1665ad146fc08af03240f42478cfa"
        ],
        [
            "apply A4.",
            "VernacExtend",
            "ed50f026b9f0ab74220c6b488cb86e974e33ca7d"
        ],
        [
            "DecompEx H A1.",
            "VernacExtend",
            "db5188a7949c048a420198f29804e08f42e61b22"
        ],
        [
            "DecompEx p B.",
            "VernacExtend",
            "5cc66393bd5863f3d62d31806ad4d3cc52071c0b"
        ],
        [
            "DecompEx p0 C.",
            "VernacExtend",
            "20ea45a410312869ded08e6da47d9c1a3ebf190a"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "exists A1.",
            "VernacExtend",
            "860e23291647008053c30621a32bfd6912a8a298"
        ],
        [
            "exists C...",
            "VernacExtend",
            "8ad17a1a6ec44251315e19b943c56ccd95123c2b"
        ],
        [
            "assert (T:=build_point_not_collinear_1 A B H).",
            "VernacExtend",
            "a721e2e29f783d145adc04c64b4ba0c2eac876fc"
        ],
        [
            "DecompEx T C1.",
            "VernacExtend",
            "ff223abad52df482356a943d2f4cac4f35b98b62"
        ],
        [
            "exists B.",
            "VernacExtend",
            "6af01c0c0423549b6c4629183bbae5f87e428c57"
        ],
        [
            "exists C1...",
            "VernacExtend",
            "e4e528dec78f4f8f5bf87ecd62ff058428af3049"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem col_not_col_1 : forall A B O P : Point, A <> O -> Col A P O -> ~ Col P A B -> ~ Col O A B.",
            "VernacStartTheoremProof",
            "9fb0f38e8f7dbc4cb5fc0e8d9b5bf8dcff38b793"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (Col A O P)...",
            "VernacExtend",
            "c8cf59123ee7bd2ef1b0fb808f1e15f6ecbd245f"
        ],
        [
            "assert (Col A O B)...",
            "VernacExtend",
            "12505386650c738209e3e1805a97783bfb940ef9"
        ],
        [
            "assert (Col A P B)...",
            "VernacExtend",
            "5dcbd56eacef3ce51bf6c7e945f1e345b8f7d792"
        ],
        [
            "eauto with Geom...",
            "VernacExtend",
            "c0f0386e575811763ea240642f1d7725343849fc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve col_not_col_1.",
            "VernacHints",
            "602740f8f208dc09a9bab56eb2c34ecfd3caa8f0"
        ],
        [
            "Theorem A6_1 : forall P Q A M : Point, M <> Q -> ~ Col Q A M -> Col P Q M -> P ** M / Q ** M = S P A M / S Q A M.",
            "VernacStartTheoremProof",
            "47b7749e40f7cf95e9399578588ca22347dd00f6"
        ],
        [
            "Proof with try solve [ Geometry | congruence ].",
            "VernacProof",
            "951fd48154286a5785fa8f2b23d0da9c164bac64"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (P ** M / Q ** M = M ** P / M ** Q)...",
            "VernacExtend",
            "23f7b772094620828725a7ee0c4b81d6603b51a6"
        ],
        [
            "assert (M ** P / M ** Q = S A M P / S A M Q)...",
            "VernacExtend",
            "e8fb5a90d36ca2246a487dc593bf3208a283b2b5"
        ],
        [
            "assert (S A M P = S P A M)...",
            "VernacExtend",
            "fb936fb9015f75afe49b6ac29fc8484b65e00778"
        ],
        [
            "assert (S A M Q = S Q A M)...",
            "VernacExtend",
            "7ec35555ce70b4347a1c1bae86375653ee583921"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve A6_1: Geom.",
            "VernacHints",
            "bfa5f3d5d0672f741b19d6f296a7ea5d1ffe9be3"
        ],
        [
            "Theorem A6_2 : forall P Q R A : Point, P <> Q -> ~ Col Q A P -> Col P Q R -> P ** R / P ** Q = S R A P / S Q A P.",
            "VernacStartTheoremProof",
            "eada4e7b199eeb7c7ad737c49a3106129e03dbb8"
        ],
        [
            "Proof with try solve [ Geometry | congruence ].",
            "VernacProof",
            "951fd48154286a5785fa8f2b23d0da9c164bac64"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (P ** R / P ** Q = S A P R / S A P Q)...",
            "VernacExtend",
            "80aceb929f3b97bbfca9409e3d3ae0343e0447da"
        ],
        [
            "assert (S A P R = S R A P)...",
            "VernacExtend",
            "c3ce269dd237df20d0ea9b8446a1096b30c939a1"
        ],
        [
            "assert (S A P Q = S Q A P)...",
            "VernacExtend",
            "9df3d05ff7f80d42efd2cd85b2534cecc269214b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve A6_2: Geom.",
            "VernacHints",
            "4c75dc40a9911c0911d1feafaf2062bea18daf84"
        ],
        [
            "Theorem A6_3 : forall A B C P : Point, A <> C -> ~ Col P A C -> Col A B C -> C ** B / A ** C = S P C B / S P A C.",
            "VernacStartTheoremProof",
            "3765bcb672ec73a484d5e6b4f40af3283e56adc5"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (C ** A = - A ** C)...",
            "VernacExtend",
            "b69cf323fd56311da1d23119ebf0c91d83090d8b"
        ],
        [
            "assert (S P C A = - S P A C)...",
            "VernacExtend",
            "e4fe578ae2049a7e8b7a1e403fab1a07eacfc7c7"
        ],
        [
            "assert (C ** B / C ** A = S P C B / S P C A)...",
            "VernacExtend",
            "3240b2f5630819d79a9dddcea05720e50da3d46f"
        ],
        [
            "rewrite H3 in H4...",
            "VernacExtend",
            "6ab7bfafdd63a87c9a7f26b0de8d21b9d056eb7d"
        ],
        [
            "rewrite H2 in H4...",
            "VernacExtend",
            "94d54c05059e1427feee7faf71049e1fd5b2b281"
        ],
        [
            "RewriteVar (C ** B) H4...",
            "VernacExtend",
            "8a8e89d5c9e6c3123cb422230af38b32bcba96ae"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve A6_3: Geom.",
            "VernacHints",
            "c6699dd88dafed986184c7c5fade567f75aeb6b0"
        ],
        [
            "Theorem A6_4 : forall A B C P : Point, A <> B -> ~ Col P A B -> Col A B C -> C ** A / A ** B = S P C A / S P A B.",
            "VernacStartTheoremProof",
            "96626ef919fb105335eb4687f63bd4479efa3401"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (A ** C / B ** A = S P A C / S P B A)...",
            "VernacExtend",
            "6de6beb11321b3fa25bc0cfaa85fe107a5b42d8c"
        ],
        [
            "assert (A ** C / B ** A = C ** A / A ** B)...",
            "VernacExtend",
            "ecebb9940caa0a34264bc7075aeb53ea68facaa1"
        ],
        [
            "assert (S P C A / S P A B = S P A C / S P B A)...",
            "VernacExtend",
            "c9c52d86273ba27635ab9e9387fd72b1ce99e6d4"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve A6_4: Geom.",
            "VernacHints",
            "7d6372884e982ff7655369672f17305dd4a7a490"
        ],
        [
            "Theorem A6_5 : forall A B O P : Point, O <> A -> ~ Col O A B -> Col P A O -> P ** A / O ** A = S P A B / S O A B.",
            "VernacStartTheoremProof",
            "ba0a136013824745023a9cb79a1f8d0769f3c44f"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (P ** A / O ** A = S P B A / S O B A)...",
            "VernacExtend",
            "d6b98a63fc3588f02149455cbfff0e1a485bc2f6"
        ],
        [
            "assert (S P A B = - S P B A)...",
            "VernacExtend",
            "ca3eab03947ee31c9c7abe97f64b04732adfe38a"
        ],
        [
            "assert (S O A B = - S O B A)...",
            "VernacExtend",
            "ecc3fd5b9ec5bf404971c7c10e4c24cbca58d732"
        ],
        [
            "rewrite H3...",
            "VernacExtend",
            "d8b9aa66d5cb0705ee0fda995c1a8964f828c656"
        ],
        [
            "rewrite H4...",
            "VernacExtend",
            "aeb082c71ae62cc460cefe3cd504de4d1011d239"
        ],
        [
            "rewrite H2...",
            "VernacExtend",
            "59a3b8ab9c5b741031bf1d6dfb13a5676578ac33"
        ],
        [
            "assert (S O B A <> 0)...",
            "VernacExtend",
            "c553869be52ef42087db401a63a664812cfa31fb"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve A6_5: Geom.",
            "VernacHints",
            "15fd551c93db2aac636242d131f2923b612fa96f"
        ],
        [
            "Theorem A6_6 : forall A B R Q : Point, A <> Q -> ~ Col Q A B -> Col A R Q -> A ** R / A ** Q = S R A B / S Q A B.",
            "VernacStartTheoremProof",
            "4311aed81141f566b2fd01a640d1e70b47a65c1f"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (S R A B / S Q A B = S R B A / S Q B A)...",
            "VernacExtend",
            "bba527e0fc07e4c6f2009dd960fcfe5f8e866287"
        ],
        [
            "rewrite H2...",
            "VernacExtend",
            "59a3b8ab9c5b741031bf1d6dfb13a5676578ac33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve A6_6: Geom.",
            "VernacHints",
            "65e7f28ef6745a074476eee46aac8d9b1350bfda"
        ],
        [
            "Theorem l2_7 : forall A B C D P : Point, Col C A B -> Col D A B -> ~ Col P C A -> ~ Col P A B -> A <> B -> S P C D / S P A B = C ** D / A ** B.",
            "VernacStartTheoremProof",
            "60cbac642cc104535a73d4495fe0a70002110a2f"
        ],
        [
            "Proof with try solve [ Geometry | congruence | field; Geometry ].",
            "VernacProof",
            "c8af5a74d570138589e8a4f701b022f0c293bb1b"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "cases_equality C A...",
            "VernacExtend",
            "ba40a53a19cf2a4445d2dbe99d4493ee54627cf3"
        ],
        [
            "assert (Col A B D)...",
            "VernacExtend",
            "7fa795205ced39b1d8e6e3f332752be3a95e5537"
        ],
        [
            "rewrite H4...",
            "VernacExtend",
            "aeb082c71ae62cc460cefe3cd504de4d1011d239"
        ],
        [
            "symmetry in |- *...",
            "VernacExtend",
            "4b7a585e3caee360273a62b455864c704b538a54"
        ],
        [
            "assert (S P C D / S P A B = S P C D / S P C A * (S P C A / S P A B))...",
            "VernacExtend",
            "4da9c89abe6d4605acba14781e5b5b1cc056720c"
        ],
        [
            "assert (A <> C)...",
            "VernacExtend",
            "13b92fdaff213ed4a8fd658503703ff747b2d184"
        ],
        [
            "assert (Col C D A)...",
            "VernacExtend",
            "aa288de24d335fe9c2f8415accfed67fd3a66eaa"
        ],
        [
            "eauto with Geom...",
            "VernacExtend",
            "c0f0386e575811763ea240642f1d7725343849fc"
        ],
        [
            "assert (C ** D / C ** A = S P C D / S P C A)...",
            "VernacExtend",
            "9d45994581754247de941c8788cd2df6d8c5a9c9"
        ],
        [
            "assert (A ** C / A ** B = S P A C / S P A B)...",
            "VernacExtend",
            "1d003199c486efaa7dd410e5249283cdbb5183e9"
        ],
        [
            "assert (C ** A / A ** B = S P C A / S P A B)...",
            "VernacExtend",
            "224afbe3200d55501a580d0998880070261e095c"
        ],
        [
            "assert (C ** D / C ** A * (C ** A / A ** B) = C ** D / A ** B)...",
            "VernacExtend",
            "57b1715bdde428510c31017c8608fce68c4a0240"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem par_aux_1 : forall P Q U V : Point, ~ parallel P Q U V -> P <> Q.",
            "VernacStartTheoremProof",
            "f4b15a75feca6675ab36a59167451e8b44883c32"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "unfold parallel in H...",
            "VernacExtend",
            "b709a0b679ea8f14f79ebb285e562fddec3ebd8f"
        ],
        [
            "unfold S4 in H...",
            "VernacExtend",
            "d26c9aa2c03d35b0c70f517aa3979d2a98b61cde"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "assert (S P U Q = 0)...",
            "VernacExtend",
            "215723955d0dc0ff19c8ec01e392d6ae56b580e7"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "assert (S P Q V = 0)...",
            "VernacExtend",
            "d1fccc45becc56f5e877148c3f998b10523de873"
        ],
        [
            "rewrite H0...",
            "VernacExtend",
            "50fce2eb274e9c787791aa79cecdd73ad9f1e643"
        ],
        [
            "rewrite H1 in H...",
            "VernacExtend",
            "19f128bfe5833bff907e03e7bc77ea6751fd6860"
        ],
        [
            "rewrite H2 in H...",
            "VernacExtend",
            "d180f184065b104df0c6009951dc1f4fbe68e884"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem par_not_all_col : forall P Q U V : Point, ~ parallel P Q U V -> ~ Col P U Q \\/ ~ Col P Q V.",
            "VernacStartTheoremProof",
            "5ed1aa01b505d75774402d375fb7d494270cf3c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_col P U Q.",
            "VernacExtend",
            "a101c3fd4e618325d5e57ae833f503e87301dc98"
        ],
        [
            "unfold parallel in H.",
            "VernacExtend",
            "d1b5154695d29c7f9732e366971e5d1f4f1a8992"
        ],
        [
            "unfold S4 in H.",
            "VernacExtend",
            "81263ab0bc5e2e0def442e38baba535320714554"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "assert (0 + S P Q V = S P Q V).",
            "VernacExtend",
            "ba2af3ffab70794424d6dc7ac9fd07622d609cd1"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite H1 in H.",
            "VernacExtend",
            "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold Col in |- *.",
            "VernacExtend",
            "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem co_side_main : forall A B P Q M : Point, ~ Col Q A B -> ~ Col P A M -> ~ Col Q A M -> Q <> M -> Col A B M -> Col P Q M -> P ** M / Q ** M = S P A B / S Q A B.",
            "VernacStartTheoremProof",
            "e24d2d2ace8822d14b926254dcaeff7184f61f7f"
        ],
        [
            "Proof with try solve [ Geometry | congruence | field; Geometry ].",
            "VernacProof",
            "c8af5a74d570138589e8a4f701b022f0c293bb1b"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (S P A B / S Q A B = S P A B / S P A M * (S P A M / S Q A M * (S Q A M / S Q A B)))...",
            "VernacExtend",
            "40c3a94b34e5cfdccbe7361b9da68da5339570ca"
        ],
        [
            "assert (A <> B); eauto with Geom...",
            "VernacExtend",
            "f15c38a696b1e564384059aeea10c9b46fe98085"
        ],
        [
            "assert (A <> M); eauto with Geom...",
            "VernacExtend",
            "7b76a3dc2d0d3fc883ce9602277d1357b7d0d9ea"
        ],
        [
            "assert (A ** B / A ** M * (P ** M / Q ** M * (A ** M / A ** B)) = P ** M / Q ** M)...",
            "VernacExtend",
            "3f57b73a16b89a980375dea623403b662c16d249"
        ],
        [
            "assert (A ** B / A ** M = S P A B / S P A M)...",
            "VernacExtend",
            "9f76870da444fd285fd05e31161119f0cc436143"
        ],
        [
            "assert (P ** M / Q ** M = S P A M / S Q A M)...",
            "VernacExtend",
            "cbe6134f7fc3472ed970721100ee835184ace81a"
        ],
        [
            "assert (A ** M / A ** B = S Q A M / S Q A B)...",
            "VernacExtend",
            "c3db6cafdcbc6b24c349e51274b710cafb4d278c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem co_side : forall A B P Q M : Point, ~ Col Q A B -> Q <> M -> Col A B M -> Col P Q M -> P ** M / Q ** M = S P A B / S Q A B.",
            "VernacStartTheoremProof",
            "b0d13af5de67c70532ed2c37a571e69c5dc567d9"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "cases_equality M A...",
            "VernacExtend",
            "302b5aa7cbdc476fc85f5f9ea27e51b12242a7ad"
        ],
        [
            "rewrite H3...",
            "VernacExtend",
            "d8b9aa66d5cb0705ee0fda995c1a8964f828c656"
        ],
        [
            "rewrite H3 in H0...",
            "VernacExtend",
            "513ef64c803148982ab92debf26f8095eb905fb4"
        ],
        [
            "rewrite H3 in H2...",
            "VernacExtend",
            "a71b3b6c9fe6c9609ffa98b0d66651ae837420b1"
        ],
        [
            "assert (~ Col Q A M)...",
            "VernacExtend",
            "4286c75e95cdf46795c985c880864224e091e142"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "assert (Col Q M A)...",
            "VernacExtend",
            "ec71eb88c933dc56d62658deb446e5be36714086"
        ],
        [
            "assert (Col Q M P)...",
            "VernacExtend",
            "f23b8d46d29a66130927b49ae2dd1ba98840907e"
        ],
        [
            "assert (Col Q A P); eauto with Geom...",
            "VernacExtend",
            "5dfc6077a002f2604a7652f0c336e2f56452ad92"
        ],
        [
            "assert (Col A M Q)...",
            "VernacExtend",
            "75bee4aef05e56bf570651a11de324921d9849a2"
        ],
        [
            "assert (Col A M B)...",
            "VernacExtend",
            "1b0996d945bd914e77a042714fbee62d15b8b900"
        ],
        [
            "assert (Col A B Q); eauto with Geom...",
            "VernacExtend",
            "34c67fd23ce8389ff65f0b1653bb97e5a3bd40e6"
        ],
        [
            "cases_equality P M...",
            "VernacExtend",
            "84a12c4c79c818898ea92511380ac103bad2c3ad"
        ],
        [
            "rewrite <- H5 in H1...",
            "VernacExtend",
            "77a74c4a5ec761385534757cc3d5307a4cc435d4"
        ],
        [
            "assert (Col P A B)...",
            "VernacExtend",
            "cd78e3d9e93a6ee66b6b7cd133d1f25f0f491b02"
        ],
        [
            "rewrite H6...",
            "VernacExtend",
            "088edcdb375a8df0dd0fe0211e99d26ea89ea667"
        ],
        [
            "assert (P ** M = 0)...",
            "VernacExtend",
            "8b0a5a8141f5281339a2586f5808a1b530345991"
        ],
        [
            "rewrite H7...",
            "VernacExtend",
            "865b3855aa400702f0b0efa51ddfa86d93e933c9"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "cases_equality P Q...",
            "VernacExtend",
            "7e7984eb660bb5aa2df52a086025d9bf4ee03c69"
        ],
        [
            "rewrite H6...",
            "VernacExtend",
            "088edcdb375a8df0dd0fe0211e99d26ea89ea667"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (~ Col P A M)...",
            "VernacExtend",
            "c7b813f07f17cbeec1ec73fd725fc4ba81a947d9"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "assert (Col P M A)...",
            "VernacExtend",
            "c3fd8c0f1278ba3809f9b9a016214020e2f43f2c"
        ],
        [
            "assert (Col P M Q)...",
            "VernacExtend",
            "8c095caaf0064cf71676c23b0cf1013728145063"
        ],
        [
            "assert (Col P A Q); eauto with Geom...",
            "VernacExtend",
            "1725bd89155b6bfeecf37c1ee3da09409e2e8a4a"
        ],
        [
            "apply co_side_main...",
            "VernacExtend",
            "c60219e9f655fe6fa8fbcedeb0bc5ba5e695880d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve co_side: Geom.",
            "VernacHints",
            "bcb761604cf3ce118436235894a55b68c13f3d1e"
        ],
        [
            "Theorem inter_unicity : forall A B P Q M : Point, ~ parallel P Q A B -> Col A B M -> Col P Q M -> A = Q -> A = M.",
            "VernacStartTheoremProof",
            "c21a4acdb13a3cc2901eede8fe9a15f774aaab77"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "cases_equality A M...",
            "VernacExtend",
            "364333d7b3c6b23f71784cd6c2fbdca03f4216fa"
        ],
        [
            "assert (Col A M B)...",
            "VernacExtend",
            "1b0996d945bd914e77a042714fbee62d15b8b900"
        ],
        [
            "assert (Col Q M P)...",
            "VernacExtend",
            "f23b8d46d29a66130927b49ae2dd1ba98840907e"
        ],
        [
            "rewrite <- H2 in H5...",
            "VernacExtend",
            "e972fdea170ee491f14ebf381bb318c7f479a151"
        ],
        [
            "assert (Col A B P)...",
            "VernacExtend",
            "899c3dc9a3ae3c9a0de9c6ada24e0b82ce825ab2"
        ],
        [
            "eauto with Geom...",
            "VernacExtend",
            "c0f0386e575811763ea240642f1d7725343849fc"
        ],
        [
            "assert (~ Col P A Q \\/ ~ Col P Q B)...",
            "VernacExtend",
            "0f14d36794d1441165da5615602bf26d2ef76b07"
        ],
        [
            "apply par_not_all_col...",
            "VernacExtend",
            "8aea722c736ec26a18296b2fac1f2822eaf0d5d2"
        ],
        [
            "case H7; intro...",
            "VernacExtend",
            "8171b62c49511f8262e615647301b2c3e00d7069"
        ],
        [
            "assert (Col P A A)...",
            "VernacExtend",
            "f7a289ca532f9c09213bc4149a6e28f36dbc5ce8"
        ],
        [
            "rewrite <- H2 in H8...",
            "VernacExtend",
            "92000dd620d47b65d5398e49d3f1dacf84474ecf"
        ],
        [
            "intuition...",
            "VernacExtend",
            "6a84eb80fb30aaad8b64a8457cf4a5faa48044e7"
        ],
        [
            "rewrite H2 in H6...",
            "VernacExtend",
            "c9306669725491c7fbb62e37196156851d11eaee"
        ],
        [
            "assert (Col P Q B)...",
            "VernacExtend",
            "79b23280ac7d3d591b71ed92aa1223af5c66ac0e"
        ],
        [
            "intuition...",
            "VernacExtend",
            "6a84eb80fb30aaad8b64a8457cf4a5faa48044e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inter_unicity_2 : forall A B P Q M N: Point, ~ parallel P Q A B -> Col A B M -> Col P Q M -> Col A B N -> Col P Q N -> M = N.",
            "VernacStartTheoremProof",
            "1021eceba7e07931af0004cbf20a232da987908d"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (A<>B) by (intro;subst;auto with Geom).",
            "VernacExtend",
            "74bee4080d4675fb253bdab8527541f5df945d73"
        ],
        [
            "assert (P<>Q) by (intro;subst;auto with Geom).",
            "VernacExtend",
            "d5aee071c10f8884cabbd45a7e2569fa8d273295"
        ],
        [
            "assert (Col A M N) by (apply (col_trans_1 A B M N);auto).",
            "VernacExtend",
            "aa1385a4f4117488262aa9569d6dbb6230ea7219"
        ],
        [
            "assert (Col P M N) by (apply (col_trans_1 P Q M N);auto).",
            "VernacExtend",
            "c4b06d3f0a2c92bffe4a2fc8b48f8fcefae837af"
        ],
        [
            "cases_equality M N;auto.",
            "VernacExtend",
            "22de8e9fbafa9581309f5fb063ec5609dd0679dd"
        ],
        [
            "assert (Col M A P) by (apply (col_trans_1 M N A P); auto with Geom).",
            "VernacExtend",
            "9d636bd18eefa390a96729c3976388e75c94bb01"
        ],
        [
            "assert (Col B M N) by (apply (col_trans_1 B A M N);auto with Geom).",
            "VernacExtend",
            "c3cffb2e404b9d0543d5a59f3c69d8d8302d11bf"
        ],
        [
            "assert (Col Q M N) by (apply (col_trans_1 Q P M N);auto with Geom).",
            "VernacExtend",
            "86ab09c6ff5b74dcfc54add0c0058c10feeb58ad"
        ],
        [
            "assert (Col M Q B) by (apply (col_trans_1 M N Q B);auto with Geom).",
            "VernacExtend",
            "7613bbaf273f74546c1f6f2be5c92c23af815dd2"
        ],
        [
            "cases_equality P M.",
            "VernacExtend",
            "cc958c3bf100aebc26a9ca88fb52664444220c97"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "unfold parallel, S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "rewrite H12 in H.",
            "VernacExtend",
            "2b3d1c1b2907bd983aa86971cec2a112e6623712"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "clear H7 H9 H1 H3.",
            "VernacExtend",
            "4f7de5339bb08e1b5e0d926e44aa4f4240f07032"
        ],
        [
            "assert (Col M A Q) by (apply (col_trans_1 M N A Q);auto with Geom).",
            "VernacExtend",
            "d728a264bc841e39943d3589d749ec29e3425c70"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col P A Q) by (apply (col_trans_1 P M A Q);auto with Geom).",
            "VernacExtend",
            "a651d8728fa0e6d80560574236039c0cdba95c88"
        ],
        [
            "unfold parallel, S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "rewrite H14 in H.",
            "VernacExtend",
            "e1eb1993cd8d1e512d0ec3b945f486afeeba17a8"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "cases_equality Q M.",
            "VernacExtend",
            "021e57c216bf245869048a89c57289f8b95a57f1"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear H1 H11 H12 H14.",
            "VernacExtend",
            "62f77f4fcf45f82f98b1ffd171bcec9508a149d1"
        ],
        [
            "assert (Col M P B) by (apply (col_trans_1 M N P B);auto with Geom).",
            "VernacExtend",
            "dbeb4c34e658f59309f7043fd94bf9d431fa5427"
        ],
        [
            "assert (Col P M B) by auto with Geom.",
            "VernacExtend",
            "c1d0856834450d43156901781f8133aa0749cbdf"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col Q B P) by (apply (col_trans_1 Q M B P);auto with Geom).",
            "VernacExtend",
            "bc899220796ca1f712a70fb51e45c1ca97b977fe"
        ],
        [
            "assert (Col P Q B) by auto with Geom.",
            "VernacExtend",
            "dac4b39683075057a20eb660e095f0307e44bb13"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem co_side_bis : forall A B P Q M : Point, ~ parallel P Q A B -> Col A B M -> Col P Q M -> Q ** M / P ** Q = S Q A B / S4 P A Q B.",
            "VernacStartTheoremProof",
            "f2cefcf51f65d365bb2c812f47c32e017fc8c2df"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (P <> Q)...",
            "VernacExtend",
            "72ddb23af01205342b0a6215c5c84079e45d4390"
        ],
        [
            "eapply par_aux_1; apply H...",
            "VernacExtend",
            "93f776f2e5287e65c38113bc6779ec1cfb4689b4"
        ],
        [
            "cases_equality Q M...",
            "VernacExtend",
            "2afbcb3c63e306d18d56e47edb837fd9dd1a626b"
        ],
        [
            "assert (Q ** M = 0)...",
            "VernacExtend",
            "3f7cf8b96941464221c6c5fc6bfacfb22fb0460a"
        ],
        [
            "rewrite H4...",
            "VernacExtend",
            "aeb082c71ae62cc460cefe3cd504de4d1011d239"
        ],
        [
            "rewrite <- H3 in H0...",
            "VernacExtend",
            "e0bb61256d4343817710aa3e1a3e946274272b52"
        ],
        [
            "assert (Col Q A B)...",
            "VernacExtend",
            "8d6be508423faa4fa0bc87a989ed86e961226cde"
        ],
        [
            "unfold parallel in H...",
            "VernacExtend",
            "b709a0b679ea8f14f79ebb285e562fddec3ebd8f"
        ],
        [
            "rewrite H5; field...",
            "VernacExtend",
            "51afb767a1b2643b9762ef7e5a476f57cd634898"
        ],
        [
            "cases_equality A Q...",
            "VernacExtend",
            "2748773f9361be57ea58dd8541ba44cca6c9eff7"
        ],
        [
            "assert (A = M)...",
            "VernacExtend",
            "1df35221ea6f3d76e002612879de0729d1acb4a1"
        ],
        [
            "apply (inter_unicity A B P Q M H H0 H1 H4)...",
            "VernacExtend",
            "746e92eb74d252435c75218135628bd989a0e6ad"
        ],
        [
            "rewrite H4...",
            "VernacExtend",
            "aeb082c71ae62cc460cefe3cd504de4d1011d239"
        ],
        [
            "assert (Q = M)...",
            "VernacExtend",
            "b73bfacdc07e882033e2f17bc82d0e5d7eaa103d"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "assert (Q ** M = 0)...",
            "VernacExtend",
            "3f7cf8b96941464221c6c5fc6bfacfb22fb0460a"
        ],
        [
            "assert (S Q Q B = 0)...",
            "VernacExtend",
            "bbde050945d6fe3d8db444aa39ba230b70f7c46e"
        ],
        [
            "rewrite H7...",
            "VernacExtend",
            "865b3855aa400702f0b0efa51ddfa86d93e933c9"
        ],
        [
            "rewrite H8...",
            "VernacExtend",
            "eb9031ae0736f5124003593bf25b0ac4afe4aade"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (~ Col Q A B)...",
            "VernacExtend",
            "b34b0d432723ef960577dc1573afce2ecaf6e748"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "unfold parallel in H...",
            "VernacExtend",
            "b709a0b679ea8f14f79ebb285e562fddec3ebd8f"
        ],
        [
            "unfold S4 in H...",
            "VernacExtend",
            "d26c9aa2c03d35b0c70f517aa3979d2a98b61cde"
        ],
        [
            "assert (S P A B = S P A Q + S P Q B + S Q A B)...",
            "VernacExtend",
            "954d4199446c3845d008f9bef070d553038ce3cb"
        ],
        [
            "rewrite H5 in H6...",
            "VernacExtend",
            "bf45c9ae62792b6b7a0a65d509ded40d7da4716c"
        ],
        [
            "IsoleVar (S P A Q) H6...",
            "VernacExtend",
            "0775efe55da1abf8b157e5f2c9627c78f1845894"
        ],
        [
            "rewrite H6 in H...",
            "VernacExtend",
            "7b958e0006e825b3ce7f1462f4672236378016c6"
        ],
        [
            "assert (S P A B - 0 - S P Q B + S P Q B = S P A B)...",
            "VernacExtend",
            "cdf33f0122eae5a6d0ece48fe27c421a18507177"
        ],
        [
            "ring...",
            "VernacExtend",
            "1ba409b27e9f97c74f4dc663370ed436d64ac388"
        ],
        [
            "rewrite H7 in H...",
            "VernacExtend",
            "d07ccabf5300d830c2141bc1012e6b8029a1acc4"
        ],
        [
            "clear H6 H7...",
            "VernacExtend",
            "0a079e443e648cf5ed31c5b7c0bf884cf4c8c8c2"
        ],
        [
            "assert (Col A B Q)...",
            "VernacExtend",
            "c8251176266915e912e9ae44f2bba4d01c8db462"
        ],
        [
            "assert (A <> B)...",
            "VernacExtend",
            "e7788e61c33619fd7ff0cea598a59cf485cd899f"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "assert (S P A B = 0)...",
            "VernacExtend",
            "3b17be7029f2552cfaac754f0e2d062560c103c1"
        ],
        [
            "rewrite H7...",
            "VernacExtend",
            "865b3855aa400702f0b0efa51ddfa86d93e933c9"
        ],
        [
            "assert (Col A M Q); eauto with Geom...",
            "VernacExtend",
            "fe9ab613785a634290d255daabe722ca440e82a7"
        ],
        [
            "assert (Col Q M P)...",
            "VernacExtend",
            "f23b8d46d29a66130927b49ae2dd1ba98840907e"
        ],
        [
            "assert (Col Q M A)...",
            "VernacExtend",
            "ec71eb88c933dc56d62658deb446e5be36714086"
        ],
        [
            "assert (Col Q A P); eauto with Geom...",
            "VernacExtend",
            "5dfc6077a002f2604a7652f0c336e2f56452ad92"
        ],
        [
            "assert (Col A Q B)...",
            "VernacExtend",
            "abe469d0cd61a1f66d4ff980493bc04ba935c3a5"
        ],
        [
            "assert (Col A Q P)...",
            "VernacExtend",
            "039a14014c048569d0493d446393817578cc6b36"
        ],
        [
            "assert (Col A B P); eauto with Geom...",
            "VernacExtend",
            "48f0e293055d3332a546b733dcb5b13fc4288071"
        ],
        [
            "assert (Col P A B)...",
            "VernacExtend",
            "cd78e3d9e93a6ee66b6b7cd133d1f25f0f491b02"
        ],
        [
            "assert (P ** M / Q ** M = S P A B / S Q A B)...",
            "VernacExtend",
            "26cbe7ff495a0ffafab1efee9a4f13ea3829d6ce"
        ],
        [
            "assert (Q ** M / P ** Q * (P ** Q / Q ** M) = 1)...",
            "VernacExtend",
            "bb82cda2330704cf5b396e02bd4e9ef9d3b638b7"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (P ** M / Q ** M - 1 = P ** Q / Q ** M).",
            "VernacExtend",
            "59bf06648ab70a3738c9e0d2db724cb1f83cfe23"
        ],
        [
            "replace (P ** Q) with (P ** M - Q ** M).",
            "VernacExtend",
            "3c6484bcc4adf1e0b3f9bf3f499d98af0f86d46d"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (Q ** M = - M ** Q)...",
            "VernacExtend",
            "92e0eee091cfb1d1ce3e05357c6a132fa8cf3d95"
        ],
        [
            "rewrite H8 in |- *.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "ring_simplify...",
            "VernacExtend",
            "c3884dc50e0f0ddc2619a0e5f2f7d183b9aa5cca"
        ],
        [
            "rewrite <- H8 in H7.",
            "VernacExtend",
            "c33d27c02fa1f72b08b3fa3d0fbfbbf1aa5c039d"
        ],
        [
            "clear H8.",
            "VernacExtend",
            "bb55999d98db29a385bd8f1f3d68192c139f5f5c"
        ],
        [
            "rewrite H6 in H7.",
            "VernacExtend",
            "4cc50dc82ae850114f74ea44fccaac09256a2419"
        ],
        [
            "assert (S4 P A Q B = S P A B - S Q A B)...",
            "VernacExtend",
            "602613a3935f6c9ed26c0c70de02add043b12e99"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "clear H8.",
            "VernacExtend",
            "bb55999d98db29a385bd8f1f3d68192c139f5f5c"
        ],
        [
            "IsoleVar (Q ** M / P ** Q) H7...",
            "VernacExtend",
            "508b495d3a0b7183d7c654f89f5f335a6711cd9d"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "assert (S4 P A Q B = S P A B - S Q A B)...",
            "VernacExtend",
            "602613a3935f6c9ed26c0c70de02add043b12e99"
        ],
        [
            "unfold parallel in H.",
            "VernacExtend",
            "d1b5154695d29c7f9732e366971e5d1f4f1a8992"
        ],
        [
            "rewrite H9 in H...",
            "VernacExtend",
            "ea607f7d704c663e4ac52824f0b4495afccb6151"
        ],
        [
            "assert (S P A B / S Q A B - 1 = (S P A B - S Q A B) / S Q A B).",
            "VernacExtend",
            "f67cd5edfd726975d20987c154613bf8a9f1390d"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H8...",
            "VernacExtend",
            "eb9031ae0736f5124003593bf25b0ac4afe4aade"
        ],
        [
            "apply nonzerodiv...",
            "VernacExtend",
            "be6b843f3ca3c5f42a281d18080331df645262f7"
        ],
        [
            "assert (S4 P A Q B = S P A B - S Q A B)...",
            "VernacExtend",
            "602613a3935f6c9ed26c0c70de02add043b12e99"
        ],
        [
            "rewrite <- H9...",
            "VernacExtend",
            "747f843dde0249f3835db452e7f197406bc3089f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve co_side_bis: Geom.",
            "VernacHints",
            "b102b12ea56e92007cb72976181cbabebe50eebb"
        ],
        [
            "Theorem co_side_ter : forall A B P Q M : Point, ~ parallel P Q A B -> Col A B M -> Col P Q M -> P ** M / P ** Q = S P A B / S4 P A Q B.",
            "VernacStartTheoremProof",
            "aef527a23132c8188566b07fb26875b176a7f452"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (Q ** M / P ** Q = S Q A B / S4 P A Q B)...",
            "VernacExtend",
            "faa1a9320c2a5ab31d0af26fff6b37c96d1e437d"
        ],
        [
            "assert (P ** Q + Q ** M = P ** M)...",
            "VernacExtend",
            "b3301b3c1e33ab0e510f0c86460dbc166cfdd652"
        ],
        [
            "rewrite <- H3...",
            "VernacExtend",
            "a0311f164b729f3d6253bc4d88593eebea961cc6"
        ],
        [
            "RewriteVar (Q ** M) H2...",
            "VernacExtend",
            "3d71e4397afde73a4b34b0fcf7bd1f35ecb8171c"
        ],
        [
            "assert (S P A B = S P A Q + S P Q B + S Q A B)...",
            "VernacExtend",
            "954d4199446c3845d008f9bef070d553038ce3cb"
        ],
        [
            "rewrite H5...",
            "VernacExtend",
            "e21c470139807fef352aeff02b29dba2842f8edf"
        ],
        [
            "unfold S4 in |- *...",
            "VernacExtend",
            "b31a6ab46b94d03a26cb7747ca3a2abcbb8babda"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (P <> Q)...",
            "VernacExtend",
            "72ddb23af01205342b0a6215c5c84079e45d4390"
        ],
        [
            "eapply par_aux_1; apply H...",
            "VernacExtend",
            "93f776f2e5287e65c38113bc6779ec1cfb4689b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve co_side_ter: Geom.",
            "VernacHints",
            "c1abc555013f988a5e6f8cd08510a5b8c155c476"
        ],
        [
            "Theorem l2_9_weak : forall A B P Q R : Point, P <> Q -> ~ Col Q A P -> ~ Col Q P B -> Col R P Q -> S R A B = P ** R / P ** Q * S Q A B + R ** Q / P ** Q * S P A B.",
            "VernacStartTheoremProof",
            "1a3efa65deb7990ccc6f525351eb1a7e98d4f2f4"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (S R A B = S R A P + S R P B + S P A B)...",
            "VernacExtend",
            "f9937bc5ececd8650112591895226657beb74109"
        ],
        [
            "assert (P ** R / P ** Q = S R A P / S Q A P)...",
            "VernacExtend",
            "f7351cf5cad1a2756e155655bb9159606079cbf7"
        ],
        [
            "RewriteVar (S R A P) H4...",
            "VernacExtend",
            "7d4188641bfcca2110370dfb1085b6324ffbbf46"
        ],
        [
            "clear H4...",
            "VernacExtend",
            "f5c0889d9517d4e2ecb5d4fb4c20a5f802b94ec7"
        ],
        [
            "assert (P ** R / P ** Q = S B P R / S B P Q)...",
            "VernacExtend",
            "c2c94fd314b70c95fd4a2a4996b76d3bea4e7638"
        ],
        [
            "assert (- S B P R = S R P B)...",
            "VernacExtend",
            "e435dae6b51c34a53f5d8103365afcc4c57e904c"
        ],
        [
            "rewrite <- H6 in H3...",
            "VernacExtend",
            "42f8d1566012bdfacdec227660846744f1654c86"
        ],
        [
            "RewriteVar (S B P R) H4...",
            "VernacExtend",
            "8c67873c5418b4d4e0c560e77af1b45abeeab42b"
        ],
        [
            "clear H4 H6...",
            "VernacExtend",
            "9b4b745b297c58b091836bb3a20102800fb58285"
        ],
        [
            "assert (S R A B = P ** R / P ** Q * (S Q A P - S B P Q) + S P A B)...",
            "VernacExtend",
            "a252735cb64af0817f855356532a2344d652324f"
        ],
        [
            "rewrite H3...",
            "VernacExtend",
            "d8b9aa66d5cb0705ee0fda995c1a8964f828c656"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "clear H3...",
            "VernacExtend",
            "bd9e84b426268b7e740285fb9d8710e1d25b75cc"
        ],
        [
            "assert (S A P Q - S B P Q = S4 A P B Q)...",
            "VernacExtend",
            "74bbe918577617ed74e092477ae8afc6545133ea"
        ],
        [
            "unfold S4 in H3...",
            "VernacExtend",
            "e52333746d5dac24f002cbbf5fde22b568349be2"
        ],
        [
            "assert (S Q A P = S A P Q)...",
            "VernacExtend",
            "8afb1e88aae10fc5ff38926e2d3d41e3f2cb2e05"
        ],
        [
            "rewrite <- H6 in H3...",
            "VernacExtend",
            "42f8d1566012bdfacdec227660846744f1654c86"
        ],
        [
            "rewrite H3 in H4...",
            "VernacExtend",
            "6ab7bfafdd63a87c9a7f26b0de8d21b9d056eb7d"
        ],
        [
            "clear H3 H6...",
            "VernacExtend",
            "a1001c1ec70636d529e10bf7638e2184a9b72605"
        ],
        [
            "assert (S A B Q = S Q A B)...",
            "VernacExtend",
            "be00f85f12a289dbe078b68dd232d3c44a3dc28d"
        ],
        [
            "rewrite H3 in H4...",
            "VernacExtend",
            "6ab7bfafdd63a87c9a7f26b0de8d21b9d056eb7d"
        ],
        [
            "clear H3...",
            "VernacExtend",
            "bd9e84b426268b7e740285fb9d8710e1d25b75cc"
        ],
        [
            "assert (S A P B = - S P A B)...",
            "VernacExtend",
            "f5aff09e6ad013118625d18e4c88db17b549a8db"
        ],
        [
            "rewrite H3 in H4...",
            "VernacExtend",
            "6ab7bfafdd63a87c9a7f26b0de8d21b9d056eb7d"
        ],
        [
            "clear H3...",
            "VernacExtend",
            "bd9e84b426268b7e740285fb9d8710e1d25b75cc"
        ],
        [
            "assert (P ** R / P ** Q * (- S P A B + S Q A B) + S P A B = P ** R / P ** Q * S Q A B + (1 - P ** R / P ** Q) * S P A B)...",
            "VernacExtend",
            "83f94c9ce28ddbcde6e8e9b8539cc94217f15057"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H3 in H4...",
            "VernacExtend",
            "6ab7bfafdd63a87c9a7f26b0de8d21b9d056eb7d"
        ],
        [
            "clear H3...",
            "VernacExtend",
            "bd9e84b426268b7e740285fb9d8710e1d25b75cc"
        ],
        [
            "assert (1 - P ** R / P ** Q = R ** Q / P ** Q)...",
            "VernacExtend",
            "9b9a86fcabfd5230643908a2e2f79bd8ed15ce70"
        ],
        [
            "assert (R ** P + P ** Q = R ** Q)...",
            "VernacExtend",
            "7a62320426f145cba531e20ede964ba37986f13b"
        ],
        [
            "rewrite <- H3...",
            "VernacExtend",
            "a0311f164b729f3d6253bc4d88593eebea961cc6"
        ],
        [
            "assert (R ** P = - P ** R)...",
            "VernacExtend",
            "1e81beda84aadf684a7fd137aec062267f79a621"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_9aux : forall A B P Q R : Point, P <> Q -> Col R P Q -> Col Q A P -> ~ Col Q P B -> S R A B = P ** R / P ** Q * S Q A B + R ** Q / P ** Q * S P A B.",
            "VernacStartTheoremProof",
            "fa3a8f47891c524525ae05dfe7b64da5ab4dea92"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality Q A.",
            "VernacExtend",
            "146b0f4b03c711760fd0cac2a7eb5fcbba293886"
        ],
        [
            "assert (Col Q A B).",
            "VernacExtend",
            "58f7eeff4087b50835c1fcfc4a733287b1e6ca05"
        ],
        [
            "apply egalcol.",
            "VernacExtend",
            "e2741d19ace7e6bd5b008b69b06e5f910e46bf61"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "assert (R ** Q / P ** Q = S R Q B / S P Q B); Geometry.",
            "VernacExtend",
            "bd43ae17c1ed15518fa163b45bcc28f5144d9714"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "field; Geometry.",
            "VernacExtend",
            "6819c80981be188830379c4c62f906ad20dbd742"
        ],
        [
            "assert (~ Col Q A B).",
            "VernacExtend",
            "476c271f321e471f44c43ed72a994d93627fb55b"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (Col Q P B).",
            "VernacExtend",
            "9aeeaa4852d20149c96b0136f806d96dc3af5447"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col Q R A).",
            "VernacExtend",
            "3e8a3ad4b35fb0e2282dd983b3d3dc9c58189316"
        ],
        [
            "assert (Col P Q R); Geometry.",
            "VernacExtend",
            "6bf49156971f218e2edef77e7187dc3913e0bf1b"
        ],
        [
            "assert (Col P Q A); Geometry.",
            "VernacExtend",
            "cd7d1ffb4f39d8af0505b1fb75fd2c562ff36563"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "assert (A ** R / A ** Q = S R A B / S Q A B); Geometry.",
            "VernacExtend",
            "37ebf8abc534cf932296a8f8651808de55daa376"
        ],
        [
            "assert (A ** P / A ** Q = S P A B / S Q A B); Geometry.",
            "VernacExtend",
            "193121d521b8986acac431a1c67e9184dfcd4c49"
        ],
        [
            "RewriteVar (S R A B) H6.",
            "VernacExtend",
            "8a58ed289e201267cf89f73b4202addd3cea8c15"
        ],
        [
            "RewriteVar (S P A B) H7.",
            "VernacExtend",
            "fe7d3291611fddd66c02b9f60ecc109444319ff4"
        ],
        [
            "2: trivial.",
            "VernacExtend",
            "fb3d7be8facaeff29fa64714504f48183d839ff0"
        ],
        [
            "assert (A ** R / A ** Q = P ** R / P ** Q + R ** Q / P ** Q * (A ** P / A ** Q)).",
            "VernacExtend",
            "904351ff0a7c9c4832bbdbc89139c1ced54513e6"
        ],
        [
            "assert (A ** Q + Q ** R = A ** R).",
            "VernacExtend",
            "5e718b6b26932b84826e77a6daa1ec5d87de5393"
        ],
        [
            "apply chasles.",
            "VernacExtend",
            "015a2a5b449d7738e46ece08ab797c79943e4622"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (A ** R * P ** Q = A ** Q * P ** Q + Q ** R * P ** Q).",
            "VernacExtend",
            "800e570287cea42ee55e14af74ba180bf24fe40b"
        ],
        [
            "rewrite <- H9.",
            "VernacExtend",
            "9575559b4e4b5658029033bee2aac6031ac75e67"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (P ** R + R ** Q = P ** Q).",
            "VernacExtend",
            "5daaac9a23fc2f11efb393e195fc66530b6d0a21"
        ],
        [
            "apply chasles.",
            "VernacExtend",
            "015a2a5b449d7738e46ece08ab797c79943e4622"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (A ** Q * P ** Q + Q ** R * P ** Q = A ** Q * (P ** R + R ** Q) + Q ** R * P ** Q).",
            "VernacExtend",
            "97fa0b6b7532413e7da3bf5e0bf512e74f5dd8bb"
        ],
        [
            "rewrite <- H11.",
            "VernacExtend",
            "ec42fac36aacb0899bfc448afc7aa33e19c94748"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite H12 in H10.",
            "VernacExtend",
            "32011b0bcd65037713d6bb3a5c7ec7b15cc3b4be"
        ],
        [
            "clear H12.",
            "VernacExtend",
            "e6ad54b11d704ad4d8212a8e31ac75bec3f13527"
        ],
        [
            "NormalizeRing H10.",
            "VernacExtend",
            "4f59ad22e606db0b74eb3aee89b4a310e49202a1"
        ],
        [
            "assert (P ** Q * Q ** R + A ** Q * R ** Q = R ** Q * A ** P).",
            "VernacExtend",
            "db0e671bf9fd7ff30feef1badf71a8e062107663"
        ],
        [
            "assert (A ** Q + Q ** P = A ** P).",
            "VernacExtend",
            "3a7028e0086c429ea7125b99cf25dc51834869a0"
        ],
        [
            "apply chasles.",
            "VernacExtend",
            "015a2a5b449d7738e46ece08ab797c79943e4622"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "rewrite <- H12.",
            "VernacExtend",
            "535d97bd150861302e54cffeb5719d00d6f597bb"
        ],
        [
            "assert (P ** Q = - Q ** P); Geometry.",
            "VernacExtend",
            "873676b6e7a6bc4c7591d261507ca5b067d4c0f3"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "assert (Q ** R = - R ** Q); Geometry.",
            "VernacExtend",
            "c7e628060183c18a6f9a95a34a1702f4ee2bbd10"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (P ** Q * A ** R = A ** Q * P ** R + R ** Q * A ** P).",
            "VernacExtend",
            "aaf0c1ace8c870e2eb1995378b94a07c589c18fa"
        ],
        [
            "replace (P ** Q * A ** R) with (A ** R * P ** Q) by ring.",
            "VernacExtend",
            "05da3c81b183bcc323f0f6de4f2fef389074827a"
        ],
        [
            "rewrite H10.",
            "VernacExtend",
            "cd2638bc5a7f85648c5e2c9d77046abc07e2da6a"
        ],
        [
            "rewrite <- H12.",
            "VernacExtend",
            "535d97bd150861302e54cffeb5719d00d6f597bb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "clear H9 H10 H11 H12.",
            "VernacExtend",
            "1be141d530e61c3463069a2fb30f64cfc0e6a051"
        ],
        [
            "IsoleVar (A ** R) H13.",
            "VernacExtend",
            "7bf20d1044db3781cde2d897e98d514f72843ccc"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "field; Geometry.",
            "VernacExtend",
            "6819c80981be188830379c4c62f906ad20dbd742"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_9 : forall A B P Q R : Point, P <> Q -> Col R P Q -> S R A B = P ** R / P ** Q * S Q A B + R ** Q / P ** Q * S P A B.",
            "VernacStartTheoremProof",
            "821500208ad718e835dbe4d8247c760e5935ed25"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_col Q A P.",
            "VernacExtend",
            "f7d4b774cc175e0b6c1fda9230ba23b4948487e9"
        ],
        [
            "cases_col Q P B.",
            "VernacExtend",
            "3346f2352be6a85ace4107877f597e036745eabc"
        ],
        [
            "assert (Col Q P A); Geometry.",
            "VernacExtend",
            "0079431c9506864a99c10450c7c414e1a8e364aa"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "assert (Col Q A B).",
            "VernacExtend",
            "58f7eeff4087b50835c1fcfc4a733287b1e6ca05"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "assert (Col P A B).",
            "VernacExtend",
            "9248acdfb5b351532482b6adb5cec140fa078881"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "change (Col R A B) in |- *.",
            "VernacExtend",
            "d2d10c7f32b9483ed3afc806a4998ec2b98fe149"
        ],
        [
            "assert (Col Q R B).",
            "VernacExtend",
            "a01dedf8ac5dea8b29499f362a09726b2e885ae8"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "assert (Col Q R A).",
            "VernacExtend",
            "3e8a3ad4b35fb0e2282dd983b3d3dc9c58189316"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "assert (Col R Q B); Geometry.",
            "VernacExtend",
            "98b7d2c15e8eadad8ec940d758071718526a013e"
        ],
        [
            "assert (Col R Q A); Geometry.",
            "VernacExtend",
            "9b96633169715df2649990c8ebdebebc7430394b"
        ],
        [
            "cases_equality R Q.",
            "VernacExtend",
            "2445f566ff3bd610309f31363627893c28e1dd7f"
        ],
        [
            "rewrite H9; trivial.",
            "VernacExtend",
            "09ae93b5940b269dbc52647a4c1a288c283101f5"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "apply l2_9aux; auto.",
            "VernacExtend",
            "0f42022bd23ebba8f90123c1a9bf7073c14a45e7"
        ],
        [
            "cases_col Q P B.",
            "VernacExtend",
            "3346f2352be6a85ace4107877f597e036745eabc"
        ],
        [
            "assert (S R B A = P ** R / P ** Q * S Q B A + R ** Q / P ** Q * S P B A).",
            "VernacExtend",
            "6d01de9f410bcbf8c6ca7b0dfb8cca5e1f9b25d5"
        ],
        [
            "apply l2_9aux; Geometry.",
            "VernacExtend",
            "286b23a4725d8685dcbefcdf096ca76007b721b3"
        ],
        [
            "assert (S R A B = - S R B A); Geometry.",
            "VernacExtend",
            "cdde6e03828cc96bd22071acde675d31d110d578"
        ],
        [
            "assert (S Q A B = - S Q B A); Geometry.",
            "VernacExtend",
            "4c14015c7fd743b41568a2c0f78c0984101db533"
        ],
        [
            "assert (S P A B = - S P B A); Geometry.",
            "VernacExtend",
            "ad7827ee84d534665fcb4bd590d69ad8029c0c85"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply l2_9_weak; auto.",
            "VernacExtend",
            "727746a420745c49e0a154b6e570520a2ac14e72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem A2bgen : forall (A B P P' : Point) (r : F), Col A B P -> A ** P = r * A ** B -> Col A B P' -> A ** P' = r * A ** B -> P = P'.",
            "VernacStartTheoremProof",
            "b3496263a8325052617d590e2ee18b2730d7939d"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "cases_equality A B...",
            "VernacExtend",
            "fbfc8b17cfbe00c9c01993f53c7656273399a502"
        ],
        [
            "assert (A ** B = 0)...",
            "VernacExtend",
            "a7c8c63225458ed0cc63460c0f9da5cd2833c5df"
        ],
        [
            "rewrite H4 in H2...",
            "VernacExtend",
            "8f68362f5d4645c53d18fe8e07a28af450f4e1d6"
        ],
        [
            "rewrite H4 in H0...",
            "VernacExtend",
            "251adcec7175085d296c1f95edee973c4ebdcc5d"
        ],
        [
            "NormalizeRing H2...",
            "VernacExtend",
            "f740a286c9181a98f9a5592a1405c31e2c63573e"
        ],
        [
            "NormalizeRing H0...",
            "VernacExtend",
            "7d2d0c77f625d909a6fd714e0463da7b6bd8626b"
        ],
        [
            "assert (A = P')...",
            "VernacExtend",
            "56d15009fe32a9561ae00ebe647098b13bf3d983"
        ],
        [
            "assert (A = P)...",
            "VernacExtend",
            "a1c37eabd6237e3f9ada3e430ff444e77e044cfc"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "apply (A2b A B P P' r H3 H H0 H1 H2)...",
            "VernacExtend",
            "d4d1300c968e296c62524c1cae11289f7b5589d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mid_point (I A B : Point) : Prop := Col A B I /\\ A ** I = I ** B.",
            "VernacDefinition",
            "22272e0338add9763e2bac2c2dd458ad239a8a20"
        ],
        [
            "Definition symmetric_point (I A B : Point) : Prop := Col A B I /\\ A ** B = B ** I.",
            "VernacDefinition",
            "db1e5ce3b8af4d79809744055309bec47f87ed36"
        ],
        [
            "Theorem mid_point_ex : forall A B : Point, {O : Point | mid_point O A B}.",
            "VernacStartTheoremProof",
            "e5d71125e3e24919a94bed5f3f82f0d37ed8fefa"
        ],
        [
            "Proof with try solve [ Geometry | field; Geometry | congruence ].",
            "VernacProof",
            "e23f1c23233e4ab495bd8bc4f3c51e64709203d8"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (T := A2a A B (1 / 2))...",
            "VernacExtend",
            "9a797a39764c0bec9ab3adb02ed02b3920fc61dd"
        ],
        [
            "elim T; intros; clear T...",
            "VernacExtend",
            "17d7c9d6db1aa23407fdc0eb85772accb1a3501f"
        ],
        [
            "exists x...",
            "VernacExtend",
            "9049ed581e697dae60730406eb05b7ae0d834689"
        ],
        [
            "intuition...",
            "VernacExtend",
            "6a84eb80fb30aaad8b64a8457cf4a5faa48044e7"
        ],
        [
            "assert (A ** x + x ** B = A ** B)...",
            "VernacExtend",
            "7c5dc055628a05e57d5f143dd8d4074982d7e697"
        ],
        [
            "unfold mid_point in |- *...",
            "VernacExtend",
            "b85307d46fa8a18d8356a822712aed7e193acbc9"
        ],
        [
            "intuition...",
            "VernacExtend",
            "6a84eb80fb30aaad8b64a8457cf4a5faa48044e7"
        ],
        [
            "RewriteVar (A ** x) H0...",
            "VernacExtend",
            "6102f270d5277d9aec17c51e98bc4852e18a396a"
        ],
        [
            "RewriteVar (x ** B) H1...",
            "VernacExtend",
            "f5be01bccbd40d78244c1f6bc8bf02dc7ae2d2bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem symmetric_point_ex : forall A O : Point, {A' : Point | Col A O A' /\\ A ** O = O ** A'}.",
            "VernacStartTheoremProof",
            "509b25b498a81ac67d987b57858b952641a1fee2"
        ],
        [
            "Proof with try solve [ Geometry | ring | congruence ].",
            "VernacProof",
            "be738d87f3b60e551bdd0c43241fbf3d54ec2c8e"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "assert (T := A2a A O 2)...",
            "VernacExtend",
            "84ae1956171777ae0125f5bed3fbb6d2d0fef534"
        ],
        [
            "elim T; intros; clear T...",
            "VernacExtend",
            "17d7c9d6db1aa23407fdc0eb85772accb1a3501f"
        ],
        [
            "exists x...",
            "VernacExtend",
            "9049ed581e697dae60730406eb05b7ae0d834689"
        ],
        [
            "unfold symmetric_point in |- *...",
            "VernacExtend",
            "14f4223f0b55c3733a47470dcfae3468eb930fc0"
        ],
        [
            "intuition...",
            "VernacExtend",
            "6a84eb80fb30aaad8b64a8457cf4a5faa48044e7"
        ],
        [
            "assert (O ** x = - x ** O)...",
            "VernacExtend",
            "ed801bfef1188d25e8654f0c8cd0b4edfda0014f"
        ],
        [
            "assert (A ** x + x ** O = A ** O)...",
            "VernacExtend",
            "684fa79ca80300b7826e8cc2a368caea2aeed1a9"
        ],
        [
            "rewrite H1; clear H1...",
            "VernacExtend",
            "17c11d9ef99137841e5f089388631555350f9f68"
        ],
        [
            "RewriteVar (A ** x) H0...",
            "VernacExtend",
            "6102f270d5277d9aec17c51e98bc4852e18a396a"
        ],
        [
            "RewriteVar (x ** O) H2...",
            "VernacExtend",
            "b4bef2c1e011ba5bca13a11fb7b9ea898cb91ebf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mid_point_comm : forall A B C, mid_point A B C -> mid_point A C B.",
            "VernacStartTheoremProof",
            "2e1b99454659ae0997d357c418532ce61ec1970f"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold mid_point.",
            "VernacExtend",
            "b705e824484d209afc1741c32ada1f37ba702273"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate mid_point_comm : Geom.",
            "VernacHints",
            "f4e7eda81cddc113f9d0502bc9008150d2acc86b"
        ],
        [
            "Theorem diag_mid_point_parallel : forall O A P B Q, mid_point O A P -> mid_point O B Q -> parallel A B P Q.",
            "VernacStartTheoremProof",
            "89a4960ff9dd14cf9e690c906b9ea8a5f02bb6d2"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mid_point in *.",
            "VernacExtend",
            "3bab166a3f6762dcc547f8bcda772b8b4790e67a"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "rename H0 into H.",
            "VernacExtend",
            "31a94f38353930552253442cfe1821b2d4a29944"
        ],
        [
            "assert (Col B O Q)...",
            "VernacExtend",
            "9ff25f45268ba9a57c6d56e23e47f68d316c91a5"
        ],
        [
            "clear H1.",
            "VernacExtend",
            "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
        ],
        [
            "rename H0 into H1.",
            "VernacExtend",
            "f37a61ebf5bcd7bee06bbb6de6ab6adc11e35a44"
        ],
        [
            "rename H3 into H0.",
            "VernacExtend",
            "9a961e59eff08c8f743023f10f1662eba193a77a"
        ],
        [
            "cases_equality A P...",
            "VernacExtend",
            "4697119d976c053ed18114b6632285610005e7bb"
        ],
        [
            "assert (A = O)...",
            "VernacExtend",
            "c10b03f5df29952ad50830fc7922b7ebf53bafbc"
        ],
        [
            "assert (A ** O + O ** P = A ** P)...",
            "VernacExtend",
            "cdd6f07fd0020ae6243f9e9da1af3620e3f78fca"
        ],
        [
            "assert (A ** P = 0)...",
            "VernacExtend",
            "1826bfa84b8f99883ed9257594863dab34d1a3de"
        ],
        [
            "rewrite H5 in H4; clear H5...",
            "VernacExtend",
            "103c10f0b688580cc9d8b6f14eaf600dcecd7ed7"
        ],
        [
            "rewrite <- H0 in H4...",
            "VernacExtend",
            "f05ee432973877e9353c07b4178dd06c2a179bc9"
        ],
        [
            "assert (A ** O + A ** O = 2 * A ** O)...",
            "VernacExtend",
            "ad59e750b916db0d1e282bd6f0b3a7f9a165f2dd"
        ],
        [
            "ring...",
            "VernacExtend",
            "1ba409b27e9f97c74f4dc663370ed436d64ac388"
        ],
        [
            "rewrite H5 in H4; clear H5...",
            "VernacExtend",
            "103c10f0b688580cc9d8b6f14eaf600dcecd7ed7"
        ],
        [
            "IsoleVar (A ** O) H4...",
            "VernacExtend",
            "66aa8e6b62f993daf06dde4b0d5ddb590c072563"
        ],
        [
            "assert (0 / 2 = 0)...",
            "VernacExtend",
            "2335b020ac68751f464a68924ee3f56bbd28dd32"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H6 in H4...",
            "VernacExtend",
            "ccd34c8394c099b6c7924b333257fe0d222959de"
        ],
        [
            "unfold parallel in |- *...",
            "VernacExtend",
            "bd8f56c72716dbbc63a3468250625040783e9196"
        ],
        [
            "unfold S4 in |- *...",
            "VernacExtend",
            "b31a6ab46b94d03a26cb7747ca3a2abcbb8babda"
        ],
        [
            "rewrite H3...",
            "VernacExtend",
            "d8b9aa66d5cb0705ee0fda995c1a8964f828c656"
        ],
        [
            "assert (S P P B = 0)...",
            "VernacExtend",
            "4f80dbdc0742a514d5a7ba81c7d38b9a2281cba0"
        ],
        [
            "rewrite H5...",
            "VernacExtend",
            "e21c470139807fef352aeff02b29dba2842f8edf"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "assert (Col P B Q)...",
            "VernacExtend",
            "2f517967825fdd5c0cc143eb4eda44b966c9171d"
        ],
        [
            "rewrite <- H3...",
            "VernacExtend",
            "a0311f164b729f3d6253bc4d88593eebea961cc6"
        ],
        [
            "rewrite <- H4 in H1...",
            "VernacExtend",
            "93ff8bf41aca5a31699fa1b7c0e4a5fea1254652"
        ],
        [
            "assert (A <> O)...",
            "VernacExtend",
            "0cdd232a97499e7c9bb8288ed999309aadceb860"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "assert (A ** O = 0)...",
            "VernacExtend",
            "0d824b919d911f89570b94649c6776fdd49bb9d6"
        ],
        [
            "rewrite H5 in H0...",
            "VernacExtend",
            "2a9443d39acf8144a02a47b823f87ead4ebba79e"
        ],
        [
            "assert (O = P)...",
            "VernacExtend",
            "6df7f2ea5a7752d61093945ecaf416632d3a93a7"
        ],
        [
            "assert (A = P)...",
            "VernacExtend",
            "a1c37eabd6237e3f9ada3e430ff444e77e044cfc"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "cases_equality B O...",
            "VernacExtend",
            "aac5056f0af91d8484bb34062507781b63e0fbc0"
        ],
        [
            "unfold parallel in |- *...",
            "VernacExtend",
            "bd8f56c72716dbbc63a3468250625040783e9196"
        ],
        [
            "unfold S4 in |- *...",
            "VernacExtend",
            "b31a6ab46b94d03a26cb7747ca3a2abcbb8babda"
        ],
        [
            "assert (B ** O = 0)...",
            "VernacExtend",
            "2881382454618304ca9ede1eaf1fb505dc9bfdf3"
        ],
        [
            "rewrite H6 in H2...",
            "VernacExtend",
            "98dd5c5fcb897d812c4c5f8f88989df948a30886"
        ],
        [
            "assert (O = Q)...",
            "VernacExtend",
            "e011d5ab161e5a6f37155e5cf18847e83cce3ed7"
        ],
        [
            "assert (B = Q)...",
            "VernacExtend",
            "f49b4e32ed2f95d3736af5d5f12639d90fe1db93"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "rewrite H7 in H...",
            "VernacExtend",
            "d07ccabf5300d830c2141bc1012e6b8029a1acc4"
        ],
        [
            "rewrite H8...",
            "VernacExtend",
            "eb9031ae0736f5124003593bf25b0ac4afe4aade"
        ],
        [
            "rewrite H...",
            "VernacExtend",
            "2ded38871f6ef5ae4e687aa3245494ae541f7202"
        ],
        [
            "assert (S A Q Q = 0)...",
            "VernacExtend",
            "bea99b9d1eddd4c52d1c40988b39ed4497112fa9"
        ],
        [
            "rewrite H9...",
            "VernacExtend",
            "c688de842f2344cdba924cfa8491b2d7a9ca46ac"
        ],
        [
            "cases_col O A B...",
            "VernacExtend",
            "a1b732852a5709073a0a412868bed175cc1e96b0"
        ],
        [
            "unfold parallel in |- *...",
            "VernacExtend",
            "bd8f56c72716dbbc63a3468250625040783e9196"
        ],
        [
            "unfold S4 in |- *...",
            "VernacExtend",
            "b31a6ab46b94d03a26cb7747ca3a2abcbb8babda"
        ],
        [
            "assert (Col A O B)...",
            "VernacExtend",
            "12505386650c738209e3e1805a97783bfb940ef9"
        ],
        [
            "assert (Col A O P)...",
            "VernacExtend",
            "c8cf59123ee7bd2ef1b0fb808f1e15f6ecbd245f"
        ],
        [
            "assert (Col A P B); eauto with Geom...",
            "VernacExtend",
            "d677bf00064e1eca840db1e62d7b1de246e2d171"
        ],
        [
            "assert (Col B O Q)...",
            "VernacExtend",
            "9ff25f45268ba9a57c6d56e23e47f68d316c91a5"
        ],
        [
            "assert (Col B O A)...",
            "VernacExtend",
            "8610e9b652105dad6a8443b7e4f4a46305bd01a4"
        ],
        [
            "assert (Col B Q A); eauto with Geom...",
            "VernacExtend",
            "707be0cb5a2897c1b62165880f24d795be0a6653"
        ],
        [
            "rewrite H9...",
            "VernacExtend",
            "c688de842f2344cdba924cfa8491b2d7a9ca46ac"
        ],
        [
            "assert (Col A B Q)...",
            "VernacExtend",
            "c8251176266915e912e9ae44f2bba4d01c8db462"
        ],
        [
            "rewrite H13...",
            "VernacExtend",
            "73badb3364050cfe07d7bc89be3b32a086711f15"
        ],
        [
            "assert (Q ** B / O ** B = S Q A B / S O A B)...",
            "VernacExtend",
            "3d3a3904ccb96bb8559811d8f3a1c84099adb9f1"
        ],
        [
            "assert (Q <> O)...",
            "VernacExtend",
            "e5f17ce2221676b4170eb8d643c2a74b5d4884a4"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "assert (O ** Q = 0)...",
            "VernacExtend",
            "695d157c9e6d41031334ffa9f27e208b99ff4190"
        ],
        [
            "assert (B ** O = 0)...",
            "VernacExtend",
            "2881382454618304ca9ede1eaf1fb505dc9bfdf3"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "assert (Q ** B / O ** B = 2)...",
            "VernacExtend",
            "b6d2ae4b4c619d6cfd2d3b192f55a5668e665b18"
        ],
        [
            "assert (Q ** B = Q ** O + O ** B)...",
            "VernacExtend",
            "8f08cd20cf06702046be925d398dbde93af59209"
        ],
        [
            "symmetry in |- *...",
            "VernacExtend",
            "4b7a585e3caee360273a62b455864c704b538a54"
        ],
        [
            "rewrite H9...",
            "VernacExtend",
            "c688de842f2344cdba924cfa8491b2d7a9ca46ac"
        ],
        [
            "assert (O ** B = Q ** O)...",
            "VernacExtend",
            "7cf203c82cfda7dc60a8507e56b791510d8a345c"
        ],
        [
            "rewrite H10...",
            "VernacExtend",
            "490037ba34e97da6bd58c533aa1e3df8e7e9001c"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (O <> P)...",
            "VernacExtend",
            "ddf3e0a570e87a3256f72bd0ad10993649808993"
        ],
        [
            "unfold not in |- *; intro...",
            "VernacExtend",
            "cceee3cdf379fa8c5d264884846149a69cd7f3b6"
        ],
        [
            "assert (O ** P = 0)...",
            "VernacExtend",
            "886d64364a24a27c07734bb361213a39ccffd5f7"
        ],
        [
            "assert (A ** O = 0)...",
            "VernacExtend",
            "0d824b919d911f89570b94649c6776fdd49bb9d6"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "assert (P ** A / O ** A = S P A B / S O A B)...",
            "VernacExtend",
            "b42c323ac327cf77ae5d4bbf80e6625ff176e48c"
        ],
        [
            "assert (P ** A / O ** A = A ** P / A ** O)...",
            "VernacExtend",
            "90caf41c9cfca8e1f7ea235f70a512fbb108e6b5"
        ],
        [
            "assert (A ** O + O ** P = A ** P)...",
            "VernacExtend",
            "cdd6f07fd0020ae6243f9e9da1af3620e3f78fca"
        ],
        [
            "rewrite <- H13 in H12...",
            "VernacExtend",
            "01e7f728827b56c0b046c318a4a9a523f27c6647"
        ],
        [
            "rewrite H0 in H12...",
            "VernacExtend",
            "3a9c8be177cc6dab9710ef06a696da8340ea159e"
        ],
        [
            "assert ((O ** P + O ** P) / O ** P = 2)...",
            "VernacExtend",
            "7417af818f64a20176b31f599301f59d5f115745"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite H14 in H12...",
            "VernacExtend",
            "5b2ee533831986f858a34ebe6b1bee5e31f9e391"
        ],
        [
            "unfold parallel in |- *...",
            "VernacExtend",
            "bd8f56c72716dbbc63a3468250625040783e9196"
        ],
        [
            "assert (S Q A B / S O A B = S P A B / S O A B)...",
            "VernacExtend",
            "3d0736224dedff38d0840ef158917c6ea180f1ca"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "assert (S Q A B = S A B Q)...",
            "VernacExtend",
            "0095c4180f8290b83a1fa1f19eaf0b019fff35d2"
        ],
        [
            "assert (S A P B = - S P A B)...",
            "VernacExtend",
            "f5aff09e6ad013118625d18e4c88db17b549a8db"
        ],
        [
            "unfold S4 in |- *...",
            "VernacExtend",
            "b31a6ab46b94d03a26cb7747ca3a2abcbb8babda"
        ],
        [
            "rewrite <- H16...",
            "VernacExtend",
            "654f694d365d7136340f5680895b7eaed26f2e18"
        ],
        [
            "rewrite H17...",
            "VernacExtend",
            "06170321f8a130128168d7913d6d685014113781"
        ],
        [
            "RewriteVar (S Q A B) H15...",
            "VernacExtend",
            "09dd5ace3d76e244a1d56068bd82d83d786b9c9c"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem euclid_parallel_existence_strong : forall A B P : Point, A<>B -> {Q : Point | parallel A B P Q /\\ P<>Q}.",
            "VernacStartTheoremProof",
            "ae6a93b1c80cd3fb5edcb4d29e891b17673c7f63"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Op := mid_point_ex A P)...",
            "VernacExtend",
            "fb0856a5e13c18f8c15d826c86f571ba585ff791"
        ],
        [
            "elim Op; intro O; clear Op...",
            "VernacExtend",
            "1db3b93fc8a6f599abe4d722e0e96dac6c4418a6"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "elim p; intros; clear p...",
            "VernacExtend",
            "b3ab500b9f784da007930f215e50451ebaf8a49a"
        ],
        [
            "assert (Op := symmetric_point_ex B O)...",
            "VernacExtend",
            "3456df970dce1a78ef821e592a806d0d7880ac34"
        ],
        [
            "elim Op; intro Q; clear Op...",
            "VernacExtend",
            "2c96d9c300464d729966426b922b8f624cd02aa5"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "elim p; intros; clear p...",
            "VernacExtend",
            "b3ab500b9f784da007930f215e50451ebaf8a49a"
        ],
        [
            "exists Q...",
            "VernacExtend",
            "4a708d4b38617e9a4c49027eafc77619f19d67ce"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply diag_mid_point_parallel;unfold mid_point;split.",
            "VernacExtend",
            "3474f6daa41212cc4b18ae89a3d32c32a4bcd65f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "rewrite <- H1 in H3.",
            "VernacExtend",
            "a977111978361ddd3289599da2375cae93fdef5b"
        ],
        [
            "cases_equality O P.",
            "VernacExtend",
            "2f6f51f9464ea02674d7a46696d27edb21fe7f24"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "replace (O**O) with 0 in H1.",
            "VernacExtend",
            "c0467268b8a6f672d349589238efbde2587effd2"
        ],
        [
            "2:symmetry;Geometry.",
            "VernacExtend",
            "b8b74e5494acf1729413c2396905d409c9540600"
        ],
        [
            "assert (A=O).",
            "VernacExtend",
            "9ef1d6c0f055b2f633fff0eb46c182b3ddf97c0e"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "replace (O**O) with 0 in H3.",
            "VernacExtend",
            "9a6ee17b737d8dfcb5e1d431aadbc3bd1520ab7a"
        ],
        [
            "assert (B=O).",
            "VernacExtend",
            "4267551d766e662f21269634f0a9b1a62511f898"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col O A B).",
            "VernacExtend",
            "8c4f1c171a78d1d9a9125f878c21fbd534f06703"
        ],
        [
            "eapply col_trans_1 with (B:=P)...",
            "VernacExtend",
            "b9e1c7c0fc7c866f60b195d475cbdb1eb0983b1c"
        ],
        [
            "assert (A**O+O**B=A**B)...",
            "VernacExtend",
            "3b59ea68eb13788b31e7d0f5aca99af51a6b2743"
        ],
        [
            "rewrite <- H3 in H6.",
            "VernacExtend",
            "5caa2cf4172aa730da177a81f5861f04c7af7c49"
        ],
        [
            "replace (B**O) with (-O**B) in H6.",
            "VernacExtend",
            "a53d9cd6e4fdad7c4d5f208e55b4019b26b6fa46"
        ],
        [
            "NormalizeRing H6.",
            "VernacExtend",
            "4463bcd682cf0938714b99bcb5049969f1bfd27b"
        ],
        [
            "assert (A=B)...",
            "VernacExtend",
            "7c4599ef634e9beab07b48818528be983407c6e7"
        ],
        [
            "symmetry;Geometry.",
            "VernacExtend",
            "65981bfb7d83fa78c11deaaf62b453382000c5bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem euclid_parallel_existence : forall A B P : Point, {Q : Point | parallel A B P Q}.",
            "VernacStartTheoremProof",
            "8aaea60a270eb05c9ba78996f25d5890827deed6"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Op := mid_point_ex A P)...",
            "VernacExtend",
            "fb0856a5e13c18f8c15d826c86f571ba585ff791"
        ],
        [
            "elim Op; intro O; clear Op...",
            "VernacExtend",
            "1db3b93fc8a6f599abe4d722e0e96dac6c4418a6"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "elim p; intros; clear p...",
            "VernacExtend",
            "b3ab500b9f784da007930f215e50451ebaf8a49a"
        ],
        [
            "assert (Op := symmetric_point_ex B O)...",
            "VernacExtend",
            "3456df970dce1a78ef821e592a806d0d7880ac34"
        ],
        [
            "elim Op; intro Q; clear Op...",
            "VernacExtend",
            "2c96d9c300464d729966426b922b8f624cd02aa5"
        ],
        [
            "intros...",
            "VernacExtend",
            "1056e51c2defbfe94d2032f9d7008334ba957959"
        ],
        [
            "elim p; intros; clear p...",
            "VernacExtend",
            "b3ab500b9f784da007930f215e50451ebaf8a49a"
        ],
        [
            "exists Q...",
            "VernacExtend",
            "4a708d4b38617e9a4c49027eafc77619f19d67ce"
        ],
        [
            "eapply diag_mid_point_parallel;unfold mid_point;split.",
            "VernacExtend",
            "3474f6daa41212cc4b18ae89a3d32c32a4bcd65f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem par_1 : forall A B C D : Point, parallel A B C D -> parallel B A C D.",
            "VernacStartTheoremProof",
            "f24d2da2eaa1f33025b0ce8fa47e30f41929973e"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold parallel, S4 in |- *.",
            "VernacExtend",
            "d8b44f5b7fd86253f83f625286d4f55cc07c4264"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "RewriteVar (S A C B) H.",
            "VernacExtend",
            "e78c49ff57d19fcd26bdd61ca811da590e0562f6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve par_1: Geom.",
            "VernacHints",
            "24ecc7f0c6387f1e6b562e7c46d4c41b7914db77"
        ],
        [
            "Theorem par_2 : forall A B C D : Point, parallel A B C D -> parallel C D A B.",
            "VernacStartTheoremProof",
            "16abffae6cd79a04858624414b591f5f5e666c4e"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold parallel in |- *.",
            "VernacExtend",
            "1db2ae8c6adf068d2c0b937bd0259b8d01a7304c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S4 A C B D = - S4 C A D B)...",
            "VernacExtend",
            "c984cd3f0b8dd1648b46c3c8000137ae2c23cd6e"
        ],
        [
            "rewrite H0 in H...",
            "VernacExtend",
            "27d4ccb20da7aa50851b7fe97019e72e3301a4e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve par_2: Geom.",
            "VernacHints",
            "c7c8beb4d43935ef145281be2eccff7513b448a4"
        ],
        [
            "Theorem not_parallel_not_eq_1 : forall A B C D, ~ parallel A B C D -> A<>B.",
            "VernacStartTheoremProof",
            "1d8ea99d0932e89c1ab1aae42111a1a44b790791"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro;subst A...",
            "VernacExtend",
            "e9ded90e1da6f0adfef0e3f1c840c21f4178731d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_parallel_not_eq_2 : forall A B C D, ~ parallel A B C D -> C<>D.",
            "VernacStartTheoremProof",
            "8b6c94dd86aeca1888809d757b3503e2d4ca75b6"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro;subst C...",
            "VernacExtend",
            "9ee0672cc454a55242f587b1b5d78f79f0774c96"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_parallel_not_eq_1 not_parallel_not_eq_2 : Geom.",
            "VernacHints",
            "650dd7565b4226d81a924fd134f63494c0b4248b"
        ],
        [
            "Lemma mid_point_degenerated_1 : forall A B, mid_point A A B -> A=B.",
            "VernacStartTheoremProof",
            "67f1226362f0fc0a8832fbf1676b8054e45e8e38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mid_point in H.",
            "VernacExtend",
            "3385457b432aaf7fd3f5b3a1dbb3c0adcec2daff"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mid_point_degenerated_2 : forall A B, mid_point A B B -> A=B.",
            "VernacStartTheoremProof",
            "25e54553f019d61a075a623c29c526c9133c4a06"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mid_point in H.",
            "VernacExtend",
            "3385457b432aaf7fd3f5b3a1dbb3c0adcec2daff"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "replace (A**B) with (- B**A) in H1.",
            "VernacExtend",
            "21c6c63db81e1e54c0dc89df724779e901e57b49"
        ],
        [
            "2:symmetry...",
            "VernacExtend",
            "993f5b1002b3fcf7105098af35880e50481dc5ba"
        ],
        [
            "assert (B**A = 0)...",
            "VernacExtend",
            "2d893c827d841c8df998b88f20fb5b3c88765aae"
        ],
        [
            "symmetry;Geometry.",
            "VernacExtend",
            "65981bfb7d83fa78c11deaaf62b453382000c5bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mid_point_degenerated_3 : forall A B, mid_point A B A -> A=B.",
            "VernacStartTheoremProof",
            "c890e84bcf1f2abab94edb2f109d7e8e583bd99c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mid_point in H.",
            "VernacExtend",
            "3385457b432aaf7fd3f5b3a1dbb3c0adcec2daff"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "symmetry;Geometry.",
            "VernacExtend",
            "65981bfb7d83fa78c11deaaf62b453382000c5bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve mid_point_degenerated_1 mid_point_degenerated_2 mid_point_degenerated_3:Geom.",
            "VernacHints",
            "d3054beaf0950c27eb096a6e567f6a11e457c468"
        ],
        [
            "Lemma eq_diff_diff : forall A B C D, A<>B -> A**B=C**D -> C<>D.",
            "VernacStartTheoremProof",
            "8eb4203c7c9bf85df3f0eb3956273de929018610"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve eq_diff_diff : Geom.",
            "VernacHints",
            "9a12bf6b15afe0318f8ac563dd89efb24b5ade10"
        ],
        [
            "Lemma parallel_side_eq_parallel' : forall P Q C D, parallel P Q C D -> P**Q=C**D -> parallel D Q P C.",
            "VernacStartTheoremProof",
            "054e4a0115377652384c432c65232b22440f1b0d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality C D.",
            "VernacExtend",
            "585b1127c3e3bc3297631dd8feb2332cfc9aab48"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "assert (P=Q).",
            "VernacExtend",
            "ff338c1091d614d3cbfbf08ace14b1e08d3e37c4"
        ],
        [
            "apply A1b.",
            "VernacExtend",
            "cd9c2dcf466e31065dae0097df638b65ac017243"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "unfold parallel,S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply parallel_side_eq_parallel;auto.",
            "VernacExtend",
            "811c9fb0aecb1ad7774b38d0d45cad26d44f3792"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "noteqnotzero",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (A ** B = 0 <-> A = B).",
                        "VernacExtend",
                        "e10e3be0ffeb93cba37f9b507675c7ec4eebbc9c"
                    ]
                },
                {
                    "command": [
                        "apply A1b.",
                        "VernacExtend",
                        "cd9c2dcf466e31065dae0097df638b65ac017243"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notcolnotegal_1",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "unfold Col in |- *.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "assert (T := egalcol A B C H0).",
                        "VernacExtend",
                        "312ffcf8324b872982cfa9de6ea947c76a54dd20"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notparallelnotegal_1",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "auto with Geom.",
                        "VernacExtend",
                        "681024d183977aeef2de8cafdfb122a2ae1e7162"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notparallelnotegal_2",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "auto with Geom.",
                        "VernacExtend",
                        "681024d183977aeef2de8cafdfb122a2ae1e7162"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dirseg_simpl_1",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "field;auto with Geom.",
                        "VernacExtend",
                        "2de65a1b7de4aa7c0a858aa5c7c65a478c26d278"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dirseg_simpl_2",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (B**A) with (- A**B).",
                        "VernacExtend",
                        "8df1395d43cdf2cddc691221a0100e3bf6263d48"
                    ]
                },
                {
                    "command": [
                        "field;auto with Geom.",
                        "VernacExtend",
                        "2de65a1b7de4aa7c0a858aa5c7c65a478c26d278"
                    ]
                },
                {
                    "command": [
                        "symmetry;auto with Geom.",
                        "VernacExtend",
                        "faf68225a9a97c0881ee4aa15c9449b72508f2a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_not_all_col",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cases_col P U Q.",
                        "VernacExtend",
                        "a101c3fd4e618325d5e57ae833f503e87301dc98"
                    ]
                },
                {
                    "command": [
                        "unfold parallel in H.",
                        "VernacExtend",
                        "d1b5154695d29c7f9732e366971e5d1f4f1a8992"
                    ]
                },
                {
                    "command": [
                        "unfold S4 in H.",
                        "VernacExtend",
                        "81263ab0bc5e2e0def442e38baba535320714554"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H.",
                        "VernacExtend",
                        "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
                    ]
                },
                {
                    "command": [
                        "assert (0 + S P Q V = S P Q V).",
                        "VernacExtend",
                        "ba2af3ffab70794424d6dc7ac9fd07622d609cd1"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H.",
                        "VernacExtend",
                        "215f4c64f25f3964f02c3397d1a12602c82b8f1b"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold Col in |- *.",
                        "VernacExtend",
                        "6fc83dffc68036bd3d1b4e0319a8f1b0b6f4ec13"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l2_9",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cases_col Q A P.",
                        "VernacExtend",
                        "f7d4b774cc175e0b6c1fda9230ba23b4948487e9"
                    ]
                },
                {
                    "command": [
                        "cases_col Q P B.",
                        "VernacExtend",
                        "3346f2352be6a85ace4107877f597e036745eabc"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q P A); Geometry.",
                        "VernacExtend",
                        "0079431c9506864a99c10450c7c414e1a8e364aa"
                    ]
                },
                {
                    "command": [
                        "clear H1.",
                        "VernacExtend",
                        "c05bbc655b5fdcbbabbab72bd73c28fb300d5502"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q A B).",
                        "VernacExtend",
                        "58f7eeff4087b50835c1fcfc4a733287b1e6ca05"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "assert (Col P A B).",
                        "VernacExtend",
                        "9248acdfb5b351532482b6adb5cec140fa078881"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "ring_simplify.",
                        "VernacExtend",
                        "31578f61427562191ce5389abf97dbf9985ea04c"
                    ]
                },
                {
                    "command": [
                        "change (Col R A B) in |- *.",
                        "VernacExtend",
                        "d2d10c7f32b9483ed3afc806a4998ec2b98fe149"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q R B).",
                        "VernacExtend",
                        "a01dedf8ac5dea8b29499f362a09726b2e885ae8"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "assert (Col Q R A).",
                        "VernacExtend",
                        "3e8a3ad4b35fb0e2282dd983b3d3dc9c58189316"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "assert (Col R Q B); Geometry.",
                        "VernacExtend",
                        "98b7d2c15e8eadad8ec940d758071718526a013e"
                    ]
                },
                {
                    "command": [
                        "assert (Col R Q A); Geometry.",
                        "VernacExtend",
                        "9b96633169715df2649990c8ebdebebc7430394b"
                    ]
                },
                {
                    "command": [
                        "cases_equality R Q.",
                        "VernacExtend",
                        "2445f566ff3bd610309f31363627893c28e1dd7f"
                    ]
                },
                {
                    "command": [
                        "rewrite H9; trivial.",
                        "VernacExtend",
                        "09ae93b5940b269dbc52647a4c1a288c283101f5"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "apply l2_9aux; auto.",
                        "VernacExtend",
                        "0f42022bd23ebba8f90123c1a9bf7073c14a45e7"
                    ]
                },
                {
                    "command": [
                        "cases_col Q P B.",
                        "VernacExtend",
                        "3346f2352be6a85ace4107877f597e036745eabc"
                    ]
                },
                {
                    "command": [
                        "assert (S R B A = P ** R / P ** Q * S Q B A + R ** Q / P ** Q * S P B A).",
                        "VernacExtend",
                        "6d01de9f410bcbf8c6ca7b0dfb8cca5e1f9b25d5"
                    ]
                },
                {
                    "command": [
                        "apply l2_9aux; Geometry.",
                        "VernacExtend",
                        "286b23a4725d8685dcbefcdf096ca76007b721b3"
                    ]
                },
                {
                    "command": [
                        "assert (S R A B = - S R B A); Geometry.",
                        "VernacExtend",
                        "cdde6e03828cc96bd22071acde675d31d110d578"
                    ]
                },
                {
                    "command": [
                        "assert (S Q A B = - S Q B A); Geometry.",
                        "VernacExtend",
                        "4c14015c7fd743b41568a2c0f78c0984101db533"
                    ]
                },
                {
                    "command": [
                        "assert (S P A B = - S P B A); Geometry.",
                        "VernacExtend",
                        "ad7827ee84d534665fcb4bd590d69ad8029c0c85"
                    ]
                },
                {
                    "command": [
                        "rewrite H4.",
                        "VernacExtend",
                        "fc5d011df68f7160e4669d129d2975825ac089bb"
                    ]
                },
                {
                    "command": [
                        "rewrite H5.",
                        "VernacExtend",
                        "d39eba0f5559f57239c887c68680638084d28197"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply l2_9_weak; auto.",
                        "VernacExtend",
                        "727746a420745c49e0a154b6e570520a2ac14e72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid_point_degenerated_1",
            "line_nb": 893,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mid_point in H.",
                        "VernacExtend",
                        "3385457b432aaf7fd3f5b3a1dbb3c0adcec2daff"
                    ]
                },
                {
                    "command": [
                        "DecompAndAll.",
                        "VernacExtend",
                        "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid_point_degenerated_3",
            "line_nb": 910,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mid_point in H.",
                        "VernacExtend",
                        "3385457b432aaf7fd3f5b3a1dbb3c0adcec2daff"
                    ]
                },
                {
                    "command": [
                        "DecompAndAll.",
                        "VernacExtend",
                        "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "symmetry;Geometry.",
                        "VernacExtend",
                        "65981bfb7d83fa78c11deaaf62b453382000c5bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parallel_side_eq_parallel'",
            "line_nb": 925,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cases_equality C D.",
                        "VernacExtend",
                        "585b1127c3e3bc3297631dd8feb2332cfc9aab48"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "assert (P=Q).",
                        "VernacExtend",
                        "ff338c1091d614d3cbfbf08ace14b1e08d3e37c4"
                    ]
                },
                {
                    "command": [
                        "apply A1b.",
                        "VernacExtend",
                        "cd9c2dcf466e31065dae0097df638b65ac017243"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "unfold parallel,S4 in *.",
                        "VernacExtend",
                        "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply parallel_side_eq_parallel;auto.",
                        "VernacExtend",
                        "811c9fb0aecb1ad7774b38d0d45cad26d44f3792"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}