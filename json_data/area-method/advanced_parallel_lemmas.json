{
    "filename": "advanced_parallel_lemmas.v",
    "coq_project": "area-method",
    "vernac_cmds": [
        [
            "Require Export construction_lemmas.",
            "VernacRequire",
            "5e894f68578c3e435fa1c348856bf2b1fa8d388f"
        ],
        [
            "Definition weak_parallelogram (A B C D : Point) : Prop := A<>C /\\ B<>D /\\ exists O, mid_point O A C /\\ mid_point O B D.",
            "VernacDefinition",
            "42d9e9082ba519211a99ab0f74dee0fbfbee255c"
        ],
        [
            "Lemma parallelogram_weak_parallelogram : forall A B C D, parallelogram A B C D -> weak_parallelogram A B C D.",
            "VernacStartTheoremProof",
            "6e3e217ee714404c1890674107d3e2f1526f6a0d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_parallelogram.",
            "VernacExtend",
            "0cc756aa5af4386a3d175ba0f78a55f0da5c13b2"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "assert (~ parallel A C B D).",
            "VernacExtend",
            "63667ae23e96de32570a628bf4c7584cd56b0faf"
        ],
        [
            "apply diago_par_intersect;auto.",
            "VernacExtend",
            "97244a6a264badc7e0cdbe615cffd44f4fcf1e95"
        ],
        [
            "assert (T := inter_llex A C B D H0).",
            "VernacExtend",
            "dbbbe3c8936bc43600c5c9b2396eba051fab6f95"
        ],
        [
            "elim T; intro O; intros; clear T.",
            "VernacExtend",
            "9e43aed60d66f2a6aa25f1965ea85dc08c1c4236"
        ],
        [
            "decompose [and] p; clear p.",
            "VernacExtend",
            "cbd64ea77765576978b72935db369580280455e4"
        ],
        [
            "assert (A ** O = O ** C).",
            "VernacExtend",
            "ca90574e260490a3603ee0f725893821074332df"
        ],
        [
            "eapply l1_24.",
            "VernacExtend",
            "decd28a4c70223b776bdae57f755d7c443dd66bc"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (parallelogram B A D C).",
            "VernacExtend",
            "7c43b1595ea1da0ba7f77c1decfea25aced9ecac"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (B ** O = O ** D).",
            "VernacExtend",
            "a59884db94102f0a81cd21b8d7ac7cfed79f115b"
        ],
        [
            "eapply l1_24.",
            "VernacExtend",
            "decd28a4c70223b776bdae57f755d7c443dd66bc"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "exists O.",
            "VernacExtend",
            "857793ba1f2fca166b38dcce16bdb0403ad0f7dc"
        ],
        [
            "unfold mid_point.",
            "VernacExtend",
            "b705e824484d209afc1741c32ada1f37ba702273"
        ],
        [
            "repeat split; Geometry.",
            "VernacExtend",
            "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem weak_parallelogram_parallelogram : forall A B C D, ~ Col A B C -> weak_parallelogram A B C D -> parallelogram A B C D.",
            "VernacStartTheoremProof",
            "63ac445cae82e49c9716935cd5b5f5f749ec0831"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_parallelogram in H0.",
            "VernacExtend",
            "1a0051211508044dd61f1161960a9d40c9b15f56"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "DecompExAnd H4 X.",
            "VernacExtend",
            "73de9e641ef0d2b2c7cebdd83ef9876c864bdc87"
        ],
        [
            "unfold parallelogram.",
            "VernacExtend",
            "ab384d691295a203861d1f83ab681ca6eb9d3c7b"
        ],
        [
            "assert (parallel A B C D).",
            "VernacExtend",
            "7a4415c93cebd4fd4970f3a70ecbb2a8bd6bf359"
        ],
        [
            "eapply diag_mid_point_parallel;eauto.",
            "VernacExtend",
            "5dd61825b319a9ace97846ae98f62657046808e6"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "cut (parallel C B A D).",
            "VernacExtend",
            "82e54e5e5130c2fbe9fa7945a1c2b6d489107b80"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "eapply diag_mid_point_parallel.",
            "VernacExtend",
            "78558c733f21cfa252dfaf0c3d0f1408c0deb970"
        ],
        [
            "2:apply H5.",
            "VernacExtend",
            "42fd69307b59659a584caffc20da7549c0e12154"
        ],
        [
            "unfold mid_point in *;DecompAndAll;Geometry.",
            "VernacExtend",
            "4f4c4e5d4b8c311163bc270b978191f220530a71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_11a_strong : forall A B C D P Q : Point, weak_parallelogram A B C D -> S A P Q + S C P Q = S B P Q + S D P Q.",
            "VernacStartTheoremProof",
            "d0b12da55a4727f40fa893514877188f64a424fa"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_parallelogram in H.",
            "VernacExtend",
            "d8684136018ccb8a1dabe62aa52dba854e30d1f5"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "DecompExAnd H3 X.",
            "VernacExtend",
            "8a29b9fe7f303e8d16f0b58667104fcb72d77cc3"
        ],
        [
            "unfold mid_point in *.",
            "VernacExtend",
            "3bab166a3f6762dcc547f8bcda772b8b4790e67a"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "assert (S A P Q + S C P Q = 2 * S X P Q).",
            "VernacExtend",
            "337c1f8145561ff32949822bb7e8b61ad633cac7"
        ],
        [
            "apply mid_point_equation; Geometry.",
            "VernacExtend",
            "d7b6b944e5223cd55b7bbff86243a3c323e6ce31"
        ],
        [
            "assert (S B P Q + S D P Q = 2 * S X P Q).",
            "VernacExtend",
            "1174da5bfe7c637f09cddae672e28a93281158dc"
        ],
        [
            "apply mid_point_equation; Geometry.",
            "VernacExtend",
            "d7b6b944e5223cd55b7bbff86243a3c323e6ce31"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_11a : forall A B C D P Q : Point, parallelogram A B C D -> S A P Q + S C P Q = S B P Q + S D P Q.",
            "VernacStartTheoremProof",
            "b9998e0d8fcd0ef553514c61ea8623a23c981fa9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l2_11a_strong.",
            "VernacExtend",
            "637534a9e655404e261dd23694e4ef10029555d2"
        ],
        [
            "apply parallelogram_weak_parallelogram.",
            "VernacExtend",
            "506fcd9c579645965687a1ca3434d18dafb62a47"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition weak_2_parallelogram (A B C D : Point) : Prop := (A=C <-> B=D) /\\ exists O, mid_point O A C /\\ mid_point O B D.",
            "VernacDefinition",
            "f3e098838e94815590e2926669f71c332e841392"
        ],
        [
            "Theorem l2_11a_strong_strong : forall A B C D P Q : Point, weak_2_parallelogram A B C D -> S A P Q + S C P Q = S B P Q + S D P Q.",
            "VernacStartTheoremProof",
            "271f0ce1b77b7af3e646281dddca5739dedfb754"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_2_parallelogram in H.",
            "VernacExtend",
            "3abcf2a46c8520d6abe7276839ad78d989089f8a"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "cases_equality A C.",
            "VernacExtend",
            "cc7beac55fb8a92185efe9e5782472512dbd9fbc"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "assert (B=D).",
            "VernacExtend",
            "a14dd03806052956b2a9a058f0fbcb2ae8b00074"
        ],
        [
            "elim H0;intros.",
            "VernacExtend",
            "6b83f392a470a8cdaa118e532bc445a009dec854"
        ],
        [
            "apply H;auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "DecompExAnd H1 X.",
            "VernacExtend",
            "57d8f1f3e16667a13e3f55dc5ae9731e609d571c"
        ],
        [
            "assert (X=C).",
            "VernacExtend",
            "b1fba997eb3223248aa4d0f764ca557f141249cd"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "assert (C=D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (B<>D).",
            "VernacExtend",
            "0c8761391e7dda5d1d5ff33fb6ea12292018df86"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply l2_11a_strong.",
            "VernacExtend",
            "637534a9e655404e261dd23694e4ef10029555d2"
        ],
        [
            "unfold weak_parallelogram.",
            "VernacExtend",
            "0cc756aa5af4386a3d175ba0f78a55f0da5c13b2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition weak_3_parallelogram (A B C D : Point) : Prop := exists O, mid_point O A C /\\ mid_point O B D.",
            "VernacDefinition",
            "df8e888d6e75e60b58c6abd387098ca4eeb9a362"
        ],
        [
            "Lemma weak_para_1 : forall W S V U, weak_3_parallelogram W S V U -> weak_3_parallelogram U V S W.",
            "VernacStartTheoremProof",
            "796e77886f7f50e5dbdb248f41ad8aeb7f0565b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_3_parallelogram in *.",
            "VernacExtend",
            "53689589a6b1c368a602e32c33a9c17910274a70"
        ],
        [
            "decompose [ex and] H.",
            "VernacExtend",
            "c80103165e48bb3198a381bf2ff25f59c5cd7402"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split; auto with Geom.",
            "VernacExtend",
            "8fecf06402f6136b2837590c74b7d99be9197479"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve weak_para_1 : Geom.",
            "VernacHints",
            "5da83de0437889015a67af6a633d357ff910cda5"
        ],
        [
            "Theorem l2_11a_strong_strong_strong_aux : forall A B C D P Q : Point, A=C -> weak_3_parallelogram A B C D -> S A P Q + S C P Q = S B P Q + S D P Q.",
            "VernacStartTheoremProof",
            "12b92dd1560c3cc4a450ab899c5253600bfe1eb0"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_3_parallelogram in H0.",
            "VernacExtend",
            "9d6c31353da5f9533694255d60198fa7f5f770ee"
        ],
        [
            "cases_equality P Q.",
            "VernacExtend",
            "8576a2383e95fbd9ef93707a76d55ea2196edbb5"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "cases_col A P Q.",
            "VernacExtend",
            "ececc4ac3e9803f3b9e3b715ff1fd9c01e3c3ed4"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "DecompExAnd H0 X.",
            "VernacExtend",
            "f4d52e4e54d8b6f6856ec1d5bda5d1bfb40b7b4e"
        ],
        [
            "assert (X=A)...",
            "VernacExtend",
            "86b8c65ebe525986082fdefb597546724a4291ae"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "unfold mid_point in H4.",
            "VernacExtend",
            "a5b0ce2b515878ab7c103d142e7c2e67a3f14b09"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "cases_equality A D.",
            "VernacExtend",
            "45c5cb62caa9216d702356f95d9b22b5a85ebc93"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "assert (B=A)...",
            "VernacExtend",
            "4d85f32e325438d2bf6e84376d57bf46475ef17c"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "rewrite H;ring.",
            "VernacExtend",
            "0b04b537a97febaaaf64f5bd658c042a3bab338f"
        ],
        [
            "cases_equality P D.",
            "VernacExtend",
            "0192e92e3dbf8bcb4d0c4eeebc506168c0e5a093"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "assert (Col D B Q).",
            "VernacExtend",
            "2949745cceab15abbca86408667d4a11e956a406"
        ],
        [
            "eapply col_trans_1 with (B:= A)...",
            "VernacExtend",
            "cf7db40873dcde7b29f440b881b36eec4679d76c"
        ],
        [
            "assert (Col B D Q)...",
            "VernacExtend",
            "d940927f10cf144fa7a1279cce4b7eeda0a588a5"
        ],
        [
            "cases_col D P Q.",
            "VernacExtend",
            "b3bfc3e08e8868234fcc6fb1a29acb238cb95333"
        ],
        [
            "rewrite H5.",
            "VernacExtend",
            "d39eba0f5559f57239c887c68680638084d28197"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "assert (Col P A D).",
            "VernacExtend",
            "1ceecf171df1265fbba7d2f6da7c7a35b3b9f8bc"
        ],
        [
            "eapply col_trans_1 with (B:=Q)...",
            "VernacExtend",
            "168520f12667e1fb2a04d20c813f24fe1bf36a6b"
        ],
        [
            "assert (Col A B P).",
            "VernacExtend",
            "1f86d2d2c02ca03379f9d4209b8286ede42b34cd"
        ],
        [
            "eapply col_trans_1 with (B:=D)...",
            "VernacExtend",
            "518f2003c91046e3053ea4f78b0225389a0aa5b0"
        ],
        [
            "assert (Col D B P).",
            "VernacExtend",
            "1aa969e19319eb6ca63d91d87e62a4e4e0075346"
        ],
        [
            "eapply col_trans_1 with (B:=A)...",
            "VernacExtend",
            "cf7db40873dcde7b29f440b881b36eec4679d76c"
        ],
        [
            "assert (Col P B Q).",
            "VernacExtend",
            "a1dae7e1f093daf7e1216b4905bc5539951c0b96"
        ],
        [
            "eapply col_trans_1 with (B:=D)...",
            "VernacExtend",
            "518f2003c91046e3053ea4f78b0225389a0aa5b0"
        ],
        [
            "assert (Col B P Q)...",
            "VernacExtend",
            "b2a74bc914907908f044a4921b0dfe08d66a0838"
        ],
        [
            "assert (A<>B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "cases_equality P A.",
            "VernacExtend",
            "5273bc28c5f7f289452fe6024c1ab57dcc1b3eb8"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "clear H H4.",
            "VernacExtend",
            "db75221d3a1ba19d8b1715f4574b6ce2e9c4efb9"
        ],
        [
            "assert (A ** B / A ** D = S Q A B / S Q A D).",
            "VernacExtend",
            "8d64a0e5cd168134c5edc9f7d2a1a9822f344212"
        ],
        [
            "apply A6...",
            "VernacExtend",
            "8a001d1a0f4ad2cd876daba037d2e0710b198a1e"
        ],
        [
            "rewrite <- H2 in H.",
            "VernacExtend",
            "24741113b5340eec261a213cd2301abccefba5c4"
        ],
        [
            "replace (A**B/B**A) with (- (1)) in H.",
            "VernacExtend",
            "281d4400424d0bda115083bb16dc4e2263486d69"
        ],
        [
            "IsoleVar (S Q A B) H.",
            "VernacExtend",
            "0191bc231636e67fc057312b6b36a5950779ef9b"
        ],
        [
            "replace (S B A Q) with (- S Q A B).",
            "VernacExtend",
            "59a657a7aca84cd915297066f059423a6c683929"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "replace (A**B) with (- B**A).",
            "VernacExtend",
            "baa0ec0e6a41d1a71c7edaec05d2a66867f3e907"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "symmetry...",
            "VernacExtend",
            "d249b37e934b8496b927d45069837d3154475895"
        ],
        [
            "assert (B ** A / D ** A = S B P Q / S D P Q).",
            "VernacExtend",
            "0eb621cb6a39e59c42d4766f5254beef4d5b20ca"
        ],
        [
            "apply co_side...",
            "VernacExtend",
            "1bd26d8e358474b77c0ef04014bb7c42846ba4a3"
        ],
        [
            "rewrite H2 in H8.",
            "VernacExtend",
            "89d02315492ccda2d46390f7a540a75c8121e656"
        ],
        [
            "replace (A**D/D**A) with (-(1)) in H8.",
            "VernacExtend",
            "2a0ea61a525e0662a9979802e8b4199ab3786860"
        ],
        [
            "RewriteVar (S D P Q) H8.",
            "VernacExtend",
            "d513a9d34a1a760726d377f1c3c8800b1a1c1d7c"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "eapply nonzerodiv...",
            "VernacExtend",
            "1cd6a38af0c0b7cc5e912b94b84c9d02eadd2b13"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (Col B P Q)...",
            "VernacExtend",
            "b2a74bc914907908f044a4921b0dfe08d66a0838"
        ],
        [
            "assert (Col P A B).",
            "VernacExtend",
            "9248acdfb5b351532482b6adb5cec140fa078881"
        ],
        [
            "eapply col_trans_1 with (B:=Q)...",
            "VernacExtend",
            "168520f12667e1fb2a04d20c813f24fe1bf36a6b"
        ],
        [
            "assert (Col A P D).",
            "VernacExtend",
            "90400d826b4f946b5214635f3431a82e825ac99a"
        ],
        [
            "eapply col_trans_1 with (B:=B)...",
            "VernacExtend",
            "c85069b05e4d85400a602cf688df88191050b05f"
        ],
        [
            "assert (Col P Q D).",
            "VernacExtend",
            "874bfed25aeb6fe820927d957d625887ac3877b9"
        ],
        [
            "eapply col_trans_1 with (B:=A)...",
            "VernacExtend",
            "cf7db40873dcde7b29f440b881b36eec4679d76c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "replace (A**D) with (- D**A).",
            "VernacExtend",
            "bd67a80a546eee3c6a873870018ff4a45dc7371b"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "symmetry;Geometry.",
            "VernacExtend",
            "65981bfb7d83fa78c11deaaf62b453382000c5bc"
        ],
        [
            "DecompExAnd H0 X.",
            "VernacExtend",
            "f4d52e4e54d8b6f6856ec1d5bda5d1bfb40b7b4e"
        ],
        [
            "assert (X=A)...",
            "VernacExtend",
            "86b8c65ebe525986082fdefb597546724a4291ae"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "unfold mid_point in H4.",
            "VernacExtend",
            "a5b0ce2b515878ab7c103d142e7c2e67a3f14b09"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "cases_equality B D.",
            "VernacExtend",
            "3bbf2d99baaceaa734609990fc509880dfbfc712"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert (A=B).",
            "VernacExtend",
            "b36fea378ac2777bddf1da9fe79fbd562b6984ae"
        ],
        [
            "replace (A**B) with (- B**A) in H2.",
            "VernacExtend",
            "93c4ae82fb46790173f82f76c3076c9f14972a45"
        ],
        [
            "assert (B**A=0)...",
            "VernacExtend",
            "2d893c827d841c8df998b88f20fb5b3c88765aae"
        ],
        [
            "symmetry...",
            "VernacExtend",
            "d249b37e934b8496b927d45069837d3154475895"
        ],
        [
            "symmetry...",
            "VernacExtend",
            "d249b37e934b8496b927d45069837d3154475895"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (S B P Q + S D P Q = 2 * S A P Q).",
            "VernacExtend",
            "e584eb572b3f7c9e14d982d87d0fed422ca948d3"
        ],
        [
            "apply mid_point_equation...",
            "VernacExtend",
            "209bf6927395ee2a625621fbea630e5c719cb699"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_11a_strong_strong_strong : forall A B C D P Q : Point, weak_3_parallelogram A B C D -> S A P Q + S C P Q = S B P Q + S D P Q.",
            "VernacStartTheoremProof",
            "1a1fd079d822e6c8ed9008615cce3658a16127f0"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality A C.",
            "VernacExtend",
            "cc7beac55fb8a92185efe9e5782472512dbd9fbc"
        ],
        [
            "apply l2_11a_strong_strong_strong_aux...",
            "VernacExtend",
            "74aab4a9396ec90defb236541ada58714a67779c"
        ],
        [
            "cases_equality B D.",
            "VernacExtend",
            "3bbf2d99baaceaa734609990fc509880dfbfc712"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply l2_11a_strong_strong_strong_aux...",
            "VernacExtend",
            "74aab4a9396ec90defb236541ada58714a67779c"
        ],
        [
            "unfold weak_3_parallelogram in *.",
            "VernacExtend",
            "53689589a6b1c368a602e32c33a9c17910274a70"
        ],
        [
            "DecompExAnd H X.",
            "VernacExtend",
            "d8c0be27a76a19762b59dc005d110253432133b7"
        ],
        [
            "exists X.",
            "VernacExtend",
            "199ac60d0a22b88b3af3f4f4b7e49636d72d9970"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply l2_11a_strong.",
            "VernacExtend",
            "637534a9e655404e261dd23694e4ef10029555d2"
        ],
        [
            "unfold weak_parallelogram.",
            "VernacExtend",
            "0cc756aa5af4386a3d175ba0f78a55f0da5c13b2"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_11b : forall A B C D P Q : Point, parallelogram A B C D -> S4 P A Q B = S4 P D Q C.",
            "VernacStartTheoremProof",
            "d2b879691a7ca45723cdbe20b216d6406330e4c5"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold S4 in |- *.",
            "VernacExtend",
            "8227026cc3b74e881e1bd2383e572f1fb91ac57b"
        ],
        [
            "assert (S P A Q = - S A P Q)...",
            "VernacExtend",
            "a5f1b447971f3535ef9be3ccc529c5042b191212"
        ],
        [
            "assert (S P Q B = S B P Q)...",
            "VernacExtend",
            "3d974e7dee9b6a7f7180d20c22337f1166c71133"
        ],
        [
            "assert (S P D Q = - S D P Q)...",
            "VernacExtend",
            "156ae3a622b06687a0d750fe0e772f723f936298"
        ],
        [
            "assert (S P Q C = S C P Q)...",
            "VernacExtend",
            "19c88fb98db0d5a45ac3df1184f7f3a4a700ff39"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "assert (T := l2_11a A B C D P Q H)...",
            "VernacExtend",
            "38a5ed013ca31a0d4e8f8d771652a23f6cb4a098"
        ],
        [
            "RewriteVar (S A P Q) T...",
            "VernacExtend",
            "aa0741f7e053f79f30bda2c45840b1f57f21f4f3"
        ],
        [
            "ring...",
            "VernacExtend",
            "1ba409b27e9f97c74f4dc663370ed436d64ac388"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_11b_strong_strong : forall A B C D P Q : Point, weak_2_parallelogram A B C D -> S4 P A Q B = S4 P D Q C.",
            "VernacStartTheoremProof",
            "dd960c25eb134c1f43da64f414dae0a711a08663"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold S4 in |- *.",
            "VernacExtend",
            "8227026cc3b74e881e1bd2383e572f1fb91ac57b"
        ],
        [
            "assert (S P A Q = - S A P Q)...",
            "VernacExtend",
            "a5f1b447971f3535ef9be3ccc529c5042b191212"
        ],
        [
            "assert (S P Q B = S B P Q)...",
            "VernacExtend",
            "3d974e7dee9b6a7f7180d20c22337f1166c71133"
        ],
        [
            "assert (S P D Q = - S D P Q)...",
            "VernacExtend",
            "156ae3a622b06687a0d750fe0e772f723f936298"
        ],
        [
            "assert (S P Q C = S C P Q)...",
            "VernacExtend",
            "19c88fb98db0d5a45ac3df1184f7f3a4a700ff39"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "assert (T := l2_11a_strong_strong A B C D P Q H)...",
            "VernacExtend",
            "0aab7285436f5a287f9ff2c8ce844016f4a8dbb6"
        ],
        [
            "RewriteVar (S A P Q) T...",
            "VernacExtend",
            "aa0741f7e053f79f30bda2c45840b1f57f21f4f3"
        ],
        [
            "ring...",
            "VernacExtend",
            "1ba409b27e9f97c74f4dc663370ed436d64ac388"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_11b_strong_strong_strong : forall A B C D P Q : Point, weak_3_parallelogram A B C D -> S4 P A Q B = S4 P D Q C.",
            "VernacStartTheoremProof",
            "e81ba605b625200ffa305d6584521db45adf8c18"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold S4 in |- *.",
            "VernacExtend",
            "8227026cc3b74e881e1bd2383e572f1fb91ac57b"
        ],
        [
            "assert (S P A Q = - S A P Q)...",
            "VernacExtend",
            "a5f1b447971f3535ef9be3ccc529c5042b191212"
        ],
        [
            "assert (S P Q B = S B P Q)...",
            "VernacExtend",
            "3d974e7dee9b6a7f7180d20c22337f1166c71133"
        ],
        [
            "assert (S P D Q = - S D P Q)...",
            "VernacExtend",
            "156ae3a622b06687a0d750fe0e772f723f936298"
        ],
        [
            "assert (S P Q C = S C P Q)...",
            "VernacExtend",
            "19c88fb98db0d5a45ac3df1184f7f3a4a700ff39"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "assert (T := l2_11a_strong_strong_strong A B C D P Q H)...",
            "VernacExtend",
            "fa107f40ef140c29c5ec1888dda08575579a7687"
        ],
        [
            "RewriteVar (S A P Q) T...",
            "VernacExtend",
            "aa0741f7e053f79f30bda2c45840b1f57f21f4f3"
        ],
        [
            "ring...",
            "VernacExtend",
            "1ba409b27e9f97c74f4dc663370ed436d64ac388"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_12a : forall A B C D P : Point, parallelogram A B C D -> S P A B = S P D C - S A D C.",
            "VernacStartTheoremProof",
            "3840089504f14ea51b6a58c8660a05445d586390"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S B D C = S A D C).",
            "VernacExtend",
            "bac89afe37a10cbda92bdf9093daded292780aca"
        ],
        [
            "assert (S A D C + S C D C = S B D C + S D D C).",
            "VernacExtend",
            "617d147a1711f5d166b2157112d07637d293800f"
        ],
        [
            "apply l2_11a...",
            "VernacExtend",
            "c7377f26dfebf7085bc523297252f076f7f8789d"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "assert (S4 D B C P = S D B C + S D C P)...",
            "VernacExtend",
            "e757709d7909a19ef0a39342e0182f8ffa10df01"
        ],
        [
            "assert (S4 D B C P = S P D C - S A D C).",
            "VernacExtend",
            "99d968dafb615f1e89f95aa9e9ccfd6cc95714c7"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (S P A B = S P D B - S P C B).",
            "VernacExtend",
            "d23f42c67c6bf7855ddb02deb9b4a12c1895d76e"
        ],
        [
            "assert (S A B P + S C B P = S D B P + S B B P).",
            "VernacExtend",
            "280e824d00c1e3ea517340a2e65e2cf5431a4ed2"
        ],
        [
            "apply l2_11a...",
            "VernacExtend",
            "c7377f26dfebf7085bc523297252f076f7f8789d"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "assert (S4 D B C P = S D B P - S C B P)...",
            "VernacExtend",
            "e5df715f0223f18d6fdc06d4a0d09f9b2472b346"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_12a_strong_3 : forall A B C D P : Point, weak_3_parallelogram A B C D -> S P A B = S P D C - S A D C.",
            "VernacStartTheoremProof",
            "e9e7b18a0eb7703b3df6829475f3a928175239a7"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S B D C = S A D C).",
            "VernacExtend",
            "bac89afe37a10cbda92bdf9093daded292780aca"
        ],
        [
            "assert (S A D C + S C D C = S B D C + S D D C).",
            "VernacExtend",
            "617d147a1711f5d166b2157112d07637d293800f"
        ],
        [
            "apply l2_11a_strong_strong_strong...",
            "VernacExtend",
            "1243c5f83ac4181944edebffb478c578114012f9"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "assert (S4 D B C P = S D B C + S D C P)...",
            "VernacExtend",
            "e757709d7909a19ef0a39342e0182f8ffa10df01"
        ],
        [
            "assert (S4 D B C P = S P D C - S A D C).",
            "VernacExtend",
            "99d968dafb615f1e89f95aa9e9ccfd6cc95714c7"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (S P A B = S P D B - S P C B).",
            "VernacExtend",
            "d23f42c67c6bf7855ddb02deb9b4a12c1895d76e"
        ],
        [
            "assert (S A B P + S C B P = S D B P + S B B P).",
            "VernacExtend",
            "280e824d00c1e3ea517340a2e65e2cf5431a4ed2"
        ],
        [
            "apply l2_11a_strong_strong_strong...",
            "VernacExtend",
            "1243c5f83ac4181944edebffb478c578114012f9"
        ],
        [
            "unfold weak_3_parallelogram in *.",
            "VernacExtend",
            "53689589a6b1c368a602e32c33a9c17910274a70"
        ],
        [
            "DecompExAnd H Z.",
            "VernacExtend",
            "511242333b0fe7992e2ce38a293c3d5e9a799c9b"
        ],
        [
            "exists Z;split...",
            "VernacExtend",
            "9f241b99bc4d380c144503bd3a71318326419ca0"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "assert (S4 D B C P = S D B P - S C B P)...",
            "VernacExtend",
            "e5df715f0223f18d6fdc06d4a0d09f9b2472b346"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_12b : forall A B C D P : Point, parallelogram A B C D -> S P A B = S4 P D A C.",
            "VernacStartTheoremProof",
            "37df5feccf980c197a668824f4a8e41b54478962"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (S4 P D A C) with (S P D C - S A D C)...",
            "VernacExtend",
            "c2977eeb4974d3840565391d37cbc1e0d7caec6f"
        ],
        [
            "apply l2_12a...",
            "VernacExtend",
            "be73e6f36223d9c1a4f82f435fae020e09608753"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_12b_strong_3 : forall A B C D P : Point, weak_3_parallelogram A B C D -> S P A B = S4 P D A C.",
            "VernacStartTheoremProof",
            "6d1589c4c6edccc541cfe61c7870b515e81ac740"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (S4 P D A C) with (S P D C - S A D C)...",
            "VernacExtend",
            "c2977eeb4974d3840565391d37cbc1e0d7caec6f"
        ],
        [
            "apply l2_12a_strong_3...",
            "VernacExtend",
            "e40437b572bec0782d5604db4cea9f7095a71a9c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pascalian_ax : forall A B C P Q R : Point, Col A B C -> Col P Q R -> parallel A Q R B -> parallel B P Q C -> parallel A P R C.",
            "VernacStartTheoremProof",
            "486df1de321113ff572467c7ccbd85a7854358ab"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold parallel,S4 in |- *.",
            "VernacExtend",
            "d8b44f5b7fd86253f83f625286d4f55cc07c4264"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S R A P = S R A Q + S R Q P + S Q A P)...",
            "VernacExtend",
            "a8fcbc2e9f4a68bb5d2e9bfe222a68655032258b"
        ],
        [
            "assert (Col R Q P)...",
            "VernacExtend",
            "7e57a620193a5d7135cfaa6d91a978b71c9a7139"
        ],
        [
            "rewrite H4 in H3.",
            "VernacExtend",
            "806e5e7c7d38d93d32fde28c08821b0d11eaea9a"
        ],
        [
            "NormalizeRing H3...",
            "VernacExtend",
            "e3d5ccc206e4f2095de22f7b7f3f5a1b62e9511c"
        ],
        [
            "assert (S A R Q = - S R A Q)...",
            "VernacExtend",
            "0b38afd8444a21e88d1a060bf2e405e9622a1808"
        ],
        [
            "rewrite H5 in H1.",
            "VernacExtend",
            "75492eea10e1a639e3a991c814fb832be8f61ebb"
        ],
        [
            "RewriteVar (S R A Q) H1...",
            "VernacExtend",
            "be4e2173846010f9effadd128d98a83bcc10f6a4"
        ],
        [
            "assert (S4 B A P Q = S B A P + S B P Q)...",
            "VernacExtend",
            "75557b6f3526195d48e07096754a301a96fd5f53"
        ],
        [
            "assert (S B P Q = - S B Q P)...",
            "VernacExtend",
            "b2815b3650b9fc080e300ae3dab29a9d56e25961"
        ],
        [
            "rewrite H7 in H6.",
            "VernacExtend",
            "604f1616ee685b5918fa92762256f7d1c2bf4b5b"
        ],
        [
            "RewriteVar (S B Q P) H2...",
            "VernacExtend",
            "c1924ac8b020e3a975f74a9b401246ed6e81d88d"
        ],
        [
            "NormalizeRing H6...",
            "VernacExtend",
            "7b8c653c6bd89026ca129f0a8f5a6eead1953cd9"
        ],
        [
            "assert (S C A P = S C A B + S C B P + S B A P)...",
            "VernacExtend",
            "1904e9009367e146868840bff447b683be833498"
        ],
        [
            "assert (Col C A B)...",
            "VernacExtend",
            "7140b2b2a70d5bee8f64e57fa134d98a516b6be0"
        ],
        [
            "rewrite H9 in H8...",
            "VernacExtend",
            "ff83020ef41d01af4ea53b4d6257e8bbb0aca222"
        ],
        [
            "assert (S C B P = S B P C)...",
            "VernacExtend",
            "581a582544c105040daf2bcd9b600168dbf8aa58"
        ],
        [
            "rewrite <- H10 in H6...",
            "VernacExtend",
            "b42c369c13fddb41c696606161f01c0092f85b09"
        ],
        [
            "assert (S4 B A P Q = S C A P)...",
            "VernacExtend",
            "f1e53379b4becececb19b251c999fec0446423fb"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "ring_simplify...",
            "VernacExtend",
            "c3884dc50e0f0ddc2619a0e5f2f7d183b9aa5cca"
        ],
        [
            "cut (S A Q B + S Q A P = S4 B A P Q).",
            "VernacExtend",
            "7db17e24d61c21ac0e90b14d7e5c7f319e4a0990"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H12 in H3.",
            "VernacExtend",
            "73602709f20c11ed71ddb4b2f436d553bfb42a36"
        ],
        [
            "rewrite H11 in H3.",
            "VernacExtend",
            "95ea2156f5c0f39399bba97045446a4736eca7d7"
        ],
        [
            "assert (S A P C = S C A P)...",
            "VernacExtend",
            "3af01b1c7d5fee45d5cfa6e31d77d4f21771f628"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "rewrite <- H3.",
            "VernacExtend",
            "1eb91ccefb59c504d04364b76e0995592b63f60e"
        ],
        [
            "assert (S A R P = - S R A P)...",
            "VernacExtend",
            "3abfdbce2d19772eb7bbe21ea0d8f4cb9e2bbadf"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (S A Q B = S B A Q)...",
            "VernacExtend",
            "27d7987e7b223b71d2dfb9e5c931a63e1c48c136"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "assert (S4 B A P Q = S B A Q - S P A Q)...",
            "VernacExtend",
            "3d2ad762499e91ed33d394f17558b1f73df4557f"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "assert (S Q A P = - S P A Q)...",
            "VernacExtend",
            "a8b4ea2f6fb740093a2704c9e21306a05bc05bf7"
        ],
        [
            "rewrite H14.",
            "VernacExtend",
            "b53d81c05d6007e728db7abfa7c98c200268f9e7"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l1_25_aux : forall A B C X Y Z : Point, ~ Col Z B Y -> ~ Col C B Y -> Col A B C -> Col X Y Z -> parallel A X B Y -> parallel B Y C Z -> B <> C -> Z <> Y -> A ** B / C ** B = X ** Y / Z ** Y.",
            "VernacStartTheoremProof",
            "dbe2d621b84ebc781b4fdfd6f81b2d88354661ce"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (S C B Y = S Z B Y).",
            "VernacExtend",
            "5b1dfd6c5e6cdcf7170b95b398220ab379326c21"
        ],
        [
            "unfold parallel, S4 in H4.",
            "VernacExtend",
            "d14d29363857d56882072a9677e1c3c36749a12a"
        ],
        [
            "assert (S B C Y = - S C B Y)...",
            "VernacExtend",
            "a6443627dc3a5a265766870c8f9de8b3a8c8cd24"
        ],
        [
            "rewrite H7 in H4.",
            "VernacExtend",
            "8795ac4717164e57ba46108bee4e8cc953283466"
        ],
        [
            "RewriteVar (S C B Y) H4...",
            "VernacExtend",
            "2c4df14b0c2c037c9b289b744f1d41fc3a9044ab"
        ],
        [
            "assert (S A B Y = S X B Y)...",
            "VernacExtend",
            "4dee3a077d7fc7cbcfd7c21e04c905ddab04d883"
        ],
        [
            "assert (parallel B Y A X)...",
            "VernacExtend",
            "4f8e02affdd7b0716a47726df053d484d27d92c0"
        ],
        [
            "unfold parallel, S4 in H8.",
            "VernacExtend",
            "d03f4a4a6d480db2998199552b61fc856b978966"
        ],
        [
            "assert (S B A Y = - S A B Y)...",
            "VernacExtend",
            "560ed30099aae0c1d52629d35e47caeac69e45e6"
        ],
        [
            "assert (S B Y X = S X B Y)...",
            "VernacExtend",
            "41376a49874951fb2e815d7acc6ac3b3c5ac4d54"
        ],
        [
            "rewrite H9 in H8.",
            "VernacExtend",
            "4a2501d0bf70fe51d3bd144d783422650cca483d"
        ],
        [
            "rewrite H10 in H8.",
            "VernacExtend",
            "8320af812d79627933cac23524e0bfd37894c982"
        ],
        [
            "RewriteVar (S A B Y) H8...",
            "VernacExtend",
            "96467e85f7fe650b852aa79f04c490b8b8c28614"
        ],
        [
            "assert (A ** B / C ** B = S A B Y / S C B Y)...",
            "VernacExtend",
            "ea3aa2d324b19151994433a363886676c67edd10"
        ],
        [
            "assert (X ** Y / Z ** Y = S X B Y / S Z B Y)...",
            "VernacExtend",
            "a80d396ebe399015c2b35e3acbd1d48e9f7c4e38"
        ],
        [
            "congruence...",
            "VernacExtend",
            "669ddfec99e65921160e4d25fa3b5cda00cfe546"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l1_25 : forall A B C X Y Z : Point, ~ Col C B Y -> Col A B C -> Col X Y Z -> parallel A X B Y -> parallel B Y C Z -> A ** B / C ** B = X ** Y / Z ** Y.",
            "VernacStartTheoremProof",
            "c3ab63c48e785f1d1637d3f404a5867f7e579b07"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~ Col Z B Y).",
            "VernacExtend",
            "cf2dd72d37fb9b67f30c345ad68cf2caabb8d844"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "unfold parallel in H3.",
            "VernacExtend",
            "86584c97c8dca3798f6dab244365615bffaf41d2"
        ],
        [
            "unfold S4 in H3.",
            "VernacExtend",
            "36d3c7a7a6b2b762e943f98241adcd5043b41c5b"
        ],
        [
            "assert (Col B Y Z)...",
            "VernacExtend",
            "afbfa582745e505dbbd9c132e276585459639a88"
        ],
        [
            "rewrite H5 in H3.",
            "VernacExtend",
            "ffc4e047ccba0c6e301223fc336ee84216cd0e9f"
        ],
        [
            "NormalizeRing H3...",
            "VernacExtend",
            "e3d5ccc206e4f2095de22f7b7f3f5a1b62e9511c"
        ],
        [
            "assert (C <> B); eauto with Geom...",
            "VernacExtend",
            "ffda0f7709fdc92a3bb911609f22cce94e97eeeb"
        ],
        [
            "assert (Z <> Y); eauto with Geom...",
            "VernacExtend",
            "928678721e0e6d08e241c3500945b496bd6ea6a0"
        ],
        [
            "apply l1_25_aux...",
            "VernacExtend",
            "5212fd05561141589632ada0ed23e81639a11b9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thales : forall S B C Z Y : Point, ~ Col C B Y -> Col S B C -> Col S Y Z -> parallel Y B Z C-> Z <> Y -> S ** B / C ** B = S ** Y / Z ** Y.",
            "VernacStartTheoremProof",
            "80d9bac21a5eaf87923d0e70a79de5f127e5ec50"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply l1_25...",
            "VernacExtend",
            "1a579e98405446d6c40a1c92c0ba189424fcb128"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem thales_2 : forall S A B A' B' : Point, ~ Col S A A' -> Col S A B -> Col S A' B' -> parallel A A' B B' -> S ** B / S**A = S ** B' / S**A'.",
            "VernacStartTheoremProof",
            "b27c278261304e929b1091563c1d76cc669f943f"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality B' A'.",
            "VernacExtend",
            "0cdcd1a8181504518e1edd1e3ad3862b71a232c0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (S<>A').",
            "VernacExtend",
            "2139bc68fa1aac7fd9dc79501c75dd853c3ab83c"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "replace (S ** A' / S ** A') with 1.",
            "VernacExtend",
            "d9bb87f7c7bfe781c9f1e005b50a8add722fbf55"
        ],
        [
            "2:field;auto with Geom.",
            "VernacExtend",
            "0c6190715d82e7dac97ef8f989ad5fa07f9cc228"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (S=B).",
            "VernacExtend",
            "5ce4e3490cfc1354fcc2cffa4b98458934293595"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Col A A' S).",
            "VernacExtend",
            "bc17f653a8e3c71724580669430aebce6c4d684a"
        ],
        [
            "apply (col_trans_1 A B A' S).",
            "VernacExtend",
            "7c019a1db1a922a2fc3f99a55605194ca4857e5c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold parallel, S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "assert (Col S A A') by auto with Geom.",
            "VernacExtend",
            "30254ededb31b47a44f8ea0ad6972c726c981cd1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (S<>A).",
            "VernacExtend",
            "82edc769d4cb9a8e0bc48c7ef37bf87eaa45cef0"
        ],
        [
            "intro;subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (S<>A').",
            "VernacExtend",
            "2139bc68fa1aac7fd9dc79501c75dd853c3ab83c"
        ],
        [
            "intro;subst.",
            "VernacExtend",
            "9021e22274b6259ff513a190b208a4a3aa9b2ede"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "replace (S ** B / S ** B) with 1.",
            "VernacExtend",
            "6811e671d7f0c25003a6ece6450785da38a6ddcf"
        ],
        [
            "2:field.",
            "VernacExtend",
            "76d0007cb6823c2359ceb31d379e72402a46e0d5"
        ],
        [
            "2:auto with Geom.",
            "VernacExtend",
            "501e9265ab1e27a2af77815472cd60bc5cb07ea3"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (Col A' B' B).",
            "VernacExtend",
            "3f9f7c8414ef093f0ac008c3020c7208fe73cdaa"
        ],
        [
            "unfold parallel, S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "assert (Col A' S B).",
            "VernacExtend",
            "7c096668b5309ec99a5c00cd3339e1fe6f42a509"
        ],
        [
            "apply (col_trans_1 A' B' S B);auto with Geom.",
            "VernacExtend",
            "33f3cc143b760a6ab4562e92b2fccb9369fc9028"
        ],
        [
            "assert (Col S B A');auto with Geom.",
            "VernacExtend",
            "3d83976a94e98e95503176a38203e8742c26ed09"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (S ** A / B ** A = S ** A' / B' ** A').",
            "VernacExtend",
            "81995f33b40342d4c2c92f028775bea7751cc959"
        ],
        [
            "apply (thales S A B B' A');auto with Geom.",
            "VernacExtend",
            "3204ee01c29956b539581f7c10c47cac9814fbdb"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col A A' S).",
            "VernacExtend",
            "bc17f653a8e3c71724580669430aebce6c4d684a"
        ],
        [
            "apply (col_trans_1 A B A' S);auto with Geom.",
            "VernacExtend",
            "71e348917567417797ccda1457218e7a1dabd14c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (B**A/S**A= B'**A' / S**A').",
            "VernacExtend",
            "9151d198ba4626ef0a5f0fe86fac6cd7a4b08d1d"
        ],
        [
            "assert (S ** A / B ** A * B**A = S** A' / B' ** A' * B**A).",
            "VernacExtend",
            "f12b2c0c8a045346e02ae15b7f7181a7c776ce47"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (S ** A / B ** A * B ** A) with (S**A) in H8.",
            "VernacExtend",
            "0b0cb1ce661421ccc19949d4d14caf2f2998af7f"
        ],
        [
            "2:field;auto with Geom.",
            "VernacExtend",
            "0c6190715d82e7dac97ef8f989ad5fa07f9cc228"
        ],
        [
            "field_simplify_eq.",
            "VernacExtend",
            "96e28d9e8a2fd09134ef00557f9521e6deb6943f"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "split;auto with Geom.",
            "VernacExtend",
            "8fecf06402f6136b2837590c74b7d99be9197479"
        ],
        [
            "assert ( A**B / S ** A = A'**B' / S ** A').",
            "VernacExtend",
            "e3f3a5fef3c6468219dd360573cc35e6f1ae88eb"
        ],
        [
            "uniformize_dir_seg.",
            "VernacExtend",
            "bd7c479007e309aaba93aa45ceef95465c42d0c7"
        ],
        [
            "IsoleVar (A**B) H8.",
            "VernacExtend",
            "4d5250a732c3ce1021df81ce4da5ffb07982f1ee"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "field;split;auto with Geom.",
            "VernacExtend",
            "ede7b8fa59dbdc0e5b1ba825a4d91987ff9d2f8a"
        ],
        [
            "auto with Geom.",
            "VernacExtend",
            "681024d183977aeef2de8cafdfb122a2ae1e7162"
        ],
        [
            "assert (1+ A ** B / S ** A = 1+ A' ** B' / S ** A').",
            "VernacExtend",
            "faf438dda13dc3186afa87d7f382db1d47a59972"
        ],
        [
            "rewrite H9.",
            "VernacExtend",
            "7e513e390abfc88b77648f4c54df1434c5ffa9d3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (1 + A ** B / S ** A) with ((S**A + A**B) / S**A) in H10.",
            "VernacExtend",
            "f3cfbad5d1017ccbbcbd37ba6acf1ed70d3812da"
        ],
        [
            "2:field;auto with Geom.",
            "VernacExtend",
            "0c6190715d82e7dac97ef8f989ad5fa07f9cc228"
        ],
        [
            "replace (1 + A' ** B' / S ** A') with ((S**A' + A'**B') / S**A') in H10.",
            "VernacExtend",
            "c26822417c55912645981bc41337d91989af2b21"
        ],
        [
            "2:field;auto with Geom.",
            "VernacExtend",
            "0c6190715d82e7dac97ef8f989ad5fa07f9cc228"
        ],
        [
            "assert (S**A + A**B=S**B).",
            "VernacExtend",
            "f71f2925944ed87ee00b11e34ad41e56b3f3af16"
        ],
        [
            "apply chasles;auto with Geom.",
            "VernacExtend",
            "3e8257b0d9c583e60cb1097020e1e29f311a01d2"
        ],
        [
            "assert (S**A' + A'**B'=S**B').",
            "VernacExtend",
            "ed0471f1598a44c4fd20f273c1c47e63b09f923a"
        ],
        [
            "apply chasles;auto with Geom.",
            "VernacExtend",
            "3e8257b0d9c583e60cb1097020e1e29f311a01d2"
        ],
        [
            "rewrite H11 in H10.",
            "VernacExtend",
            "c425589942141208d827b17015efe56d9cb45200"
        ],
        [
            "rewrite H12 in H10.",
            "VernacExtend",
            "32011b0bcd65037713d6bb3a5c7ec7b15cc3b4be"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem on_line_dex_spec : forall P Q C D : Point, P <> Q -> {Y : Point | Col Y P Q /\\ P ** Y = C ** D}.",
            "VernacStartTheoremProof",
            "7cdeb466e5c5dec5c57ff919902ece8c8263d2d3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T := on_line_dex P Q (C ** D / P ** Q)).",
            "VernacExtend",
            "ba8ca19749ca5039ed8ebbe4b84f8de28b52999f"
        ],
        [
            "elim T; intros; clear T.",
            "VernacExtend",
            "37a8a6b4acb6441d80c321633c629836d606a2df"
        ],
        [
            "decompose [and] p; clear p.",
            "VernacExtend",
            "cbd64ea77765576978b72935db369580280455e4"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_not_col_par_not_col : forall A B P Q, A<>B -> ~ Col A Q P -> parallel A B P Q -> ~ Col A B P.",
            "VernacStartTheoremProof",
            "59ca054334d9b30625d8faa1961e1293cd20e6cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (Col A B Q).",
            "VernacExtend",
            "7d8defb7a07b4f136d502f825eaf33d69639cc03"
        ],
        [
            "eapply par_col_col_1;eauto.",
            "VernacExtend",
            "9a0d1e6acd774c7a61bcd06414e24e3a002a7841"
        ],
        [
            "assert (Col A P Q).",
            "VernacExtend",
            "b120c9da525a59d54b2b1a3d0f031416311339cd"
        ],
        [
            "eapply col_trans_1;apply H || auto.",
            "VernacExtend",
            "ef4dc78bcdbbaf87b32a703547e2fd0dc3e22f5a"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_sides_par_eq_parallelogram : forall A B C D, parallel A B C D -> ~ Col A B C -> A**B=D**C -> parallelogram A B C D.",
            "VernacStartTheoremProof",
            "ea4e81ce1a0c791181cc7df9100e12171039f9e5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold parallelogram.",
            "VernacExtend",
            "ab384d691295a203861d1f83ab681ca6eb9d3c7b"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "cut (parallel C B A D).",
            "VernacExtend",
            "82e54e5e5130c2fbe9fa7945a1c2b6d489107b80"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "apply parallel_side_eq_parallel;Geometry.",
            "VernacExtend",
            "5182b0c55c6df01cdfdb53bf8a05cd83e308b51c"
        ],
        [
            "assert (A<>B).",
            "VernacExtend",
            "054074d1c4aab44077b809892d45c03b9ae82923"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "eapply eq_diff_diff;eauto.",
            "VernacExtend",
            "c732295bc797d218d06e0d7a2d709e08825f75f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallel_side_eq_weak_para : forall P Q C D, parallel P Q C D -> C <> D -> P <> D -> Q<> C -> P ** Q = C ** D -> weak_parallelogram P Q D C.",
            "VernacStartTheoremProof",
            "87cb84f8e62e46bc3f9efdfe0ae99ee2a21ea74e"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_col P Q D.",
            "VernacExtend",
            "3afb17e1403f7e879be5f343d63c126157ee06f1"
        ],
        [
            "unfold weak_parallelogram.",
            "VernacExtend",
            "0cc756aa5af4386a3d175ba0f78a55f0da5c13b2"
        ],
        [
            "repeat split...",
            "VernacExtend",
            "0321435bc7cb77f3f3ae66f45e4ed580fdab4f58"
        ],
        [
            "assert ({O :Point | mid_point O P D}).",
            "VernacExtend",
            "df9b3d872fc8468fe16a2f884497090ec25cf2cf"
        ],
        [
            "apply mid_point_ex.",
            "VernacExtend",
            "3503149e1c3623cd9594f5626f520990371658c6"
        ],
        [
            "elim H5; intro X;intros;clear H5.",
            "VernacExtend",
            "a0d94c667b1721ab11d0583fc36d7bf28b566ea8"
        ],
        [
            "exists X;split...",
            "VernacExtend",
            "c51b13d9772092c9d33ae84ca020196c31133580"
        ],
        [
            "unfold mid_point in *.",
            "VernacExtend",
            "3bab166a3f6762dcc547f8bcda772b8b4790e67a"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "assert (Col P Q C).",
            "VernacExtend",
            "db96e59c59f9c2e675d90a381f4d1e513de4a979"
        ],
        [
            "eapply par_col_col_1;eauto...",
            "VernacExtend",
            "3ae22c3026716e62672defc84a64b0af0c5542ab"
        ],
        [
            "assert (Col P X Q).",
            "VernacExtend",
            "250589473d19fad53e2e44ebe7412d6772aac44b"
        ],
        [
            "eapply col_trans_1 with (B:=D)...",
            "VernacExtend",
            "518f2003c91046e3053ea4f78b0225389a0aa5b0"
        ],
        [
            "assert (Col D X Q).",
            "VernacExtend",
            "3bd950277790cd8ddb364f0700a0fcb81a565c31"
        ],
        [
            "eapply col_trans_1 with (B:=P)...",
            "VernacExtend",
            "b9e1c7c0fc7c866f60b195d475cbdb1eb0983b1c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "eapply col_trans_1 with (B:=P)...",
            "VernacExtend",
            "b9e1c7c0fc7c866f60b195d475cbdb1eb0983b1c"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "cases_equality X Q.",
            "VernacExtend",
            "f6b886bb52d611e300107a1eb7266d64b565b70b"
        ],
        [
            "subst X.",
            "VernacExtend",
            "09234d5bde8ac2779087d6856832ce09cd699803"
        ],
        [
            "rewrite H3 in H6.",
            "VernacExtend",
            "2be4c1a32869935794f9e17dd5a458786efa4f79"
        ],
        [
            "assert (C=Q).",
            "VernacExtend",
            "54ef40372fe01bb398a1f016469b6a44c49cb0ff"
        ],
        [
            "apply (A2bgen D Q C Q 1).",
            "VernacExtend",
            "649d640c7b809e845a289ecc84de37485f89d2e5"
        ],
        [
            "cut (Col Q D C).",
            "VernacExtend",
            "b0d34ed034f07ea32ed671deb15e3ece7920c616"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "eapply col_trans_1 with (B:=P)...",
            "VernacExtend",
            "b9e1c7c0fc7c866f60b195d475cbdb1eb0983b1c"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "replace (D ** C) with (- C**D).",
            "VernacExtend",
            "06f68040650a2e70b5c5b1241b477bff863c6132"
        ],
        [
            "2:symmetry;Geometry.",
            "VernacExtend",
            "b8b74e5494acf1729413c2396905d409c9540600"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "ring_simplify (1*D**Q).",
            "VernacExtend",
            "62e89d61c81ebe04be4ee63d9d98d5a527e5627f"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (P**X + X**Q = P**Q)...",
            "VernacExtend",
            "a6fbac1863a6ee66f1a3f68118c4a1528c907b3a"
        ],
        [
            "rewrite H3 in H11.",
            "VernacExtend",
            "94d6db8198147204546482f4b525259ff3fd9fb1"
        ],
        [
            "IsoleVar (X**Q) H11.",
            "VernacExtend",
            "5e615a67a2d659347180cab0b20c843bdce5f83b"
        ],
        [
            "suppose (Col X C D).",
            "VernacExtend",
            "b80d371c4017c8104b82952ec1d29de1e7f39c38"
        ],
        [
            "assert (C**X+ X**D=C**D)...",
            "VernacExtend",
            "7fd729407b042d6611387f55ad6866dd52cb1bf9"
        ],
        [
            "rewrite <- H13 in H11.",
            "VernacExtend",
            "ed446b3acf309d4b6fb1de07a09fb6b9c0baf70b"
        ],
        [
            "rewrite <- H6 in H11.",
            "VernacExtend",
            "685a9c6282c02d89ec6e2c28e99d91044709ea12"
        ],
        [
            "NormalizeRing H11.",
            "VernacExtend",
            "78911b4cb9217155c2b2312b0f628d8b350a0922"
        ],
        [
            "replace (Q**X) with (- X**Q).",
            "VernacExtend",
            "7e2314025aa8c70a6b06c6eb370bd3a4fd022eea"
        ],
        [
            "2:symmetry...",
            "VernacExtend",
            "993f5b1002b3fcf7105098af35880e50481dc5ba"
        ],
        [
            "rewrite H11.",
            "VernacExtend",
            "5c05c623605d2f85e82d91f881b0be37a5db37eb"
        ],
        [
            "symmetry...",
            "VernacExtend",
            "d249b37e934b8496b927d45069837d3154475895"
        ],
        [
            "assert (Col Q C X).",
            "VernacExtend",
            "b933e6df2088ea7b411a9443ea61ec38f0205806"
        ],
        [
            "eapply col_trans_1 with (B:=P)...",
            "VernacExtend",
            "b9e1c7c0fc7c866f60b195d475cbdb1eb0983b1c"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "eapply col_trans_1 with (B:=Q)...",
            "VernacExtend",
            "168520f12667e1fb2a04d20c813f24fe1bf36a6b"
        ],
        [
            "assert (parallelogram P Q D C).",
            "VernacExtend",
            "1184749d50c7c3430b4bf3003dc375973bf046e6"
        ],
        [
            "apply two_sides_par_eq_parallelogram...",
            "VernacExtend",
            "69089afda8ef4c24a1fc9d2884027f055cddf17e"
        ],
        [
            "apply parallelogram_weak_parallelogram...",
            "VernacExtend",
            "8223ac5e78d296d53a5dae06f99a91da0f06aadb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_parallelogram_weak_2_parallelogram : forall A B C D, weak_parallelogram A B C D -> weak_2_parallelogram A B C D.",
            "VernacStartTheoremProof",
            "a9eb2d2182edf47bf7f05b5180a0c8d96be94ea2"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold weak_2_parallelogram, weak_parallelogram.",
            "VernacExtend",
            "62b0f61d214a87e18aa1dd82fad8862c07151cad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_2_parallelogram_weak_3_parallelogram : forall A B C D, weak_2_parallelogram A B C D -> weak_3_parallelogram A B C D.",
            "VernacStartTheoremProof",
            "f72b7f588f65cc3e4a19683295989b6962f49b23"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold weak_2_parallelogram, weak_3_parallelogram.",
            "VernacExtend",
            "80cccf8aa8045ea11882f4ac7563df17412407ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_parallelogram_weak_3_parallelogram : forall A B C D, weak_parallelogram A B C D -> weak_3_parallelogram A B C D.",
            "VernacStartTheoremProof",
            "c8e349550cee5ddc067b0ff595494ab9f09cbfc6"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply weak_2_parallelogram_weak_3_parallelogram.",
            "VernacExtend",
            "126bb0d9867f45d284a8a10ebe96ba335de2d224"
        ],
        [
            "apply weak_parallelogram_weak_2_parallelogram.",
            "VernacExtend",
            "902dad3bafff92c25202d37eda1b15055c0c5320"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallelogram_weak_3_parallelogram : forall A B C D, parallelogram A B C D -> weak_3_parallelogram A B C D.",
            "VernacStartTheoremProof",
            "5e4d6d5e781d0fe92592694e98cb8d998b6b04f9"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply weak_parallelogram_weak_3_parallelogram.",
            "VernacExtend",
            "0d3c4507b1863cacaa7d0d48cc31ee8605ecbd98"
        ],
        [
            "apply parallelogram_weak_parallelogram.",
            "VernacExtend",
            "506fcd9c579645965687a1ca3434d18dafb62a47"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallel_side_eq_weak_weak_para : forall P Q C D, parallel P Q C D -> (P = D <-> Q = C) -> P ** Q = C ** D -> weak_2_parallelogram P Q D C.",
            "VernacStartTheoremProof",
            "feff63e2ed0ae08e29b585d31e0920f42e7a24f3"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality C D.",
            "VernacExtend",
            "585b1127c3e3bc3297631dd8feb2332cfc9aab48"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "assert (P=Q).",
            "VernacExtend",
            "ff338c1091d614d3cbfbf08ace14b1e08d3e37c4"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "unfold weak_2_parallelogram.",
            "VernacExtend",
            "a49ba4465bbdf9d4a830d5bc2068354ac20d57fa"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert ({O :Point | mid_point O P D}).",
            "VernacExtend",
            "df9b3d872fc8468fe16a2f884497090ec25cf2cf"
        ],
        [
            "apply mid_point_ex.",
            "VernacExtend",
            "3503149e1c3623cd9594f5626f520990371658c6"
        ],
        [
            "DecompEx H0 X.",
            "VernacExtend",
            "c5aa26309a86fb0187fb62211dcbd056a586bef0"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "cases_equality P D.",
            "VernacExtend",
            "0192e92e3dbf8bcb4d0c4eeebc506168c0e5a093"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "assert (Q=C);intuition.",
            "VernacExtend",
            "7bf58314c431a42c7b71e8ad1746bf5cc1559d13"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "clear H0 H5.",
            "VernacExtend",
            "ba396ff32ab8aafd3de370a76bec1533f9cc9c87"
        ],
        [
            "replace (D**C) with (-C**D) in H1.",
            "VernacExtend",
            "f038fbeacb4582e34b4fec68ab783bbe3633b9d5"
        ],
        [
            "2:symmetry...",
            "VernacExtend",
            "993f5b1002b3fcf7105098af35880e50481dc5ba"
        ],
        [
            "assert (C**D=0)...",
            "VernacExtend",
            "504e1f51dce85dce4579a1f7ce9ce4f2fa22ba6c"
        ],
        [
            "assert (C=D)...",
            "VernacExtend",
            "e6f8703454db9834ca904e3362d65162e237f36b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Q<>C).",
            "VernacExtend",
            "db7996815f23cede5ad7c2defc5a56f9a9fa0cd7"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "elim H0;intros.",
            "VernacExtend",
            "6b83f392a470a8cdaa118e532bc445a009dec854"
        ],
        [
            "assert (P=D)...",
            "VernacExtend",
            "a3e6eea2db454958649f126f053b7d9b577c7ed1"
        ],
        [
            "assert (weak_parallelogram P Q D C).",
            "VernacExtend",
            "b5f6afb6295cd68cb0fb0293f5c2bf10df3d3af4"
        ],
        [
            "apply parallel_side_eq_weak_para...",
            "VernacExtend",
            "701e2d2976032551df2b267b5b459c2040e4008d"
        ],
        [
            "apply weak_parallelogram_weak_2_parallelogram.",
            "VernacExtend",
            "902dad3bafff92c25202d37eda1b15055c0c5320"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parallel_side_eq_weak_weak_weak_para : forall P Q C D, parallel P Q C D -> P ** Q = C ** D -> weak_3_parallelogram P Q D C.",
            "VernacStartTheoremProof",
            "c36efb5671d4428d1da3c932199b5e03ef5fac64"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality P D.",
            "VernacExtend",
            "0192e92e3dbf8bcb4d0c4eeebc506168c0e5a093"
        ],
        [
            "cases_equality Q C.",
            "VernacExtend",
            "38980150d10a75b946b5ea5ddb4000a2e4340c80"
        ],
        [
            "cut (weak_2_parallelogram P Q D C).",
            "VernacExtend",
            "87e44e0f020c1974b71cbf69668db0262d8394b6"
        ],
        [
            "apply weak_2_parallelogram_weak_3_parallelogram.",
            "VernacExtend",
            "126bb0d9867f45d284a8a10ebe96ba335de2d224"
        ],
        [
            "apply parallel_side_eq_weak_weak_para...",
            "VernacExtend",
            "50db30918e44d956be22b9e048e5c5de77bbd3e5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "unfold weak_3_parallelogram.",
            "VernacExtend",
            "ae865e5d462e30850ea22a01703d22dadaa043cb"
        ],
        [
            "exists D.",
            "VernacExtend",
            "7e206b3de048aab85afa1949990c2a1c5bce6072"
        ],
        [
            "unfold mid_point.",
            "VernacExtend",
            "b705e824484d209afc1741c32ada1f37ba702273"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold parallel, S4 in H.",
            "VernacExtend",
            "da995b12b3cf74b6cdcc5ba1a2adaf2742db2566"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "cases_equality Q C.",
            "VernacExtend",
            "38980150d10a75b946b5ea5ddb4000a2e4340c80"
        ],
        [
            "subst Q.",
            "VernacExtend",
            "11ef39d7871ab32ca8047174680c596e5304f734"
        ],
        [
            "unfold weak_3_parallelogram.",
            "VernacExtend",
            "ae865e5d462e30850ea22a01703d22dadaa043cb"
        ],
        [
            "exists C.",
            "VernacExtend",
            "a733d49a74d79f0434672f04b7a8f57fbef1fdd4"
        ],
        [
            "unfold mid_point.",
            "VernacExtend",
            "b705e824484d209afc1741c32ada1f37ba702273"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "unfold parallel, S4 in H.",
            "VernacExtend",
            "da995b12b3cf74b6cdcc5ba1a2adaf2742db2566"
        ],
        [
            "basic_simpl...",
            "VernacExtend",
            "e20ab49921c06cb8b572bdc0a810174ee5d2035d"
        ],
        [
            "cut (weak_2_parallelogram P Q D C).",
            "VernacExtend",
            "87e44e0f020c1974b71cbf69668db0262d8394b6"
        ],
        [
            "apply weak_2_parallelogram_weak_3_parallelogram.",
            "VernacExtend",
            "126bb0d9867f45d284a8a10ebe96ba335de2d224"
        ],
        [
            "apply parallel_side_eq_weak_weak_para...",
            "VernacExtend",
            "50db30918e44d956be22b9e048e5c5de77bbd3e5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on_line_dex_spec_strong_f : forall P Q C D : Point, parallel P Q C D -> P<>Q -> exists Y : Point, Col Y P Q /\\ P ** Y = C ** D /\\ weak_3_parallelogram P Y D C.",
            "VernacStartTheoremProof",
            "f7090100ae1da49c66da88146575783987bc6dda"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Th := (on_line_dex_spec P Q C D H0)).",
            "VernacExtend",
            "8505a394284ba6f650917bbb8b985dc8e37954e2"
        ],
        [
            "elim Th;intro Y;intros;clear Th.",
            "VernacExtend",
            "49d7f2e5048ea8a0ed7c524890af41a27589219f"
        ],
        [
            "decompose [and] p;clear p.",
            "VernacExtend",
            "cbd64ea77765576978b72935db369580280455e4"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "repeat split;try assumption.",
            "VernacExtend",
            "221a84919e803be5614ea6011742084cb77b34b6"
        ],
        [
            "apply parallel_side_eq_weak_weak_weak_para...",
            "VernacExtend",
            "ce63d713f6d6ec7588fda6bcb06f16809bed07df"
        ],
        [
            "cut (parallel C D P Y)...",
            "VernacExtend",
            "7531cbbfb2a76aa23825c4c2a5aad7969f4ace08"
        ],
        [
            "eapply col_par_par.",
            "VernacExtend",
            "4cd16fb268f46af064e97cd816500daef9eb1c3a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on_line_dex_spec_strong_ter : forall P Q C D : Point, parallel P Q C D -> P<>Q -> (P=D -> C=D) -> (Col C P Q -> P**C <> C**D) -> exists Y : Point, Col Y P Q /\\ P ** Y = C ** D /\\ weak_2_parallelogram P Y D C.",
            "VernacStartTheoremProof",
            "4f01e24ff1b8382aac7dd74ff11a6ce7078603d8"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (P<>D).",
            "VernacExtend",
            "8a15eb9b1450c0966733b6c4b954d33880c39d26"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst P.",
            "VernacExtend",
            "37a29b451de870ca30fc70b22763d18c31140568"
        ],
        [
            "assert (C=D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "subst D.",
            "VernacExtend",
            "bf13afdfcaa60de54bdbd5177d0b7ddc477bc859"
        ],
        [
            "assert (C**C<>C**C).",
            "VernacExtend",
            "d4f4d56d26e590e6e38e6f157cb91104b423ab48"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (Th := (on_line_dex_spec P Q C D H0)).",
            "VernacExtend",
            "8505a394284ba6f650917bbb8b985dc8e37954e2"
        ],
        [
            "elim Th;intro Y;intros;clear Th.",
            "VernacExtend",
            "49d7f2e5048ea8a0ed7c524890af41a27589219f"
        ],
        [
            "decompose [and] p;clear p.",
            "VernacExtend",
            "cbd64ea77765576978b72935db369580280455e4"
        ],
        [
            "cases_equality Y C.",
            "VernacExtend",
            "cc8241435f93b268e94612578b7b4451536d57c1"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "split;try assumption.",
            "VernacExtend",
            "7aec98fbbf52695c4dbe780a98e3c8166b58320f"
        ],
        [
            "split;try assumption.",
            "VernacExtend",
            "7aec98fbbf52695c4dbe780a98e3c8166b58320f"
        ],
        [
            "apply parallel_side_eq_weak_weak_para.",
            "VernacExtend",
            "88834439fc94eb03b4d9276fb0a92d632053ab6c"
        ],
        [
            "cut (parallel C D P Y)...",
            "VernacExtend",
            "7531cbbfb2a76aa23825c4c2a5aad7969f4ace08"
        ],
        [
            "eapply col_par_par.",
            "VernacExtend",
            "4cd16fb268f46af064e97cd816500daef9eb1c3a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "2:auto.",
            "VernacExtend",
            "39c1ddb0360c4672841c6c9a8ce0db8d5b584563"
        ],
        [
            "split;intro.",
            "VernacExtend",
            "966a6edea9c2088caf0e546be884ea531f6207b3"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on_line_dex_spec_strong_bis : forall P Q C D : Point, parallel P Q C D -> C <> D -> P <> D -> Q<> C -> P <> Q-> (parallel P C C D -> P**C <> C**D) -> {Y : Point | Col Y P Q /\\ P ** Y = C ** D /\\ weak_parallelogram P Y D C}.",
            "VernacStartTheoremProof",
            "2f232ba2c557551547b5d5cf53efc622d635caf9"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Th := (on_line_dex_spec P Q C D H3)).",
            "VernacExtend",
            "8abd98fa02434e893644262f405a6660c9bafdbd"
        ],
        [
            "elim Th;intro Y;intros;clear Th.",
            "VernacExtend",
            "49d7f2e5048ea8a0ed7c524890af41a27589219f"
        ],
        [
            "decompose [and] p;clear p.",
            "VernacExtend",
            "cbd64ea77765576978b72935db369580280455e4"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply parallel_side_eq_weak_para;try assumption.",
            "VernacExtend",
            "17d1fffff0f776604cafd3222becf39315671a4e"
        ],
        [
            "cut (parallel C D P Y).",
            "VernacExtend",
            "914d85bad25d47e9501f6509fff0095a6af3102d"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "eapply col_par_par;eauto...",
            "VernacExtend",
            "555d663dc9bf9c7cf0a40b5cf2a2e580ab94328f"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst Y.",
            "VernacExtend",
            "9ecf92bdbb9bdf3779295b4d915f87dd88704619"
        ],
        [
            "assert (Col P Q D).",
            "VernacExtend",
            "874bfed25aeb6fe820927d957d625887ac3877b9"
        ],
        [
            "eapply par_col_col_1.",
            "VernacExtend",
            "d0748913b6750a4622a7e1219fb5a12311865c4f"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (Col P C D).",
            "VernacExtend",
            "37774554c70ae344c27943802cc70a85ff0d15af"
        ],
        [
            "eapply col_trans_1 with (B:=Q)...",
            "VernacExtend",
            "168520f12667e1fb2a04d20c813f24fe1bf36a6b"
        ],
        [
            "assert (parallel P C C D).",
            "VernacExtend",
            "5cfde6a1a4270730db3d977bac97f3cc15e3b6af"
        ],
        [
            "unfold parallel,S4.",
            "VernacExtend",
            "d8b44f5b7fd86253f83f625286d4f55cc07c4264"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert ( P ** C <> C ** D).",
            "VernacExtend",
            "832046ce0019358551b830f91a7fe43a74a444d1"
        ],
        [
            "apply H4...",
            "VernacExtend",
            "24b66a7bd0f2c2df28ea4c15b8f0e25e28d1d53b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on_line_dex_spec_strong : forall P Q C D : Point, parallel P Q C D -> C <> D -> ~ Col P Q D -> {Y : Point | Col Y P Q /\\ P ** Y = C ** D /\\ parallelogram P Y D C}.",
            "VernacStartTheoremProof",
            "a7b294e925d26d74d6a4ce630e0cabebd30affcb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (P<>Q).",
            "VernacExtend",
            "4e2ec8bb8e15e6e481f1c8df4c18fbfba93e99af"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "assert (Th := (on_line_dex_spec P Q C D H2)).",
            "VernacExtend",
            "5fde584e8a86db8e8c4f18873d47ec8ca13c2872"
        ],
        [
            "elim Th;intro Y;intros;clear Th.",
            "VernacExtend",
            "49d7f2e5048ea8a0ed7c524890af41a27589219f"
        ],
        [
            "decompose [and] p;clear p.",
            "VernacExtend",
            "cbd64ea77765576978b72935db369580280455e4"
        ],
        [
            "exists Y.",
            "VernacExtend",
            "49394996b896109363dce3db54779891f7a20742"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply two_sides_par_eq_parallelogram.",
            "VernacExtend",
            "7063786c5464965212e70f3038479560d25e36ed"
        ],
        [
            "cut (parallel C D P Y).",
            "VernacExtend",
            "914d85bad25d47e9501f6509fff0095a6af3102d"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "apply (col_par_par C D P Q Y);Geometry.",
            "VernacExtend",
            "d91baf01b2bf6b429232e8daf1f780561fbb1650"
        ],
        [
            "2:assumption.",
            "VernacExtend",
            "733bef30779add23f5d2d5ba011ac50b88aa9b5a"
        ],
        [
            "unfold not; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (Col P Y Q);Geometry.",
            "VernacExtend",
            "1319b3b834f13ac5f3d792e98180495d6c540962"
        ],
        [
            "assert (P<>Y).",
            "VernacExtend",
            "c6b2944f545d0ed60caf81b3370f557f71f65dc2"
        ],
        [
            "eapply eq_diff_diff.",
            "VernacExtend",
            "8ad59fd88f9d516497f6593b682869c4e84f9bd9"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col P Q D).",
            "VernacExtend",
            "874bfed25aeb6fe820927d957d625887ac3877b9"
        ],
        [
            "eapply col_trans_1; apply H7 || auto.",
            "VernacExtend",
            "348c515591781fd885fb104582eeb1ef4129f22c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem l2_15 : forall A B P Q : Point, parallel P Q A B -> ~ Col A Q P -> A ** B / P ** Q = S P A B / S A Q P.",
            "VernacStartTheoremProof",
            "30260f0af66c74578e45859cdf5cbcc18431c754"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_equality A B.",
            "VernacExtend",
            "922c1da3ede1bb19316db5c6ed21721479b29b66"
        ],
        [
            "assert (A ** B = 0)...",
            "VernacExtend",
            "a7c8c63225458ed0cc63460c0f9da5cd2833c5df"
        ],
        [
            "assert (S P A B = 0).",
            "VernacExtend",
            "ed7a5369a8f3bb3c3873a3b5c12a63cac9ce68da"
        ],
        [
            "rewrite H1...",
            "VernacExtend",
            "ea2378a230b97c3935b9ba0f0107ca3d47b65218"
        ],
        [
            "assert (P <> Q); eauto with Geom...",
            "VernacExtend",
            "f460c44b51efd0609969fa629714b84bd9550d84"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "assert (parallel A B P Q)...",
            "VernacExtend",
            "e6e06114f7fc24394277edea4fa18fbc52a8d9d2"
        ],
        [
            "assert (T: P<>Q).",
            "VernacExtend",
            "4614f8fc108fbedbeb894087f804b165389dbfd0"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "assert (U: ~ Col A B Q).",
            "VernacExtend",
            "38f479d8427d13377b6816a4224393ceb01cdb0e"
        ],
        [
            "eapply diff_not_col_par_not_col with (Q:=P)...",
            "VernacExtend",
            "f71c424a443aa66bf2681546018d6257bf844336"
        ],
        [
            "assert (Th := on_line_dex_spec_strong A B P Q H2 T U)...",
            "VernacExtend",
            "c8fa26fd3251a71628bf62d71a8800a189e7ca10"
        ],
        [
            "elim Th; intro R; intros; clear Th...",
            "VernacExtend",
            "be3d3045e76cd587e4522de707ab3215f5aeb9d1"
        ],
        [
            "decompose [and] p; clear p...",
            "VernacExtend",
            "8741c441c995c022a5306a9d9bcfa48b116ffdc7"
        ],
        [
            "rewrite <- H5...",
            "VernacExtend",
            "5df3a4dc926a076ac120abd9b3efb3fbcbce45bd"
        ],
        [
            "assert (A <> R)...",
            "VernacExtend",
            "4872f352ddee49081eda3de03c0735b0bd36e7a9"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (A ** R = 0)...",
            "VernacExtend",
            "5ea07f01d1d84da8311fb86a2e98437c7efcdc50"
        ],
        [
            "rewrite H7 in H5...",
            "VernacExtend",
            "87ff588318a4ad369b72890a06fd5a1831d16d10"
        ],
        [
            "suppose (~ Col P A R).",
            "VernacExtend",
            "a1841f63fdafa62160bc990b15e9ce575e829919"
        ],
        [
            "assert (A ** B / A ** R = S P A B / S P A R)...",
            "VernacExtend",
            "7145fc7af3c145ef5732017043a8ae188ed10c1e"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "assert (S P A R = S A Q P).",
            "VernacExtend",
            "a16763e02b2eb08c80acce0a0675b82a03705060"
        ],
        [
            "assert (S A P A + S Q P A = S R P A + S P P A).",
            "VernacExtend",
            "233495f43fea44ed1b199ecbe0968349b0135f41"
        ],
        [
            "apply l2_11a...",
            "VernacExtend",
            "c7377f26dfebf7085bc523297252f076f7f8789d"
        ],
        [
            "assert (S A P A = 0)...",
            "VernacExtend",
            "1d6ae3a005139a18e47b21de1dbac362f89b9e06"
        ],
        [
            "assert (S P P A = 0)...",
            "VernacExtend",
            "6e174153764bf5099bfbd14f42dba297fae56202"
        ],
        [
            "rewrite H10 in H9.",
            "VernacExtend",
            "7ac8737d82ece5bf39106efc0ceff3bd8f43c81f"
        ],
        [
            "rewrite H11 in H9.",
            "VernacExtend",
            "0428d0d13c0342adf68e51e0c762aa545fecb5e3"
        ],
        [
            "assert (S A Q P = S Q P A)...",
            "VernacExtend",
            "0d933153c7608190fec8ac98498358ff98b0239a"
        ],
        [
            "assert (S P A R = S R P A)...",
            "VernacExtend",
            "7f4a2e53bc37544b7be81db44b7c9d7a3ded229c"
        ],
        [
            "rewrite H12.",
            "VernacExtend",
            "808735886b50c5c4d7707b33984e66555647a2a9"
        ],
        [
            "rewrite H13.",
            "VernacExtend",
            "bc2d32522e887645239b994008e234c058557cd9"
        ],
        [
            "NormalizeRing H9...",
            "VernacExtend",
            "033ec0d47e5ff0d3901e3ed3e83ef0745056eadc"
        ],
        [
            "rewrite H9...",
            "VernacExtend",
            "c688de842f2344cdba924cfa8491b2d7a9ca46ac"
        ],
        [
            "unfold parallel in H2.",
            "VernacExtend",
            "6eae6892c2e755d4ab4bfec30e5976fa04ed8945"
        ],
        [
            "unfold S4 in H2.",
            "VernacExtend",
            "be4e940aaad79d9106ae98c131ce305bd5491e7f"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (Col R A P)...",
            "VernacExtend",
            "7943f24759ec0a6c60dae48bca018a7967210abb"
        ],
        [
            "assert (Col R B P).",
            "VernacExtend",
            "881178bf0e0550990aea3b32de0684f826932734"
        ],
        [
            "apply col_1; apply col_1; apply col_2;eapply col_trans_1.",
            "VernacExtend",
            "9063f295c7c4a5da5fb21222788bb4ad2affdb03"
        ],
        [
            "eapply sym_not_eq; eexact H4.",
            "VernacExtend",
            "b8e2c77d3c63f52fea94c661bb9219a50a4347be"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col A B P).",
            "VernacExtend",
            "1f86d2d2c02ca03379f9d4209b8286ede42b34cd"
        ],
        [
            "apply col_2; eapply col_trans_1.",
            "VernacExtend",
            "4466c91af9223ad91d7239d03cda3e3a819a0b15"
        ],
        [
            "eexact H4.",
            "VernacExtend",
            "f3463fda67184e4a52445b6a2bb5300191542e62"
        ],
        [
            "apply col_1; eexact H8.",
            "VernacExtend",
            "5ae411a6e13efc3eb421c291469a24de2fa3c91d"
        ],
        [
            "apply col_1; eexact H3.",
            "VernacExtend",
            "6e74c418552969e628d014051af7cfe377602cf0"
        ],
        [
            "assert (Col A P B)...",
            "VernacExtend",
            "5dcbd56eacef3ce51bf6c7e945f1e345b8f7d792"
        ],
        [
            "rewrite H11 in H2.",
            "VernacExtend",
            "58d40e963c5696b2d321697c6adec5998ad62c89"
        ],
        [
            "NormalizeRing H2...",
            "VernacExtend",
            "f740a286c9181a98f9a5592a1405c31e2c63573e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_3_parallelogram_weak_3_parallelogram_1 : forall A B C D, weak_3_parallelogram A B C D -> weak_3_parallelogram B C D A.",
            "VernacStartTheoremProof",
            "55aea303e790768ba9b5377b513a9af09b66836b"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_3_parallelogram in *.",
            "VernacExtend",
            "53689589a6b1c368a602e32c33a9c17910274a70"
        ],
        [
            "DecompExAnd H X.",
            "VernacExtend",
            "d8c0be27a76a19762b59dc005d110253432133b7"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_3_parallelogram_weak_3_parallelogram_2 : forall A B C D, weak_3_parallelogram A B C D -> weak_3_parallelogram C D A B.",
            "VernacStartTheoremProof",
            "c30fe617ea9f1b600a79b3b922991ff9ccf8fb77"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_3_parallelogram in *.",
            "VernacExtend",
            "53689589a6b1c368a602e32c33a9c17910274a70"
        ],
        [
            "DecompExAnd H X.",
            "VernacExtend",
            "d8c0be27a76a19762b59dc005d110253432133b7"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_3_parallelogram_weak_3_parallelogram_3 : forall A B C D, weak_3_parallelogram A B C D -> weak_3_parallelogram D A B C.",
            "VernacStartTheoremProof",
            "5fe1bc86c02ba2425c85813e36e48a9ea1a7c2a5"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_3_parallelogram in *.",
            "VernacExtend",
            "53689589a6b1c368a602e32c33a9c17910274a70"
        ],
        [
            "DecompExAnd H X.",
            "VernacExtend",
            "d8c0be27a76a19762b59dc005d110253432133b7"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_3_parallelogram_weak_3_parallelogram_4 : forall A B C D, weak_3_parallelogram A B C D -> weak_3_parallelogram D C B A.",
            "VernacStartTheoremProof",
            "b0882b1eb8853a44691095d2f99ac29ac40c8568"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold weak_3_parallelogram in *.",
            "VernacExtend",
            "53689589a6b1c368a602e32c33a9c17910274a70"
        ],
        [
            "DecompExAnd H X.",
            "VernacExtend",
            "d8c0be27a76a19762b59dc005d110253432133b7"
        ],
        [
            "exists X...",
            "VernacExtend",
            "053369916ac39cf8703231cfc53f6187c1deedef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve weak_3_parallelogram_weak_3_parallelogram_1 weak_3_parallelogram_weak_3_parallelogram_2 weak_3_parallelogram_weak_3_parallelogram_3 weak_3_parallelogram_weak_3_parallelogram_4 : Geom.",
            "VernacHints",
            "7ca302109b2e18bdc4f46b2300e8f1d4b76d3aaa"
        ]
    ],
    "proofs": [
        {
            "name": "l2_11a",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply l2_11a_strong.",
                        "VernacExtend",
                        "637534a9e655404e261dd23694e4ef10029555d2"
                    ]
                },
                {
                    "command": [
                        "apply parallelogram_weak_parallelogram.",
                        "VernacExtend",
                        "506fcd9c579645965687a1ca3434d18dafb62a47"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l2_11a_strong_strong",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold weak_2_parallelogram in H.",
                        "VernacExtend",
                        "3abcf2a46c8520d6abe7276839ad78d989089f8a"
                    ]
                },
                {
                    "command": [
                        "DecompAndAll.",
                        "VernacExtend",
                        "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
                    ]
                },
                {
                    "command": [
                        "cases_equality A C.",
                        "VernacExtend",
                        "cc7beac55fb8a92185efe9e5782472512dbd9fbc"
                    ]
                },
                {
                    "command": [
                        "subst A.",
                        "VernacExtend",
                        "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
                    ]
                },
                {
                    "command": [
                        "assert (B=D).",
                        "VernacExtend",
                        "a14dd03806052956b2a9a058f0fbcb2ae8b00074"
                    ]
                },
                {
                    "command": [
                        "elim H0;intros.",
                        "VernacExtend",
                        "6b83f392a470a8cdaa118e532bc445a009dec854"
                    ]
                },
                {
                    "command": [
                        "apply H;auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "DecompExAnd H1 X.",
                        "VernacExtend",
                        "57d8f1f3e16667a13e3f55dc5ae9731e609d571c"
                    ]
                },
                {
                    "command": [
                        "assert (X=C).",
                        "VernacExtend",
                        "b1fba997eb3223248aa4d0f764ca557f141249cd"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "subst X.",
                        "VernacExtend",
                        "09234d5bde8ac2779087d6856832ce09cd699803"
                    ]
                },
                {
                    "command": [
                        "assert (C=D).",
                        "VernacExtend",
                        "4d7d671c2feb3545c987f482b7c460f6171544d4"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "assert (B<>D).",
                        "VernacExtend",
                        "0c8761391e7dda5d1d5ff33fb6ea12292018df86"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply l2_11a_strong.",
                        "VernacExtend",
                        "637534a9e655404e261dd23694e4ef10029555d2"
                    ]
                },
                {
                    "command": [
                        "unfold weak_parallelogram.",
                        "VernacExtend",
                        "0cc756aa5af4386a3d175ba0f78a55f0da5c13b2"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_para_1",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold weak_3_parallelogram in *.",
                        "VernacExtend",
                        "53689589a6b1c368a602e32c33a9c17910274a70"
                    ]
                },
                {
                    "command": [
                        "decompose [ex and] H.",
                        "VernacExtend",
                        "c80103165e48bb3198a381bf2ff25f59c5cd7402"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split; auto with Geom.",
                        "VernacExtend",
                        "8fecf06402f6136b2837590c74b7d99be9197479"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on_line_dex_spec",
            "line_nb": 497,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (T := on_line_dex P Q (C ** D / P ** Q)).",
                        "VernacExtend",
                        "ba8ca19749ca5039ed8ebbe4b84f8de28b52999f"
                    ]
                },
                {
                    "command": [
                        "elim T; intros; clear T.",
                        "VernacExtend",
                        "37a8a6b4acb6441d80c321633c629836d606a2df"
                    ]
                },
                {
                    "command": [
                        "decompose [and] p; clear p.",
                        "VernacExtend",
                        "cbd64ea77765576978b72935db369580280455e4"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_not_col_par_not_col",
            "line_nb": 509,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "assert (Col A B Q).",
                        "VernacExtend",
                        "7d8defb7a07b4f136d502f825eaf33d69639cc03"
                    ]
                },
                {
                    "command": [
                        "eapply par_col_col_1;eauto.",
                        "VernacExtend",
                        "9a0d1e6acd774c7a61bcd06414e24e3a002a7841"
                    ]
                },
                {
                    "command": [
                        "assert (Col A P Q).",
                        "VernacExtend",
                        "b120c9da525a59d54b2b1a3d0f031416311339cd"
                    ]
                },
                {
                    "command": [
                        "eapply col_trans_1;apply H || auto.",
                        "VernacExtend",
                        "ef4dc78bcdbbaf87b32a703547e2fd0dc3e22f5a"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_sides_par_eq_parallelogram",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold parallelogram.",
                        "VernacExtend",
                        "ab384d691295a203861d1f83ab681ca6eb9d3c7b"
                    ]
                },
                {
                    "command": [
                        "repeat split;try assumption.",
                        "VernacExtend",
                        "221a84919e803be5614ea6011742084cb77b34b6"
                    ]
                },
                {
                    "command": [
                        "cut (parallel C B A D).",
                        "VernacExtend",
                        "82e54e5e5130c2fbe9fa7945a1c2b6d489107b80"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "apply parallel_side_eq_parallel;Geometry.",
                        "VernacExtend",
                        "5182b0c55c6df01cdfdb53bf8a05cd83e308b51c"
                    ]
                },
                {
                    "command": [
                        "assert (A<>B).",
                        "VernacExtend",
                        "054074d1c4aab44077b809892d45c03b9ae82923"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "eapply eq_diff_diff;eauto.",
                        "VernacExtend",
                        "c732295bc797d218d06e0d7a2d709e08825f75f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}