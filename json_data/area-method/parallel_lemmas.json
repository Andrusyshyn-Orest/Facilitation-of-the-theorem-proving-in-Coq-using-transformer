{
    "filename": "parallel_lemmas.v",
    "coq_project": "area-method",
    "vernac_cmds": [
        [
            "Require Export basic_geometric_facts.",
            "VernacRequire",
            "c9167c3338f78e091fe9f77b4b339256fa303cb5"
        ],
        [
            "Theorem common_point_not_par_aux : forall A B C D Y : Point, Col Y A B -> Col Y C D -> A <> B -> C <> D -> ~ Col D A B -> ~ Col Y A C -> ~ parallel A B C D.",
            "VernacStartTheoremProof",
            "7a74c07b291ff0062c912778429fe151fd150feb"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (D <> Y).",
            "VernacExtend",
            "ce3ba4cf5408f7222a5c63607965e76eba37b5e8"
        ],
        [
            "unfold not;intro;subst D...",
            "VernacExtend",
            "f70c55c44e1fb7c0608c5e821429fcc1b78566e4"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (C ** Y / D ** Y = S C A B / S D A B)...",
            "VernacExtend",
            "42d0ad0a888e2a37775e6e9d9d89f8e37ce8dca4"
        ],
        [
            "assert (S C A B = S D A B).",
            "VernacExtend",
            "140b75f73579f56607524f70f1127c568983c563"
        ],
        [
            "unfold parallel in H6.",
            "VernacExtend",
            "031b2c7e623027aae0112192b8bcd845cab37c73"
        ],
        [
            "unfold S4 in H6.",
            "VernacExtend",
            "86173f1587aca78421081ca3ccc945fb3af0fff1"
        ],
        [
            "assert (S C A B = - S A C B)...",
            "VernacExtend",
            "24ccedaf3e5661add5bf4a025e6a3adb8cb89c91"
        ],
        [
            "rewrite H8.",
            "VernacExtend",
            "ef335154f8a1120928ddce71bc7a2456078d36bc"
        ],
        [
            "RewriteVar (S A C B) H6.",
            "VernacExtend",
            "2e2bfc40a41b6681b1e239ddbf0b0debb877e31a"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "rewrite H8 in H7.",
            "VernacExtend",
            "9dd4a83612c9499a4344382421453573d194e5e4"
        ],
        [
            "assert (C ** Y = D ** Y).",
            "VernacExtend",
            "0bb3ee3e3072d3017a930c98e073d623b869ed88"
        ],
        [
            "RewriteVar (C ** Y) H7.",
            "VernacExtend",
            "98d82ec6d5487ac3cef995af167b03a69e0d4f39"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (C = D).",
            "VernacExtend",
            "4d7d671c2feb3545c987f482b7c460f6171544d4"
        ],
        [
            "assert (C ** D + D ** Y = C ** Y)...",
            "VernacExtend",
            "8d819098fa8bb5eb13ccfd4291b582a11e5ab08b"
        ],
        [
            "rewrite <- H10 in H9.",
            "VernacExtend",
            "6d0228fff04019f152b41d83cf64bb436ed2b699"
        ],
        [
            "assert (C ** D = 0)...",
            "VernacExtend",
            "504e1f51dce85dce4579a1f7ce9ce4f2fa22ba6c"
        ],
        [
            "RewriteVar (C ** D) H9...",
            "VernacExtend",
            "081b4979fda3e2967fc63a21a13c9f6d9b7e0709"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_par_1 : forall A B C, Col A B C -> parallel A B B C.",
            "VernacStartTheoremProof",
            "179252da1eb5c697721e52ecda75c386a884c7b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold parallel, S4, Col in *.",
            "VernacExtend",
            "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_par_2 : forall A B C, Col A B C -> parallel A B C B.",
            "VernacStartTheoremProof",
            "41f66971785292d948fd315e2fddc204e1ea9490"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold parallel, S4, Col in *.",
            "VernacExtend",
            "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_par_3 : forall A B C, Col A B C -> parallel B A C B.",
            "VernacStartTheoremProof",
            "4b955e761bb47b35a8aa5618a2444993db31e372"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold parallel, S4, Col in *.",
            "VernacExtend",
            "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma col_par_4 : forall A B C, Col A B C -> parallel B A B C.",
            "VernacStartTheoremProof",
            "65e3ae2d02d9778d0f45e063411806f7b1aa2d95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold parallel, S4, Col in *.",
            "VernacExtend",
            "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
        ],
        [
            "basic_simpl.",
            "VernacExtend",
            "7869a5f080568a779171597e646f0a0ebae59b13"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve col_par_1 col_par_2 col_par_3 col_par_4 : Geom.",
            "VernacHints",
            "a2ac55d241b5d46c4b8fb37810d6d797c9848f87"
        ],
        [
            "Lemma par_col_col_1 : forall A B C D, parallel A B C D -> Col A B C -> Col A B D.",
            "VernacStartTheoremProof",
            "367a61febdc0dc8a10dcb6e9c3aa0c1ab4975add"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold parallel,S4,Col in *.",
            "VernacExtend",
            "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "RewriteVar (S A B D) H.",
            "VernacExtend",
            "e1cbf716771075cf13f384e6ad6786520c90d4f9"
        ],
        [
            "replace (- (1) * S A C B) with (- S A C B) by ring.",
            "VernacExtend",
            "10aa3f413852a5bcd56deda451936d942a13fb38"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_col_col_2 : forall A B C D, parallel A B C D -> Col A B D -> Col A B C.",
            "VernacStartTheoremProof",
            "fdeff8a918a22068f6700e90594091efd72a104c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (parallel A B D C).",
            "VernacExtend",
            "835b77c4292354afc5350d22f5d5d69f34ca5a18"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "eapply par_col_col_1;eauto.",
            "VernacExtend",
            "9a0d1e6acd774c7a61bcd06414e24e3a002a7841"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_col_col_3 : forall A B C D, parallel A B C D -> Col A C D -> Col B C D.",
            "VernacStartTheoremProof",
            "d4f095b38dac3df67ab134c328fcad933c865b25"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (Col C D B).",
            "VernacExtend",
            "dd6353ddfc6d6edc484b979e564d1531061be077"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (parallel C D A B).",
            "VernacExtend",
            "68c2ad6a40d0e38ddc45c8b99e2b7ea42e5a552d"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "eapply par_col_col_1;eauto...",
            "VernacExtend",
            "3ae22c3026716e62672defc84a64b0af0c5542ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma par_col_col_4 : forall A B C D, parallel A B C D -> Col B C D -> Col A C D.",
            "VernacStartTheoremProof",
            "268049304d374cc705e5039402849ecb5d051284"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (Col C D A).",
            "VernacExtend",
            "5212b8b13215e4592dbb5056e192034ecbcb2e9f"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (parallel C D B A).",
            "VernacExtend",
            "0850a334175b6f35f3fa88237a8aa5b8cce58f61"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "eapply par_col_col_1;eauto.",
            "VernacExtend",
            "9a0d1e6acd774c7a61bcd06414e24e3a002a7841"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem common_point_not_par : forall A B C D Y : Point, Col Y A B -> Col Y C D -> A <> B -> C <> D -> ~ Col Y A C -> ~ parallel A B C D.",
            "VernacStartTheoremProof",
            "0c04cc299e25d05dc7719c0730f97e1fcd2bfa42"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_col D A B.",
            "VernacExtend",
            "d52e6e47b9a834003a7bbe91c5982649aa39ffab"
        ],
        [
            "unfold parallel, S4 in |- *.",
            "VernacExtend",
            "d8b44f5b7fd86253f83f625286d4f55cc07c4264"
        ],
        [
            "cut (Y = D).",
            "VernacExtend",
            "2968379b606f7552d8539e24a01a57aa9aa93eb9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (S A B D = S D A B)...",
            "VernacExtend",
            "1cb1d1c73d7a5c0b9ad50a08c03843608f5d6f45"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "NormalizeRing H7.",
            "VernacExtend",
            "5a45b8a1bee747c9d4455497404ea8976ebff3b7"
        ],
        [
            "clear H H0.",
            "VernacExtend",
            "a743351ff441835fe992d483bf3a5b58c3fccd77"
        ],
        [
            "rewrite H5 in H3.",
            "VernacExtend",
            "ffc4e047ccba0c6e301223fc336ee84216cd0e9f"
        ],
        [
            "clear H5.",
            "VernacExtend",
            "27e7490763b843a17bd590552e39601d3a9ed430"
        ],
        [
            "clear H6.",
            "VernacExtend",
            "bcbf4d43ebfb4ad30f31b4264dcdbf754a920d28"
        ],
        [
            "assert (Col A B D)...",
            "VernacExtend",
            "7fa795205ced39b1d8e6e3f332752be3a95e5537"
        ],
        [
            "assert (Col A B C)...",
            "VernacExtend",
            "6eb63cef0ad25b08d99fa06a441e2d7d713b06d4"
        ],
        [
            "assert (Col A D C); eauto with Geom.",
            "VernacExtend",
            "f0a9ce45e53000056a9422b4590c79eb5b599e46"
        ],
        [
            "assert (Col A B Y)...",
            "VernacExtend",
            "2587fd6e7f7db470bf6abce42f70437196ce0daf"
        ],
        [
            "assert (Col A B D)...",
            "VernacExtend",
            "7fa795205ced39b1d8e6e3f332752be3a95e5537"
        ],
        [
            "assert (Col A Y D); eauto with Geom.",
            "VernacExtend",
            "6ac55013d9afb8278b8d8cd3844399f2c678cea5"
        ],
        [
            "assert (A <> Y); eauto with Geom.",
            "VernacExtend",
            "2b48ebdf58bd342affb0889b4361c57975e30d87"
        ],
        [
            "cases_equality Y D.",
            "VernacExtend",
            "0bc1d6eb7f41027dbf0b0ef01e2e8a35d7fce13d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col Y D A)...",
            "VernacExtend",
            "e3ae751e5cbce46fd1b9cf63a2c11f441c539ac0"
        ],
        [
            "assert (Col Y D C)...",
            "VernacExtend",
            "3d42bab193d2f4ea3cd1caef46f7799ea029eb81"
        ],
        [
            "assert (Col Y A C); eauto with Geom.",
            "VernacExtend",
            "6c2d8b42243ea736a2ec604bf1b9063273b50072"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "eapply common_point_not_par_aux; apply H || auto.",
            "VernacExtend",
            "bd85e38c49f17d784c29ecce36ab6e3af592cfa2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition parallelogram (A B C D : Point) : Prop := parallel A B C D /\\ parallel B C A D /\\ ~ Col A B C.",
            "VernacDefinition",
            "aff95ea28715ed55749b57ee82f33c71e1642a9e"
        ],
        [
            "Theorem l1_24 : forall A B C D O : Point, parallelogram A B C D -> Col A C O -> Col B D O -> A ** O = O ** C.",
            "VernacStartTheoremProof",
            "2e04141b480e96e1ac7325f4f855a5985fe294f7"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold parallelogram in H.",
            "VernacExtend",
            "97a0bf2d5167ffd1b661975d6b2fc13fe2c6c21b"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "unfold parallel,S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "assert (S A B D = S A B C).",
            "VernacExtend",
            "9fa296eca01aeacf34d6cb1e312ae96b8a570bb3"
        ],
        [
            "RewriteVar (S A B D) H2...",
            "VernacExtend",
            "179eeb362b71173f0b1bc51a743a99c169bcada5"
        ],
        [
            "replace (-(1) * S A C B) with (- S A C B) by ring...",
            "VernacExtend",
            "078cbc0defb2a15a10b841bcb7e729fd372bfc11"
        ],
        [
            "assert (S B C D = S B C A).",
            "VernacExtend",
            "3939511b0079ca84392547da59ad6741f7c2da8e"
        ],
        [
            "RewriteVar (S B C D) H4...",
            "VernacExtend",
            "ca3ceb7ae67b828366a25f8c59610a25c95b1ced"
        ],
        [
            "replace (-(1) * S B A C) with (- S B A C) by ring...",
            "VernacExtend",
            "174645fa7595e5eefdadad073b9619e4547e31f8"
        ],
        [
            "assert (S C B D = - S B C A).",
            "VernacExtend",
            "da00fe1f0563b78297ffb039e6c0c71bfb625ddf"
        ],
        [
            "rewrite <- H3...",
            "VernacExtend",
            "a0311f164b729f3d6253bc4d88593eebea961cc6"
        ],
        [
            "assert (~ Col C B D).",
            "VernacExtend",
            "eeb927e4744f2a70103bb17cabb73663ff545ab4"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "rewrite H7 in H6...",
            "VernacExtend",
            "fc52e518d8d252c29de340a3882edd9f1c7fe8c2"
        ],
        [
            "assert (A ** O / C ** O = S A B D / S C B D).",
            "VernacExtend",
            "161d640968b92d599f98d5010d3e62397024841c"
        ],
        [
            "apply co_side...",
            "VernacExtend",
            "1bd26d8e358474b77c0ef04014bb7c42846ba4a3"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst O...",
            "VernacExtend",
            "11a939b1f08b10642291ca3ed71a9cf664cc395e"
        ],
        [
            "rewrite H in H8...",
            "VernacExtend",
            "9061db5bbaef33d080538ee3ba311537193dae18"
        ],
        [
            "rewrite H6 in H8...",
            "VernacExtend",
            "b8dd73cec3c17649c8a35832282b2f3726f30c03"
        ],
        [
            "assert (S A B C = S B C A)...",
            "VernacExtend",
            "00ba98b13d205596cada321770ea301c070f2a73"
        ],
        [
            "rewrite H9 in H8...",
            "VernacExtend",
            "ff83020ef41d01af4ea53b4d6257e8bbb0aca222"
        ],
        [
            "assert (C ** O = - O ** C)...",
            "VernacExtend",
            "5d7119cd3d47e6bac0c381ab65db74aa13e678c4"
        ],
        [
            "rewrite H10 in H8...",
            "VernacExtend",
            "66d5ccc511301f3cf8945fe013868cb21b126072"
        ],
        [
            "RewriteVar (A ** O) H8...",
            "VernacExtend",
            "e2854bf3085aeb91660990b9b7919713d2f23b43"
        ],
        [
            "field...",
            "VernacExtend",
            "a1f0527010432378ee0968235efec90d34afa40a"
        ],
        [
            "rewrite <- H10.",
            "VernacExtend",
            "2473b642258a18312486c3d3f26d46b23d459520"
        ],
        [
            "assert (O <> C).",
            "VernacExtend",
            "681af96d8e8f0e87a44537f0d6896f1697ff891c"
        ],
        [
            "unfold not; intro;subst O...",
            "VernacExtend",
            "b1d74604599df7760364fa7c423b96eee0821206"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem diago_par_intersect : forall A B C D : Point, parallelogram A B C D -> ~ parallel A C B D.",
            "VernacStartTheoremProof",
            "ee0081bd0af828402ede3fe805e1f1b8b6ca8be0"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "unfold parallelogram,parallel, S4 in |- *.",
            "VernacExtend",
            "f060e4f46cd443ce38abe0faa60cc8bafb651588"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "DecompAndAll.",
            "VernacExtend",
            "10d57c3f8fbef1660bb3b54bca073f9d6b4688a1"
        ],
        [
            "assert (S A C D = S A C B + S A B D + S B C D)...",
            "VernacExtend",
            "750dadfbd00982e83b80d5fb6d85b3a603b64ba6"
        ],
        [
            "RewriteVar (S A C B) H0.",
            "VernacExtend",
            "35820fa1a3c560697add68b6ef1855b59f4213c3"
        ],
        [
            "RewriteVar (S B C D) H2.",
            "VernacExtend",
            "d528c704e9d7e830e4156d71e0776d7fbf999ad0"
        ],
        [
            "NormalizeRing H.",
            "VernacExtend",
            "8f52725da2d2960e62983d8ecfc2188bf4ce379d"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "replace (S B A C) with (- S A B C)...",
            "VernacExtend",
            "c151b221cdc39c1adf4c91702b565e6b0553b7b3"
        ],
        [
            "ring_simplify (S A B C + - - S A B C)...",
            "VernacExtend",
            "4418e77f93cf9b21be31748da187b39d86d3d6de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem para_not_col_1 : forall A B C D : Point, parallelogram A B C D -> ~ Col A B D.",
            "VernacStartTheoremProof",
            "0551106ec3da3525a64f2777e9beeb3041c83cdf"
        ],
        [
            "unfold parallelogram, parallel, S4 in |- *.",
            "VernacExtend",
            "f060e4f46cd443ce38abe0faa60cc8bafb651588"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "NormalizeRing H0.",
            "VernacExtend",
            "d612c9dbc9548ae143644448962e53b9df3ea0ac"
        ],
        [
            "assert (Col A C B); Geometry.",
            "VernacExtend",
            "5e13b85ccf71673c5a4169205f3c9770692f9051"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_not_col_1: Geom.",
            "VernacHints",
            "f63da4602aa2266450d6caad91da2fd9222e515a"
        ],
        [
            "Theorem para_not_col_2 : forall A B C D : Point, parallelogram A B C D -> ~ Col B C D.",
            "VernacStartTheoremProof",
            "c78ae44f9b86e3e0c045fc1991842218b75a82bd"
        ],
        [
            "unfold parallelogram, parallel, S4 in |- *.",
            "VernacExtend",
            "f060e4f46cd443ce38abe0faa60cc8bafb651588"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "rewrite H1 in H2.",
            "VernacExtend",
            "3ddaddaf8f89728f77671f580e26162e25035230"
        ],
        [
            "NormalizeRing H2.",
            "VernacExtend",
            "98712e261e580e75a44da8252682edabf8124c03"
        ],
        [
            "assert (Col B A C); Geometry.",
            "VernacExtend",
            "5ab4a10d99195db763ddd598cea597f7caf963e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_not_col_2: Geom.",
            "VernacHints",
            "a4aed16e6664cf3bfa496fe69ec5efd95313f6bc"
        ],
        [
            "Theorem para_not_col_3 : forall A B C D : Point, parallelogram A B C D -> ~ Col A C D.",
            "VernacStartTheoremProof",
            "a4950338b811e1dabfb0b84677fb74b32d8a3e7d"
        ],
        [
            "unfold parallelogram, parallel,S4 in |- *.",
            "VernacExtend",
            "f060e4f46cd443ce38abe0faa60cc8bafb651588"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (S A C D = S A C B + S A B D + S B C D); Geometry.",
            "VernacExtend",
            "b79ce74af695ff8c05e904e5f8126e7789720b9e"
        ],
        [
            "rewrite H1 in H4.",
            "VernacExtend",
            "b9e2c31ed60bbabdfde4a836d5d490897638472a"
        ],
        [
            "rewrite H0 in H4.",
            "VernacExtend",
            "599ef2bf67d26590d58461692dea4594fd58eeed"
        ],
        [
            "NormalizeRing H4.",
            "VernacExtend",
            "ec24df48a4e6f6a3d615109855311a7291aa90f1"
        ],
        [
            "assert (Col B C D); Geometry.",
            "VernacExtend",
            "dee26fb91fce239526465441b134fee9b9a60b70"
        ],
        [
            "assert (parallelogram A B C D).",
            "VernacExtend",
            "814f161b3e3241acf3b286615b2a8b9133b74dba"
        ],
        [
            "unfold parallelogram in |- *; auto.",
            "VernacExtend",
            "9db04abca95a7ce92a5a4fe3bc4ce68124b052d4"
        ],
        [
            "assert (~ Col B C D); eauto with Geom.",
            "VernacExtend",
            "a4fcdc98363de01b1902bdc03adbe415b33511e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_not_col_3: Geom.",
            "VernacHints",
            "ec8ac1f1edef4943eef02659a23a70110e4b943b"
        ],
        [
            "Theorem para_1 : forall A B C D : Point, parallelogram A B C D -> parallelogram A D C B.",
            "VernacStartTheoremProof",
            "a9f170a68242b181cf35f12586f388ad04923dd9"
        ],
        [
            "unfold parallelogram in |- *.",
            "VernacExtend",
            "ab384d691295a203861d1f83ab681ca6eb9d3c7b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "repeat split; Geometry.",
            "VernacExtend",
            "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
        ],
        [
            "assert (parallelogram A B C D); unfold parallelogram in |- *; auto.",
            "VernacExtend",
            "7629c0c291486829f3ed54576d7c547c01f81dfb"
        ],
        [
            "assert (~ Col A C D); eauto with Geom.",
            "VernacExtend",
            "d390885f641ec09243e4664c2f26d196b7add72d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_1: Geom.",
            "VernacHints",
            "f1fb4127fcdc73941e730c23c6658501837b7604"
        ],
        [
            "Theorem para_2 : forall A B C D : Point, parallelogram A B C D -> parallelogram B A D C.",
            "VernacStartTheoremProof",
            "132bd88399fd5655c174c8e4825512f0a5e11561"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~Col A B D).",
            "VernacExtend",
            "ffc0da0a0d65cc00c93dfb4c1e8c861b87b50798"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "unfold parallelogram in *.",
            "VernacExtend",
            "de304f68dfdc6ecb2f2c0374632e3343b0b8fe3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "repeat split; Geometry.",
            "VernacExtend",
            "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_2: Geom.",
            "VernacHints",
            "d911b407acb0cdeffd9c1a18ba4dcc94d07a96fa"
        ],
        [
            "Theorem para_3 : forall A B C D : Point, parallelogram A B C D -> parallelogram D C B A.",
            "VernacStartTheoremProof",
            "b2d6b43abf25f5cd40509f81a186804833e8ac5e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~Col D C B).",
            "VernacExtend",
            "7d1f980862a133465887f1d214526799ccd93a6c"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "unfold parallelogram in *.",
            "VernacExtend",
            "de304f68dfdc6ecb2f2c0374632e3343b0b8fe3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "repeat split; Geometry.",
            "VernacExtend",
            "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_3: Geom.",
            "VernacHints",
            "5d50f15883233b31ad9f998d4c968883266ec89a"
        ],
        [
            "Theorem para_4 : forall A B C D : Point, parallelogram A B C D -> parallelogram C B A D.",
            "VernacStartTheoremProof",
            "494f25c98fa11d8388407316e64b65cf7a1fbc9e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (~Col D C B).",
            "VernacExtend",
            "7d1f980862a133465887f1d214526799ccd93a6c"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "unfold parallelogram in *.",
            "VernacExtend",
            "de304f68dfdc6ecb2f2c0374632e3343b0b8fe3b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decompose [and] H.",
            "VernacExtend",
            "e52cee64d21ad1242a55395e015be7bbb0978c20"
        ],
        [
            "repeat split; Geometry.",
            "VernacExtend",
            "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_4: Geom.",
            "VernacHints",
            "9eb8b3ac8c986c80f4c9f2e63eff789cb5c8cd94"
        ],
        [
            "Theorem not_para_eq_1 : forall A B C, ~ parallelogram A A B C.",
            "VernacStartTheoremProof",
            "f598c6691552aab37065cca187f7a0c1aba131d3"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "assert (~ Col A A C).",
            "VernacExtend",
            "c53bee453e514061b8d693e81dc630a1435b57a6"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_para_eq_2 : forall A B C, ~ parallelogram A B C C.",
            "VernacStartTheoremProof",
            "36609b0cf0b5ceb0eaefc40b600876a401366320"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "assert (~ Col B C C).",
            "VernacExtend",
            "9df475f7c2a7fb997ce6562f2c10c5cc0988fe7d"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_para_eq_3 : forall A B C, ~ parallelogram A B C A.",
            "VernacStartTheoremProof",
            "27fb21e28cb3689e08385e44724b6b471f637061"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "assert (~ Col A B A).",
            "VernacExtend",
            "7159dec060c7e86ab8dc29b4619e83f014c7b1c4"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_para_eq_4 : forall A B C, ~ parallelogram A B B C.",
            "VernacStartTheoremProof",
            "3dc5b7873079dd11f63da713c4674a6c15a02e91"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "assert (~ Col A B B).",
            "VernacExtend",
            "cef97cade3e6ebefd4a66dc9881b11d40f599536"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_para_eq_5 : forall A B C, ~ parallelogram A B A C.",
            "VernacStartTheoremProof",
            "2a4551747a3cf8dc503def01a8514b2486983e1c"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "assert (~ Col A A C).",
            "VernacExtend",
            "c53bee453e514061b8d693e81dc630a1435b57a6"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_para_eq_6 : forall A B C, ~ parallelogram A B C B.",
            "VernacStartTheoremProof",
            "2a14ff4b6ede735035d78c7124eb411ab0cbc0fe"
        ],
        [
            "intuition idtac.",
            "VernacExtend",
            "dde510db220ae39ba84736f2aea8089bb8e04fe4"
        ],
        [
            "assert (~ Col B C B).",
            "VernacExtend",
            "0f2bf55d74d0056c576117dd641176bc36988350"
        ],
        [
            "eauto with Geom.",
            "VernacExtend",
            "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_para_eq_1 not_para_eq_2 not_para_eq_3 not_para_eq_4 not_para_eq_5 not_para_eq_6 : Geom.",
            "VernacHints",
            "5dcc48a6d7f1b652176e81c367dfe755162a09ed"
        ],
        [
            "Theorem para_not_eq_1 : forall A B C D, parallelogram A B C D -> A<>B.",
            "VernacStartTheoremProof",
            "9bba31ded8a422ddbc48da03ac188bd094a5ecba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "cut (~parallelogram B B C D).",
            "VernacExtend",
            "e88a4059eda2568018114fb651ef3d454dfb25d0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem para_not_eq_2 : forall A B C D, parallelogram A B C D -> A<>C.",
            "VernacStartTheoremProof",
            "403ca4df5affa36b6debec0c078805be048b4dd5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "cut (~parallelogram C B C D).",
            "VernacExtend",
            "7411c802da2bc082c5b0168df7ad3c09ad786637"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem para_not_eq_3 : forall A B C D, parallelogram A B C D -> A<>D.",
            "VernacStartTheoremProof",
            "efb199b9996c9d657e52fcca295fde22db0b7fc2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "cut (~parallelogram D B C D).",
            "VernacExtend",
            "11bb7e6ea36d29da1923dc8f4bee982f77bbe893"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem para_not_eq_4 : forall A B C D, parallelogram A B C D -> B<>C.",
            "VernacStartTheoremProof",
            "fa304d89513ea6e7132323f16d3d37556746ab3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "cut (~parallelogram A C C D).",
            "VernacExtend",
            "91221f1f714d3ca8a73bd006f192cb091b9c993c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem para_not_eq_5 : forall A B C D, parallelogram A B C D -> B<>D.",
            "VernacStartTheoremProof",
            "aa9c71ab9bd03c09653e1aee025b05e1f442fe25"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst B.",
            "VernacExtend",
            "f890d24f78b8f44f1ebf2571edce25267b4aed11"
        ],
        [
            "cut (~parallelogram A D C D).",
            "VernacExtend",
            "d593e0bcbad9342633d95a9ef89a96bd03c5bffe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem para_not_eq_6 : forall A B C D, parallelogram A B C D -> C<>D.",
            "VernacStartTheoremProof",
            "fa63813dabcf233380c51597c1a927f6dfc60167"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "subst C.",
            "VernacExtend",
            "e23569f27f3678c5485d8d6cc61849281477dd15"
        ],
        [
            "cut (~parallelogram A B D D).",
            "VernacExtend",
            "f7c1aa911f6673813cf8c69f822bfbf0e3bdcf1e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve para_not_eq_1 para_not_eq_2 para_not_eq_3 para_not_eq_4 para_not_eq_5 para_not_eq_6 : Geom.",
            "VernacHints",
            "791afd557cf9d2496f575f0fd79a169dd7ba03c2"
        ],
        [
            "Theorem mid_point_equation : forall A C O P Q : Point, Col O A C -> A <> C -> A ** O = O ** C -> S A P Q + S C P Q = 2 * S O P Q.",
            "VernacStartTheoremProof",
            "ac60ddd9161a4cb7e2609eda83f55098dd983fb5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (T := l2_9 P Q A C O H0 H).",
            "VernacExtend",
            "81af6707b4060ebadb8843bbbc3619f0fd402ba2"
        ],
        [
            "rewrite H1 in T.",
            "VernacExtend",
            "feb85ff1570c3ce0f60bea66408d2527ac2db87c"
        ],
        [
            "rewrite T.",
            "VernacExtend",
            "53a33f68808157ebaeeb257231f3ebd76f0ec487"
        ],
        [
            "assert (O ** C / A ** C = 1 / 2).",
            "VernacExtend",
            "afed064b082fd5f02429838617f1ad64d0953406"
        ],
        [
            "assert (A ** O + O ** C = A ** C); Geometry.",
            "VernacExtend",
            "6fb1e458eca71b6bc95282fa9e03cdeae81cd6cb"
        ],
        [
            "rewrite H1 in H2.",
            "VernacExtend",
            "3ddaddaf8f89728f77671f580e26162e25035230"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "assert (O ** C + O ** C = 2 * O ** C).",
            "VernacExtend",
            "cefbc3812b61b0346209ddcac549f7bbcc94fd7f"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (O <> C).",
            "VernacExtend",
            "681af96d8e8f0e87a44537f0d6896f1697ff891c"
        ],
        [
            "unfold not in |- *; intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (O ** C = 0); Geometry.",
            "VernacExtend",
            "342312243fca771018a9a7fbb238a995a535aa85"
        ],
        [
            "rewrite H5 in H1.",
            "VernacExtend",
            "75492eea10e1a639e3a991c814fb832be8f61ebb"
        ],
        [
            "assert (A = O); Geometry.",
            "VernacExtend",
            "93be333fbdeb2052d1184931f113d06ffd048399"
        ],
        [
            "assert (A = C).",
            "VernacExtend",
            "69410b0918a7eb7f11f148e0f8bcaee1841cf29a"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H3; Geometry.",
            "VernacExtend",
            "1d2034fdff8ea32437dfd1b57d6e2cd09ddccef0"
        ],
        [
            "rewrite H2; field; Geometry.",
            "VernacExtend",
            "d66c0bdc128af9aab350c5946b064264c59b9218"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem col_par_par : forall A B C D D', ~C=D -> parallel A B C D -> Col C D D' -> parallel A B C D'.",
            "VernacStartTheoremProof",
            "288b9853f63f8108c0ff80a153b14b1d9b94ae06"
        ],
        [
            "Proof with Geometry.",
            "VernacProof",
            "c3331e6e3cb9b52ccb9ea3db1959888ae2ba5190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cases_col A C D.",
            "VernacExtend",
            "b57c36d013495135040c61fa6c9b4aa748d425c9"
        ],
        [
            "assert (Col C D B).",
            "VernacExtend",
            "058168466db817ad931aef02c3b37d62b05c6788"
        ],
        [
            "eapply par_col_col_1 with (C:=A)...",
            "VernacExtend",
            "705d7b05529f5d8d7423d9b7f6434f45ecc35963"
        ],
        [
            "assert (Col C A B).",
            "VernacExtend",
            "17eded56e207c51a9b61ea2485082291a56e3bf7"
        ],
        [
            "eapply col_trans_1 with (B:=D)...",
            "VernacExtend",
            "518f2003c91046e3053ea4f78b0225389a0aa5b0"
        ],
        [
            "assert (Col D A B).",
            "VernacExtend",
            "577c6c3c20210dc2f8c32ac67803c1f344be498c"
        ],
        [
            "eapply col_trans_1 with (B:=C)...",
            "VernacExtend",
            "6a3037fedb1f1ea49cf805a8e1213957f94cc182"
        ],
        [
            "unfold parallel, S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "replace (S A C B) with (- S C A B).",
            "VernacExtend",
            "b51c3c9cd82fe23531864c772733176950fbadb9"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "assert (Col C A D').",
            "VernacExtend",
            "7cadcc6c86ea55a60f59c9b12dd21c1de3940eb6"
        ],
        [
            "eapply col_trans_1 with (B:=D)...",
            "VernacExtend",
            "518f2003c91046e3053ea4f78b0225389a0aa5b0"
        ],
        [
            "cases_equality A C.",
            "VernacExtend",
            "cc7beac55fb8a92185efe9e5782472512dbd9fbc"
        ],
        [
            "subst A.",
            "VernacExtend",
            "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
        ],
        [
            "assert (Col C B D').",
            "VernacExtend",
            "42849d100c0bc1e8ae0cbd813d7666a08c057903"
        ],
        [
            "eapply col_trans_1 with (B:=D)...",
            "VernacExtend",
            "518f2003c91046e3053ea4f78b0225389a0aa5b0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Col A B D').",
            "VernacExtend",
            "5e56fca490f4874c32d128aa82ac433fd2d7ad28"
        ],
        [
            "eapply col_trans_1 with (B:=C)...",
            "VernacExtend",
            "6a3037fedb1f1ea49cf805a8e1213957f94cc182"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Geometry.",
            "VernacExtend",
            "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
        ],
        [
            "assert (~Col B C D).",
            "VernacExtend",
            "1f400b0de914ae951dba021fa809d8f95a2c5c27"
        ],
        [
            "unfold not;intro.",
            "VernacExtend",
            "601107a2df48c1a4363873a8717eb1e81abadec5"
        ],
        [
            "assert (Col C D A).",
            "VernacExtend",
            "33d24e7867ee9666e4612c19a2321f3525944005"
        ],
        [
            "eapply par_col_col_1 with (C:=B)...",
            "VernacExtend",
            "daad8bffd6c159ed68677d2abe7e3acebcb336e7"
        ],
        [
            "assert (Col A C D)...",
            "VernacExtend",
            "f1fc888d86d0a98f6857f2a2bdda21e058dba380"
        ],
        [
            "assert (parallel A B C D)...",
            "VernacExtend",
            "0a3018aac6e3dacc3d500d24cb13f64592a253bf"
        ],
        [
            "unfold parallel, S4 in H4.",
            "VernacExtend",
            "d14d29363857d56882072a9677e1c3c36749a12a"
        ],
        [
            "unfold parallel,S4.",
            "VernacExtend",
            "d8b44f5b7fd86253f83f625286d4f55cc07c4264"
        ],
        [
            "assert (C**D' / C**D = S A C D' / S A C D).",
            "VernacExtend",
            "c32a50ae6511cfc2df75ff1a295a35424794ce1e"
        ],
        [
            "apply A6...",
            "VernacExtend",
            "8a001d1a0f4ad2cd876daba037d2e0710b198a1e"
        ],
        [
            "assert (C**D' / C**D = S B C D' / S B C D).",
            "VernacExtend",
            "ac08d7c742243eb437452644c5080316da41e1b2"
        ],
        [
            "apply A6...",
            "VernacExtend",
            "8a001d1a0f4ad2cd876daba037d2e0710b198a1e"
        ],
        [
            "set (C ** D' / C ** D) in *.",
            "VernacExtend",
            "0acb84cdf1a5c83653006b940efda46943da88cf"
        ],
        [
            "RewriteVar (S A C B) H4.",
            "VernacExtend",
            "e994628628cb4b748d380463e31c337e201cfe47"
        ],
        [
            "replace (S A B D) with (S A B C + S A C D + S C B D).",
            "VernacExtend",
            "0c2e7c67d1cac32dc3a5ff89d5fdd706bf144a05"
        ],
        [
            "2:symmetry;Geometry.",
            "VernacExtend",
            "b8b74e5494acf1729413c2396905d409c9540600"
        ],
        [
            "replace (S A B D') with (S A B C + S A C D' + S C B D').",
            "VernacExtend",
            "ab73dbd607ab20a9eea8c5eb065a9ce2451db8e1"
        ],
        [
            "2:symmetry;Geometry.",
            "VernacExtend",
            "b8b74e5494acf1729413c2396905d409c9540600"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "RewriteVar (S A C D') H5.",
            "VernacExtend",
            "cd77ef33d2ab4780bd4b8b1723d3f7000f44bfca"
        ],
        [
            "2:Geometry.",
            "VernacExtend",
            "094d22cc4d31e299a578ea66272705cbcc38b6c8"
        ],
        [
            "replace (S C B D') with (- S B C D').",
            "VernacExtend",
            "80408390afed6f376b259e7f6e887ec02692ee58"
        ],
        [
            "2:Geometry.",
            "VernacExtend",
            "094d22cc4d31e299a578ea66272705cbcc38b6c8"
        ],
        [
            "RewriteVar (S B C D') H6.",
            "VernacExtend",
            "2e48218bc07dcd625d06bed2c376d145e841fdad"
        ],
        [
            "2:Geometry.",
            "VernacExtend",
            "094d22cc4d31e299a578ea66272705cbcc38b6c8"
        ],
        [
            "replace (S B C D) with (-S C B D).",
            "VernacExtend",
            "45ce31a5db47c2058ed9044b0070acef5c885b2b"
        ],
        [
            "2:Geometry.",
            "VernacExtend",
            "094d22cc4d31e299a578ea66272705cbcc38b6c8"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "replace ( S A C D * f - S A C D + S C B D * f - S C B D) with ((S A C D + S C B D) * (f-1)) by ring.",
            "VernacExtend",
            "3247b93c6013f2f632854267c041a27fa5a8c85e"
        ],
        [
            "replace (S A C D + S C B D) with 0.",
            "VernacExtend",
            "c4cd9365c805590789a0b76a80b3db7330e08645"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "assert (parallel C D B A)...",
            "VernacExtend",
            "5142ae1be641f0813f0cc9f0c9b59e8390aaeaeb"
        ],
        [
            "unfold parallel,S4 in *.",
            "VernacExtend",
            "6ea91ab80f9afddc47f1bc00e5f4d9b22d276b7f"
        ],
        [
            "RewriteVar (S C B D) H9.",
            "VernacExtend",
            "dc4b9d085245cf387ed8b8211f720ae8396cad7e"
        ],
        [
            "uniformize_signed_areas.",
            "VernacExtend",
            "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "col_par_1",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold parallel, S4, Col in *.",
                        "VernacExtend",
                        "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_par_2",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold parallel, S4, Col in *.",
                        "VernacExtend",
                        "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "uniformize_signed_areas.",
                        "VernacExtend",
                        "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_par_3",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold parallel, S4, Col in *.",
                        "VernacExtend",
                        "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "uniformize_signed_areas.",
                        "VernacExtend",
                        "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "col_par_4",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold parallel, S4, Col in *.",
                        "VernacExtend",
                        "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
                    ]
                },
                {
                    "command": [
                        "basic_simpl.",
                        "VernacExtend",
                        "7869a5f080568a779171597e646f0a0ebae59b13"
                    ]
                },
                {
                    "command": [
                        "uniformize_signed_areas.",
                        "VernacExtend",
                        "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_col_col_1",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold parallel,S4,Col in *.",
                        "VernacExtend",
                        "0f18e54ae6235dc79fa9959ada079b9fd74bb255"
                    ]
                },
                {
                    "command": [
                        "uniformize_signed_areas.",
                        "VernacExtend",
                        "7bda4595c8cc4c47dfcd1622079d8baba59eb171"
                    ]
                },
                {
                    "command": [
                        "RewriteVar (S A B D) H.",
                        "VernacExtend",
                        "e1cbf716771075cf13f384e6ad6786520c90d4f9"
                    ]
                },
                {
                    "command": [
                        "replace (- (1) * S A C B) with (- S A C B) by ring.",
                        "VernacExtend",
                        "10aa3f413852a5bcd56deda451936d942a13fb38"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_col_col_2",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (parallel A B D C).",
                        "VernacExtend",
                        "835b77c4292354afc5350d22f5d5d69f34ca5a18"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "eapply par_col_col_1;eauto.",
                        "VernacExtend",
                        "9a0d1e6acd774c7a61bcd06414e24e3a002a7841"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "par_col_col_4",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (Col C D A).",
                        "VernacExtend",
                        "5212b8b13215e4592dbb5056e192034ecbcb2e9f"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "assert (parallel C D B A).",
                        "VernacExtend",
                        "0850a334175b6f35f3fa88237a8aa5b8cce58f61"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "eapply par_col_col_1;eauto.",
                        "VernacExtend",
                        "9a0d1e6acd774c7a61bcd06414e24e3a002a7841"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_col_1",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "unfold parallelogram, parallel, S4 in |- *.",
                        "VernacExtend",
                        "f060e4f46cd443ce38abe0faa60cc8bafb651588"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0.",
                        "VernacExtend",
                        "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
                    ]
                },
                {
                    "command": [
                        "NormalizeRing H0.",
                        "VernacExtend",
                        "d612c9dbc9548ae143644448962e53b9df3ea0ac"
                    ]
                },
                {
                    "command": [
                        "assert (Col A C B); Geometry.",
                        "VernacExtend",
                        "5e13b85ccf71673c5a4169205f3c9770692f9051"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_col_2",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "unfold parallelogram, parallel, S4 in |- *.",
                        "VernacExtend",
                        "f060e4f46cd443ce38abe0faa60cc8bafb651588"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H2.",
                        "VernacExtend",
                        "3ddaddaf8f89728f77671f580e26162e25035230"
                    ]
                },
                {
                    "command": [
                        "NormalizeRing H2.",
                        "VernacExtend",
                        "98712e261e580e75a44da8252682edabf8124c03"
                    ]
                },
                {
                    "command": [
                        "assert (Col B A C); Geometry.",
                        "VernacExtend",
                        "5ab4a10d99195db763ddd598cea597f7caf963e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_col_3",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "unfold parallelogram, parallel,S4 in |- *.",
                        "VernacExtend",
                        "f060e4f46cd443ce38abe0faa60cc8bafb651588"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "assert (S A C D = S A C B + S A B D + S B C D); Geometry.",
                        "VernacExtend",
                        "b79ce74af695ff8c05e904e5f8126e7789720b9e"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H4.",
                        "VernacExtend",
                        "b9e2c31ed60bbabdfde4a836d5d490897638472a"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H4.",
                        "VernacExtend",
                        "599ef2bf67d26590d58461692dea4594fd58eeed"
                    ]
                },
                {
                    "command": [
                        "NormalizeRing H4.",
                        "VernacExtend",
                        "ec24df48a4e6f6a3d615109855311a7291aa90f1"
                    ]
                },
                {
                    "command": [
                        "assert (Col B C D); Geometry.",
                        "VernacExtend",
                        "dee26fb91fce239526465441b134fee9b9a60b70"
                    ]
                },
                {
                    "command": [
                        "assert (parallelogram A B C D).",
                        "VernacExtend",
                        "814f161b3e3241acf3b286615b2a8b9133b74dba"
                    ]
                },
                {
                    "command": [
                        "unfold parallelogram in |- *; auto.",
                        "VernacExtend",
                        "9db04abca95a7ce92a5a4fe3bc4ce68124b052d4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C D); eauto with Geom.",
                        "VernacExtend",
                        "a4fcdc98363de01b1902bdc03adbe415b33511e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_1",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "unfold parallelogram in |- *.",
                        "VernacExtend",
                        "ab384d691295a203861d1f83ab681ca6eb9d3c7b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "repeat split; Geometry.",
                        "VernacExtend",
                        "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
                    ]
                },
                {
                    "command": [
                        "assert (parallelogram A B C D); unfold parallelogram in |- *; auto.",
                        "VernacExtend",
                        "7629c0c291486829f3ed54576d7c547c01f81dfb"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A C D); eauto with Geom.",
                        "VernacExtend",
                        "d390885f641ec09243e4664c2f26d196b7add72d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_2",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~Col A B D).",
                        "VernacExtend",
                        "ffc0da0a0d65cc00c93dfb4c1e8c861b87b50798"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "unfold parallelogram in *.",
                        "VernacExtend",
                        "de304f68dfdc6ecb2f2c0374632e3343b0b8fe3b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "repeat split; Geometry.",
                        "VernacExtend",
                        "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_3",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~Col D C B).",
                        "VernacExtend",
                        "7d1f980862a133465887f1d214526799ccd93a6c"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "unfold parallelogram in *.",
                        "VernacExtend",
                        "de304f68dfdc6ecb2f2c0374632e3343b0b8fe3b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "repeat split; Geometry.",
                        "VernacExtend",
                        "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_4",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (~Col D C B).",
                        "VernacExtend",
                        "7d1f980862a133465887f1d214526799ccd93a6c"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "unfold parallelogram in *.",
                        "VernacExtend",
                        "de304f68dfdc6ecb2f2c0374632e3343b0b8fe3b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H.",
                        "VernacExtend",
                        "e52cee64d21ad1242a55395e015be7bbb0978c20"
                    ]
                },
                {
                    "command": [
                        "repeat split; Geometry.",
                        "VernacExtend",
                        "7c87c042c31dfc34ab0e6385a6efbd5d7d2f7b03"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_para_eq_1",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intuition idtac.",
                        "VernacExtend",
                        "dde510db220ae39ba84736f2aea8089bb8e04fe4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A A C).",
                        "VernacExtend",
                        "c53bee453e514061b8d693e81dc630a1435b57a6"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_para_eq_2",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intuition idtac.",
                        "VernacExtend",
                        "dde510db220ae39ba84736f2aea8089bb8e04fe4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C C).",
                        "VernacExtend",
                        "9df475f7c2a7fb997ce6562f2c10c5cc0988fe7d"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_para_eq_3",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "intuition idtac.",
                        "VernacExtend",
                        "dde510db220ae39ba84736f2aea8089bb8e04fe4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B A).",
                        "VernacExtend",
                        "7159dec060c7e86ab8dc29b4619e83f014c7b1c4"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_para_eq_4",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "intuition idtac.",
                        "VernacExtend",
                        "dde510db220ae39ba84736f2aea8089bb8e04fe4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A B B).",
                        "VernacExtend",
                        "cef97cade3e6ebefd4a66dc9881b11d40f599536"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_para_eq_5",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intuition idtac.",
                        "VernacExtend",
                        "dde510db220ae39ba84736f2aea8089bb8e04fe4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col A A C).",
                        "VernacExtend",
                        "c53bee453e514061b8d693e81dc630a1435b57a6"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_para_eq_6",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "intuition idtac.",
                        "VernacExtend",
                        "dde510db220ae39ba84736f2aea8089bb8e04fe4"
                    ]
                },
                {
                    "command": [
                        "assert (~ Col B C B).",
                        "VernacExtend",
                        "0f2bf55d74d0056c576117dd641176bc36988350"
                    ]
                },
                {
                    "command": [
                        "eauto with Geom.",
                        "VernacExtend",
                        "d21e71e7de4213c1ce7cf4f6affd9c328e540465"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_eq_1",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst A.",
                        "VernacExtend",
                        "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
                    ]
                },
                {
                    "command": [
                        "cut (~parallelogram B B C D).",
                        "VernacExtend",
                        "e88a4059eda2568018114fb651ef3d454dfb25d0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_eq_2",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst A.",
                        "VernacExtend",
                        "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
                    ]
                },
                {
                    "command": [
                        "cut (~parallelogram C B C D).",
                        "VernacExtend",
                        "7411c802da2bc082c5b0168df7ad3c09ad786637"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_eq_3",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst A.",
                        "VernacExtend",
                        "8ca33e3809564b25475e9c050ec4fa1d0d1f1088"
                    ]
                },
                {
                    "command": [
                        "cut (~parallelogram D B C D).",
                        "VernacExtend",
                        "11bb7e6ea36d29da1923dc8f4bee982f77bbe893"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_eq_4",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "cut (~parallelogram A C C D).",
                        "VernacExtend",
                        "91221f1f714d3ca8a73bd006f192cb091b9c993c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_eq_5",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst B.",
                        "VernacExtend",
                        "f890d24f78b8f44f1ebf2571edce25267b4aed11"
                    ]
                },
                {
                    "command": [
                        "cut (~parallelogram A D C D).",
                        "VernacExtend",
                        "d593e0bcbad9342633d95a9ef89a96bd03c5bffe"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "para_not_eq_6",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold not;intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "subst C.",
                        "VernacExtend",
                        "e23569f27f3678c5485d8d6cc61849281477dd15"
                    ]
                },
                {
                    "command": [
                        "cut (~parallelogram A B D D).",
                        "VernacExtend",
                        "f7c1aa911f6673813cf8c69f822bfbf0e3bdcf1e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Geometry.",
                        "VernacExtend",
                        "8d2cafedd1746bd96abc98beffd08c64b1e130d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mid_point_equation",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (T := l2_9 P Q A C O H0 H).",
                        "VernacExtend",
                        "81af6707b4060ebadb8843bbbc3619f0fd402ba2"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in T.",
                        "VernacExtend",
                        "feb85ff1570c3ce0f60bea66408d2527ac2db87c"
                    ]
                },
                {
                    "command": [
                        "rewrite T.",
                        "VernacExtend",
                        "53a33f68808157ebaeeb257231f3ebd76f0ec487"
                    ]
                },
                {
                    "command": [
                        "assert (O ** C / A ** C = 1 / 2).",
                        "VernacExtend",
                        "afed064b082fd5f02429838617f1ad64d0953406"
                    ]
                },
                {
                    "command": [
                        "assert (A ** O + O ** C = A ** C); Geometry.",
                        "VernacExtend",
                        "6fb1e458eca71b6bc95282fa9e03cdeae81cd6cb"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H2.",
                        "VernacExtend",
                        "3ddaddaf8f89728f77671f580e26162e25035230"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "assert (O ** C + O ** C = 2 * O ** C).",
                        "VernacExtend",
                        "cefbc3812b61b0346209ddcac549f7bbcc94fd7f"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "assert (O <> C).",
                        "VernacExtend",
                        "681af96d8e8f0e87a44537f0d6896f1697ff891c"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intro.",
                        "VernacExtend",
                        "601107a2df48c1a4363873a8717eb1e81abadec5"
                    ]
                },
                {
                    "command": [
                        "assert (O ** C = 0); Geometry.",
                        "VernacExtend",
                        "342312243fca771018a9a7fbb238a995a535aa85"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 in H1.",
                        "VernacExtend",
                        "75492eea10e1a639e3a991c814fb832be8f61ebb"
                    ]
                },
                {
                    "command": [
                        "assert (A = O); Geometry.",
                        "VernacExtend",
                        "93be333fbdeb2052d1184931f113d06ffd048399"
                    ]
                },
                {
                    "command": [
                        "assert (A = C).",
                        "VernacExtend",
                        "69410b0918a7eb7f11f148e0f8bcaee1841cf29a"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; Geometry.",
                        "VernacExtend",
                        "1d2034fdff8ea32437dfd1b57d6e2cd09ddccef0"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; field; Geometry.",
                        "VernacExtend",
                        "d66c0bdc128af9aab350c5946b064264c59b9218"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}