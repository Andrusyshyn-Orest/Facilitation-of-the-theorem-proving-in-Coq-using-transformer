{
    "filename": "MULTIPLIER/Definitions.v",
    "coq_project": "circuits",
    "vernac_cmds": [
        [
            "Require Export BV.",
            "VernacRequire",
            "5be76451da54c78e6533b200f099974741776e06"
        ],
        [
            "Require Export Adder.",
            "VernacRequire",
            "164ef9f97dc417317c59ad162af8e2c432aebc16"
        ],
        [
            "Require Import Gt.",
            "VernacRequire",
            "aa76e30957e446dad908d0efbaebeccff785432f"
        ],
        [
            "Definition Mux := If BV.",
            "VernacDefinition",
            "e9cce7a53ef68b41c5b073b850382180e103ee85"
        ],
        [
            "Hint Unfold Mux.",
            "VernacHints",
            "576b96a57ae62c84fc76e71b47b1c8de330e67a8"
        ],
        [
            "Definition lowbit (l : list bool) := match l with | nil => false | b :: _ => b end.",
            "VernacDefinition",
            "0ebb815fccd4dec263f2d25d6dc0c01122d1de0c"
        ],
        [
            "Definition highs (l : list bool) := match l with | nil => nil (A:=bool) | _ :: v => v end.",
            "VernacDefinition",
            "9139e73a36c9c8bce9c133bea05030408ecd92fd"
        ],
        [
            "Lemma lowbit_is_trunc : forall v : BV, v <> nilbv -> consbv (lowbit v) nilbv = truncbv v 1.",
            "VernacStartTheoremProof",
            "56e70c19be3af4d477318962f4f382ca900ee733"
        ],
        [
            "simple induction v.",
            "VernacExtend",
            "800a36ba7fc4c2edf4b70d3e51cdd934e7c61ff3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (nil <> nilbv); unfold not in |- *; auto with arith.",
            "VernacExtend",
            "c9179d9df8b1ee2304d0f5ec1527646de37e8100"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (trunc_O bool).",
            "VernacExtend",
            "7688874e238c42bed8b5e66fce9f1d4a1609e05e"
        ],
        [
            "trivial with arith.",
            "VernacExtend",
            "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lowbit_is_abit : forall v : BV, v <> nilbv -> consbv (lowbit v) nilbv = abit v 0.",
            "VernacStartTheoremProof",
            "f60fc0e631e1c126131469c546736f18af02cba2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold abit in |- *.",
            "VernacExtend",
            "594b4b53d378d9c6a25a2c44a647ca8ac3a8ebe7"
        ],
        [
            "unfold elemlist in |- *.",
            "VernacExtend",
            "65fcec6c7cf23c20856c28b95bf81c321775775b"
        ],
        [
            "rewrite strip_O.",
            "VernacExtend",
            "240dec438b07f9c04b729ac0bef43ec39736490b"
        ],
        [
            "apply lowbit_is_trunc.",
            "VernacExtend",
            "942fb705ee7310df6cbef3dd4594106679fc7fc8"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma highs_is_strip : forall v : BV, highs v = stripbv v 1.",
            "VernacStartTheoremProof",
            "5177016f156da7b90011ed849fd4814c695eec77"
        ],
        [
            "simple induction v.",
            "VernacExtend",
            "800a36ba7fc4c2edf4b70d3e51cdd934e7c61ff3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (strip_cons_S bool).",
            "VernacExtend",
            "a723a4ca4101135d92ec8bb8b19d93a7f9940853"
        ],
        [
            "rewrite strip_O.",
            "VernacExtend",
            "240dec438b07f9c04b729ac0bef43ec39736490b"
        ],
        [
            "trivial with arith.",
            "VernacExtend",
            "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma app_lowbit_highs : forall v : BV, v <> nilbv -> appbv (consbv (lowbit v) nilbv) (highs v) = v.",
            "VernacStartTheoremProof",
            "4b39ecdbf17daaccde0fb2d792421f42ee576ba6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite lowbit_is_trunc.",
            "VernacExtend",
            "4e243e5931b5e4963422d802d368d4bfdb26decb"
        ],
        [
            "rewrite highs_is_strip.",
            "VernacExtend",
            "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
        ],
        [
            "rewrite (app_trunc_strip bool).",
            "VernacExtend",
            "0cea05f5a05cf1db2d8c3f34ef160ba598578398"
        ],
        [
            "trivial with arith.",
            "VernacExtend",
            "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_highs : forall v : BV, v <> nilbv -> lengthbv (highs v) = pred (lengthbv v).",
            "VernacStartTheoremProof",
            "49d93dd7abec8102e769f8583d3aa8dc79ad0d0d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite highs_is_strip.",
            "VernacExtend",
            "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
        ],
        [
            "rewrite (length_strip bool).",
            "VernacExtend",
            "f3856d7a3a09842cb47d9468f321713ec68b20e6"
        ],
        [
            "apply minus_n_SO.",
            "VernacExtend",
            "5fbef0fed1052fdfdf70f8c658807a4927c99d9b"
        ],
        [
            "apply (v_not_nil_length bool).",
            "VernacExtend",
            "025dca33827e08f5d38f05ebfb0eb62c769a98a7"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_abit : forall (v : BV) (i : nat), i < lengthbv v -> lengthbv (abit v i) = 1.",
            "VernacStartTheoremProof",
            "416e630a74ba53ab6744e5748d02a66fdd4056e2"
        ],
        [
            "unfold abit in |- *.",
            "VernacExtend",
            "594b4b53d378d9c6a25a2c44a647ca8ac3a8ebe7"
        ],
        [
            "exact (length_elemlist bool).",
            "VernacExtend",
            "0daaf2fbd8c91f49a98d2961b718d9d5ce9e53f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Parameter size : nat.",
            "VernacAssumption",
            "5e94f2fdf0b91a0a53c0ca4deb2b2aaafaf3d183"
        ],
        [
            "Parameter V1 : BV.",
            "VernacAssumption",
            "b00ba4b51814f7888c0e370410805ce72f598fbf"
        ],
        [
            "Parameter V2 : BV.",
            "VernacAssumption",
            "69d3d2db2809335b6162b85bf5b8a1f8894258d5"
        ],
        [
            "Axiom size_not_O : size <> 0.",
            "VernacAssumption",
            "e60d373e331f1aef0cda920ea6bc2f46e1406f2a"
        ],
        [
            "Hint Resolve size_not_O.",
            "VernacHints",
            "860208adeb7e34daa209ba986c43bf3029624aba"
        ],
        [
            "Axiom length_V1_size : lengthbv V1 = size.",
            "VernacAssumption",
            "3d311cae5d2fb5d755131d9597904c7e3c82cd1d"
        ],
        [
            "Hint Resolve length_V1_size.",
            "VernacHints",
            "c9b0ba52033cb57ae99715b0f80969fdb2a7ad6a"
        ],
        [
            "Axiom length_V2_size : lengthbv V2 = size.",
            "VernacAssumption",
            "b74b2c473e2cadaa47ed01fe8ddb90e2f82bc368"
        ],
        [
            "Hint Resolve length_V2_size.",
            "VernacHints",
            "3a4e910d24605eff4f616c3a345fb0019c11e32c"
        ],
        [
            "Lemma le_SO_size : 1 <= size.",
            "VernacStartTheoremProof",
            "4437b5f44dd70284080bd158f01030a1398cbf4e"
        ],
        [
            "generalize size_not_O.",
            "VernacExtend",
            "1927c445071295ce357bc08cecaef60d2a39359b"
        ],
        [
            "elim size.",
            "VernacExtend",
            "cff991f42e9002a2bf88bd00d4aa7bc6f7a66cc8"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "absurd (0 <> 0); unfold not in |- *; auto with arith.",
            "VernacExtend",
            "46c2ed2d353bfb697cb567e195f86b622e7b2ae3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve le_SO_size.",
            "VernacHints",
            "54ecb664b009e0bb0dd2200447d22c47a76c98fe"
        ],
        [
            "Lemma length_V1 : lengthbv V1 <> 0.",
            "VernacStartTheoremProof",
            "49cf46ce52738397db1c079e903fa2a98aa7d759"
        ],
        [
            "rewrite length_V1_size.",
            "VernacExtend",
            "532e651fdb84237cad01390b50a4b6025819384a"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve length_V1.",
            "VernacHints",
            "5d515d27899f7d1df47e21c6301aa2cb8edffc3a"
        ],
        [
            "Lemma length_V2 : lengthbv V2 <> 0.",
            "VernacStartTheoremProof",
            "6bd9b20accc191a12f5e8cd88b7054a559232630"
        ],
        [
            "rewrite length_V2_size.",
            "VernacExtend",
            "08c62e938031348cdcce1b8a70bfe0b902174a92"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve length_V2.",
            "VernacHints",
            "872ef00fb1112ad77588709b825fbea31505cd16"
        ],
        [
            "Lemma length_V2_V1 : lengthbv V2 = lengthbv V1.",
            "VernacStartTheoremProof",
            "fb220da7636acfbcb1e9f9b57990336e07334b0c"
        ],
        [
            "transitivity size; auto with arith.",
            "VernacExtend",
            "ee44533464a48c5c79ca722a1b9ce242be188336"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma V1_not_nil : V1 <> nilbv.",
            "VernacStartTheoremProof",
            "32a5e19932e5c83f152bf0110665d28b4e4c5625"
        ],
        [
            "apply (not_nil bool).",
            "VernacExtend",
            "353f3b5e3c5f4042bd632d974f315709663c985c"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve V1_not_nil.",
            "VernacHints",
            "7dca7c3ae521bd9322d908adcd5f6ea84a43e57e"
        ],
        [
            "Lemma V2_not_nil : V2 <> nilbv.",
            "VernacStartTheoremProof",
            "c4f065a5955f501613fafee1d9c2238b023226f0"
        ],
        [
            "apply (not_nil bool).",
            "VernacExtend",
            "353f3b5e3c5f4042bd632d974f315709663c985c"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve V2_not_nil.",
            "VernacHints",
            "69ca95893d9fc4ee5c3ed6341352b616b63ed7bd"
        ],
        [
            "Lemma le_SO_length_V1 : 1 <= lengthbv V1.",
            "VernacStartTheoremProof",
            "1b116cf5bf3cd4436b6bfc4163b9a950d0e49511"
        ],
        [
            "apply (le_SO_length_v bool).",
            "VernacExtend",
            "9141007c89b52ca40991ae9d15cc21b13feffa44"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve le_SO_length_V1.",
            "VernacHints",
            "8db5b40b327ecd011d8381972f142875ea5c8633"
        ],
        [
            "Fixpoint R1 (st : nat) : BV := match st return BV with | O => V1 | S t => appbv (highs (R1 t)) (Mux (lowbit (R1 t)) (consbv (lowbit (BV_full_adder_sum (R2 t) V2 false)) nilbv) (consbv (lowbit (R2 t)) nilbv)) end with R2 (st : nat) : BV := match st return BV with | O => BV_null size | S t => appbv (highs (Mux (lowbit (R1 t)) (BV_full_adder_sum (R2 t) V2 false) (R2 t))) (Mux (lowbit (R1 t)) (consbv (BV_full_adder_carry (R2 t) V2 false) nilbv) (consbv false nilbv)) end.",
            "VernacFixpoint",
            "2d1b5b4db9198e3c612740f529de3d479f042059"
        ],
        [
            "Lemma R1_eq1 : R1 0 = V1.",
            "VernacStartTheoremProof",
            "01f97fb0f3c9567d0415b3bdee4f9f952d6bcfe7"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R1_eq2 : forall t : nat, R1 (S t) = appbv (highs (R1 t)) (Mux (lowbit (R1 t)) (consbv (lowbit (BV_full_adder_sum (R2 t) V2 false)) nilbv) (consbv (lowbit (R2 t)) nilbv)).",
            "VernacStartTheoremProof",
            "dff4fda44132b62909a0051967e34eea7500b97d"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R2_eq1 : R2 0 = BV_null size.",
            "VernacStartTheoremProof",
            "b42970f927d9f96002ad8076c617793b40fb6708"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R2_eq2 : forall t : nat, R2 (S t) = appbv (highs (Mux (lowbit (R1 t)) (BV_full_adder_sum (R2 t) V2 false) (R2 t))) (Mux (lowbit (R1 t)) (consbv (BV_full_adder_carry (R2 t) V2 false) nilbv) (consbv false nilbv)).",
            "VernacStartTheoremProof",
            "af45307ac7b61178384b8ac12c2b6bfb4282f691"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma length_R1 : forall t : nat, t <= size -> lengthbv (R1 t) = size.",
            "VernacStartTheoremProof",
            "3306611a9d98ff8f4f637839010a3c9c8587ac12"
        ],
        [
            "simple induction t.",
            "VernacExtend",
            "ed99ea08a11cb71b621c4562818ea87e52158a3d"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite R1_eq2.",
            "VernacExtend",
            "efc40e6eab3ec3e85a25230fb28b15917fcce187"
        ],
        [
            "rewrite (length_app bool).",
            "VernacExtend",
            "66efba35e8f62b59cc0d60cba16554e73fc8a70d"
        ],
        [
            "unfold Mux in |- *.",
            "VernacExtend",
            "24afc5e85be58e5d107890b93a533b01abfc7a17"
        ],
        [
            "rewrite (F_If BV nat _ _ _ (@length bool)).",
            "VernacExtend",
            "2414ee71e1b2b0f8120b7590d62c2a36f61ff6af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite If_eq.",
            "VernacExtend",
            "302eac6f4ab51e7ce2c8e36cddd795df5e22bbaa"
        ],
        [
            "rewrite highs_is_strip.",
            "VernacExtend",
            "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
        ],
        [
            "rewrite (length_strip bool).",
            "VernacExtend",
            "f3856d7a3a09842cb47d9468f321713ec68b20e6"
        ],
        [
            "unfold lengthbv in H.",
            "VernacExtend",
            "73355ba6a89c54136b5efd6fba16029b26deba62"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply le_plus_minus.",
            "VernacExtend",
            "df37b63db77b4df0f047707f2e27bddc60219927"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply le_Sn_le; auto with arith.",
            "VernacExtend",
            "c225ffbcf939a696f3f95a438634cba5bd057276"
        ],
        [
            "unfold lengthbv in H.",
            "VernacExtend",
            "73355ba6a89c54136b5efd6fba16029b26deba62"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply le_Sn_le.",
            "VernacExtend",
            "c0f75afdbf652aa71c225aeb9c95b55224bc6b61"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve length_R1.",
            "VernacHints",
            "ae07e40806c135fc064186a35b5a32f57586cb77"
        ],
        [
            "Lemma length_R2 : forall t : nat, t <= size -> lengthbv (R2 t) = size.",
            "VernacStartTheoremProof",
            "6d3d8e254d0e2a504f5c994b2dc8e4bf40f12e35"
        ],
        [
            "simple induction t.",
            "VernacExtend",
            "ed99ea08a11cb71b621c4562818ea87e52158a3d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold lengthbv, BV_null in |- *.",
            "VernacExtend",
            "297f3f8258bcc0a9b02ac2a819029982ffb13317"
        ],
        [
            "rewrite (length_list_const bool).",
            "VernacExtend",
            "c49e523b64d2e440c3412c327a651392251da208"
        ],
        [
            "trivial with arith.",
            "VernacExtend",
            "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
        ],
        [
            "unfold lengthbv in |- *.",
            "VernacExtend",
            "9e5b43c25c390af56c93042084c3b32b422e51af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite R2_eq2.",
            "VernacExtend",
            "aec390e866d1e67a5556caf6118ae318d8228dbb"
        ],
        [
            "rewrite (length_app bool).",
            "VernacExtend",
            "66efba35e8f62b59cc0d60cba16554e73fc8a70d"
        ],
        [
            "unfold Mux, consbv.",
            "VernacExtend",
            "7296970e46cb104d8de85f433a41abb3c7836b52"
        ],
        [
            "rewrite (F_If BV BV _ _ _ highs).",
            "VernacExtend",
            "15ed950554a74d5bcff2cb792e1e56c51b24da8e"
        ],
        [
            "rewrite (F_If BV nat _ _ _ (@length bool)).",
            "VernacExtend",
            "2414ee71e1b2b0f8120b7590d62c2a36f61ff6af"
        ],
        [
            "rewrite highs_is_strip.",
            "VernacExtend",
            "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
        ],
        [
            "rewrite (length_strip bool).",
            "VernacExtend",
            "f3856d7a3a09842cb47d9468f321713ec68b20e6"
        ],
        [
            "rewrite length_BV_full_adder_sum.",
            "VernacExtend",
            "1a1d983efbb6beef3ad51b0e1c8686abcc1434cd"
        ],
        [
            "unfold lengthbv in |- *.",
            "VernacExtend",
            "9e5b43c25c390af56c93042084c3b32b422e51af"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite highs_is_strip.",
            "VernacExtend",
            "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
        ],
        [
            "rewrite (length_strip bool).",
            "VernacExtend",
            "f3856d7a3a09842cb47d9468f321713ec68b20e6"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite If_eq.",
            "VernacExtend",
            "302eac6f4ab51e7ce2c8e36cddd795df5e22bbaa"
        ],
        [
            "rewrite (F_If BV nat _ _ _ (@length bool)).",
            "VernacExtend",
            "2414ee71e1b2b0f8120b7590d62c2a36f61ff6af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite If_eq.",
            "VernacExtend",
            "302eac6f4ab51e7ce2c8e36cddd795df5e22bbaa"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply le_plus_minus.",
            "VernacExtend",
            "df37b63db77b4df0f047707f2e27bddc60219927"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply le_Sn_le; exact H0.",
            "VernacExtend",
            "8a7a60ca5b92ee050a0401e85c0454930ff75255"
        ],
        [
            "apply le_Sn_le; exact H0.",
            "VernacExtend",
            "8a7a60ca5b92ee050a0401e85c0454930ff75255"
        ],
        [
            "unfold lengthbv in |- *.",
            "VernacExtend",
            "9e5b43c25c390af56c93042084c3b32b422e51af"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply le_Sn_le; exact H0.",
            "VernacExtend",
            "8a7a60ca5b92ee050a0401e85c0454930ff75255"
        ],
        [
            "rewrite length_BV_full_adder_sum.",
            "VernacExtend",
            "1a1d983efbb6beef3ad51b0e1c8686abcc1434cd"
        ],
        [
            "unfold lengthbv in |- *.",
            "VernacExtend",
            "9e5b43c25c390af56c93042084c3b32b422e51af"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply le_Sn_le; exact H0.",
            "VernacExtend",
            "8a7a60ca5b92ee050a0401e85c0454930ff75255"
        ],
        [
            "unfold lengthbv in |- *.",
            "VernacExtend",
            "9e5b43c25c390af56c93042084c3b32b422e51af"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply le_Sn_le; exact H0.",
            "VernacExtend",
            "8a7a60ca5b92ee050a0401e85c0454930ff75255"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve length_R2.",
            "VernacHints",
            "a1d8a705afd1565b9f8c4399b796bea6fdeb3501"
        ],
        [
            "Lemma R1_never_nil : forall t : nat, t <= size -> R1 t <> nilbv.",
            "VernacStartTheoremProof",
            "2d1e1296f309659c3ae58e47310e1130bc8e1df4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (not_nil bool).",
            "VernacExtend",
            "353f3b5e3c5f4042bd632d974f315709663c985c"
        ],
        [
            "rewrite length_R1.",
            "VernacExtend",
            "a8d691beee7f97fc107b74ffa61d66f1fa55642a"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "lowbit_is_trunc",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "simple induction v.",
                        "VernacExtend",
                        "800a36ba7fc4c2edf4b70d3e51cdd934e7c61ff3"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "absurd (nil <> nilbv); unfold not in |- *; auto with arith.",
                        "VernacExtend",
                        "c9179d9df8b1ee2304d0f5ec1527646de37e8100"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (trunc_O bool).",
                        "VernacExtend",
                        "7688874e238c42bed8b5e66fce9f1d4a1609e05e"
                    ]
                },
                {
                    "command": [
                        "trivial with arith.",
                        "VernacExtend",
                        "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lowbit_is_abit",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold abit in |- *.",
                        "VernacExtend",
                        "594b4b53d378d9c6a25a2c44a647ca8ac3a8ebe7"
                    ]
                },
                {
                    "command": [
                        "unfold elemlist in |- *.",
                        "VernacExtend",
                        "65fcec6c7cf23c20856c28b95bf81c321775775b"
                    ]
                },
                {
                    "command": [
                        "rewrite strip_O.",
                        "VernacExtend",
                        "240dec438b07f9c04b729ac0bef43ec39736490b"
                    ]
                },
                {
                    "command": [
                        "apply lowbit_is_trunc.",
                        "VernacExtend",
                        "942fb705ee7310df6cbef3dd4594106679fc7fc8"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "highs_is_strip",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "simple induction v.",
                        "VernacExtend",
                        "800a36ba7fc4c2edf4b70d3e51cdd934e7c61ff3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (strip_cons_S bool).",
                        "VernacExtend",
                        "a723a4ca4101135d92ec8bb8b19d93a7f9940853"
                    ]
                },
                {
                    "command": [
                        "rewrite strip_O.",
                        "VernacExtend",
                        "240dec438b07f9c04b729ac0bef43ec39736490b"
                    ]
                },
                {
                    "command": [
                        "trivial with arith.",
                        "VernacExtend",
                        "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_lowbit_highs",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite lowbit_is_trunc.",
                        "VernacExtend",
                        "4e243e5931b5e4963422d802d368d4bfdb26decb"
                    ]
                },
                {
                    "command": [
                        "rewrite highs_is_strip.",
                        "VernacExtend",
                        "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
                    ]
                },
                {
                    "command": [
                        "rewrite (app_trunc_strip bool).",
                        "VernacExtend",
                        "0cea05f5a05cf1db2d8c3f34ef160ba598578398"
                    ]
                },
                {
                    "command": [
                        "trivial with arith.",
                        "VernacExtend",
                        "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_highs",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite highs_is_strip.",
                        "VernacExtend",
                        "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
                    ]
                },
                {
                    "command": [
                        "rewrite (length_strip bool).",
                        "VernacExtend",
                        "f3856d7a3a09842cb47d9468f321713ec68b20e6"
                    ]
                },
                {
                    "command": [
                        "apply minus_n_SO.",
                        "VernacExtend",
                        "5fbef0fed1052fdfdf70f8c658807a4927c99d9b"
                    ]
                },
                {
                    "command": [
                        "apply (v_not_nil_length bool).",
                        "VernacExtend",
                        "025dca33827e08f5d38f05ebfb0eb62c769a98a7"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_abit",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold abit in |- *.",
                        "VernacExtend",
                        "594b4b53d378d9c6a25a2c44a647ca8ac3a8ebe7"
                    ]
                },
                {
                    "command": [
                        "exact (length_elemlist bool).",
                        "VernacExtend",
                        "0daaf2fbd8c91f49a98d2961b718d9d5ce9e53f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_SO_size",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "generalize size_not_O.",
                        "VernacExtend",
                        "1927c445071295ce357bc08cecaef60d2a39359b"
                    ]
                },
                {
                    "command": [
                        "elim size.",
                        "VernacExtend",
                        "cff991f42e9002a2bf88bd00d4aa7bc6f7a66cc8"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "absurd (0 <> 0); unfold not in |- *; auto with arith.",
                        "VernacExtend",
                        "46c2ed2d353bfb697cb567e195f86b622e7b2ae3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_V1",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "rewrite length_V1_size.",
                        "VernacExtend",
                        "532e651fdb84237cad01390b50a4b6025819384a"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_V2",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "rewrite length_V2_size.",
                        "VernacExtend",
                        "08c62e938031348cdcce1b8a70bfe0b902174a92"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_V2_V1",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "transitivity size; auto with arith.",
                        "VernacExtend",
                        "ee44533464a48c5c79ca722a1b9ce242be188336"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "V1_not_nil",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "apply (not_nil bool).",
                        "VernacExtend",
                        "353f3b5e3c5f4042bd632d974f315709663c985c"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "V2_not_nil",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "apply (not_nil bool).",
                        "VernacExtend",
                        "353f3b5e3c5f4042bd632d974f315709663c985c"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_SO_length_V1",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "apply (le_SO_length_v bool).",
                        "VernacExtend",
                        "9141007c89b52ca40991ae9d15cc21b13feffa44"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R1_eq1",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R1_eq2",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R2_eq1",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R2_eq2",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_R1",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "simple induction t.",
                        "VernacExtend",
                        "ed99ea08a11cb71b621c4562818ea87e52158a3d"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite R1_eq2.",
                        "VernacExtend",
                        "efc40e6eab3ec3e85a25230fb28b15917fcce187"
                    ]
                },
                {
                    "command": [
                        "rewrite (length_app bool).",
                        "VernacExtend",
                        "66efba35e8f62b59cc0d60cba16554e73fc8a70d"
                    ]
                },
                {
                    "command": [
                        "unfold Mux in |- *.",
                        "VernacExtend",
                        "24afc5e85be58e5d107890b93a533b01abfc7a17"
                    ]
                },
                {
                    "command": [
                        "rewrite (F_If BV nat _ _ _ (@length bool)).",
                        "VernacExtend",
                        "2414ee71e1b2b0f8120b7590d62c2a36f61ff6af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite If_eq.",
                        "VernacExtend",
                        "302eac6f4ab51e7ce2c8e36cddd795df5e22bbaa"
                    ]
                },
                {
                    "command": [
                        "rewrite highs_is_strip.",
                        "VernacExtend",
                        "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
                    ]
                },
                {
                    "command": [
                        "rewrite (length_strip bool).",
                        "VernacExtend",
                        "f3856d7a3a09842cb47d9468f321713ec68b20e6"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv in H.",
                        "VernacExtend",
                        "73355ba6a89c54136b5efd6fba16029b26deba62"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_minus.",
                        "VernacExtend",
                        "df37b63db77b4df0f047707f2e27bddc60219927"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le; auto with arith.",
                        "VernacExtend",
                        "c225ffbcf939a696f3f95a438634cba5bd057276"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv in H.",
                        "VernacExtend",
                        "73355ba6a89c54136b5efd6fba16029b26deba62"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le.",
                        "VernacExtend",
                        "c0f75afdbf652aa71c225aeb9c95b55224bc6b61"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_R2",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "simple induction t.",
                        "VernacExtend",
                        "ed99ea08a11cb71b621c4562818ea87e52158a3d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv, BV_null in |- *.",
                        "VernacExtend",
                        "297f3f8258bcc0a9b02ac2a819029982ffb13317"
                    ]
                },
                {
                    "command": [
                        "rewrite (length_list_const bool).",
                        "VernacExtend",
                        "c49e523b64d2e440c3412c327a651392251da208"
                    ]
                },
                {
                    "command": [
                        "trivial with arith.",
                        "VernacExtend",
                        "3ab1b3d9f928fee056024c7b7fb73d779e628dff"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv in |- *.",
                        "VernacExtend",
                        "9e5b43c25c390af56c93042084c3b32b422e51af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite R2_eq2.",
                        "VernacExtend",
                        "aec390e866d1e67a5556caf6118ae318d8228dbb"
                    ]
                },
                {
                    "command": [
                        "rewrite (length_app bool).",
                        "VernacExtend",
                        "66efba35e8f62b59cc0d60cba16554e73fc8a70d"
                    ]
                },
                {
                    "command": [
                        "unfold Mux, consbv.",
                        "VernacExtend",
                        "7296970e46cb104d8de85f433a41abb3c7836b52"
                    ]
                },
                {
                    "command": [
                        "rewrite (F_If BV BV _ _ _ highs).",
                        "VernacExtend",
                        "15ed950554a74d5bcff2cb792e1e56c51b24da8e"
                    ]
                },
                {
                    "command": [
                        "rewrite (F_If BV nat _ _ _ (@length bool)).",
                        "VernacExtend",
                        "2414ee71e1b2b0f8120b7590d62c2a36f61ff6af"
                    ]
                },
                {
                    "command": [
                        "rewrite highs_is_strip.",
                        "VernacExtend",
                        "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
                    ]
                },
                {
                    "command": [
                        "rewrite (length_strip bool).",
                        "VernacExtend",
                        "f3856d7a3a09842cb47d9468f321713ec68b20e6"
                    ]
                },
                {
                    "command": [
                        "rewrite length_BV_full_adder_sum.",
                        "VernacExtend",
                        "1a1d983efbb6beef3ad51b0e1c8686abcc1434cd"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv in |- *.",
                        "VernacExtend",
                        "9e5b43c25c390af56c93042084c3b32b422e51af"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite highs_is_strip.",
                        "VernacExtend",
                        "572fe8591cd753e1ae69d75fccc62f5f09a9bc76"
                    ]
                },
                {
                    "command": [
                        "rewrite (length_strip bool).",
                        "VernacExtend",
                        "f3856d7a3a09842cb47d9468f321713ec68b20e6"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite If_eq.",
                        "VernacExtend",
                        "302eac6f4ab51e7ce2c8e36cddd795df5e22bbaa"
                    ]
                },
                {
                    "command": [
                        "rewrite (F_If BV nat _ _ _ (@length bool)).",
                        "VernacExtend",
                        "2414ee71e1b2b0f8120b7590d62c2a36f61ff6af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite If_eq.",
                        "VernacExtend",
                        "302eac6f4ab51e7ce2c8e36cddd795df5e22bbaa"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_minus.",
                        "VernacExtend",
                        "df37b63db77b4df0f047707f2e27bddc60219927"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le; exact H0.",
                        "VernacExtend",
                        "8a7a60ca5b92ee050a0401e85c0454930ff75255"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le; exact H0.",
                        "VernacExtend",
                        "8a7a60ca5b92ee050a0401e85c0454930ff75255"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv in |- *.",
                        "VernacExtend",
                        "9e5b43c25c390af56c93042084c3b32b422e51af"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le; exact H0.",
                        "VernacExtend",
                        "8a7a60ca5b92ee050a0401e85c0454930ff75255"
                    ]
                },
                {
                    "command": [
                        "rewrite length_BV_full_adder_sum.",
                        "VernacExtend",
                        "1a1d983efbb6beef3ad51b0e1c8686abcc1434cd"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv in |- *.",
                        "VernacExtend",
                        "9e5b43c25c390af56c93042084c3b32b422e51af"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le; exact H0.",
                        "VernacExtend",
                        "8a7a60ca5b92ee050a0401e85c0454930ff75255"
                    ]
                },
                {
                    "command": [
                        "unfold lengthbv in |- *.",
                        "VernacExtend",
                        "9e5b43c25c390af56c93042084c3b32b422e51af"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le; exact H0.",
                        "VernacExtend",
                        "8a7a60ca5b92ee050a0401e85c0454930ff75255"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R1_never_nil",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (not_nil bool).",
                        "VernacExtend",
                        "353f3b5e3c5f4042bd632d974f315709663c985c"
                    ]
                },
                {
                    "command": [
                        "rewrite length_R1.",
                        "VernacExtend",
                        "a8d691beee7f97fc107b74ffa61d66f1fa55642a"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}