{
    "filename": "theories/Core/CmpDec.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Require Import Coq.Bool.Bool.",
            "VernacRequire",
            "38f52b48f6f716417469716568252bf78819181b"
        ],
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import ExtLib.Tactics.Consider.",
            "VernacRequire",
            "d7f1290b398c3a51484b77ae4b362f89ed2a3ede"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Class CmpDec (T : Type) (equ : T -> T -> Prop) (ltu : T -> T -> Prop) : Type := { cmp_dec : T -> T -> comparison }.",
            "VernacInductive",
            "ad324bf17354016639aaf71ff3d67e859c113ab1"
        ],
        [
            "Class CmpDec_Correct T (equ ltu : T -> T -> Prop) (ED : CmpDec equ ltu) : Prop := { cmp_dec_correct : forall x y : T, match cmp_dec x y with | Eq => equ x y | Lt => ltu x y | Gt => ltu y x end }.",
            "VernacInductive",
            "44a53c6b5dc68f23e77f356997889399e7422b6c"
        ],
        [
            "Inductive cmp_case (P Q R : Prop) : comparison -> Prop := | CaseEq : P -> cmp_case P Q R Eq | CaseLt : Q -> cmp_case P Q R Lt | CaseGt : R -> cmp_case P Q R Gt.",
            "VernacInductive",
            "31cf63312e5c5702e9b5975b3f11570f4268e5ac"
        ],
        [
            "Section pair.",
            "VernacBeginSection",
            "f6324301cddce8e3d71f20c91f6659bb4fdf5a38"
        ],
        [
            "Variable T U : Type.",
            "VernacAssumption",
            "a0dd0f619c287f89447aad2bc4820898ca5c630d"
        ],
        [
            "Variables eqt ltt : T -> T -> Prop.",
            "VernacAssumption",
            "69635465a9aa7b665dd50f81e927381794cd6421"
        ],
        [
            "Variables equ ltu : U -> U -> Prop.",
            "VernacAssumption",
            "2abca3516af09dbafec5d7cdd17e10b3e337ad19"
        ],
        [
            "Definition eq_pair (a b : T * U) : Prop := eqt (fst a) (fst b) /\\ equ (snd a) (snd b).",
            "VernacDefinition",
            "a10338edfe7bf6ad480954bb9978d0db44ba8d90"
        ],
        [
            "Definition lt_pair (a b : T * U) : Prop := ltt (fst a) (fst b) \\/ (eqt (fst a) (fst b) /\\ ltu (snd a) (snd b)).",
            "VernacDefinition",
            "7388a76568fd80bbca5f3f152141717d943672d0"
        ],
        [
            "Variable cdt : CmpDec eqt ltt.",
            "VernacAssumption",
            "f45f7a83147c196749fc8ea6aba879d632a9865d"
        ],
        [
            "Variable cdu : CmpDec equ ltu.",
            "VernacAssumption",
            "f11c6440517d5a346fd398ca916b3db4b9700e66"
        ],
        [
            "Instance CmpDec_pair : CmpDec eq_pair lt_pair := { cmp_dec := fun a b => let '(al,ar) := a in let '(bl,br) := b in match cmp_dec al bl with | Eq => cmp_dec ar br | x => x end }.",
            "VernacInstance",
            "e81ae26f84e091aff34dcdb952cfe42c214fbeb5"
        ],
        [
            "Variable cdtC : CmpDec_Correct cdt.",
            "VernacAssumption",
            "b4d99abdb7e8e9fe4d7090f33fe26cdd464158d4"
        ],
        [
            "Variable cduC : CmpDec_Correct cdu.",
            "VernacAssumption",
            "15ea172153d4b737e591ca983c2b289a36e1102e"
        ],
        [
            "Variable Symmetric_eqt : Symmetric eqt.",
            "VernacAssumption",
            "a3e188dda8bfa9bb6c43a345910406f7d658946a"
        ],
        [
            "Instance CmpDec_Correct_pair : CmpDec_Correct CmpDec_pair.",
            "VernacInstance",
            "e6fa49fbd55e903b85aef089d44aba5b8cd1de99"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct x; destruct y; unfold eq_pair, lt_pair; simpl in *.",
            "VernacExtend",
            "a6169a3f64ffc5077d8cc4d5cd2e6ed4611a562b"
        ],
        [
            "generalize (cmp_dec_correct t t0); destruct (cmp_dec t t0); simpl; intros; auto.",
            "VernacExtend",
            "dc9f11899f3a53a76970bea3aa8d33c34f07609b"
        ],
        [
            "generalize (cmp_dec_correct u u0); destruct (cmp_dec u u0); simpl; intros; auto.",
            "VernacExtend",
            "37de82e85d6bfa5ce9de13ac324d4f0d64890bc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End pair.",
            "VernacEndSegment",
            "32d22a71640ea3283ae207f6eb13d48534176d24"
        ]
    ],
    "proofs": [
        {
            "name": "CmpDec_Correct_pair",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct x; destruct y; unfold eq_pair, lt_pair; simpl in *.",
                        "VernacExtend",
                        "a6169a3f64ffc5077d8cc4d5cd2e6ed4611a562b"
                    ]
                },
                {
                    "command": [
                        "generalize (cmp_dec_correct t t0); destruct (cmp_dec t t0); simpl; intros; auto.",
                        "VernacExtend",
                        "dc9f11899f3a53a76970bea3aa8d33c34f07609b"
                    ]
                },
                {
                    "command": [
                        "generalize (cmp_dec_correct u u0); destruct (cmp_dec u u0); simpl; intros; auto.",
                        "VernacExtend",
                        "37de82e85d6bfa5ce9de13ac324d4f0d64890bc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}