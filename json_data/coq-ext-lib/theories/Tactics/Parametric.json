{
    "filename": "theories/Tactics/Parametric.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Require Import RelationClasses.",
            "VernacRequire",
            "4477b0931b4b8fa1b7266888d518499524bf9df2"
        ],
        [
            "Require Import Morphisms.",
            "VernacRequire",
            "6a4eb96d3ed10974e9e35a50ae409cd8bae1c2f4"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Theorem Proper_red : forall T U (rT : relation T) (rU : relation U) (f : T -> U), (forall x x', rT x x' -> rU (f x) (f x')) -> Proper (rT ==> rU) f.",
            "VernacStartTheoremProof",
            "58ac961648176ac33387e1836500158bb0bd28ff"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem respectful_red : forall T U (rT : relation T) (rU : relation U) (f g : T -> U), (forall x x', rT x x' -> rU (f x) (g x')) -> respectful rT rU f g.",
            "VernacStartTheoremProof",
            "058fde8ef082ead0aaa5b9d1250579ed7a200233"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem respectful_if_bool T : forall (x x' : bool) (t t' f f' : T) eqT, x = x' -> eqT t t' -> eqT f f' -> eqT (if x then t else f) (if x' then t' else f') .",
            "VernacStartTheoremProof",
            "802426c616ed70f9e4a37e82fcb2eeddf7fe63a0"
        ],
        [
            "intros; subst; auto; destruct x'; auto.",
            "VernacExtend",
            "7fae2d7594061bcb49c9333a77a40b1c71bc4906"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac derive_morph := repeat first [ lazymatch goal with | |- Proper _ _ => red; intros | |- (_ ==> _)%signature _ _ => red; intros end | apply respectful_red; intros | apply respectful_if_bool; intros | match goal with | [ H : (_ ==> ?EQ)%signature ?F ?F' |- ?EQ (?F _) (?F' _) ] => apply H | [ |- ?EQ (?F _) (?F _) ] => let inst := constr:(_ : Proper (_ ==> EQ) F) in apply inst | [ H : (_ ==> _ ==> ?EQ)%signature ?F ?F' |- ?EQ (?F _ _) (?F' _ _) ] => apply H | [ |- ?EQ (?F _ _) (?F' _ _) ] => let inst := constr:(_ : Proper (_ ==> _ ==> EQ) F) in apply inst | [ |- ?EQ (?F _ _ _) (?F _ _ _) ] => let inst := constr:(_ : Proper (_ ==> _ ==> _ ==> EQ) F) in apply inst | [ |- ?EQ (?F _) (?F _) ] => unfold F | [ |- ?EQ (?F _ _) (?F _ _) ] => unfold F | [ |- ?EQ (?F _ _ _) (?F _ _ _) ] => unfold F end ].",
            "VernacExtend",
            "14c9bc24f98e21c7012d87d938976bacc8a0a69e"
        ],
        [
            "Global Instance Proper_andb : Proper (@eq bool ==> @eq bool ==> @eq bool) andb.",
            "VernacInstance",
            "388416139aa1aa032b9d4d29b467280135c48804"
        ],
        [
            "derive_morph; auto.",
            "VernacExtend",
            "76c9912843bd5879626bee32e0bb328953eaa30a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section K.",
            "VernacBeginSection",
            "b8de7cb5f4e948bef4fc30c3d8784ec65134e65f"
        ],
        [
            "Variable F : bool -> bool -> bool.",
            "VernacAssumption",
            "f576f267eaae3e6d0f282c67e3d1f176c8391324"
        ],
        [
            "Hypothesis Fproper : Proper (@eq bool ==> @eq bool ==> @eq bool) F.",
            "VernacAssumption",
            "12bf4fcb88fd98699d2a04c1fa7848b9ac7cd515"
        ],
        [
            "Existing Instance Fproper.",
            "VernacDeclareInstances",
            "ebd394c14d603ad84ef050c162d0fa088b90e083"
        ],
        [
            "Definition food (x y z : bool) : bool := F x (F y z).",
            "VernacDefinition",
            "482b8ac51b519239f2d890ccd5fdbb218825f301"
        ],
        [
            "Global Instance Proper_food : Proper (@eq bool ==> @eq bool ==> @eq bool ==> @eq bool) food.",
            "VernacInstance",
            "2200171067e816fc7b138dc6712d5d8941db6bda"
        ],
        [
            "derive_morph; auto.",
            "VernacExtend",
            "76c9912843bd5879626bee32e0bb328953eaa30a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Proper_S : Proper (@eq nat ==> @eq nat) S.",
            "VernacInstance",
            "fed1074c1e5c67fba35b36856875f86297bfeaa3"
        ],
        [
            "derive_morph; auto.",
            "VernacExtend",
            "76c9912843bd5879626bee32e0bb328953eaa30a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End K.",
            "VernacEndSegment",
            "f66584b41da06300bc09da44576460ddf55e475f"
        ],
        [
            "Require Import List.",
            "VernacRequire",
            "d9bcce4a390afeb160107bf87c6f7abe3d82c6d6"
        ],
        [
            "Section Map.",
            "VernacBeginSection",
            "12ca5ab2f7de3292eec6072cc06769cd51c25553"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable eqT : relation T.",
            "VernacAssumption",
            "6c93cb2edd881257efc76e7e29fa436dd1d064fb"
        ],
        [
            "Inductive listEq {T} (eqT : relation T) : relation (list T) := | listEq_nil : listEq eqT nil nil | listEq_cons : forall x x' y y', eqT x x' -> listEq eqT y y' ->listEq eqT (x :: y) (x' :: y').",
            "VernacInductive",
            "fe296a9de9d119d8ae4e566618ccf2fbdaa20af8"
        ],
        [
            "Theorem listEq_match V U (eqV : relation V) (eqU : relation U) : forall x x' : list V, forall X X' Y Y', eqU X X' -> (eqV ==> listEq eqV ==> eqU)%signature Y Y' -> listEq eqV x x' -> eqU (match x with | nil => X | x :: xs => Y x xs end) (match x' with | nil => X' | x :: xs => Y' x xs end).",
            "VernacStartTheoremProof",
            "1ccf287a7ee23f8d9c265f7d385bb531d632d4b5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H1; auto.",
            "VernacExtend",
            "dbc3514ab5b1efcd289d0e8d64a89c4cd63229e8"
        ],
        [
            "derive_morph; auto.",
            "VernacExtend",
            "76c9912843bd5879626bee32e0bb328953eaa30a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable U : Type.",
            "VernacAssumption",
            "eb05258af3da16894daf420a97be779934a15d7e"
        ],
        [
            "Variable eqU : relation U.",
            "VernacAssumption",
            "90190416f371b8cee6f1feb4ed5e2bd545af7cf8"
        ],
        [
            "Variable f : T -> U.",
            "VernacAssumption",
            "6ac047e912585d1878878accd0307f42e7f573a4"
        ],
        [
            "Variable fproper : Proper (eqT ==> eqU) f.",
            "VernacAssumption",
            "ca2765f1c56d04877d94332716dd7b013b242af8"
        ],
        [
            "Definition hd (l : list T) : option T := match l with | nil => None | l :: _ => Some l end.",
            "VernacDefinition",
            "498a10df22bfabbfb6afbf0d86f10c45595c2d0f"
        ],
        [
            "Fixpoint map' (l : list T) : list U := match l with | nil => nil | l :: ls => f l :: map' ls end.",
            "VernacFixpoint",
            "bbb095c41ec3ac343b1eb28fcfd21b0285df9d32"
        ],
        [
            "Global Instance Proper_map' : Proper (listEq eqT ==> listEq eqU) map'.",
            "VernacInstance",
            "d3c0f3de1a6e6b55fee209b7621bede9f390515e"
        ],
        [
            "derive_morph.",
            "VernacExtend",
            "73390b4961be35fdb881d5ee003a0d520949a168"
        ],
        [
            "induction H; econstructor; derive_morph; auto.",
            "VernacExtend",
            "812e43621b5969f588970bf10750771c79ca74b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Map.",
            "VernacEndSegment",
            "8fa7735d92e76131e10c5cfe95a2247db65a4b9f"
        ]
    ],
    "proofs": [
        {
            "name": "Proper_red",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "respectful_red",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "respectful_if_bool",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros; subst; auto; destruct x'; auto.",
                        "VernacExtend",
                        "7fae2d7594061bcb49c9333a77a40b1c71bc4906"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_andb",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "derive_morph; auto.",
                        "VernacExtend",
                        "76c9912843bd5879626bee32e0bb328953eaa30a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_food",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "derive_morph; auto.",
                        "VernacExtend",
                        "76c9912843bd5879626bee32e0bb328953eaa30a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_S",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "derive_morph; auto.",
                        "VernacExtend",
                        "76c9912843bd5879626bee32e0bb328953eaa30a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "listEq_match",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H1; auto.",
                        "VernacExtend",
                        "dbc3514ab5b1efcd289d0e8d64a89c4cd63229e8"
                    ]
                },
                {
                    "command": [
                        "derive_morph; auto.",
                        "VernacExtend",
                        "76c9912843bd5879626bee32e0bb328953eaa30a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Proper_map'",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "derive_morph.",
                        "VernacExtend",
                        "73390b4961be35fdb881d5ee003a0d520949a168"
                    ]
                },
                {
                    "command": [
                        "induction H; econstructor; derive_morph; auto.",
                        "VernacExtend",
                        "812e43621b5969f588970bf10750771c79ca74b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}