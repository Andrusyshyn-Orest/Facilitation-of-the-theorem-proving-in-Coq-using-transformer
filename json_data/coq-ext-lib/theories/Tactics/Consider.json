{
    "filename": "theories/Tactics/Consider.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Inductive reflect (P Q : Prop) : bool -> Type := | reflect_true : P -> reflect P Q true | reflect_false : Q -> reflect P Q false.",
            "VernacInductive",
            "c217bf0355af8c50ea794bf5c9ca3f348191f2b1"
        ],
        [
            "Inductive semi_reflect (P : Prop) : bool -> Type := | semi_reflect_true : P -> semi_reflect P true | semi_reflect_false : semi_reflect P false.",
            "VernacInductive",
            "2ef9c0a9dfb259027d863a8bce8fc612e1426775"
        ],
        [
            "Lemma iff_to_reflect {A B} (P : A -> B -> Prop) (T : A -> B -> bool) : (forall x y, T x y = true <-> P x y) -> (forall x y, reflect (P x y) (~P x y) (T x y)).",
            "VernacStartTheoremProof",
            "17b4d6bb7c26fb8e2515b20b4c4a8046bf41b090"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (T x y); intros Hxy; constructor.",
            "VernacExtend",
            "f658936796cb9c084aa40de1fb7644ccc4e1dc34"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros Hf.",
            "VernacExtend",
            "0a34d3f570a7fa7521ff666decd218fe609c954f"
        ],
        [
            "apply H in Hf.",
            "VernacExtend",
            "e0236cb210ef0bdbb358db0035e712f8d1b9b6aa"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma impl_to_semireflect {A B} (P : A -> B -> Prop) (T : A -> B -> bool) : (forall x y, T x y = true -> P x y) -> (forall x y, semi_reflect (P x y) (T x y)).",
            "VernacStartTheoremProof",
            "056f9172aabd388769bcb8900cfe65fb9d94501a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (T x y); intros Hxy; constructor.",
            "VernacExtend",
            "f658936796cb9c084aa40de1fb7644ccc4e1dc34"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reflect_true_inv P Q : reflect P Q true -> P.",
            "VernacStartTheoremProof",
            "48dbd607ab512a353d8a81710d5c04db55da43df"
        ],
        [
            "exact (fun x => match x in reflect _ _ b return if b then P else ID with | reflect_true _ _ H => H | reflect_false _ _ H => (fun _ x => x) end).",
            "VernacExtend",
            "9fec84a30910701da147307aa6679b26b43f74c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reflect_false_inv P Q : reflect P Q false -> Q.",
            "VernacStartTheoremProof",
            "1f9e01b0752f298554054bb692a258405da46ed1"
        ],
        [
            "exact (fun x => match x in reflect _ _ b return if b then ID else Q with | reflect_true _ _ H => fun _ x => x | reflect_false _ _ H => H end).",
            "VernacExtend",
            "f76f13c8736adb78c778b6b6d6af6d5087e088f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma semi_reflect_true_inv P : semi_reflect P true -> P.",
            "VernacStartTheoremProof",
            "1dd7d7c8bc6d6273aba47985a15ab4088b28f931"
        ],
        [
            "exact (fun x => match x in semi_reflect _ b return if b then P else ID with | semi_reflect_true _ H => H | semi_reflect_false _ => (fun _ x => x) end).",
            "VernacExtend",
            "27e9dd5d6b4898eb9a5d2d0a53735e4d3c6a7d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class Reflect (T : bool) (P Q : Prop) := _Reflect : reflect P Q T.",
            "VernacInductive",
            "b2684330073a8947eda901d1d362bc7e6b73c829"
        ],
        [
            "Class SemiReflect (T : bool) (P : Prop) := _SemiReflect : semi_reflect P T.",
            "VernacInductive",
            "ad60cc6b25e8148dfc0403b0bbaaeaacf33aba18"
        ],
        [
            "Section boolean_logic.",
            "VernacBeginSection",
            "13131195a2093b79371ba44b27beede7966060d6"
        ],
        [
            "Ltac t := repeat match goal with | H: Reflect true ?P ?Q |- _ => apply (reflect_true_inv P Q) in H | H: Reflect false ?P ?Q |- _ => apply (reflect_false_inv P Q) in H end.",
            "VernacExtend",
            "f6703eb8705289dbff48bed53cb3a7c303ab16e5"
        ],
        [
            "Context {T1 T2 P1 Q1 P2 Q2} {R1 : Reflect T1 P1 Q1} {R2: Reflect T2 P2 Q2}.",
            "VernacContext",
            "155d87fe8d4ce5fb6a3294ce9c2f2c8a6838f24f"
        ],
        [
            "Global Instance Reflect_andb : Reflect (T1 && T2)%bool (P1 /\\ P2) (Q1 \\/ Q2).",
            "VernacInstance",
            "ed45a4325d90ff8575fda8cbb1b7525d11db6be9"
        ],
        [
            "destruct T1; destruct T2; t; constructor; tauto.",
            "VernacExtend",
            "16bc29621a55f36fd0a55317ab8e29fe5b1db7f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Reflect_orb : Reflect (T1 || T2)%bool (P1 \\/ P2) (Q1 /\\ Q2).",
            "VernacInstance",
            "10a7545161fe65e1d7fd3d65765c5aec7398f5f2"
        ],
        [
            "destruct T1; destruct T2; t; constructor; tauto.",
            "VernacExtend",
            "16bc29621a55f36fd0a55317ab8e29fe5b1db7f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Reflect_negb : Reflect (negb T1)%bool Q1 P1.",
            "VernacInstance",
            "a556e637a573462bf6f503df7f04939692b9b6d2"
        ],
        [
            "destruct T1; t; constructor; tauto.",
            "VernacExtend",
            "0f4bd940c6299065a9d3b209d4de46a983c10fd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End boolean_logic.",
            "VernacEndSegment",
            "f6a956c71da06afa05914ff0650edbcae4734c82"
        ],
        [
            "Require Import ExtLib.Core.RelDec.",
            "VernacRequire",
            "0e3bcdc14736b545ca698ea9a09e10feafbc33d4"
        ],
        [
            "Section from_rel_dec.",
            "VernacBeginSection",
            "97089d0eb02057ef498936033ad0cf07f382fd7e"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable eqt : T -> T -> Prop.",
            "VernacAssumption",
            "b2627c81098f82c49f4e31589c772c895690acd5"
        ],
        [
            "Variable rd : RelDec eqt.",
            "VernacAssumption",
            "81c6c59ba7c5eb81713aea012852da5bc8c63166"
        ],
        [
            "Variable rdc : RelDec_Correct rd.",
            "VernacAssumption",
            "a5705a09fa379fb72cab141d3fdccf6d0fc08561"
        ],
        [
            "Global Instance Reflect_RelDecCorrect (a b : T) : Reflect (rel_dec a b) (eqt a b) (~(eqt a b)).",
            "VernacInstance",
            "1f8a538949451830cdd56dd787bf78aad488f768"
        ],
        [
            "eapply iff_to_reflect.",
            "VernacExtend",
            "d1fa98c8d016c43161689499071b0cf57a6d2137"
        ],
        [
            "eapply rel_dec_correct.",
            "VernacExtend",
            "32d86b6da3fbac05b2de571525d080f50e1d5e3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End from_rel_dec.",
            "VernacEndSegment",
            "bc31d35d3a2cdfe5d66a243954e94567d3a0c583"
        ],
        [
            "Hint Extern 10 (@Reflect (?f ?a ?b) _ _) => eapply (@Reflect_RelDecCorrect _ _ (@Build_RelDec _ _ f) _) : typeclass_instances.",
            "VernacHints",
            "35c99d9fe75548852bc25ef20d7d7bcf894c94dc"
        ],
        [
            "Ltac consider f := let rec clean := match goal with | |- true = true -> _ => intros _ ; clean | |- false = true -> _ => discriminate | |- ?P1 -> ?P2 => let H := fresh in intros H ; clean; revert H | |- _ => idtac end in (repeat match goal with | [ H : context [ f ] |- _ ] => revert H end) ; match type of f with | sumbool _ _ => destruct f | _ => match goal with | _ => ((let c := constr:(_ : Reflect f _ _) in case c)) | _ => ((let c := constr:(_ : SemiReflect f _) in case c)) | _ => case_eq f end end ; clean.",
            "VernacExtend",
            "b26cbd08342fa856eb727e913dcfea2ff75f343a"
        ]
    ],
    "proofs": [
        {
            "name": "iff_to_reflect",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (T x y); intros Hxy; constructor.",
                        "VernacExtend",
                        "f658936796cb9c084aa40de1fb7644ccc4e1dc34"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros Hf.",
                        "VernacExtend",
                        "0a34d3f570a7fa7521ff666decd218fe609c954f"
                    ]
                },
                {
                    "command": [
                        "apply H in Hf.",
                        "VernacExtend",
                        "e0236cb210ef0bdbb358db0035e712f8d1b9b6aa"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "impl_to_semireflect",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (T x y); intros Hxy; constructor.",
                        "VernacExtend",
                        "f658936796cb9c084aa40de1fb7644ccc4e1dc34"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reflect_true_inv",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "exact (fun x => match x in reflect _ _ b return if b then P else ID with | reflect_true _ _ H => H | reflect_false _ _ H => (fun _ x => x) end).",
                        "VernacExtend",
                        "9fec84a30910701da147307aa6679b26b43f74c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reflect_false_inv",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "exact (fun x => match x in reflect _ _ b return if b then ID else Q with | reflect_true _ _ H => fun _ x => x | reflect_false _ _ H => H end).",
                        "VernacExtend",
                        "f76f13c8736adb78c778b6b6d6af6d5087e088f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "semi_reflect_true_inv",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "exact (fun x => match x in semi_reflect _ b return if b then P else ID with | semi_reflect_true _ H => H | semi_reflect_false _ => (fun _ x => x) end).",
                        "VernacExtend",
                        "27e9dd5d6b4898eb9a5d2d0a53735e4d3c6a7d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Reflect_andb",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "destruct T1; destruct T2; t; constructor; tauto.",
                        "VernacExtend",
                        "16bc29621a55f36fd0a55317ab8e29fe5b1db7f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Reflect_orb",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "destruct T1; destruct T2; t; constructor; tauto.",
                        "VernacExtend",
                        "16bc29621a55f36fd0a55317ab8e29fe5b1db7f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Reflect_negb",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "destruct T1; t; constructor; tauto.",
                        "VernacExtend",
                        "0f4bd940c6299065a9d3b209d4de46a983c10fd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Reflect_RelDecCorrect",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "eapply iff_to_reflect.",
                        "VernacExtend",
                        "d1fa98c8d016c43161689499071b0cf57a6d2137"
                    ]
                },
                {
                    "command": [
                        "eapply rel_dec_correct.",
                        "VernacExtend",
                        "32d86b6da3fbac05b2de571525d080f50e1d5e3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}