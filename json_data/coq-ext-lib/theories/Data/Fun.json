{
    "filename": "theories/Data/Fun.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Require Import ExtLib.Core.Type.",
            "VernacRequire",
            "f386eaa7bb737409baadc3f90d39f8f6cd79d7fe"
        ],
        [
            "Require Import ExtLib.Data.PreFun.",
            "VernacRequire",
            "20481e2ec24025357c0c433a109ca4f29361414c"
        ],
        [
            "Require Import ExtLib.Structures.Functor.",
            "VernacRequire",
            "3da96fef886011735d53bdbc91b94d8e7f273e3d"
        ],
        [
            "Require Import ExtLib.Structures.Applicative.",
            "VernacRequire",
            "38d5e96c84d9974586229edc9a3792bcc25d743e"
        ],
        [
            "Require Import ExtLib.Structures.CoFunctor.",
            "VernacRequire",
            "6c48063e64ecb60444d9e401d7fa1dd5a60d5cb0"
        ],
        [
            "Require Import ExtLib.Structures.Monoid.",
            "VernacRequire",
            "f032d55031b73511a3b5f710a37e267ebb87da85"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Global Instance proper_id (T : Type) {tT : type T} : proper (fun x => x).",
            "VernacInstance",
            "9d27fa240a5ef67e6757a0e9801d22115ef4cbb9"
        ],
        [
            "repeat red; intros.",
            "VernacExtend",
            "3b23460c57f21b9e3c22bb0a3b36545050809490"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section functors.",
            "VernacBeginSection",
            "3aab2f8372b0bd9b7ed59f8e7e7215e09f49164d"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Instance FunFunctor A : Functor (Fun A) := { fmap _A _B g f x := g (f x) }.",
            "VernacInstance",
            "06e2123d2b68ea52a68833e865160e6a2e159577"
        ],
        [
            "Local Instance Functor_Fun : Functor (Fun A) := { fmap _A _B g f x := g (f x) }.",
            "VernacInstance",
            "da8ad2f787cda51480d54ddde0387b0f442d2766"
        ],
        [
            "Local Instance CoFunctor_Fun T : CoFunctor (fun x => x -> T) := {| cofmap := fun _ _ g f => fun x => f (g x) |}.",
            "VernacInstance",
            "66a049e7c1edacb035dc938033cadf40facd97fa"
        ],
        [
            "Local Instance Functor_functor F G (fF : Functor F) (fG : Functor G) : Functor (fun x => F (G x)) := {| fmap := fun _ _ g => @fmap F _ _ _ (@fmap G _ _ _ g) |}.",
            "VernacInstance",
            "9125a968521780035e3d4f6e23624edb4d6f6809"
        ],
        [
            "Local Instance CoFunctor_functor F G (fF : Functor F) (fG : CoFunctor G) : CoFunctor (fun x => F (G x)) := {| cofmap := fun _ _ g => @fmap F _ _ _ (@cofmap G _ _ _ g) |}.",
            "VernacInstance",
            "76ed60d6bd1e47b7c04b22d1a78294f2016397f0"
        ],
        [
            "Local Instance Functor_cofunctor F G (fF : CoFunctor F) (fG : Functor G) : CoFunctor (fun x => F (G x)) := {| cofmap := fun _ _ g => @cofmap F _ _ _ (@fmap G _ _ _ g) |}.",
            "VernacInstance",
            "e8ba5379fd8921610469eed60e236ee78feeaab5"
        ],
        [
            "Local Instance CoFunctor_cofunctor F G (fF : CoFunctor F) (fG : CoFunctor G) : Functor (fun x => F (G x)) := {| fmap := fun _ _ g => @cofmap F _ _ _ (@cofmap G _ _ _ g) |}.",
            "VernacInstance",
            "ef171a1a945a8cc4bf2ca4b2c1aba321ef56fcee"
        ],
        [
            "Local Instance Applicative_Fun : Applicative (Fun A) := { pure := fun _ x _ => x ; ap := fun _ _ f x y => (f y) (x y) }.",
            "VernacInstance",
            "0b05e65c52c2ffc5baf6b16842a1a71fe80df224"
        ],
        [
            "End functors.",
            "VernacEndSegment",
            "c118b6ac64b7e168301761812dafe64f2cad9ed4"
        ],
        [
            "Definition Monoid_compose T : Monoid (T -> T) := {| monoid_plus g f x := g (f x) ; monoid_unit x := x |}.",
            "VernacDefinition",
            "cd2b217910b53874a0c583546b2b40c9e366f1ae"
        ],
        [
            "Export PreFun.",
            "VernacImport",
            "553b70dea59da71e7b9e37afdf1d95842a3b59ef"
        ]
    ],
    "proofs": [
        {
            "name": "proper_id",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "repeat red; intros.",
                        "VernacExtend",
                        "3b23460c57f21b9e3c22bb0a3b36545050809490"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}