{
    "filename": "theories/Data/List.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Coq.Classes.EquivDec.",
            "VernacRequire",
            "c17ade40a478a8deb6996282810d0b3583a7cad2"
        ],
        [
            "Require Import ExtLib.Core.Type.",
            "VernacRequire",
            "f386eaa7bb737409baadc3f90d39f8f6cd79d7fe"
        ],
        [
            "Require Import ExtLib.Core.RelDec.",
            "VernacRequire",
            "0e3bcdc14736b545ca698ea9a09e10feafbc33d4"
        ],
        [
            "Require Import ExtLib.Structures.Monoid.",
            "VernacRequire",
            "f032d55031b73511a3b5f710a37e267ebb87da85"
        ],
        [
            "Require Import ExtLib.Structures.Reducible.",
            "VernacRequire",
            "3d0145326c8c36a3bac1544c5c8e01d880d61b29"
        ],
        [
            "Require ExtLib.Data.Nat.",
            "VernacRequire",
            "08f5a1da9a7685a5b46fcb2b10b199ff273d5cc7"
        ],
        [
            "Require Import ExtLib.Tactics.Consider.",
            "VernacRequire",
            "d7f1290b398c3a51484b77ae4b362f89ed2a3ede"
        ],
        [
            "Require Import ExtLib.Tactics.Injection.",
            "VernacRequire",
            "775eac3c69d154f6fee4c7e10d0af17b678b5153"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Section type.",
            "VernacBeginSection",
            "2c34aef55fed16ddde4b4d4655f4ae858f4c50a9"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Context {type_T : type T}.",
            "VernacContext",
            "7fb061c2ebeccce1ba41fe2dd1af8cde3d6efd3b"
        ],
        [
            "Inductive list_eq : list T -> list T -> Prop := | nil_eq : list_eq nil nil | cons_eq : forall x xs y ys, equal x y -> list_eq xs ys -> list_eq (x :: xs) (y :: ys).",
            "VernacInductive",
            "6e9ca3dced372c849e78860ecc47eb4ef5396284"
        ],
        [
            "Instance type_list : type (list T) := { equal := list_eq ; proper := Forall proper }.",
            "VernacInstance",
            "1644d9ca7f8995622c4825061e3598a33c917d00"
        ],
        [
            "Context {typeOk_T : typeOk type_T}.",
            "VernacContext",
            "330e815a5137c308de80f163f2e5789ba9e5229f"
        ],
        [
            "Instance typeOk_list : typeOk type_list.",
            "VernacInstance",
            "580048086d002d624bba9228a6487b1f92493399"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intuition; constructor.",
            "VernacExtend",
            "51733d11ba6616e760bb305f83f8098233862173"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply only_proper in H; auto.",
            "VernacExtend",
            "1542154fd0f0f5dd4f95c3fbd3a1661b38688282"
        ],
        [
            "intuition; constructor; intuition.",
            "VernacExtend",
            "f9164b987169f540a47630c8284933581b20c934"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction x; intros.",
            "VernacExtend",
            "967005fa252895ab470aa9876d40c37f363bf6d6"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "inversion H; clear H; subst.",
            "VernacExtend",
            "a36bd190e11a8fd6825e4b7a1eb236029aaadb63"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply equiv_prefl; auto.",
            "VernacExtend",
            "670cd0ed3080d7f0ddc31209e71f33b9995bad25"
        ],
        [
            "apply IHx.",
            "VernacExtend",
            "57b53d568b6a6ff5c237717ffbd6044c4bcd3fef"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction 1; constructor; auto.",
            "VernacExtend",
            "ff51879142eef61207638aeecdcf6617e01ec60f"
        ],
        [
            "apply equiv_sym; auto.",
            "VernacExtend",
            "020e7c9e3293fbf6427b1a0c1d1f7ced1c48b356"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "do 3 intro.",
            "VernacExtend",
            "177de6f66fcc47b0b56e5a6eca140fd577ebdd59"
        ],
        [
            "revert z.",
            "VernacExtend",
            "90129574fd69f95f588801e85e5e45255bbb78a7"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "remember nil.",
            "VernacExtend",
            "1b0d355b281a9959f333bdb7c14a788f4c1099ad"
        ],
        [
            "destruct 1; try congruence.",
            "VernacExtend",
            "eea9ffc2199115ed6d7356c743807076100a6d30"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "remember (y :: ys).",
            "VernacExtend",
            "da2f12d53b292c5739b84557b06dee2a95da906e"
        ],
        [
            "destruct 1; try congruence.",
            "VernacExtend",
            "eea9ffc2199115ed6d7356c743807076100a6d30"
        ],
        [
            "inversion Heql; clear Heql; subst.",
            "VernacExtend",
            "90d8f25208def33ae4199c961919bba3dbe7dc19"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply equiv_trans; eauto.",
            "VernacExtend",
            "e7a5d13ce12cce3f522e95f34700f3c74d736cdb"
        ],
        [
            "eapply IHlist_eq.",
            "VernacExtend",
            "7e0d7f992367c05ebae1e6fce8651672ff163dce"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End type.",
            "VernacEndSegment",
            "8d0f4c701b8711538af57173787aa08f3663856b"
        ],
        [
            "Section EqDec.",
            "VernacBeginSection",
            "8e1145e69ff576203bbd73eedeb6251a35b6d74f"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable EqDec_T : EquivDec.EqDec _ (@eq T).",
            "VernacAssumption",
            "615371e950b30b71643d55d59265924518acd319"
        ],
        [
            "Global Instance EqDec_list : EquivDec.EqDec _ (@eq (list T)).",
            "VernacInstance",
            "1fe479519337ee0e29a07cdb2d31d08cffbcd6ae"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold Equivalence.equiv, RelationClasses.complement.",
            "VernacExtend",
            "1dd1074c95f8b0229b7f87d16783aabcf34f583d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (x = y -> False) with (x <> y).",
            "VernacExtend",
            "3dcb66b6a64b25d165df61c6c2bbbbd34a0d5b31"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "eapply EqDec_T.",
            "VernacExtend",
            "02513c539d9349d46635cb2cb085c0850e7866c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EqDec.",
            "VernacEndSegment",
            "8fdcd12360fd0e1960ca60f9a7f92cc1f0de72c0"
        ],
        [
            "Lemma list_ind_singleton : forall {T : Type} (P : list T -> Prop) (Hnil : P nil) (Hsingle : forall t, P (t :: nil)) (Hcons : forall t u us, P (u :: us) -> P (t :: u :: us)), forall ls, P ls.",
            "VernacStartTheoremProof",
            "99b049d30d28312eb580abb27d5833bdd6f3aceb"
        ],
        [
            "induction ls; eauto.",
            "VernacExtend",
            "7a1d687594f10631410ad18c77d4ebec7ef5fc1f"
        ],
        [
            "destruct ls.",
            "VernacExtend",
            "4acd3e1f2c45e2d50b3a43010af8b1bb5fce525e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma list_rev_ind : forall T (P : list T -> Prop), P nil -> (forall l ls, P ls -> P (ls ++ l :: nil)) -> forall ls, P ls.",
            "VernacStartTheoremProof",
            "1ec57a84991fd78c3d11c2aeba6bc22d852a73d9"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- rev_involutive.",
            "VernacExtend",
            "edf9fe5c2350b345e319dc1552423468d9684ab1"
        ],
        [
            "induction (rev ls).",
            "VernacExtend",
            "c4eba84259256e178f2c1e06df1a99d08313e780"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section AllB.",
            "VernacBeginSection",
            "d26b779a3c786bb5e7c9161e3e81e3b9b39d6dde"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable p : T -> bool.",
            "VernacAssumption",
            "b3b5b90950aa4904a62d72c323b8d15c74b505e5"
        ],
        [
            "Fixpoint allb (ls : list T) : bool := match ls with | nil => true | l :: ls => if p l then allb ls else false end.",
            "VernacFixpoint",
            "f88ec7096e2fb94a92f28384fe29e1a59c430647"
        ],
        [
            "Fixpoint anyb (ls : list T) : bool := match ls with | nil => false | l :: ls => if p l then true else anyb ls end.",
            "VernacFixpoint",
            "2d3ada3c28435f87b597a98ae52ac0734ed24ce9"
        ],
        [
            "End AllB.",
            "VernacEndSegment",
            "cbed712948f47a8576e53d3d52694b9f52fb9fe8"
        ],
        [
            "Lemma Forall_map : forall T U (f : T -> U) P ls, Forall P (List.map f ls) <-> Forall (fun x => P (f x)) ls.",
            "VernacStartTheoremProof",
            "622525d4987387fa5c79081d3e9bcea469d50eb6"
        ],
        [
            "induction ls; simpl.",
            "VernacExtend",
            "c3e74e5f1374f8c5653af3ee6835ae9bd7992a05"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; intros; constructor.",
            "VernacExtend",
            "0adc9a9e9b42949188b50144c05f71f64c416d44"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; inversion 1; intros; subst; constructor; auto.",
            "VernacExtend",
            "08f2300474803d3d4d92c9e323bca1b2195143d6"
        ],
        [
            "apply IHls.",
            "VernacExtend",
            "521c5bc960ab53ae77d7f9b623c222f4f840a7d8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply IHls.",
            "VernacExtend",
            "521c5bc960ab53ae77d7f9b623c222f4f840a7d8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_cons_iff : forall (T : Type) (P : T -> Prop) a b, Forall P (a :: b) <-> (P a /\\ Forall P b).",
            "VernacStartTheoremProof",
            "1e63c57c0187434dbc4d3baf80ec90661e68655f"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "inversion 1; auto.",
            "VernacExtend",
            "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
        ],
        [
            "destruct 1; constructor; auto.",
            "VernacExtend",
            "6a698e73a0eae18adb1256fa8723023daf0c1987"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Forall_nil_iff : forall (T : Type) (P : T -> Prop), Forall P nil <-> True.",
            "VernacStartTheoremProof",
            "27cb6b4190bf33374d67a6b6ff1b3348f444ecd7"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Foldable_list {T} : Foldable (list T) T := fun _ f x ls => fold_right f x ls.",
            "VernacInstance",
            "b8b507cdeb19bf099ef832d58d6a674c9e866ede"
        ],
        [
            "Require Import ExtLib.Structures.Traversable.",
            "VernacRequire",
            "960e946be721fbcf466381fc3fb0681a9ee8c77d"
        ],
        [
            "Require Import ExtLib.Structures.Functor.",
            "VernacRequire",
            "3da96fef886011735d53bdbc91b94d8e7f273e3d"
        ],
        [
            "Require Import ExtLib.Structures.Monad.",
            "VernacRequire",
            "2bd4e71df10ff06ce34a2ee9719255d48171c518"
        ],
        [
            "Require Import ExtLib.Structures.Applicative.",
            "VernacRequire",
            "38d5e96c84d9974586229edc9a3792bcc25d743e"
        ],
        [
            "Section traversable.",
            "VernacBeginSection",
            "40e87180d487c02799d19d97c297017d4ef6f47a"
        ],
        [
            "Polymorphic Context {F : Type -> Type}.",
            "VernacContext",
            "99b83b8a044b392adb732c962283a0a13c705b24"
        ],
        [
            "Polymorphic Context {Applicative_F : Applicative F}.",
            "VernacContext",
            "0fea5c347944574ad4e775b7e172c6ba95e0520e"
        ],
        [
            "Polymorphic Context {A B : Type}.",
            "VernacContext",
            "783ff7755901cad78c868451d70a93d83f55242c"
        ],
        [
            "Polymorphic Variable f : A -> F B.",
            "VernacAssumption",
            "4bc681a198ce3d9ae4da928268c2afa4e65f4153"
        ],
        [
            "Polymorphic Fixpoint mapT_list (ls : list A) : F (list B) := match ls with | nil => pure nil | l :: ls => ap (ap (pure (@cons B)) (f l)) (mapT_list ls) end.",
            "VernacFixpoint",
            "ea8a73afc2b0158c838c718c17eb3cbf111555e5"
        ],
        [
            "End traversable.",
            "VernacEndSegment",
            "da935ffe301b5a80e8a338c4af4ec2776b4d716c"
        ],
        [
            "Global Instance Traversable_list : Traversable list := { mapT := @mapT_list }.",
            "VernacInstance",
            "f9d66da2dfee5da4d156543477c847ba663ff6c0"
        ],
        [
            "Global Instance Monad_list : Monad list := { ret := fun _ x => x :: nil ; bind := fun _ _ x f => List.fold_right (fun x acc => f x ++ acc) nil x }.",
            "VernacInstance",
            "59af7696515158dbd17a21c9bac68043562e64f9"
        ],
        [
            "Section list.",
            "VernacBeginSection",
            "55c5e5cdc2ef6f05abaf90e58eebc28ef0301eaf"
        ],
        [
            "Inductive R_list_len {T} : list T -> list T -> Prop := | R_l_len : forall n m, length n < length m -> R_list_len n m.",
            "VernacInductive",
            "d66de35d67fda6a6d791a116604fdbc67ebdbf33"
        ],
        [
            "Theorem wf_R_list_len T : well_founded (@R_list_len T).",
            "VernacStartTheoremProof",
            "e82cf8367e68a93e64923123a7a08ea927038982"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "refine (@Fix _ _ Nat.wf_R_lt (fun n : nat => forall ls : list T, n = length ls -> Acc R_list_len ls) (fun x rec ls pfls => Acc_intro _ _) _ _ refl_equal).",
            "VernacExtend",
            "24ed2b8ca9f2e0e169bf4bc0ee75d9aafad4e7ec"
        ],
        [
            "refine ( match ls as ls return x = length ls -> forall z : list T, R_list_len z ls -> Acc R_list_len z with | nil => fun (pfls : x = 0) z pf => _ | cons l ls => fun pfls z pf => rec _ (match pf in R_list_len xs ys return x = length ys -> Nat.R_nat_lt (length xs) x with | R_l_len n m pf' => fun pf_eq => match eq_sym pf_eq in _ = x return Nat.R_nat_lt (length n) x with | refl_equal => Nat.R_lt pf' end end pfls) _ eq_refl end pfls).",
            "VernacExtend",
            "5c1578ab89d8de2b7e635b9fc7aa54a873f9eb6c"
        ],
        [
            "clear - pf; abstract (inversion pf; subst; simpl in *; inversion H).",
            "VernacExtend",
            "44b0708efadb4a96f8c8eee5b2834057191c082c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End list.",
            "VernacEndSegment",
            "d3b01f54e3e70a6c9b3a9a6ae3d707d933a321f1"
        ],
        [
            "Definition Monoid_list_app {T} : Monoid (list T) := {| monoid_plus := @List.app _ ; monoid_unit := @nil _ |}.",
            "VernacDefinition",
            "c897f13071268354ba57e5ccdf2fccec720ab4b0"
        ],
        [
            "Section ListEq.",
            "VernacBeginSection",
            "e653093af6345f4c329510d8bf9a03ee20b0783e"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable EDT : RelDec (@eq T).",
            "VernacAssumption",
            "4e7537d6f710dc562f1f65d8b7d9753b0ec75826"
        ],
        [
            "Fixpoint list_eqb (ls rs : list T) : bool := match ls , rs with | nil , nil => true | cons l ls , cons r rs => if l ?[ eq ] r then list_eqb ls rs else false | _ , _ => false end.",
            "VernacFixpoint",
            "715b1f08f583919246853870de8bfdcb0b4123d8"
        ],
        [
            "Global Instance RelDec_eq_list : RelDec (@eq (list T)) := { rel_dec := list_eqb }.",
            "VernacInstance",
            "c3273a38d515e9aff48b007677fba942960feeb7"
        ],
        [
            "Variable EDCT : RelDec_Correct EDT.",
            "VernacAssumption",
            "aff316bf180903c2962457217cbc7de70ff4501b"
        ],
        [
            "Global Instance RelDec_Correct_eq_list : RelDec_Correct RelDec_eq_list.",
            "VernacInstance",
            "9b70e7efa3a62f8480e487db8b4cad599ca7163f"
        ],
        [
            "constructor; induction x; destruct y; split; simpl in *; intros; repeat match goal with | [ H : context [ rel_dec ?X ?Y ] |- _ ] => consider (rel_dec X Y); intros; subst | [ |- context [ rel_dec ?X ?Y ] ] => consider (rel_dec X Y); intros; subst end; try solve [ auto | exfalso; clear - H; inversion H ].",
            "VernacExtend",
            "312812649f49bdb0fa23146b307bd5f5dc0a954f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "eapply IHx.",
            "VernacExtend",
            "11969b30fcf91e7a725fecf1ff5aec5dc4d980c9"
        ],
        [
            "eapply H0.",
            "VernacExtend",
            "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply IHx.",
            "VernacExtend",
            "11969b30fcf91e7a725fecf1ff5aec5dc4d980c9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "eapply H0.",
            "VernacExtend",
            "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ListEq.",
            "VernacEndSegment",
            "7d0fd2d109e34adce16c081a135fcbd6bab2b7bc"
        ],
        [
            "Global Instance Injective_cons T (a : T) b c d : Injective (a :: b = c :: d).",
            "VernacInstance",
            "969709f04f586c7018d42ed8894729693c639f8e"
        ],
        [
            "refine {| result := a = c /\\ b = d |}.",
            "VernacExtend",
            "c69434affda40b49474bf8a23ace3ceacf71d991"
        ],
        [
            "inversion 1; auto.",
            "VernacExtend",
            "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_cons_nil T (a : T) b : Injective (a :: b = nil).",
            "VernacInstance",
            "e023b73f2e09dd4aeba461658fa675deee0cfee5"
        ],
        [
            "refine {| result := False |}.",
            "VernacExtend",
            "cb893709758152a11aaf4157ec1289e8802959ea"
        ],
        [
            "inversion 1; auto.",
            "VernacExtend",
            "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_nil_cons T (a : T) b : Injective (nil = a :: b).",
            "VernacInstance",
            "c0a697a31d4b451ac852d410271996c9a77edc24"
        ],
        [
            "refine {| result := False |}.",
            "VernacExtend",
            "cb893709758152a11aaf4157ec1289e8802959ea"
        ],
        [
            "inversion 1; auto.",
            "VernacExtend",
            "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_nil_nil T : Injective (nil = @nil T).",
            "VernacInstance",
            "ddf6d80f02af26ed60a5c7d1b911479f7e363f44"
        ],
        [
            "refine {| result := True |}.",
            "VernacExtend",
            "ae999b1c934569b90d53c6416b04b5c123e31454"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_app_cons {T} (a : list T) b c d : Injective (a ++ b :: nil = (c ++ d :: nil)).",
            "VernacInstance",
            "2c40e6060ce819673d7c167f6e9735e04b6401fc"
        ],
        [
            "refine {| result := a = c /\\ b = d |}.",
            "VernacExtend",
            "c69434affda40b49474bf8a23ace3ceacf71d991"
        ],
        [
            "eapply app_inj_tail.",
            "VernacExtend",
            "89ffb8258a1ceac49bf949c63115d49dde45126e"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_app_same_L {T} (a : list T) b c : Injective (b ++ a = b ++ c).",
            "VernacInstance",
            "4a45a91f6dbc175856e7bf9e28b4ee3109ce6801"
        ],
        [
            "refine {| result := a = c |}.",
            "VernacExtend",
            "a7182209ad711d0ec4ce9fbb53fe6128abd2bcf1"
        ],
        [
            "apply app_inv_head.",
            "VernacExtend",
            "eb269dfe017c9b0b46ed1ec61a5e04bae67feb45"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_app_same_R {T} (a : list T) b c : Injective (a ++ b = c ++ b).",
            "VernacInstance",
            "ecce30deacdc8fbc2681ff9a8ceb3b289e5b5557"
        ],
        [
            "refine {| result := a = c |}.",
            "VernacExtend",
            "a7182209ad711d0ec4ce9fbb53fe6128abd2bcf1"
        ],
        [
            "apply app_inv_tail.",
            "VernacExtend",
            "13296a939f73c52326e91f44ee6709b762c32f5d"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma eq_list_eq : forall T (a b : T) (pf : a = b) (F : _ -> Type) val, match pf in _ = x return list (F x) with | eq_refl => val end = map (fun val => match pf in _ = x return F x with | eq_refl => val end) val.",
            "VernacStartTheoremProof",
            "2d5f11d83718d83da32bd06d4f55562077bc14d0"
        ],
        [
            "destruct pf.",
            "VernacExtend",
            "ea3b43004696f63e8850c4fbcd23f1da87044dae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite map_id.",
            "VernacExtend",
            "42dc0ef2e3e1770ef1215eb4c734fdff14713c30"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite eq_list_eq : eq_rw.",
            "VernacExtend",
            "9eb4dbf84dd1b8265652614df1261f55cfac5538"
        ],
        [
            "Export Coq.Lists.List.",
            "VernacImport",
            "07916205caca333a42289e2f7f04a5a98b97a8fc"
        ]
    ],
    "proofs": [
        {
            "name": "EqDec_list",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold Equivalence.equiv, RelationClasses.complement.",
                        "VernacExtend",
                        "1dd1074c95f8b0229b7f87d16783aabcf34f583d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (x = y -> False) with (x <> y).",
                        "VernacExtend",
                        "3dcb66b6a64b25d165df61c6c2bbbbd34a0d5b31"
                    ]
                },
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "eapply EqDec_T.",
                        "VernacExtend",
                        "02513c539d9349d46635cb2cb085c0850e7866c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_ind_singleton",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "induction ls; eauto.",
                        "VernacExtend",
                        "7a1d687594f10631410ad18c77d4ebec7ef5fc1f"
                    ]
                },
                {
                    "command": [
                        "destruct ls.",
                        "VernacExtend",
                        "4acd3e1f2c45e2d50b3a43010af8b1bb5fce525e"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_rev_ind",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- rev_involutive.",
                        "VernacExtend",
                        "edf9fe5c2350b345e319dc1552423468d9684ab1"
                    ]
                },
                {
                    "command": [
                        "induction (rev ls).",
                        "VernacExtend",
                        "c4eba84259256e178f2c1e06df1a99d08313e780"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_map",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "induction ls; simpl.",
                        "VernacExtend",
                        "c3e74e5f1374f8c5653af3ee6835ae9bd7992a05"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; intros; constructor.",
                        "VernacExtend",
                        "0adc9a9e9b42949188b50144c05f71f64c416d44"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; inversion 1; intros; subst; constructor; auto.",
                        "VernacExtend",
                        "08f2300474803d3d4d92c9e323bca1b2195143d6"
                    ]
                },
                {
                    "command": [
                        "apply IHls.",
                        "VernacExtend",
                        "521c5bc960ab53ae77d7f9b623c222f4f840a7d8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply IHls.",
                        "VernacExtend",
                        "521c5bc960ab53ae77d7f9b623c222f4f840a7d8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_cons_iff",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "inversion 1; auto.",
                        "VernacExtend",
                        "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
                    ]
                },
                {
                    "command": [
                        "destruct 1; constructor; auto.",
                        "VernacExtend",
                        "6a698e73a0eae18adb1256fa8723023daf0c1987"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Forall_nil_iff",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wf_R_list_len",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "refine (@Fix _ _ Nat.wf_R_lt (fun n : nat => forall ls : list T, n = length ls -> Acc R_list_len ls) (fun x rec ls pfls => Acc_intro _ _) _ _ refl_equal).",
                        "VernacExtend",
                        "24ed2b8ca9f2e0e169bf4bc0ee75d9aafad4e7ec"
                    ]
                },
                {
                    "command": [
                        "refine ( match ls as ls return x = length ls -> forall z : list T, R_list_len z ls -> Acc R_list_len z with | nil => fun (pfls : x = 0) z pf => _ | cons l ls => fun pfls z pf => rec _ (match pf in R_list_len xs ys return x = length ys -> Nat.R_nat_lt (length xs) x with | R_l_len n m pf' => fun pf_eq => match eq_sym pf_eq in _ = x return Nat.R_nat_lt (length n) x with | refl_equal => Nat.R_lt pf' end end pfls) _ eq_refl end pfls).",
                        "VernacExtend",
                        "5c1578ab89d8de2b7e635b9fc7aa54a873f9eb6c"
                    ]
                },
                {
                    "command": [
                        "clear - pf; abstract (inversion pf; subst; simpl in *; inversion H).",
                        "VernacExtend",
                        "44b0708efadb4a96f8c8eee5b2834057191c082c"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "RelDec_Correct_eq_list",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "constructor; induction x; destruct y; split; simpl in *; intros; repeat match goal with | [ H : context [ rel_dec ?X ?Y ] |- _ ] => consider (rel_dec X Y); intros; subst | [ |- context [ rel_dec ?X ?Y ] ] => consider (rel_dec X Y); intros; subst end; try solve [ auto | exfalso; clear - H; inversion H ].",
                        "VernacExtend",
                        "312812649f49bdb0fa23146b307bd5f5dc0a954f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "eapply IHx.",
                        "VernacExtend",
                        "11969b30fcf91e7a725fecf1ff5aec5dc4d980c9"
                    ]
                },
                {
                    "command": [
                        "eapply H0.",
                        "VernacExtend",
                        "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "eapply IHx.",
                        "VernacExtend",
                        "11969b30fcf91e7a725fecf1ff5aec5dc4d980c9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "eapply H0.",
                        "VernacExtend",
                        "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Injective_cons",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "refine {| result := a = c /\\ b = d |}.",
                        "VernacExtend",
                        "c69434affda40b49474bf8a23ace3ceacf71d991"
                    ]
                },
                {
                    "command": [
                        "inversion 1; auto.",
                        "VernacExtend",
                        "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_cons_nil",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "refine {| result := False |}.",
                        "VernacExtend",
                        "cb893709758152a11aaf4157ec1289e8802959ea"
                    ]
                },
                {
                    "command": [
                        "inversion 1; auto.",
                        "VernacExtend",
                        "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_nil_cons",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "refine {| result := False |}.",
                        "VernacExtend",
                        "cb893709758152a11aaf4157ec1289e8802959ea"
                    ]
                },
                {
                    "command": [
                        "inversion 1; auto.",
                        "VernacExtend",
                        "f653c86d2f01fc17c30c268f255ec7b8b3cbf933"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_nil_nil",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "refine {| result := True |}.",
                        "VernacExtend",
                        "ae999b1c934569b90d53c6416b04b5c123e31454"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_app_cons",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "refine {| result := a = c /\\ b = d |}.",
                        "VernacExtend",
                        "c69434affda40b49474bf8a23ace3ceacf71d991"
                    ]
                },
                {
                    "command": [
                        "eapply app_inj_tail.",
                        "VernacExtend",
                        "89ffb8258a1ceac49bf949c63115d49dde45126e"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_app_same_L",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "refine {| result := a = c |}.",
                        "VernacExtend",
                        "a7182209ad711d0ec4ce9fbb53fe6128abd2bcf1"
                    ]
                },
                {
                    "command": [
                        "apply app_inv_head.",
                        "VernacExtend",
                        "eb269dfe017c9b0b46ed1ec61a5e04bae67feb45"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_app_same_R",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "refine {| result := a = c |}.",
                        "VernacExtend",
                        "a7182209ad711d0ec4ce9fbb53fe6128abd2bcf1"
                    ]
                },
                {
                    "command": [
                        "apply app_inv_tail.",
                        "VernacExtend",
                        "13296a939f73c52326e91f44ee6709b762c32f5d"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eq_list_eq",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "destruct pf.",
                        "VernacExtend",
                        "ea3b43004696f63e8850c4fbcd23f1da87044dae"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite map_id.",
                        "VernacExtend",
                        "42dc0ef2e3e1770ef1215eb4c734fdff14713c30"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}