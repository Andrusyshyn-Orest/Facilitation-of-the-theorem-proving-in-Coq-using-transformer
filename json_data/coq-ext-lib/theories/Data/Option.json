{
    "filename": "theories/Data/Option.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Require Import Coq.Relations.Relation_Definitions.",
            "VernacRequire",
            "e90e5840c35495258b335912cbf63f3e29ec520e"
        ],
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import Coq.Classes.Morphisms.",
            "VernacRequire",
            "d6f94fe62e68e8d5e6a6c6513b6c2e04f2b5d71a"
        ],
        [
            "Require Import ExtLib.Core.Type.",
            "VernacRequire",
            "f386eaa7bb737409baadc3f90d39f8f6cd79d7fe"
        ],
        [
            "Require Import ExtLib.Core.RelDec.",
            "VernacRequire",
            "0e3bcdc14736b545ca698ea9a09e10feafbc33d4"
        ],
        [
            "Require Import ExtLib.Structures.Reducible.",
            "VernacRequire",
            "3d0145326c8c36a3bac1544c5c8e01d880d61b29"
        ],
        [
            "Require Import ExtLib.Structures.Traversable.",
            "VernacRequire",
            "960e946be721fbcf466381fc3fb0681a9ee8c77d"
        ],
        [
            "Require Import ExtLib.Structures.Applicative.",
            "VernacRequire",
            "38d5e96c84d9974586229edc9a3792bcc25d743e"
        ],
        [
            "Require Import ExtLib.Structures.Functor.",
            "VernacRequire",
            "3da96fef886011735d53bdbc91b94d8e7f273e3d"
        ],
        [
            "Require Import ExtLib.Structures.FunctorLaws.",
            "VernacRequire",
            "febc8beda145d3f273b2093041b365dac8ad6da9"
        ],
        [
            "Require Import ExtLib.Structures.Proper.",
            "VernacRequire",
            "90a28091c24adf7c35b9bae07f050e30d13627a3"
        ],
        [
            "Require Import ExtLib.Data.Fun.",
            "VernacRequire",
            "06f8248a51a161a9650deb7ff884269e90f7417e"
        ],
        [
            "Require Import ExtLib.Tactics.Injection.",
            "VernacRequire",
            "775eac3c69d154f6fee4c7e10d0af17b678b5153"
        ],
        [
            "Require Import ExtLib.Tactics.Consider.",
            "VernacRequire",
            "d7f1290b398c3a51484b77ae4b362f89ed2a3ede"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Global Instance Foldable_option {T} : Foldable (option T) T := fun _ f d v => match v with | None => d | Some x => f x d end.",
            "VernacInstance",
            "f56a3a2d47f1cd301efcbf6d3d601ef29fc9147e"
        ],
        [
            "Global Instance Traversable_option : Traversable option := {| mapT := fun F _ _ _ f o => match o with | None => pure None | Some o => ap (pure (@Some _)) (f o) end |}.",
            "VernacInstance",
            "755f6c83e9f129dab1be40e33a8a061cd0ffd617"
        ],
        [
            "Global Instance Applicative_option : Applicative option := {| pure := @Some ; ap := fun _ _ f x => match f , x with | Some f , Some x => Some (f x) | _ , _ => None end |}.",
            "VernacInstance",
            "61815f654201ae95e6a264ec14cfed33188b75c3"
        ],
        [
            "Global Instance Functor_option : Functor option := {| fmap := fun _ _ f x => match x with | None => None | Some x => Some (f x) end |}.",
            "VernacInstance",
            "ae1cdfb84f6ac811113b01e6d055de63f4d3b830"
        ],
        [
            "Section relation.",
            "VernacBeginSection",
            "4a3eb6dfb82b0ac190f5c0f1c810d2fd3b2d8768"
        ],
        [
            "Context {T : Type}.",
            "VernacContext",
            "be9a7a6cbe25485b314331383c8d6eddddd780fd"
        ],
        [
            "Variable (R : relation T).",
            "VernacAssumption",
            "7dc53c8ea3aff6986c5b6582b9e3297cbb82296a"
        ],
        [
            "Inductive Roption : Relation_Definitions.relation (option T) := | Roption_None : Roption None None | Roption_Some : forall x y, R x y -> Roption (Some x) (Some y).",
            "VernacInductive",
            "229043bb2302bb19c651fcab71f311e94b3abaf3"
        ],
        [
            "Lemma Reflexive_Roption : Reflexive R -> Reflexive Roption.",
            "VernacStartTheoremProof",
            "784aaa540df9f5f2cfce64cf85c38991102be394"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "destruct x; try constructor; auto.",
            "VernacExtend",
            "530adf587e711a1f187effabe7bc02a346163c58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Symmetric_Roption : Symmetric R -> Symmetric Roption.",
            "VernacStartTheoremProof",
            "5b4dffa1bae5539a1fa930c9e1ae765c35de73cd"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0; constructor.",
            "VernacExtend",
            "5fe34f6107c231fe97398284041766a856470beb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Transitive_Roption : Transitive R -> Transitive Roption.",
            "VernacStartTheoremProof",
            "0397c5d01cfbbb24c73d9747d9fd0b28d9a5bd55"
        ],
        [
            "clear.",
            "VernacExtend",
            "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0; auto.",
            "VernacExtend",
            "9ebda477a89633134ca4d54ad2c1cf67712003c4"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "eapply H; eassumption.",
            "VernacExtend",
            "c87098578ce2e7fb38ad54da49e48186e356bc38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Injective_Roption_None : Injective (Roption None None).",
            "VernacInstance",
            "2040767a7bf0bdaee7ed878958748d78d8ffadd4"
        ],
        [
            "refine {| result := True |}.",
            "VernacExtend",
            "ae999b1c934569b90d53c6416b04b5c123e31454"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_Roption_None_Some a : Injective (Roption None (Some a)).",
            "VernacInstance",
            "d519583341a55d0ce08be00df86b61fac29361f9"
        ],
        [
            "refine {| result := False |}.",
            "VernacExtend",
            "cb893709758152a11aaf4157ec1289e8802959ea"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_Roption_Some_None a : Injective (Roption (Some a) None).",
            "VernacInstance",
            "d0de3f340fe144b965459f1d91dfc8025d687639"
        ],
        [
            "refine {| result := False |}.",
            "VernacExtend",
            "cb893709758152a11aaf4157ec1289e8802959ea"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_Roption_Some_Some a b : Injective (Roption (Some a) (Some b)).",
            "VernacInstance",
            "7b57a20bbdaafa9b37dfe742a1f9826f86907aa1"
        ],
        [
            "refine {| result := R a b |}.",
            "VernacExtend",
            "e472af962884843c3808a60dbafd2ea8d605e30e"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_Proper_Roption_Some x : Injective (Proper Roption (Some x)).",
            "VernacInstance",
            "5aaf1200df57091b92343b7c72712be484a80ec5"
        ],
        [
            "refine {| result := R x x |}.",
            "VernacExtend",
            "9a02dffbd86018be848ecc4821ac54681bf8cfc2"
        ],
        [
            "abstract (inversion 1; assumption).",
            "VernacExtend",
            "71512b75651b106938f1321170e4dc9e75870ae2"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End relation.",
            "VernacEndSegment",
            "a1772d50f9a7ab01b5f1520ed0fb0f8504c697f3"
        ],
        [
            "Section type.",
            "VernacBeginSection",
            "2c34aef55fed16ddde4b4d4655f4ae858f4c50a9"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable tT : type T.",
            "VernacAssumption",
            "2b4af9d5a52083cf01943692fbb6d5ce475117c9"
        ],
        [
            "Global Instance type_option : type (option T) := { equal := Roption equal ; proper := fun x => match x with | None => True | Some y => proper y end }.",
            "VernacInstance",
            "355506b08921ef32e6900a8397908adc0cb9b540"
        ],
        [
            "Variable tTOk : typeOk tT.",
            "VernacAssumption",
            "4bc2ca3acd9288e0a18b129e977d391d309ccc28"
        ],
        [
            "Global Instance typeOk_option : typeOk type_option.",
            "VernacInstance",
            "8deb5844e459ebc9af59eeb56a467ed25f6e3414"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "split; constructor.",
            "VernacExtend",
            "a4eee33b07a871264fa4a3f83ef4d82d5e66f990"
        ],
        [
            "split; simpl; eapply only_proper; eauto.",
            "VernacExtend",
            "160436a383ee5caa70f343c95799a4d708d87593"
        ],
        [
            "symmetry; eauto.",
            "VernacExtend",
            "7559cd13d1f61ba545f11383c961001d33890cf6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "eapply preflexive; [ | eapply H ].",
            "VernacExtend",
            "34bcb6c08d646dd37bb400f4e7e02066ac52dd93"
        ],
        [
            "eapply equiv_prefl; auto.",
            "VernacExtend",
            "2f2c56591d0a75f967c65e5f02ab500b3944d082"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "destruct 1.",
            "VernacExtend",
            "0e61c29dbe9a16af1faa0807bdb22c467076a9d2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "destruct 1; inversion 1; subst.",
            "VernacExtend",
            "e13bafd8c62e6675696f3940ab2d194cef15bc4d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "etransitivity; eauto.",
            "VernacExtend",
            "9a7a03ac784b775f6203b3104ab84c89b908a8ba"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance proper_Some : proper (@Some T).",
            "VernacInstance",
            "1b4e1f2b8bb1e6baf9629cc09d6862c45f979666"
        ],
        [
            "constructor; assumption.",
            "VernacExtend",
            "a36f2a931681c9f1611aa56f1a810ad0f6afb946"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance proper_None : proper (@None T).",
            "VernacInstance",
            "ef7f2071a2546e38512099e42c3015fffa15306a"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End type.",
            "VernacEndSegment",
            "8d0f4c701b8711538af57173787aa08f3663856b"
        ],
        [
            "Global Instance Injective_Some (T : Type) (a b : T) : Injective (Some a = Some b) := { result := a = b ; injection := fun P : Some a = Some b => match P with | eq_refl => eq_refl end }.",
            "VernacInstance",
            "5bbacaa57300f322eb904515da35b98dc930b867"
        ],
        [
            "Require ExtLib.Core.EquivDec.",
            "VernacRequire",
            "881bde2239942d6f4054325060e134bce372d2b5"
        ],
        [
            "Global Instance EqDec_option (T : Type) (EDT : EquivDec.EqDec T (@eq T)) : EquivDec.EqDec (option T) (@eq _).",
            "VernacInstance",
            "2991556c2d98e91dcc48238cb4adeaea26b89798"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "unfold Equivalence.equiv, RelationClasses.complement.",
            "VernacExtend",
            "1dd1074c95f8b0229b7f87d16783aabcf34f583d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change (x = y -> False) with (x <> y).",
            "VernacExtend",
            "3dcb66b6a64b25d165df61c6c2bbbbd34a0d5b31"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "apply EDT.",
            "VernacExtend",
            "fe94346f96ce2e9007ded6f548af6152017cf9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section OptionEq.",
            "VernacBeginSection",
            "ffe5d938c7de1e57250cc501a31eaa90a5e3aa12"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable EDT : RelDec (@eq T).",
            "VernacAssumption",
            "4e7537d6f710dc562f1f65d8b7d9753b0ec75826"
        ],
        [
            "Global Instance RelDec_eq_option : RelDec (@eq (option T)) := { rel_dec := fun x y => match x , y with | None , None => true | Some x , Some y => eq_dec x y | _ , _ => false end }.",
            "VernacInstance",
            "2b213b94e488732a0e2e099132f12e81e2fd9de3"
        ],
        [
            "Variable EDCT : RelDec_Correct EDT.",
            "VernacAssumption",
            "aff316bf180903c2962457217cbc7de70ff4501b"
        ],
        [
            "Global Instance RelDec_Correct_eq_option : RelDec_Correct RelDec_eq_option.",
            "VernacInstance",
            "3ea530551d36990962b72ab89ae45c472b976ef2"
        ],
        [
            "constructor; destruct x; destruct y; split; simpl in *; intros; try congruence; f_equal; try match goal with | [ H : context [ eq_dec ?X ?Y ] |- _ ] => consider (eq_dec X Y) | [ |- context [ eq_dec ?X ?Y ] ] => consider (eq_dec X Y) end; auto; congruence.",
            "VernacExtend",
            "54a81b55ba9d240c5c3962dc71142792bde8e2a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OptionEq.",
            "VernacEndSegment",
            "987ee63e10de4ef3facf8d5873bf2c0c83c1f750"
        ],
        [
            "Lemma eq_option_eq : forall T (a b : T) (pf : a = b) (F : _ -> Type) val, match pf in _ = x return option (F x) with | eq_refl => val end = match val with | None => None | Some val => Some match pf in _ = x return F x with | eq_refl => val end end.",
            "VernacStartTheoremProof",
            "ca120807b3d57f9ba765eb597be3cfbfd6a868f3"
        ],
        [
            "destruct pf.",
            "VernacExtend",
            "ea3b43004696f63e8850c4fbcd23f1da87044dae"
        ],
        [
            "destruct val; reflexivity.",
            "VernacExtend",
            "001e6ab122c0cc44e0135cd8026d9af2c043eff2"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Hint Rewrite eq_option_eq : eq_rw.",
            "VernacExtend",
            "d4068236a5a7185932658daa4a9a3389b2b8e1a1"
        ]
    ],
    "proofs": [
        {
            "name": "Reflexive_Roption",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "destruct x; try constructor; auto.",
                        "VernacExtend",
                        "530adf587e711a1f187effabe7bc02a346163c58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Symmetric_Roption",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0; constructor.",
                        "VernacExtend",
                        "5fe34f6107c231fe97398284041766a856470beb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Transitive_Roption",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "clear.",
                        "VernacExtend",
                        "086ee0db0bdefcfa1ec15bb5cd44d451de64c569"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0; auto.",
                        "VernacExtend",
                        "9ebda477a89633134ca4d54ad2c1cf67712003c4"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "eapply H; eassumption.",
                        "VernacExtend",
                        "c87098578ce2e7fb38ad54da49e48186e356bc38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Injective_Roption_None",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "refine {| result := True |}.",
                        "VernacExtend",
                        "ae999b1c934569b90d53c6416b04b5c123e31454"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_Roption_None_Some",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "refine {| result := False |}.",
                        "VernacExtend",
                        "cb893709758152a11aaf4157ec1289e8802959ea"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_Roption_Some_None",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "refine {| result := False |}.",
                        "VernacExtend",
                        "cb893709758152a11aaf4157ec1289e8802959ea"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_Roption_Some_Some",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "refine {| result := R a b |}.",
                        "VernacExtend",
                        "e472af962884843c3808a60dbafd2ea8d605e30e"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Injective_Proper_Roption_Some",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "refine {| result := R x x |}.",
                        "VernacExtend",
                        "9a02dffbd86018be848ecc4821ac54681bf8cfc2"
                    ]
                },
                {
                    "command": [
                        "abstract (inversion 1; assumption).",
                        "VernacExtend",
                        "71512b75651b106938f1321170e4dc9e75870ae2"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "proper_Some",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "constructor; assumption.",
                        "VernacExtend",
                        "a36f2a931681c9f1611aa56f1a810ad0f6afb946"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "proper_None",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EqDec_option",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "unfold Equivalence.equiv, RelationClasses.complement.",
                        "VernacExtend",
                        "1dd1074c95f8b0229b7f87d16783aabcf34f583d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change (x = y -> False) with (x <> y).",
                        "VernacExtend",
                        "3dcb66b6a64b25d165df61c6c2bbbbd34a0d5b31"
                    ]
                },
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "apply EDT.",
                        "VernacExtend",
                        "fe94346f96ce2e9007ded6f548af6152017cf9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RelDec_Correct_eq_option",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "constructor; destruct x; destruct y; split; simpl in *; intros; try congruence; f_equal; try match goal with | [ H : context [ eq_dec ?X ?Y ] |- _ ] => consider (eq_dec X Y) | [ |- context [ eq_dec ?X ?Y ] ] => consider (eq_dec X Y) end; auto; congruence.",
                        "VernacExtend",
                        "54a81b55ba9d240c5c3962dc71142792bde8e2a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_option_eq",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "destruct pf.",
                        "VernacExtend",
                        "ea3b43004696f63e8850c4fbcd23f1da87044dae"
                    ]
                },
                {
                    "command": [
                        "destruct val; reflexivity.",
                        "VernacExtend",
                        "001e6ab122c0cc44e0135cd8026d9af2c043eff2"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}