{
    "filename": "theories/Data/SumN.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Require Import ExtLib.Data.Map.FMapPositive.",
            "VernacRequire",
            "596ba1e6d58c76d29da6533cd84ea91bf038f060"
        ],
        [
            "Require Import ExtLib.Data.Eq.",
            "VernacRequire",
            "42312cbcb4a27dfaaa1dd57e4bbc6170ebf401ed"
        ],
        [
            "Require Import ExtLib.Tactics.Injection.",
            "VernacRequire",
            "775eac3c69d154f6fee4c7e10d0af17b678b5153"
        ],
        [
            "Fixpoint pmap_lookup' (ts : pmap Type) (p : positive) : option Type := match p with | xH => pmap_here ts | xI p => pmap_lookup' (pmap_right ts) p | xO p => pmap_lookup' (pmap_left ts) p end.",
            "VernacFixpoint",
            "2422835f7fac9d06bdab9b5df179b5549522d5d2"
        ],
        [
            "Record OneOf (ts : pmap Type) : Type := mkOneOf { index : positive ; value : match pmap_lookup' ts index with | None => Empty_set | Some T => T end }.",
            "VernacInductive",
            "e6a4414227b02477f32b244d74f947a80c51d61e"
        ],
        [
            "Definition Into {ts} {T : Type} (n : positive) (pf : pmap_lookup' ts n = Some T) : T -> OneOf ts := match pf in _ = X return match X with | Some T => T | None => Empty_set end -> OneOf ts with | eq_refl => @mkOneOf ts n end.",
            "VernacDefinition",
            "1ad330342e228761e9a120feb9c17d9f69ecd87c"
        ],
        [
            "Fixpoint asNth' {ts : pmap Type} (p p' : positive) : match pmap_lookup' ts p' with | None => Empty_set | Some T => T end -> option (match pmap_lookup' ts p with | None => Empty_set | Some T => T end) := match p as p , p' as p' return match pmap_lookup' ts p' with | None => Empty_set | Some T => T end -> option (match pmap_lookup' ts p with | None => Empty_set | Some T => T end) with | xH , xH => Some | xI p , xI p' => asNth' p p' | xO p , xO p' => asNth' p p' | _ , _ => fun _ => None end.",
            "VernacFixpoint",
            "c950531674bb5b094eada60a4c5713925ffb36b7"
        ],
        [
            "Definition asNth {ts : pmap Type} (p : positive) (oe : OneOf ts) : option (match pmap_lookup' ts p with | None => Empty_set | Some T => T end) := @asNth' ts p oe.(index ts) oe.(value ts).",
            "VernacDefinition",
            "7a2573ef1986a10d84fd49ddde96006ff931b5fd"
        ],
        [
            "Definition OutOf {ts} {T : Type} (n : positive) (pf : pmap_lookup' ts n = Some T) : OneOf ts -> option T := match pf in _ = X return OneOf ts -> option match X with | None => Empty_set:Type | Some T => T end with | eq_refl => @asNth ts n end.",
            "VernacDefinition",
            "8b1e2975c981b14dc5aa6c601410126e01167a78"
        ],
        [
            "Lemma asNth'_get_lookup : forall p ts v, asNth' (ts:=ts) p p v = Some v.",
            "VernacStartTheoremProof",
            "ca4df3ee49dbdbfb9bfb33c1b6260450b0d26215"
        ],
        [
            "induction p; simpl; intros; auto.",
            "VernacExtend",
            "7263c68e2733d2f1082b53db6d1de62d749bb8a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Outof_Into : forall ts T p pf v, @OutOf ts T p pf (@Into ts T p pf v) = Some v.",
            "VernacStartTheoremProof",
            "b043cb9ffd732fc9f450d071c4409876f062f090"
        ],
        [
            "unfold OutOf, Into.",
            "VernacExtend",
            "75f33a4dbf0412528034be606f1df4728209a3e9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite (eq_Arr_eq pf).",
            "VernacExtend",
            "c7025f04110ac9b27b0bf8de4725ca2107308d39"
        ],
        [
            "repeat rewrite (eq_Const_eq pf).",
            "VernacExtend",
            "9f1d63a273839b1d2efea6c45a37164b86ef1e6a"
        ],
        [
            "repeat rewrite (eq_Const_eq (eq_sym pf)).",
            "VernacExtend",
            "93e38138463ab67b67d19fd4e94eb635755ff2a5"
        ],
        [
            "unfold asNth.",
            "VernacExtend",
            "84dee1cf56b7512e77ad56801e5777af3a596db1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite asNth'_get_lookup.",
            "VernacExtend",
            "290123ee43f15efabf8bd4470ca483bd9d4c6dc5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "generalize dependent (pmap_lookup' ts p).",
            "VernacExtend",
            "e9036d195bd3c0c334e7dd310b722e4fd2f55922"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem asNth_eq : forall ts p oe v, @asNth ts p oe = Some v -> oe = {| index := p ; value := v |}.",
            "VernacStartTheoremProof",
            "33a6522fd9f089723fe3ecc46282779c0de375d2"
        ],
        [
            "unfold asNth.",
            "VernacExtend",
            "84dee1cf56b7512e77ad56801e5777af3a596db1"
        ],
        [
            "destruct oe; simpl.",
            "VernacExtend",
            "218d0d605ee5abac5011faa03ce9d879ed1073a8"
        ],
        [
            "revert value0.",
            "VernacExtend",
            "c3a9a4bd1b885b71db231dec54eaa34af89398a5"
        ],
        [
            "revert index0.",
            "VernacExtend",
            "664fe42b656fc4cad8bdf11afa788c1b055af644"
        ],
        [
            "revert ts.",
            "VernacExtend",
            "324e5fb242bd3b09aaa38c06bb1f11cb9d9272cf"
        ],
        [
            "induction p; destruct index0; simpl; intros; solve [ congruence | eapply IHp in H; inversion H; clear H IHp; subst; auto ].",
            "VernacExtend",
            "eae31f24c1e4158fca99be3ea5172ed22bc35679"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section elim.",
            "VernacBeginSection",
            "60b3a4ddd89fd9051fdeab58525f27b9aa48b83b"
        ],
        [
            "Context {T : Type}.",
            "VernacContext",
            "be9a7a6cbe25485b314331383c8d6eddddd780fd"
        ],
        [
            "Variable F : T -> Type.",
            "VernacAssumption",
            "cd995bd1b1ee87ac12318969893a41f558ba50d2"
        ],
        [
            "Fixpoint pmap_elim (R : Type) (ts : pmap T) : Type := match ts with | Empty => R | Branch None l r => pmap_elim (pmap_elim R r) l | Branch (Some x) l r => F x -> pmap_elim (pmap_elim R r) l end.",
            "VernacFixpoint",
            "56e5c88c9a3f86cee835941ef91868a8a4819f28"
        ],
        [
            "End elim.",
            "VernacEndSegment",
            "4bcd4857bf4482543a4cdddbaf29a6b48a01fd3d"
        ],
        [
            "Fixpoint pmap_lookup'_Empty (p : positive) : pmap_lookup' Empty p = None := match p with | xH => eq_refl | xO p => pmap_lookup'_Empty p | xI p => pmap_lookup'_Empty p end.",
            "VernacFixpoint",
            "c50b9ced5a343a4dad3b97fc7d852db32883afdd"
        ],
        [
            "Definition OneOf_Empty (f : OneOf Empty) : False.",
            "VernacDefinition",
            "ec6408b2cdc04949a9c7bf1c2571db0b13c879f6"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "rewrite pmap_lookup'_Empty in *.",
            "VernacExtend",
            "8d4cd05b76bfae8a3e9d3385a5d19077bc2abcb1"
        ],
        [
            "intuition congruence.",
            "VernacExtend",
            "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma pmap_lookup'_eq p m : pmap_lookup p m = pmap_lookup' m p.",
            "VernacStartTheoremProof",
            "d052a9431647d5173cf8b08b4cdd24c65b0ee8c6"
        ],
        [
            "generalize dependent m.",
            "VernacExtend",
            "cb5344e7f2b46935cd228d14255cfa5d2837cf33"
        ],
        [
            "induction p; intuition.",
            "VernacExtend",
            "ecf445e11720024ae1de7b6d8e3011c367ccc167"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct m.",
            "VernacExtend",
            "8d29a39ed817a734f6646f7b42c80e41363356d4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite pmap_lookup'_Empty.",
            "VernacExtend",
            "b4afd0ca99fba050ad9d00ab6319d697619db0c4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply IHp.",
            "VernacExtend",
            "246d34d2490ae6e017eeeee5e330f76082b9a564"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct m.",
            "VernacExtend",
            "8d29a39ed817a734f6646f7b42c80e41363356d4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite pmap_lookup'_Empty.",
            "VernacExtend",
            "b4afd0ca99fba050ad9d00ab6319d697619db0c4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply IHp.",
            "VernacExtend",
            "246d34d2490ae6e017eeeee5e330f76082b9a564"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Global Instance Injective_OneOf m i1 i2 v1 v2 : Injective (@eq (OneOf m) {| index := i1 ; value := v1 |} {| index := i2 ; value := v2 |}) := { result := exists pf : i2 = i1, v1 = match pf in _ = T return match pmap_lookup' m T with | None => Empty_set | Some T => T end with | eq_refl => v2 end ; injection := fun H => match H in _ = h return exists pf : index _ h = i1 , v1 = match pf in (_ = T) return match pmap_lookup' m T with | Some T0 => T0 | None => Empty_set end with | eq_refl => value _ h end with | eq_refl => @ex_intro _ _ eq_refl eq_refl end }.",
            "VernacInstance",
            "a88885e8fc6a124b240479753d5edb05f4b19c9d"
        ]
    ],
    "proofs": [
        {
            "name": "asNth'_get_lookup",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; intros; auto.",
                        "VernacExtend",
                        "7263c68e2733d2f1082b53db6d1de62d749bb8a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Outof_Into",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "unfold OutOf, Into.",
                        "VernacExtend",
                        "75f33a4dbf0412528034be606f1df4728209a3e9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (eq_Arr_eq pf).",
                        "VernacExtend",
                        "c7025f04110ac9b27b0bf8de4725ca2107308d39"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (eq_Const_eq pf).",
                        "VernacExtend",
                        "9f1d63a273839b1d2efea6c45a37164b86ef1e6a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (eq_Const_eq (eq_sym pf)).",
                        "VernacExtend",
                        "93e38138463ab67b67d19fd4e94eb635755ff2a5"
                    ]
                },
                {
                    "command": [
                        "unfold asNth.",
                        "VernacExtend",
                        "84dee1cf56b7512e77ad56801e5777af3a596db1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite asNth'_get_lookup.",
                        "VernacExtend",
                        "290123ee43f15efabf8bd4470ca483bd9d4c6dc5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "generalize dependent (pmap_lookup' ts p).",
                        "VernacExtend",
                        "e9036d195bd3c0c334e7dd310b722e4fd2f55922"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "asNth_eq",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold asNth.",
                        "VernacExtend",
                        "84dee1cf56b7512e77ad56801e5777af3a596db1"
                    ]
                },
                {
                    "command": [
                        "destruct oe; simpl.",
                        "VernacExtend",
                        "218d0d605ee5abac5011faa03ce9d879ed1073a8"
                    ]
                },
                {
                    "command": [
                        "revert value0.",
                        "VernacExtend",
                        "c3a9a4bd1b885b71db231dec54eaa34af89398a5"
                    ]
                },
                {
                    "command": [
                        "revert index0.",
                        "VernacExtend",
                        "664fe42b656fc4cad8bdf11afa788c1b055af644"
                    ]
                },
                {
                    "command": [
                        "revert ts.",
                        "VernacExtend",
                        "324e5fb242bd3b09aaa38c06bb1f11cb9d9272cf"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct index0; simpl; intros; solve [ congruence | eapply IHp in H; inversion H; clear H IHp; subst; auto ].",
                        "VernacExtend",
                        "eae31f24c1e4158fca99be3ea5172ed22bc35679"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "OneOf_Empty",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "rewrite pmap_lookup'_Empty in *.",
                        "VernacExtend",
                        "8d4cd05b76bfae8a3e9d3385a5d19077bc2abcb1"
                    ]
                },
                {
                    "command": [
                        "intuition congruence.",
                        "VernacExtend",
                        "2cba3542847e3f4ea52f3f62375adc6e8f8f04bc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "pmap_lookup'_eq",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "generalize dependent m.",
                        "VernacExtend",
                        "cb5344e7f2b46935cd228d14255cfa5d2837cf33"
                    ]
                },
                {
                    "command": [
                        "induction p; intuition.",
                        "VernacExtend",
                        "ecf445e11720024ae1de7b6d8e3011c367ccc167"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct m.",
                        "VernacExtend",
                        "8d29a39ed817a734f6646f7b42c80e41363356d4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite pmap_lookup'_Empty.",
                        "VernacExtend",
                        "b4afd0ca99fba050ad9d00ab6319d697619db0c4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply IHp.",
                        "VernacExtend",
                        "246d34d2490ae6e017eeeee5e330f76082b9a564"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct m.",
                        "VernacExtend",
                        "8d29a39ed817a734f6646f7b42c80e41363356d4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite pmap_lookup'_Empty.",
                        "VernacExtend",
                        "b4afd0ca99fba050ad9d00ab6319d697619db0c4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply IHp.",
                        "VernacExtend",
                        "246d34d2490ae6e017eeeee5e330f76082b9a564"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}