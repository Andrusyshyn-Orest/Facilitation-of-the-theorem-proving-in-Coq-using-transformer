{
    "filename": "theories/Relations/TransitiveClosure.v",
    "coq_project": "coq-ext-lib",
    "vernac_cmds": [
        [
            "Require Import Coq.Classes.RelationClasses.",
            "VernacRequire",
            "e1e9fb5bb83f789dcff9c0bfa33e2d359b0caa70"
        ],
        [
            "Require Import Coq.Setoids.Setoid.",
            "VernacRequire",
            "ed2da5d8697eac127536f9938f9ce28f45cd481a"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Set Strict Implicit.",
            "VernacSetOption",
            "6b94f70716dd2a2fc34140a20b87bb0e87225ff4"
        ],
        [
            "Set Asymmetric Patterns.",
            "VernacSetOption",
            "3fcd9e746ba5a1aabd289acfb9ab99bec474567d"
        ],
        [
            "Section parametric.",
            "VernacBeginSection",
            "771dbc9a2646c47453cb294b4888747c271c172c"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable R : T -> T -> Prop.",
            "VernacAssumption",
            "fff44edf137198e570f3b11be7a0bca988ed737f"
        ],
        [
            "Inductive makeRefl (x : T) : T -> Prop := | RRefl : makeRefl x x | RStep : forall y, R x y -> makeRefl x y.",
            "VernacInductive",
            "bbedbd2cd7e3efd9d9259e8cf795edeb3628297f"
        ],
        [
            "Global Instance Refl_makeRefl : Reflexive makeRefl.",
            "VernacInstance",
            "b6f4beef22b7a5a9bb3e4b213ad6c65e55cc36ce"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Refl_makeTrans : Transitive R -> Transitive makeRefl.",
            "VernacInstance",
            "89b00172ad73961c4df9372de7bbf7f15d3a6434"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H0; clear H0; subst; auto.",
            "VernacExtend",
            "ba71fdccc4b7d75ed1ab35eac4d789ceeb9beca6"
        ],
        [
            "inversion H1; clear H1; subst; auto using RStep.",
            "VernacExtend",
            "f02ef3d7a8c0717149b8fbd8766919d27684ba29"
        ],
        [
            "apply RStep.",
            "VernacExtend",
            "1de32bea2a93f86b61ea9eaef95192c8e5d33ef2"
        ],
        [
            "etransitivity; eauto.",
            "VernacExtend",
            "9a7a03ac784b775f6203b3104ab84c89b908a8ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive makeTrans (x y : T) : Prop := | TStep : R x y -> makeTrans x y | TTrans : forall z, makeTrans x z -> makeTrans z y -> makeTrans x y.",
            "VernacInductive",
            "c340f4c26e1b910a42220855525407962f5009fd"
        ],
        [
            "Global Instance Trans_makeTrans : Transitive makeTrans.",
            "VernacInstance",
            "2f8aed844f3c245b73f7faf345f364244962c78a"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intros; eapply TTrans; eassumption.",
            "VernacExtend",
            "fb77d3348e7647befe32f2ea9d0f8bbb33dcfd91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Trans_makeRefl : Reflexive R -> Reflexive makeTrans.",
            "VernacInstance",
            "d9a0be8e43e61832a6e47b8b0c665d1565c73755"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply TStep.",
            "VernacExtend",
            "f052c9882506d8cbf3ef198aa94d807eb0f0d497"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive leftTrans (x y : T) : Prop := | LTFin : R x y -> leftTrans x y | LTStep : forall z, R x z -> leftTrans z y -> leftTrans x y.",
            "VernacInductive",
            "6c9bbb49ec487a37e5e9e247e7491a38f9042834"
        ],
        [
            "Inductive rightTrans (x y : T) : Prop := | RTFin : R x y -> rightTrans x y | RTStep : forall z, rightTrans x z -> R z y -> rightTrans x y.",
            "VernacInductive",
            "784f1020154273b6c36d297934d62f6294aa8ead"
        ],
        [
            "Fixpoint leftTrans_rightTrans_acc x y (l : leftTrans y x) : forall z, rightTrans z y -> rightTrans z x := match l with | LTFin pf => fun z pfR => RTStep pfR pf | LTStep _ pf pfL => fun z pfR => leftTrans_rightTrans_acc pfL (RTStep pfR pf) end.",
            "VernacFixpoint",
            "0a793083815aa51e1cef75d364369fed235f577f"
        ],
        [
            "Fixpoint rightTrans_leftTrans_acc x y (l : rightTrans x y) : forall z, leftTrans y z -> leftTrans x z := match l with | RTFin pf => fun z pfR => LTStep pf pfR | RTStep _ pf pfL => fun z pfR => rightTrans_leftTrans_acc pf (LTStep pfL pfR) end.",
            "VernacFixpoint",
            "321852903e36a0733e5424e560d4024df6d6a3ac"
        ],
        [
            "Theorem leftTrans_rightTrans : forall x y, leftTrans x y <-> rightTrans x y.",
            "VernacStartTheoremProof",
            "c100422af1ea1e50b5ac606d009cca8efbd1cbd8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct 1.",
            "VernacExtend",
            "0e61c29dbe9a16af1faa0807bdb22c467076a9d2"
        ],
        [
            "apply RTFin; assumption.",
            "VernacExtend",
            "378569659916072303067dcae3b564269007ffbf"
        ],
        [
            "eapply leftTrans_rightTrans_acc.",
            "VernacExtend",
            "f0a1780fb5b32c0c05d876ea9caf7eef24326d23"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eapply RTFin.",
            "VernacExtend",
            "042700de1efc6ea7063bd0f2e4b60ae93c67defa"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "destruct 1.",
            "VernacExtend",
            "0e61c29dbe9a16af1faa0807bdb22c467076a9d2"
        ],
        [
            "apply LTFin.",
            "VernacExtend",
            "2361ba0d896711d770b82aede7b348e336aafb03"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "eapply rightTrans_leftTrans_acc.",
            "VernacExtend",
            "ae26f72ef07006809bbcb2fd96a184fe8834be86"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eapply LTFin.",
            "VernacExtend",
            "779ed3b612409c03f07a4c0c216420817d4112eb"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint leftTrans_makeTrans_acc x y (l : leftTrans x y) : makeTrans x y := match l with | LTFin pf => TStep pf | LTStep _ pf pfL => TTrans (TStep pf) (leftTrans_makeTrans_acc pfL) end.",
            "VernacFixpoint",
            "e946edc321b1cc45e4cb804acaf3302fe625035b"
        ],
        [
            "Fixpoint leftTrans_trans x y (l : leftTrans x y) : forall z (r : leftTrans y z), leftTrans x z := match l with | LTFin pf => fun _ pfL => LTStep pf pfL | LTStep _ pf pfL => fun _ pfR => LTStep pf (leftTrans_trans pfL pfR) end.",
            "VernacFixpoint",
            "82807ecca78de8bcf2da19794279bb3da1f35bfc"
        ],
        [
            "Theorem makeTrans_leftTrans : forall s s', makeTrans s s' <-> leftTrans s s'.",
            "VernacStartTheoremProof",
            "776b8351b982ae748d0946568df8c9dedce3187b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "eapply LTFin.",
            "VernacExtend",
            "779ed3b612409c03f07a4c0c216420817d4112eb"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eapply leftTrans_trans; eassumption.",
            "VernacExtend",
            "e0fdf0779723a2ff3dbc75443028457d21a88b91"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply leftTrans_makeTrans_acc.",
            "VernacExtend",
            "308cb5c565cce4c3540aff514d84553eafd42de9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem makeTrans_rightTrans : forall s s', makeTrans s s' <-> rightTrans s s'.",
            "VernacStartTheoremProof",
            "86f93dbb3e4e635671bcab2cb0d48eedcc7d8e69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "apply makeTrans_leftTrans.",
            "VernacExtend",
            "a358fe4b6f7413f5d8567a6ac384cb9385e19ead"
        ],
        [
            "apply leftTrans_rightTrans.",
            "VernacExtend",
            "febf23eb4d60338b168c623eb232669b7df12137"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition RTStep_left : forall x y z : T, R x y -> rightTrans y z -> rightTrans x z.",
            "VernacDefinition",
            "53a63fa6a68a1f19d20de573bef4df3fd4100ce3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert H.",
            "VernacExtend",
            "6842e040dd98a07b1eb54bbabc9c3f1076566a9a"
        ],
        [
            "revert x.",
            "VernacExtend",
            "df8e7a3327c3fe54cc92fed148460363bea0ac80"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply RTStep.",
            "VernacExtend",
            "4c15e4ac4d22d746ca037251505f6b5ec45bc05e"
        ],
        [
            "eapply RTFin.",
            "VernacExtend",
            "042700de1efc6ea7063bd0f2e4b60ae93c67defa"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply RTStep.",
            "VernacExtend",
            "4c15e4ac4d22d746ca037251505f6b5ec45bc05e"
        ],
        [
            "eapply IHrightTrans.",
            "VernacExtend",
            "73d66ad03970276faaa87269a188db0a5fbb200a"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End parametric.",
            "VernacEndSegment",
            "cf958e554467685eac9f3259353ec8693bc0afc4"
        ],
        [
            "Section param.",
            "VernacBeginSection",
            "b397c1219d16a956ea351c1baffcbbe1df49422f"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable R : T -> T -> Prop.",
            "VernacAssumption",
            "fff44edf137198e570f3b11be7a0bca988ed737f"
        ],
        [
            "Theorem makeTrans_idem : forall s s', makeTrans (makeTrans R) s s' <-> makeTrans R s s'.",
            "VernacStartTheoremProof",
            "7d6abc3d0a642a00ac6d7635bd6d1d3325fb27d1"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction 1; eauto using TTrans.",
            "VernacExtend",
            "f995f51179b84a62784d54f0ac7ff31814d5ae3a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "eapply TStep.",
            "VernacExtend",
            "02dbf19bfce09e26ed4c58c93aac442e503a3953"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem makeTrans_makeRefl_comm : forall s s', makeTrans (makeRefl R) s s' <-> makeRefl (makeTrans R) s s'.",
            "VernacStartTheoremProof",
            "a8699a4ecfd614575c84b753009a2d8953d80539"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "induction 1; repeat match goal with | [ H : makeRefl _ _ _ |- _ ] => inversion H; clear H; subst end; eauto using RRefl, RStep, TStep, TTrans.",
            "VernacExtend",
            "c12971ad47ec1b37787652ba7a19567210453133"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion H; clear H; subst; auto.",
            "VernacExtend",
            "b18b86af836f35d2575dfc562a8d15f513472e7d"
        ],
        [
            "apply TStep.",
            "VernacExtend",
            "f052c9882506d8cbf3ef198aa94d807eb0f0d497"
        ],
        [
            "apply RRefl.",
            "VernacExtend",
            "da793058a2883547daca952f566e41aba068fa43"
        ],
        [
            "induction H0; eauto using RStep, TStep, TTrans.",
            "VernacExtend",
            "42ac9c0f136b7550c0781341f94e9b9d8b865341"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem makeRefl_idem : forall s s', makeRefl (makeRefl R) s s' <-> makeRefl R s s'.",
            "VernacStartTheoremProof",
            "35dae0ec4aa20953e287592cd0b9939fbb66855b"
        ],
        [
            "split; inversion 1; subst; eauto using RStep, RRefl.",
            "VernacExtend",
            "222bee6913597bd2434408e1229b69cf5b8021a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End param.",
            "VernacEndSegment",
            "f00d9ebec2d63f97017150eec166e7b400b2dd6e"
        ]
    ],
    "proofs": [
        {
            "name": "Refl_makeRefl",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Refl_makeTrans",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H0; clear H0; subst; auto.",
                        "VernacExtend",
                        "ba71fdccc4b7d75ed1ab35eac4d789ceeb9beca6"
                    ]
                },
                {
                    "command": [
                        "inversion H1; clear H1; subst; auto using RStep.",
                        "VernacExtend",
                        "f02ef3d7a8c0717149b8fbd8766919d27684ba29"
                    ]
                },
                {
                    "command": [
                        "apply RStep.",
                        "VernacExtend",
                        "1de32bea2a93f86b61ea9eaef95192c8e5d33ef2"
                    ]
                },
                {
                    "command": [
                        "etransitivity; eauto.",
                        "VernacExtend",
                        "9a7a03ac784b775f6203b3104ab84c89b908a8ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Trans_makeTrans",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intros; eapply TTrans; eassumption.",
                        "VernacExtend",
                        "fb77d3348e7647befe32f2ea9d0f8bbb33dcfd91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Trans_makeRefl",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply TStep.",
                        "VernacExtend",
                        "f052c9882506d8cbf3ef198aa94d807eb0f0d497"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "makeTrans_leftTrans",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "eapply LTFin.",
                        "VernacExtend",
                        "779ed3b612409c03f07a4c0c216420817d4112eb"
                    ]
                },
                {
                    "command": [
                        "eassumption.",
                        "VernacExtend",
                        "909bfe8655bf95c07560744f733991163ce6cf7e"
                    ]
                },
                {
                    "command": [
                        "eapply leftTrans_trans; eassumption.",
                        "VernacExtend",
                        "e0fdf0779723a2ff3dbc75443028457d21a88b91"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply leftTrans_makeTrans_acc.",
                        "VernacExtend",
                        "308cb5c565cce4c3540aff514d84553eafd42de9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "makeTrans_idem",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction 1; eauto using TTrans.",
                        "VernacExtend",
                        "f995f51179b84a62784d54f0ac7ff31814d5ae3a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "eapply TStep.",
                        "VernacExtend",
                        "02dbf19bfce09e26ed4c58c93aac442e503a3953"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "makeTrans_makeRefl_comm",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "induction 1; repeat match goal with | [ H : makeRefl _ _ _ |- _ ] => inversion H; clear H; subst end; eauto using RRefl, RStep, TStep, TTrans.",
                        "VernacExtend",
                        "c12971ad47ec1b37787652ba7a19567210453133"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion H; clear H; subst; auto.",
                        "VernacExtend",
                        "b18b86af836f35d2575dfc562a8d15f513472e7d"
                    ]
                },
                {
                    "command": [
                        "apply TStep.",
                        "VernacExtend",
                        "f052c9882506d8cbf3ef198aa94d807eb0f0d497"
                    ]
                },
                {
                    "command": [
                        "apply RRefl.",
                        "VernacExtend",
                        "da793058a2883547daca952f566e41aba068fa43"
                    ]
                },
                {
                    "command": [
                        "induction H0; eauto using RStep, TStep, TTrans.",
                        "VernacExtend",
                        "42ac9c0f136b7550c0781341f94e9b9d8b865341"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "makeRefl_idem",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "split; inversion 1; subst; eauto using RStep, RRefl.",
                        "VernacExtend",
                        "222bee6913597bd2434408e1229b69cf5b8021a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}