{
    "filename": "InfiniteTypes.v",
    "coq_project": "zorns-lemma",
    "vernac_cmds": [
        [
            "Require Export FiniteTypes.",
            "VernacRequire",
            "5afebbcac4fd55a3623326ac5dbd752f3ce3cf8c"
        ],
        [
            "Require Import EnsemblesImplicit.",
            "VernacRequire",
            "b2ea379c198258c382cfda7770f343a23840bbb0"
        ],
        [
            "Require Import ClassicalChoice.",
            "VernacRequire",
            "8d4a90b60ff47eca0263a7bdf9f09ca03b20033b"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import FunctionalExtensionality.",
            "VernacRequire",
            "bb1bf6a28f9de1b2ad0dab7920189198216ed486"
        ],
        [
            "Require Import EnsemblesSpec.",
            "VernacRequire",
            "8bb92536bd9519ba28cced13d7fb038569336295"
        ],
        [
            "Lemma finite_nat_initial_segment: forall n:nat, FiniteT { m:nat | m < n }.",
            "VernacStartTheoremProof",
            "154188b9b88ae8ff6084987e137a6e60f9c9eb5e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Finite_ens_type.",
            "VernacExtend",
            "07a369d07d2546b004f50e1393cfece6fb7eaddb"
        ],
        [
            "rewrite <- characteristic_function_to_ensemble_is_identity.",
            "VernacExtend",
            "c1c8fa1b3b03b61f716edb5f3d179c741f1ef185"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "assert ([x:nat | S x <= 0] = Empty_set).",
            "VernacExtend",
            "e4905873543ff3995d798a7b3467c31e411411d8"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets.",
            "VernacExtend",
            "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite H; constructor.",
            "VernacExtend",
            "120a7e910e6db2155c79f9e0dbe70976e2a82781"
        ],
        [
            "assert ([x:nat | S x <= S n] = Add [x:nat | x < n] n).",
            "VernacExtend",
            "3651f2ddabf8da0775b2deee053cc249c2e7a762"
        ],
        [
            "apply Extensionality_Ensembles; split.",
            "VernacExtend",
            "a4c57ea69808be923621e13ef05d8e11d11caf6f"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "assert (x <= n); auto with arith.",
            "VernacExtend",
            "efe7913ab642626aa249a17cecebb86d5265a5da"
        ],
        [
            "apply le_lt_or_eq in H0.",
            "VernacExtend",
            "fb7477842d2c4747104d52d85ccc4671093ae2d8"
        ],
        [
            "case H0.",
            "VernacExtend",
            "e3b12762ec525f4df4e0198d4176ad44e85671ce"
        ],
        [
            "left; constructor; trivial.",
            "VernacExtend",
            "87ce41d178bd44c89e272a6074ffda6767a978df"
        ],
        [
            "right; auto with sets.",
            "VernacExtend",
            "3860d1335eec4ce65a54ec80bd30a980cb9e6691"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "case H.",
            "VernacExtend",
            "ed133bc3c18fb327812c50c4771060c04c7f32b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0; constructor.",
            "VernacExtend",
            "5fe34f6107c231fe97398284041766a856470beb"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite H; constructor; trivial.",
            "VernacExtend",
            "ed77a5146845b02b6f2b8193d6522f2c53ab1e50"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma infinite_nat_inj: forall X:Type, ~ FiniteT X -> exists f:nat->X, injective f.",
            "VernacStartTheoremProof",
            "c7ad4325c4b7f77caa2c29676d09c410d8ab5c92"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (inhabited (forall S:Ensemble X, Finite _ S -> { x:X | ~ In S x})).",
            "VernacExtend",
            "e9a63b8c9d0666cdaa3a37edcaabc8e0a7e60c02"
        ],
        [
            "pose proof (choice (fun (x:{S:Ensemble X | Finite _ S}) (y:X) => ~ In (proj1_sig x) y)).",
            "VernacExtend",
            "7df2c14a340210b606cf5a49d5bf55c8cf7e071c"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "match type of H0 with | ?A -> ?B => assert B end.",
            "VernacExtend",
            "4c87a66448000f77d4a05fcd62c184ac6c735c02"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NNPP.",
            "VernacExtend",
            "c972af1947412f7363e48b809906d3283d0fb638"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "pose proof (not_ex_not_all _ _ H1); clear H1.",
            "VernacExtend",
            "ab876e4ef91c3f5e2c6b7a058dc93be482a6fe40"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "assert (x = Full_set).",
            "VernacExtend",
            "4eaab442aea8ba3cd3c682fd8fe402f81cb9e058"
        ],
        [
            "apply Extensionality_Ensembles; red; split; auto with sets.",
            "VernacExtend",
            "4e3477e9f7709d4bbbd9fcf0c819b7062e549f98"
        ],
        [
            "intro x0; constructor.",
            "VernacExtend",
            "6cfe01505ebebf85cf2d4e0fbfccaf7cd81f8d41"
        ],
        [
            "symmetry in H1; destruct H1.",
            "VernacExtend",
            "b0922e61143296ea1b54ebef6400921bb5540085"
        ],
        [
            "contradiction H.",
            "VernacExtend",
            "9921ae0c19723fc5886b29e1f0df9d58a7efc3f6"
        ],
        [
            "clear H2.",
            "VernacExtend",
            "d86cdda4c02f9faf6d4c6694d967beddb27ce36a"
        ],
        [
            "apply bij_finite with (f:=@proj1_sig _ (fun x:X => In Full_set x)).",
            "VernacExtend",
            "25e438bf67414aee2f3d106d10cf383528aa3309"
        ],
        [
            "apply Finite_ens_type; assumption.",
            "VernacExtend",
            "7093001ed44d088f06d511dd329f5fa7c9a53a35"
        ],
        [
            "exists (fun x:X => exist _ x (Full_intro _ x)).",
            "VernacExtend",
            "5c175cc7f340564628d943ba4d3f8b90c3254179"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "generalize (Full_intro X x).",
            "VernacExtend",
            "34f6d59b61c0eeafcbf1207d4590a3a9c88c5563"
        ],
        [
            "intro i0; destruct (proof_irrelevance _ i i0); trivial.",
            "VernacExtend",
            "cef59d24b8cf866495701d065c409cbd061c8024"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "exists.",
            "VernacExtend",
            "ca3f16ef7f9021f6fe41a48307c510fb8e0753d1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (x (exist _ S H1)).",
            "VernacExtend",
            "6ce4fcf61e173919fb3476c855e6c1dbd2a1789f"
        ],
        [
            "exact (H0 (exist _ S H1)).",
            "VernacExtend",
            "c70f53092d4ef6f7293d45c89d2bdab6c2f7950b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "assert (forall (n:nat) (g:forall m:nat, m<n -> X), { x:X | forall (m:nat) (Hlt:m<n), g m Hlt <> x }).",
            "VernacExtend",
            "9e0655d6620ba0ea7482cbd85e6f1e42b9b8e7d9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Finite _ (fun x:X => exists m:nat, exists Hlt:m<n, g m Hlt = x)).",
            "VernacExtend",
            "666995ba1f897733f914d0ae624e88122328e331"
        ],
        [
            "pose (h := fun x:{m:nat | m<n} => g (proj1_sig x) (proj2_sig x)).",
            "VernacExtend",
            "d5206db1e6673751dbfd7cfae59e52451ce7fe5a"
        ],
        [
            "match goal with |- Finite X ?S => assert (S = Im Full_set h) end.",
            "VernacExtend",
            "e4eed92d908fb8b454fe811efc55b7fab7d9c947"
        ],
        [
            "apply Extensionality_Ensembles; red; split; red; intros.",
            "VernacExtend",
            "fdd3226506a8bd18f07da4af0e4d5cebd929ddfb"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "exists (exist (fun m:nat => m < n) x0 x1).",
            "VernacExtend",
            "b8d82a900b7e4b69326a4fb80e47e23606775150"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold h; simpl.",
            "VernacExtend",
            "11b9c74b7fb0ef8bc33404e7142f803a70f492fc"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "unfold h in H1; simpl in H1.",
            "VernacExtend",
            "a96c3573707a037dc13eaca2cfaf0efda598b6a7"
        ],
        [
            "exists x; exists l; symmetry; assumption.",
            "VernacExtend",
            "3a8ff0d5898209421c02056cdb308a70ab83869d"
        ],
        [
            "rewrite H0; apply FiniteT_img.",
            "VernacExtend",
            "509322fa9034162ec90cf99b9ed0dd08285a989d"
        ],
        [
            "apply finite_nat_initial_segment.",
            "VernacExtend",
            "2f7a4695947a83ed1e7d3a31a9a5e9f78197b93c"
        ],
        [
            "intros; apply classic.",
            "VernacExtend",
            "b3fd546423f2ec416c52f9f7c2ef4dd5184cd002"
        ],
        [
            "destruct (X0 _ H0).",
            "VernacExtend",
            "5a2adf638ed522a1b25f38cf24d237486299c2c0"
        ],
        [
            "unfold In in n0.",
            "VernacExtend",
            "692f7b738efc41ee4575f2bb348e6a84c66d990a"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "intros; red; intro.",
            "VernacExtend",
            "8efb0e8eb13e9c212c108e6c3da452eb08ee81d1"
        ],
        [
            "contradiction n0; exists m; exists Hlt; exact H1.",
            "VernacExtend",
            "cb9e155cfbe5ba34384df82d0270fb801aac38b0"
        ],
        [
            "pose (f := Fix lt_wf (fun n:nat => X) (fun (n:nat) (g:forall m:nat, m<n->X) => proj1_sig (X1 n g))).",
            "VernacExtend",
            "a92787c7e72b769f387463a058446fd3341e1653"
        ],
        [
            "simpl in f.",
            "VernacExtend",
            "8013c8e4b7df6530d94caddf819aa2044ae92e71"
        ],
        [
            "assert (forall n m:nat, m<n -> f m <> f n).",
            "VernacExtend",
            "a9a4e9437cea321f45af6479a156997675b57b44"
        ],
        [
            "pose proof (Fix_eq lt_wf (fun n:nat => X) (fun (n:nat) (g:forall m:nat, m<n->X) => proj1_sig (X1 n g))).",
            "VernacExtend",
            "46ab448a29b6f9e566fb6cec70044694e62b7fd3"
        ],
        [
            "fold f in H0.",
            "VernacExtend",
            "34c1cb440ee28a297b3af0ebe1dc0759299abb74"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "match type of H0 with | ?A -> ?B => assert (B) end.",
            "VernacExtend",
            "4c87a66448000f77d4a05fcd62c184ac6c735c02"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (f0 = g).",
            "VernacExtend",
            "0488da7061b83b2363dc3f4a4a784e19b5ce865a"
        ],
        [
            "Require Import FunctionalExtensionality.",
            "VernacRequire",
            "bb1bf6a28f9de1b2ad0dab7920189198216ed486"
        ],
        [
            "extensionality y; extensionality p; apply H1.",
            "VernacExtend",
            "595370f516b6fab20f58d9dbe5034fbb7ad1eb03"
        ],
        [
            "destruct H2; trivial.",
            "VernacExtend",
            "f4a1b2243ca55dc8d47180c0d2abb5b6923994d9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (H1 n).",
            "VernacExtend",
            "a98626daef95659120e5669d0c0332d8a87907ce"
        ],
        [
            "destruct X1 in H3.",
            "VernacExtend",
            "bad14dc93e370aa6e5b2422305b72253e53bae9d"
        ],
        [
            "simpl in H3.",
            "VernacExtend",
            "2a96f120ac764efacadc60b978d01343f60aafa0"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "red; intros m n ?.",
            "VernacExtend",
            "41d4384e48829e8fd578380a8d42b2655ee62891"
        ],
        [
            "destruct (lt_eq_lt_dec m n) as [[Hlt|Heq]|Hlt]; trivial.",
            "VernacExtend",
            "9fe9c745e6c325c804e4988b0dcf3eaa7dc2e077"
        ],
        [
            "contradiction (H0 n m).",
            "VernacExtend",
            "b82a9386e1a0dfdbe05bccd4fee7ba09c8eb3c05"
        ],
        [
            "contradiction (H0 m n).",
            "VernacExtend",
            "418709764aca8adbceb821821b35f63f6658cb44"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat_infinite: ~ FiniteT nat.",
            "VernacStartTheoremProof",
            "460f670ed7befbdee0ae191ee3ba21aea31c43a7"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "assert (surjective S).",
            "VernacExtend",
            "f1dafc473c8454cea1cd5d7396eaea69e988f340"
        ],
        [
            "apply finite_inj_surj; trivial.",
            "VernacExtend",
            "4b548ec6ddfd38868fa9c1ed6c7f0689e8215aac"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "injection H0; trivial.",
            "VernacExtend",
            "97990ce44cc8dff7be19b48931db0e231173f786"
        ],
        [
            "destruct (H0 0).",
            "VernacExtend",
            "405cf51501828fae6cd230acc8c897a323cfc73e"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "finite_nat_initial_segment",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Finite_ens_type.",
                        "VernacExtend",
                        "07a369d07d2546b004f50e1393cfece6fb7eaddb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- characteristic_function_to_ensemble_is_identity.",
                        "VernacExtend",
                        "c1c8fa1b3b03b61f716edb5f3d179c741f1ef185"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "assert ([x:nat | S x <= 0] = Empty_set).",
                        "VernacExtend",
                        "e4905873543ff3995d798a7b3467c31e411411d8"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; auto with sets.",
                        "VernacExtend",
                        "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite H; constructor.",
                        "VernacExtend",
                        "120a7e910e6db2155c79f9e0dbe70976e2a82781"
                    ]
                },
                {
                    "command": [
                        "assert ([x:nat | S x <= S n] = Add [x:nat | x < n] n).",
                        "VernacExtend",
                        "3651f2ddabf8da0775b2deee053cc249c2e7a762"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split.",
                        "VernacExtend",
                        "a4c57ea69808be923621e13ef05d8e11d11caf6f"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "assert (x <= n); auto with arith.",
                        "VernacExtend",
                        "efe7913ab642626aa249a17cecebb86d5265a5da"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_or_eq in H0.",
                        "VernacExtend",
                        "fb7477842d2c4747104d52d85ccc4671093ae2d8"
                    ]
                },
                {
                    "command": [
                        "case H0.",
                        "VernacExtend",
                        "e3b12762ec525f4df4e0198d4176ad44e85671ce"
                    ]
                },
                {
                    "command": [
                        "left; constructor; trivial.",
                        "VernacExtend",
                        "87ce41d178bd44c89e272a6074ffda6767a978df"
                    ]
                },
                {
                    "command": [
                        "right; auto with sets.",
                        "VernacExtend",
                        "3860d1335eec4ce65a54ec80bd30a980cb9e6691"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "case H.",
                        "VernacExtend",
                        "ed133bc3c18fb327812c50c4771060c04c7f32b1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0; constructor.",
                        "VernacExtend",
                        "5fe34f6107c231fe97398284041766a856470beb"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "rewrite H; constructor; trivial.",
                        "VernacExtend",
                        "ed77a5146845b02b6f2b8193d6522f2c53ab1e50"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_infinite",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "assert (surjective S).",
                        "VernacExtend",
                        "f1dafc473c8454cea1cd5d7396eaea69e988f340"
                    ]
                },
                {
                    "command": [
                        "apply finite_inj_surj; trivial.",
                        "VernacExtend",
                        "4b548ec6ddfd38868fa9c1ed6c7f0689e8215aac"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "injection H0; trivial.",
                        "VernacExtend",
                        "97990ce44cc8dff7be19b48931db0e231173f786"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 0).",
                        "VernacExtend",
                        "405cf51501828fae6cd230acc8c897a323cfc73e"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}