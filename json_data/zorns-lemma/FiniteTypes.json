{
    "filename": "FiniteTypes.v",
    "coq_project": "zorns-lemma",
    "vernac_cmds": [
        [
            "Require Export Ensembles.",
            "VernacRequire",
            "28e420a8cd6ad0b629b3aed17ea481c322132121"
        ],
        [
            "Require Import EnsemblesImplicit.",
            "VernacRequire",
            "b2ea379c198258c382cfda7770f343a23840bbb0"
        ],
        [
            "Require Export Image.",
            "VernacRequire",
            "b46876ca633def59064e90059d265292b3980304"
        ],
        [
            "Require Import ImageImplicit.",
            "VernacRequire",
            "f74d6d8d8844497165a10ba907f1fa5df13d4f09"
        ],
        [
            "Require Export Finite_sets.",
            "VernacRequire",
            "d8d6dffeb7f48ddf43613f5cf9081e0a08c8e4a9"
        ],
        [
            "Require Export FunctionProperties.",
            "VernacRequire",
            "f14202049329c96d9f0df5e0a313f9281709a1ad"
        ],
        [
            "Require Import DecidableDec.",
            "VernacRequire",
            "811550f3459619bf8340c8d8a48eeda763885102"
        ],
        [
            "Require Import ProofIrrelevance.",
            "VernacRequire",
            "8c3238ee3e3ff3fa43974681c335fc84a4cb0fe8"
        ],
        [
            "Require Import Description.",
            "VernacRequire",
            "3644f4855d7da47082e2bb606a55e6fb76db38fc"
        ],
        [
            "Set Asymmetric Patterns.",
            "VernacSetOption",
            "3fcd9e746ba5a1aabd289acfb9ab99bec474567d"
        ],
        [
            "Inductive FiniteT : Type -> Prop := | empty_finite: FiniteT False | add_finite: forall T:Type, FiniteT T -> FiniteT (option T) | bij_finite: forall (X Y:Type) (f:X->Y), FiniteT X -> invertible f -> FiniteT Y.",
            "VernacInductive",
            "4d47f3311ee5f064f084a40b0a7372b8be840486"
        ],
        [
            "Lemma True_finite: FiniteT True.",
            "VernacStartTheoremProof",
            "12a5bbc797559cab7d8ae38cc322fbf554a7ab9d"
        ],
        [
            "apply bij_finite with (option False) (fun _ => I).",
            "VernacExtend",
            "69fec6948e12d72bd88075c2e104f7d990ad7dfa"
        ],
        [
            "constructor; constructor.",
            "VernacExtend",
            "972688013a1aca9db3fea43a5edc8228f5b8e1bd"
        ],
        [
            "exists (True_rect None).",
            "VernacExtend",
            "6e5c1ad0e68c5637640bae66c32436b63855a4ee"
        ],
        [
            "destruct x as [[]|].",
            "VernacExtend",
            "a8f502e2c74257d0d1aaa199ba2c6f36d314e423"
        ],
        [
            "remember (True_rect (@None False) I) as LHS.",
            "VernacExtend",
            "67581ac1d888d4acaf4e1a323fc5e5d2a685482b"
        ],
        [
            "destruct LHS as [[]|].",
            "VernacExtend",
            "1e0ddbb45de8d0a6dd8f54058faed63827b64c31"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "exact (fun y:True => match y with | I => refl_equal I end).",
            "VernacExtend",
            "90905651b3585e413dca67d99fc8673b0c270deb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_dec_exists: forall (X:Type) (P:X->Prop), FiniteT X -> (forall x:X, {P x} + {~ P x}) -> { exists x:X, P x } + { forall x:X, ~ P x }.",
            "VernacStartTheoremProof",
            "74a5e7d013673a19afff4432c78bdc9d89a60640"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply exclusive_dec.",
            "VernacExtend",
            "bb6396dc7583c2a90b9f2e5ae9c04c9c81b5604b"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "contradiction (H1 x).",
            "VernacExtend",
            "4ed8a789000192b8b8dc17912af822e43bd7a7a9"
        ],
        [
            "revert P X0.",
            "VernacExtend",
            "a2c6144981bb15ac43d0326bb488b8d6ee047071"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (IHFiniteT (fun x:T => P (Some x)) (fun x:T => X0 (Some x))).",
            "VernacExtend",
            "f138292d158b02b7b57c0768c2c9fc03ad9bec70"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "exists (Some x).",
            "VernacExtend",
            "b9fc015361db5d30070bad520dea244ec58deea5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case (X0 None).",
            "VernacExtend",
            "7ae58d628e2a53b6d816ca6736973ecb7c842724"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists None.",
            "VernacExtend",
            "9c6725d108313733eda0fba4b5ae46727c2003b2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (IHFiniteT (fun x:X => P (f x)) (fun x:X => X0 (f x))).",
            "VernacExtend",
            "91c7dfc4a2d66b80a332f3c33eb42e30c2f58f68"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists (f x).",
            "VernacExtend",
            "82d0433c52def299dae52e00c1bf42867054c8b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite <- H1 with x.",
            "VernacExtend",
            "46c64fac4aba225feca3c90b6d7360764f23c6a0"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_dec_forall: forall (X:Type) (P:X->Prop), FiniteT X -> (forall x:X, { P x } + { ~ P x }) -> { forall x:X, P x } + { exists x:X, ~ P x }.",
            "VernacStartTheoremProof",
            "4972ade5211000d6a9e4273cf98038025529f0d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply exclusive_dec.",
            "VernacExtend",
            "bb6396dc7583c2a90b9f2e5ae9c04c9c81b5604b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "contradiction (H1 x).",
            "VernacExtend",
            "4ed8a789000192b8b8dc17912af822e43bd7a7a9"
        ],
        [
            "revert P X0.",
            "VernacExtend",
            "a2c6144981bb15ac43d0326bb488b8d6ee047071"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (IHFiniteT (fun x:T => P (Some x)) (fun x:T => X0 (Some x))).",
            "VernacExtend",
            "f138292d158b02b7b57c0768c2c9fc03ad9bec70"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "case (X0 None).",
            "VernacExtend",
            "7ae58d628e2a53b6d816ca6736973ecb7c842724"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists None.",
            "VernacExtend",
            "9c6725d108313733eda0fba4b5ae46727c2003b2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "exists (Some x).",
            "VernacExtend",
            "b9fc015361db5d30070bad520dea244ec58deea5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "case (IHFiniteT (fun x:X => P (f x)) (fun x:X => X0 (f x))).",
            "VernacExtend",
            "91c7dfc4a2d66b80a332f3c33eb42e30c2f58f68"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists (f x).",
            "VernacExtend",
            "82d0433c52def299dae52e00c1bf42867054c8b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_eq_dec: forall X:Type, FiniteT X -> forall x y:X, {x=y} + {x<>y}.",
            "VernacStartTheoremProof",
            "c8b5bd0b206f5051c4aaeff48237107ad90bb0c6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply decidable_dec.",
            "VernacExtend",
            "7a8646a16403bd77db630c6e45d8235f733699d9"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "case (IHFiniteT (g x) (g y)).",
            "VernacExtend",
            "13f9a934ee07efd153cd967d91bf34bb4fc93f31"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "rewrite <- H1 with x.",
            "VernacExtend",
            "46c64fac4aba225feca3c90b6d7360764f23c6a0"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "contradict H2.",
            "VernacExtend",
            "d4cda720f35db691740b164be124338be464d95c"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_dep_choice: forall (A:Type) (B:forall x:A, Type) (R:forall x:A, B x->Prop), FiniteT A -> (forall x:A, exists y:B x, R x y) -> exists f:(forall x:A, B x), forall x:A, R x (f x).",
            "VernacStartTheoremProof",
            "ccc41e70e4dde3e9ca726aa35661ca7bfbfc0ac3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "revert B R H0.",
            "VernacExtend",
            "ee65587bd6399f1baccb17c73b9969f87854a1ac"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists (fun x:False => False_rect (B x) x).",
            "VernacExtend",
            "f26dec2745602de7b70217317346ba67b44eba87"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (IHFiniteT (fun x:T => B (Some x)) (fun x:T => R (Some x)) (fun x:T => H0 (Some x))).",
            "VernacExtend",
            "c251b5d7aecde0a6a46d785a477968c8d96edf5d"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "pose proof (H0 None).",
            "VernacExtend",
            "e5d02e489b8668524d4fcf001aba41644cd98e74"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists (fun y:option T => match y return (B y) with | Some y0 => x y0 | None => x0 end).",
            "VernacExtend",
            "ba06c8e6d20d4385511a5968251bc55d49bc99dd"
        ],
        [
            "destruct x1.",
            "VernacExtend",
            "ff1dad6ec5db7ff89c9cf6f997a051344d995417"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "pose proof (IHFiniteT (fun x:X => B (f x)) (fun x:X => R (f x)) (fun x:X => H1 (f x))).",
            "VernacExtend",
            "2a569817dccb60b1477fe1c8cf7c2810ff245fcd"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "pose (f0 := fun y:Y => x (g y)).",
            "VernacExtend",
            "8b7abfb4ff785c2c3a5aaad5b90f1e82c3a8016f"
        ],
        [
            "pose (conv := fun (y:Y) (a:B (f (g y))) => eq_rect (f (g y)) B a y (H2 y)).",
            "VernacExtend",
            "1c09ef26acf814138eca7f3aabd96d9f31ee6a7c"
        ],
        [
            "exists (fun y:Y => conv y (x (g y))).",
            "VernacExtend",
            "8c8569e902f962a72820c0db334ef1e2f763c4ca"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold conv; simpl.",
            "VernacExtend",
            "87a3643346c1938f96216c17833e792f488a90b0"
        ],
        [
            "generalize (H2 x0).",
            "VernacExtend",
            "962118ed3438a722850469a4d0479983973698d9"
        ],
        [
            "pattern x0 at 2 3 6.",
            "VernacExtend",
            "3ecda000217613509a87bb5035a0a20cb5bddbbd"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite <- eq_rect_eq.",
            "VernacExtend",
            "8ffe1bc1c9d65ceb90b997a5745ab4bd618c3a24"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_choice : forall (A B:Type) (R:A->B->Prop), FiniteT A -> (forall x:A, exists y:B, R x y) -> exists f:A->B, forall x:A, R x (f x).",
            "VernacStartTheoremProof",
            "34569e2c8a306c98b8dadc92d6b1fc2617584a47"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply finite_dep_choice.",
            "VernacExtend",
            "6852d76b91bf32d942da17da3ffa69f10c98940f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Finite_ens_type: forall {X:Type} (S:Ensemble X), Finite _ S -> FiniteT { x:X | In S x }.",
            "VernacStartTheoremProof",
            "cfaa2f8622a1f9dc7bb535c4870293137d2c4185"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply bij_finite with False (False_rect _).",
            "VernacExtend",
            "256d9f76bc7a06ae1ac00a5de84c5cc223e61cfd"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert (g:{x:X | In Empty_set x}->False).",
            "VernacExtend",
            "597d8a81b3ac6a13e29602485acf073c801ec1cf"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct X0.",
            "VernacExtend",
            "2568f430ad04c5f0bdd0365ee7a39953fa8b654c"
        ],
        [
            "destruct i.",
            "VernacExtend",
            "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
        ],
        [
            "exists g.",
            "VernacExtend",
            "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "destruct g.",
            "VernacExtend",
            "58c12597ac8434a7c2475af42670d77056ce85a1"
        ],
        [
            "assert (Included A (Add A x)).",
            "VernacExtend",
            "974d8eea2b4e4dfdbc8458056316a85ef646b65c"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "assert (In (Add A x) x).",
            "VernacExtend",
            "69fe603448013ffbaa7ba3c0226191f34cf6a305"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "pose (g := fun (y: option {x:X | In A x}) => match y return {x0:X | In (Add A x) x0} with | Some (exist y0 i) => exist (fun x2:X => In (Add A x) x2) y0 (H1 y0 i) | None => exist (fun x2:X => In (Add A x) x2) x H2 end).",
            "VernacExtend",
            "c10875d4df33f639402e78903cca42d73e787e8c"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply add_finite.",
            "VernacExtend",
            "7f701c3dbaa30d490f031f749254051a750a9832"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (h:forall x0:X, In (Add A x) x0 -> { In A x0 } + { x0 = x }).",
            "VernacExtend",
            "2887cfdb3ba062a18d413013d75ee5f94ff99231"
        ],
        [
            "intros; apply exclusive_dec.",
            "VernacExtend",
            "c40c7d807018869edf977031704628a3c90c078c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct H6; auto.",
            "VernacExtend",
            "b61052e58c81702988f18bc031fec49789ec75c8"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "right; destruct H3; reflexivity.",
            "VernacExtend",
            "306f4d72272611e165672def9522baa9a49fb0ee"
        ],
        [
            "pose (ginv := fun s:{x0:X | In (Add A x) x0} => match s return option {x:X | In A x} with | exist x0 i => match (h x0 i) with | left iA => Some (exist _ x0 iA) | right _ => None end end).",
            "VernacExtend",
            "aaf013877114ab0fb1e9bb3634f0f4aaa6e69a2e"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "intro; destruct x0.",
            "VernacExtend",
            "96a5715ebfbccbe687506bb9bdf192e4621defff"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "remember (h x0 (H1 x0 i)) as sum; destruct sum.",
            "VernacExtend",
            "af81110e411e93a37494301f91295819c5d7118a"
        ],
        [
            "destruct (proof_irrelevance _ i i0).",
            "VernacExtend",
            "79ffc064b748309b6f382fde59dbf539530905d9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "contradiction H0.",
            "VernacExtend",
            "198cc5fe08678df71b7d70ff1acc682532bbeeca"
        ],
        [
            "rewrite <- e; assumption.",
            "VernacExtend",
            "acd1a3b9e4e3c5a3b65d84614a27f0640eb7cfdd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "remember (h x H2) as sum; destruct sum.",
            "VernacExtend",
            "ce2e1f0058528d9d7b51830593eb494012fe230d"
        ],
        [
            "contradiction H0.",
            "VernacExtend",
            "198cc5fe08678df71b7d70ff1acc682532bbeeca"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold ginv.",
            "VernacExtend",
            "18daa86125972b562cc93c85cdddefb5f6a74984"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "destruct (h x0 i).",
            "VernacExtend",
            "ade274421d6633439f1c68f276fa14f81db8b3d3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (H1 x0 i0); intro.",
            "VernacExtend",
            "b6ec97a8b2ac1b8056bf66834ff410943d2d3cb3"
        ],
        [
            "destruct (proof_irrelevance _ i i1).",
            "VernacExtend",
            "5e673c3a36c724d075b1c7de7d452063d9e7da0f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct e.",
            "VernacExtend",
            "6785fac4a52839433f2a36a721f6e0fc71773d77"
        ],
        [
            "destruct (proof_irrelevance _ H2 i).",
            "VernacExtend",
            "1d1a7f4d7cb75d931ae5f01da33630a3f4ac928e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FiniteT_img: forall (X Y:Type) (f:X->Y), FiniteT X -> (forall y1 y2:Y, y1=y2 \\/ y1<>y2) -> Finite _ (Im Full_set f).",
            "VernacStartTheoremProof",
            "043df8625b71b86c0db34d93cfa33f4539a11ca9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert (Im Full_set f = Empty_set).",
            "VernacExtend",
            "74c6096772f0214dfa613e9881aa946b6f5cd0b2"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "red; split.",
            "VernacExtend",
            "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assert ({exists x:T, f (Some x) = f None} + {forall x:T, f (Some x) <> f None}).",
            "VernacExtend",
            "f4f22b70981238774b278474644df2e299056560"
        ],
        [
            "apply finite_dec_exists.",
            "VernacExtend",
            "ff19429b88cb81d78902b220050d9694117d5b32"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply decidable_dec.",
            "VernacExtend",
            "7a8646a16403bd77db630c6e45d8235f733699d9"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "case H1.",
            "VernacExtend",
            "a1cc2c5b7545de9abe2fa54c801395a452f26f10"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "pose (g := fun (x:T) => f (Some x)).",
            "VernacExtend",
            "787476b92f0127745ed11048edf4bbb99422bef1"
        ],
        [
            "assert (Im Full_set f = Im Full_set g).",
            "VernacExtend",
            "44c393066cc05be328fdc20f7e919a81bce5012b"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "red; split.",
            "VernacExtend",
            "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "exists t.",
            "VernacExtend",
            "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct e.",
            "VernacExtend",
            "6785fac4a52839433f2a36a721f6e0fc71773d77"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "transitivity (f None).",
            "VernacExtend",
            "18d545ad7bbc75cd7362c5fd8a0e97bc4c58cf09"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists (Some x).",
            "VernacExtend",
            "b9fc015361db5d30070bad520dea244ec58deea5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose (g := fun x:T => f (Some x)).",
            "VernacExtend",
            "787476b92f0127745ed11048edf4bbb99422bef1"
        ],
        [
            "assert (Im Full_set f = Add (Im Full_set g) (f None)).",
            "VernacExtend",
            "08d38c658e30b000b50ef23def47ca40f93e98a8"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "red; split.",
            "VernacExtend",
            "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists t.",
            "VernacExtend",
            "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists (Some x).",
            "VernacExtend",
            "b9fc015361db5d30070bad520dea244ec58deea5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists None.",
            "VernacExtend",
            "9c6725d108313733eda0fba4b5ae46727c2003b2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "contradiction (n x).",
            "VernacExtend",
            "fdd0ca4eeaa269ad4ab3dbe27629aeac5114d244"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "pose (g := fun (x:X) => f (f0 x)).",
            "VernacExtend",
            "aa3eb1393dc32e521ce020f62d6a374adccb1ccf"
        ],
        [
            "assert (Im Full_set f = Im Full_set g).",
            "VernacExtend",
            "44c393066cc05be328fdc20f7e919a81bce5012b"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "red; split.",
            "VernacExtend",
            "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "rewrite <- H4 with x.",
            "VernacExtend",
            "093fa70f01946396568afa7d71cc081e7179e106"
        ],
        [
            "exists (g0 x).",
            "VernacExtend",
            "b287b645b01aeadb665189ae6dd4fdf5c7f1dcfe"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "unfold g.",
            "VernacExtend",
            "fd78415b188602b878d030c2cbc915af33ab1e1d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists (f0 x).",
            "VernacExtend",
            "8f6c54f7830e60502de08ed2ac28dd6b1a557adf"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma surj_finite: forall (X Y:Type) (f:X->Y), FiniteT X -> surjective f -> (forall y1 y2:Y, y1=y2 \\/ y1<>y2) -> FiniteT Y.",
            "VernacStartTheoremProof",
            "fba0e0b68b9e08cc94bc92cedf59b750a16cc2bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply bij_finite with {y:Y | In (Im Full_set f) y} (@proj1_sig _ (fun y:Y => In (Im Full_set f) y)).",
            "VernacExtend",
            "0fa78e01229b15f951ab5f6bc5e2fb3d44823c68"
        ],
        [
            "apply Finite_ens_type.",
            "VernacExtend",
            "07a369d07d2546b004f50e1393cfece6fb7eaddb"
        ],
        [
            "apply FiniteT_img.",
            "VernacExtend",
            "538e66e7585c29985235e1eebec0578e3ac259ce"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (forall y:Y, In (Im Full_set f) y).",
            "VernacExtend",
            "37e95b0e94963b79cdbfb1cf104bbf4035b79f77"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (H0 y).",
            "VernacExtend",
            "551c7bbd1b22d6bfc742c622d909daea765118f7"
        ],
        [
            "exists x; auto with sets.",
            "VernacExtend",
            "84de534c617ae30322cea69828c06843e5da7542"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "pose (proj1_sig_inv := fun y:Y => exist (fun y0:Y => In (Im Full_set f) y0) y (H2 y)).",
            "VernacExtend",
            "d3d574928ff4c8bd44d3baf4a1a7a9a436b0c8dc"
        ],
        [
            "exists proj1_sig_inv.",
            "VernacExtend",
            "a8775c81847d2dc285bb10602e3180cd23572625"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold proj1_sig_inv.",
            "VernacExtend",
            "5d34c4e36642bb22cec8b7ab590b7259e4822dcb"
        ],
        [
            "destruct (proof_irrelevance _ (H2 x) i); trivial.",
            "VernacExtend",
            "c16ceee5722cc3a53c7b9cb810dc65021bfe7722"
        ],
        [
            "intros; simpl; reflexivity.",
            "VernacExtend",
            "854cdc9d9e97990c301aa41eba8e57e0e92b6986"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_subtype: forall (X:Type) (P:X->Prop), FiniteT X -> (forall x:X, P x \\/ ~ P x) -> FiniteT {x:X | P x}.",
            "VernacStartTheoremProof",
            "266cf6e856e5d73033705aab268bb72b6cac6e38"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "apply bij_finite with False (False_rect _).",
            "VernacExtend",
            "256d9f76bc7a06ae1ac00a5de84c5cc223e61cfd"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists (@proj1_sig _ _).",
            "VernacExtend",
            "e83fef4bf6ba461dd8eb69429e03e34536f829b7"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "intro s; destruct s; destruct x.",
            "VernacExtend",
            "91d2c098aa876aeb12162c0f68fc67a1498b0f03"
        ],
        [
            "destruct (H0 None).",
            "VernacExtend",
            "ecfa010b8a0ecb935247f5eeefed1170e56cb13a"
        ],
        [
            "pose (g := fun (x:option {x:T | P (Some x)}) => match x return {x:option T | P x} with | Some (exist x0 i) => exist (fun x:option T => P x) (Some x0) i | None => exist (fun x:option T => P x) None H1 end).",
            "VernacExtend",
            "24a7b4396271481caea5d496e62d5c94179ae726"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply add_finite.",
            "VernacExtend",
            "7f701c3dbaa30d490f031f749254051a750a9832"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "intro; apply H0.",
            "VernacExtend",
            "c8895980465e8fb07e4c7d46c295473cd3994e2f"
        ],
        [
            "pose (ginv := fun (s:{x0:option T | P x0}) => match s return option {x:T | P (Some x)} with | exist (Some x0) i => Some (exist (fun y:T => P (Some y)) x0 i) | exist None _ => None end).",
            "VernacExtend",
            "d58cd1e63f2d66b8abdbf10e33a6f126a9d4e4b3"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [[x0]|].",
            "VernacExtend",
            "1740c53bd7eeafec447edfbc6cd8b4aa9ce14f0f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct y as [[x0|]].",
            "VernacExtend",
            "200d9ec7b0c09a2cf89dd654f70714ae83e8053c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (proof_irrelevance _ H1 p).",
            "VernacExtend",
            "2bb517f1770aae02874f897f9b438451d9de8da1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "pose (g := fun (x:{x:T | P (Some x)}) => match x return {x:option T | P x} with | exist x0 i => exist (fun x:option T => P x) (Some x0) i end).",
            "VernacExtend",
            "bca4de3fbb0f26d8700adfc456f60779c9c9d451"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "intro; apply H0.",
            "VernacExtend",
            "c8895980465e8fb07e4c7d46c295473cd3994e2f"
        ],
        [
            "pose (ginv := fun s:{x0:option T | P x0} => match s return {x:T | P (Some x)} with | exist (Some x0) i => exist (fun x:T => P (Some x)) x0 i | exist None i => False_rect _ (H1 i) end).",
            "VernacExtend",
            "38b4c54a24a49bf1f7bb783ab5875516f783bc0a"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct y as [[x0|]].",
            "VernacExtend",
            "200d9ec7b0c09a2cf89dd654f70714ae83e8053c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "contradiction H1.",
            "VernacExtend",
            "93a068a62d2389ca7d67d8eaeabac4ea3b9ebd83"
        ],
        [
            "pose (g := fun (x:{x:X | P (f x)}) => match x with | exist x0 i => exist (fun x:Y => P x) (f x0) i end).",
            "VernacExtend",
            "d7a29a36af44793e7de796bd1bbbb215fbc32264"
        ],
        [
            "apply (bij_finite _ _ g).",
            "VernacExtend",
            "e054b4cd8e6c116012e77d9db0548ff71b3155ac"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "intro; apply H0.",
            "VernacExtend",
            "c8895980465e8fb07e4c7d46c295473cd3994e2f"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "assert (forall y:Y, P y -> P (f (g0 y))).",
            "VernacExtend",
            "c63dac41c26b1173e44c18c2bea42827af0a5d10"
        ],
        [
            "intros; rewrite H2; assumption.",
            "VernacExtend",
            "666a01e9cf03ab2403dc87d1353e85efcc4ec3c0"
        ],
        [
            "pose (ginv := fun (y:{y:Y | P y}) => match y with | exist y0 i => exist (fun x:X => P (f x)) (g0 y0) (H3 y0 i) end).",
            "VernacExtend",
            "7ecaa3a746b4a3405ce7852fd93d98750164002b"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x; simpl.",
            "VernacExtend",
            "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
        ],
        [
            "generalize (H3 (f x) p).",
            "VernacExtend",
            "9f0192946916ed383d4c1a8a0b32621b2bfb91c0"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "intro; destruct (proof_irrelevance _ p p0).",
            "VernacExtend",
            "519432ef8bf0c8f25a41b9eefe7f0eb3904b560f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct y; simpl.",
            "VernacExtend",
            "3ee7639a8cf990e8e14c61e05c7505a6bd7dbdcb"
        ],
        [
            "generalize (H3 x p).",
            "VernacExtend",
            "b264089d357692887c300003386140c01e1250d7"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "intro; destruct (proof_irrelevance _ p p0).",
            "VernacExtend",
            "519432ef8bf0c8f25a41b9eefe7f0eb3904b560f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_finite: forall (X Y:Type) (f:X->Y), FiniteT Y -> FunctionProperties.injective f -> (forall y:Y, (exists x:X, f x = y) \\/ (~ exists x:X, f x = y)) -> FiniteT X.",
            "VernacStartTheoremProof",
            "de346a06d24b29fe64e4ea31488658eaa4e8eb65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall y:{y:Y | exists x:X, f x = y}, {x:X | f x = proj1_sig y}).",
            "VernacExtend",
            "7deaaffbb4cd9c0a90ba249c4366bc1caedc4b51"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply constructive_definite_description.",
            "VernacExtend",
            "b2eb1a3e024c625f457ac9ed1cbe627dbc746f4b"
        ],
        [
            "destruct e.",
            "VernacExtend",
            "6785fac4a52839433f2a36a721f6e0fc71773d77"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "red; split.",
            "VernacExtend",
            "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "transitivity x.",
            "VernacExtend",
            "851897936e3ded114b4b5935067c48265cc501b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "pose (g := fun y:{y:Y | exists x:X, f x = y} => proj1_sig (X0 y)).",
            "VernacExtend",
            "6e90a31fdaf5566c724ab55a4633258edf58bf99"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply finite_subtype.",
            "VernacExtend",
            "cdefda1640529fa3e461226522d926fbe640b007"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "pose (ginv := fun (x:X) => exist (fun y:Y => exists x:X, f x = y) (f x) (ex_intro _ x (refl_equal _))).",
            "VernacExtend",
            "639553764264b37f644084bfeb23ce05c2007584"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [y [x e]].",
            "VernacExtend",
            "d05a457182d00f0684d0a1c19455ad9d1aee514c"
        ],
        [
            "unfold g; simpl.",
            "VernacExtend",
            "23ffaccc225075cc4fe51c5269d679b78d4117f1"
        ],
        [
            "match goal with |- context [X0 ?arg] => destruct (X0 arg) end.",
            "VernacExtend",
            "4996d3bbf2aa4a3ce88ba95dfa1cd06069ab8005"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold ginv; simpl.",
            "VernacExtend",
            "54aa14b569429e27dec0d25e29849be20825674d"
        ],
        [
            "simpl in e0.",
            "VernacExtend",
            "6625c658aa0c5a91c66063fc2a2824ad6f0407dc"
        ],
        [
            "repeat match goal with |- context [ex_intro ?f ?x ?e] => generalize (ex_intro f x e) end.",
            "VernacExtend",
            "7862c85ead75a316124e6f7510f5c68a925b0f38"
        ],
        [
            "rewrite <- e0.",
            "VernacExtend",
            "c21a587b75402cf321856b7c985a90ed8d31bdfd"
        ],
        [
            "intros; destruct (proof_irrelevance _ e1 e2).",
            "VernacExtend",
            "a148ee0b85a4a82eae3bbd10d86845ba5637ed91"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro; unfold ginv.",
            "VernacExtend",
            "f3baa72079f8ea1f988df144fb242a59e4e3564e"
        ],
        [
            "unfold g; simpl.",
            "VernacExtend",
            "23ffaccc225075cc4fe51c5269d679b78d4117f1"
        ],
        [
            "match goal with |- context [X0 ?arg] => destruct (X0 arg) end.",
            "VernacExtend",
            "4996d3bbf2aa4a3ce88ba95dfa1cd06069ab8005"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in e.",
            "VernacExtend",
            "62969136a15bbec355f5d78a45d15b365f0efc41"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_inj_surj: forall (X:Type) (f:X->X), FiniteT X -> injective f -> surjective f.",
            "VernacStartTheoremProof",
            "87d30869d7db7cf886d7955fb3f6f4cbbe080951"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "remember (f None) as f0; destruct f0 as [a|].",
            "VernacExtend",
            "212866bee97f921b7a790f268d77eb4201fe6b63"
        ],
        [
            "assert (forall x:T, f (Some x) <> Some a).",
            "VernacExtend",
            "ce480eba497745c5e278a69caf58dfe0ab759b40"
        ],
        [
            "unfold not; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "assert (Some x = None).",
            "VernacExtend",
            "4b7a0b36427c80acfb784fc22489549cef2e5cb1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "discriminate H2.",
            "VernacExtend",
            "a34eb414a5dd143442dc6d481a442c7afbcf7604"
        ],
        [
            "pose (g := fun x:T => match f (Some x) with | Some y => y | None => a end).",
            "VernacExtend",
            "d5706d75c789daa297ff3142a1e75c4dffd4b74d"
        ],
        [
            "assert (surjective g).",
            "VernacExtend",
            "70a33816fb8aab5b05debb509060b2aa951c07f0"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "remember (f (Some x1)) as fx1; destruct fx1; remember (f (Some x2)) as fx2; destruct fx2.",
            "VernacExtend",
            "ae3fc9cc3bee20b6ede5ddf6b4a45f2568578f80"
        ],
        [
            "unfold g in H2.",
            "VernacExtend",
            "2cc87f958a9442bf8881fcbee5eb9b805d3cb5e2"
        ],
        [
            "rewrite <- Heqfx1 in H2; rewrite <- Heqfx2 in H2.",
            "VernacExtend",
            "beab3a881a95f8e4001a4b8c2f61a6e2f03cb53f"
        ],
        [
            "destruct H2; assert (f (Some x1) = f (Some x2)).",
            "VernacExtend",
            "cbde73a653925ab8e25a364e41e179c0de0c065b"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply H0 in H2.",
            "VernacExtend",
            "d887f7b54fc680f0802cf0c8ef67f7262135c938"
        ],
        [
            "injection H2; trivial.",
            "VernacExtend",
            "6ca4b94272c0966592f9176bf09130db719feb41"
        ],
        [
            "unfold g in H2; rewrite <- Heqfx1 in H2; rewrite <- Heqfx2 in H2.",
            "VernacExtend",
            "ab725b94a58c923a5b701e25da5bced71adc02c5"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "contradiction (H1 x1).",
            "VernacExtend",
            "639bf6f57ad1780e859cca40f8ba06ccf72cd281"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "unfold g in H2; rewrite <- Heqfx1 in H2; rewrite <- Heqfx2 in H2.",
            "VernacExtend",
            "ab725b94a58c923a5b701e25da5bced71adc02c5"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "contradiction (H1 x2).",
            "VernacExtend",
            "b3b1c4d81ca60e89c91cc893f8135f4b5188398d"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "assert (Some x1 = Some x2).",
            "VernacExtend",
            "5d7c73c0ec5e455c3dc28c742d6c60374e687886"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "injection H3; trivial.",
            "VernacExtend",
            "9ad3c56541d367fbf6a1bef04d106c12006af0a9"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "case (finite_eq_dec _ H t a).",
            "VernacExtend",
            "9420089e8751018c39d94cfb6264945f1cb2a0fc"
        ],
        [
            "exists None.",
            "VernacExtend",
            "9c6725d108313733eda0fba4b5ae46727c2003b2"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "destruct (H2 t).",
            "VernacExtend",
            "6dc6f63d4dfda2709c4c566f8394677c36399287"
        ],
        [
            "exists (Some x).",
            "VernacExtend",
            "b9fc015361db5d30070bad520dea244ec58deea5"
        ],
        [
            "unfold g in H3.",
            "VernacExtend",
            "081119300a17f4e62566b2fb283eaf4e7f8237d3"
        ],
        [
            "destruct (f (Some x)).",
            "VernacExtend",
            "2038cfc71fa1bfbce5524cd72afd950a32360a08"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "contradiction n.",
            "VernacExtend",
            "1749fecd765c92d2611e829dc09c198dbc050cdd"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "destruct (H2 a).",
            "VernacExtend",
            "c893a67cc379f7cc653405195bc697e85e28bf79"
        ],
        [
            "exists (Some x).",
            "VernacExtend",
            "b9fc015361db5d30070bad520dea244ec58deea5"
        ],
        [
            "unfold g in H3.",
            "VernacExtend",
            "081119300a17f4e62566b2fb283eaf4e7f8237d3"
        ],
        [
            "remember (f (Some x)) as fx; destruct fx.",
            "VernacExtend",
            "2c8c9b4da2edf3cf9456910405cf2cf4621d7db6"
        ],
        [
            "destruct H3.",
            "VernacExtend",
            "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
        ],
        [
            "contradiction (H1 x).",
            "VernacExtend",
            "4ed8a789000192b8b8dc17912af822e43bd7a7a9"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assert (forall x:T, { y:T | f (Some x) = Some y }).",
            "VernacExtend",
            "3f2fb101c6968ab3dd5a5d5863e039a414aebdf2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "remember (f (Some x)) as fx; destruct fx.",
            "VernacExtend",
            "2c8c9b4da2edf3cf9456910405cf2cf4621d7db6"
        ],
        [
            "exists t; reflexivity.",
            "VernacExtend",
            "33824fe4253795ec4626707ab69bea11325afca9"
        ],
        [
            "assert (Some x = None).",
            "VernacExtend",
            "4b7a0b36427c80acfb784fc22489549cef2e5cb1"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "discriminate H1.",
            "VernacExtend",
            "1a1404b79897a18af2dbe03fbbe51add9f287650"
        ],
        [
            "pose (g := fun x:T => proj1_sig (X x)).",
            "VernacExtend",
            "ecc26b8c70a79178cc6703af175932be70072033"
        ],
        [
            "assert (surjective g).",
            "VernacExtend",
            "70a33816fb8aab5b05debb509060b2aa951c07f0"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "unfold g in H1.",
            "VernacExtend",
            "2f3685ba83e5480792be874fd15280710aeb793f"
        ],
        [
            "repeat destruct X in H1.",
            "VernacExtend",
            "ae66123c9b7f4353d630ec8dc71e41f0d05390ab"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "assert (Some x1 = Some x2).",
            "VernacExtend",
            "5d7c73c0ec5e455c3dc28c742d6c60374e687886"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "injection H2; trivial.",
            "VernacExtend",
            "6ca4b94272c0966592f9176bf09130db719feb41"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "destruct (H1 t).",
            "VernacExtend",
            "56753d37292ac9a857513ca2a1496a7616fedd6c"
        ],
        [
            "unfold g in H2; destruct X in H2.",
            "VernacExtend",
            "4bbb9ef13acdd2f1ffff7001966a08da7751f1de"
        ],
        [
            "simpl in H2.",
            "VernacExtend",
            "b1e247c43b6623097ab13813b4de664287dd4249"
        ],
        [
            "exists (Some x).",
            "VernacExtend",
            "b9fc015361db5d30070bad520dea244ec58deea5"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "exists None.",
            "VernacExtend",
            "9c6725d108313733eda0fba4b5ae46727c2003b2"
        ],
        [
            "symmetry; assumption.",
            "VernacExtend",
            "936f544fa969baad9c600ccc844230fa4d067c8b"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "pose (f' := fun (x:X) => g (f (f0 x))).",
            "VernacExtend",
            "64a7bb26aae1369a02a3d3a74f490dfa292c4adf"
        ],
        [
            "assert (surjective f').",
            "VernacExtend",
            "d81aecaa1b1065c9a421f8924363cb6af8872c6e"
        ],
        [
            "apply IHFiniteT.",
            "VernacExtend",
            "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "unfold f' in H3.",
            "VernacExtend",
            "faf7a881a9cab7757d712095d1d0e5af561e8713"
        ],
        [
            "assert (f (f0 x1) = f (f0 x2)).",
            "VernacExtend",
            "60ce0cca6cb07cb3e6de9e6c4cec84d402f89ac3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "apply H0 in H4.",
            "VernacExtend",
            "deec126e7097cdc2a291133310dd67fe128b7acf"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct (H3 (g y)).",
            "VernacExtend",
            "1ff188dceafc97318ed679fc5349c4b81c3b8dd2"
        ],
        [
            "unfold f' in H4.",
            "VernacExtend",
            "fe3eb9f39009721f47dd9c10413d0de6853613b2"
        ],
        [
            "exists (f0 x).",
            "VernacExtend",
            "8f6c54f7830e60502de08ed2ac28dd6b1a557adf"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_surj_inj: forall (X:Type) (f:X->X), FiniteT X -> surjective f -> FunctionProperties.injective f.",
            "VernacStartTheoremProof",
            "e0bc1226d886377040d8aa009f43229cc8d0a323"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (exists g:X->X, forall x:X, f (g x) = x).",
            "VernacExtend",
            "ba91efa9918f6cb304916b679d0ce66f4e51ff9d"
        ],
        [
            "apply finite_choice with (R:=fun (x y:X) => f y = x).",
            "VernacExtend",
            "fb3a034c7e20a0618eb5653fce250a07fd08be60"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H1 as [g].",
            "VernacExtend",
            "e959e6effdc8ffb2b2160a66871cc4df5dd9b461"
        ],
        [
            "assert (surjective g).",
            "VernacExtend",
            "70a33816fb8aab5b05debb509060b2aa951c07f0"
        ],
        [
            "apply finite_inj_surj.",
            "VernacExtend",
            "29625a35fa82c3bccc3416601734a15285492f64"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite <- H1 with x1.",
            "VernacExtend",
            "c27d09c4c9f6119c54f7bb6aa24d8bee0f85e46a"
        ],
        [
            "rewrite <- H1 with x2.",
            "VernacExtend",
            "aacc361812c3a10cdf2d4af60b5c150beab33694"
        ],
        [
            "rewrite H2; reflexivity.",
            "VernacExtend",
            "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct (H2 x1).",
            "VernacExtend",
            "8978df36fb8b2733a3ea8803beecb16be99beb3b"
        ],
        [
            "destruct (H2 x2).",
            "VernacExtend",
            "b616af6960c074a981b360ea77439526a1f62b56"
        ],
        [
            "rewrite <- H4 in H3.",
            "VernacExtend",
            "e942856bfb4aaf897d4b1f6217838fc9faee9610"
        ],
        [
            "rewrite <- H5 in H3.",
            "VernacExtend",
            "4dc539e92d159b166dd48536867bbf0926230562"
        ],
        [
            "repeat rewrite H1 in H3.",
            "VernacExtend",
            "90c7d27b38c06e6a5cffe88b957162795d49be12"
        ],
        [
            "rewrite <- H4.",
            "VernacExtend",
            "15801069338f53d2cf64b6951fc88c5758e631f8"
        ],
        [
            "rewrite <- H5.",
            "VernacExtend",
            "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_sum: forall X Y:Type, FiniteT X -> FiniteT Y -> FiniteT (X+Y).",
            "VernacStartTheoremProof",
            "e00948725e04188dd5e45504a6bd53cfa3ac10e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "apply bij_finite with _ inl.",
            "VernacExtend",
            "b8619d531c0360177d2465ac0d85e80d85bee82f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "pose (g := fun (x:X+False) => match x with | inl x => x | inr f => False_rect X f end).",
            "VernacExtend",
            "8872d31f4e045d1048cc6adb1a2065e2ae39f5b7"
        ],
        [
            "exists g.",
            "VernacExtend",
            "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
        ],
        [
            "intro; simpl.",
            "VernacExtend",
            "6b02318154ba1426764dbd23d934520cd3e7ae9f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "pose (g := fun (x:option (X+T)) => match x with | Some (inl x) => inl _ x | Some (inr t) => inr _ (Some t) | None => inr _ None end).",
            "VernacExtend",
            "320e78f502d3afb66018b9ca428fdff579b6cced"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply add_finite.",
            "VernacExtend",
            "7f701c3dbaa30d490f031f749254051a750a9832"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "pose (ginv := fun (x:X + option T) => match x with | inl x => Some (inl _ x) | inr (Some t) => Some (inr _ t) | inr None => None end).",
            "VernacExtend",
            "80d1228f396249a116a4107c319967c9f1be6b40"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [[x|t]|]; trivial.",
            "VernacExtend",
            "e76b2e1ea50ff869fed881712216517657859925"
        ],
        [
            "destruct y as [x|[t|]]; trivial.",
            "VernacExtend",
            "edccb6f5604a65ee0014e860f018b4ee9dc4f8d3"
        ],
        [
            "pose (g := fun (x:X+X0) => match x with | inl x0 => inl _ x0 | inr x0 => inr _ (f x0) end).",
            "VernacExtend",
            "4acf2db4520d42f5d01f1fcdabc472285f9f7a0a"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "pose (ginv := fun (x:X+Y) => match x with | inl x0 => inl _ x0 | inr y0 => inr _ (g0 y0) end).",
            "VernacExtend",
            "2ee8f0980f454113cf1fba88bb7e5e1dbde1749a"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [x0|x0]; trivial.",
            "VernacExtend",
            "704be6cfd8d0343f40c5322e5e00639328b111cb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H1; reflexivity.",
            "VernacExtend",
            "78cd8a23170465d8fbd1f52e805fd4772133410f"
        ],
        [
            "destruct y as [x|y0]; trivial.",
            "VernacExtend",
            "9d647f85fca25cc0a90b05ae7b51f0d8efa84899"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H2; reflexivity.",
            "VernacExtend",
            "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_prod: forall (X Y:Type), FiniteT X -> FiniteT Y -> FiniteT (X*Y).",
            "VernacStartTheoremProof",
            "0f3c479cf6e924b9a158deb6e53cb307f4fab1ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "apply bij_finite with _ (False_rect _).",
            "VernacExtend",
            "c8b22ee30ac9c4869fadc1c5c18ddc623a4e50ca"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exists (@snd X False).",
            "VernacExtend",
            "d352b37e66105da2f583aa5ba3434001e202e3bf"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "pose (g := fun (x:X*T + X) => match x with | inl (pair x0 t) => pair x0 (Some t) | inr x0 => pair x0 None end).",
            "VernacExtend",
            "d4e5bc706133555ece83fbcd47a4a0e184ebfc6b"
        ],
        [
            "pose (ginv := fun (x:X * option T) => match x with | (x0, Some t) => inl _ (x0, t) | (x0, None) => inr _ x0 end).",
            "VernacExtend",
            "bf1c5446497a47fe45392767ed1bb1a346a8d255"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply finite_sum.",
            "VernacExtend",
            "5ad5a2092a0f04f53ae58830155f0d824d3d20f2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [[x0 t]|x0]; trivial.",
            "VernacExtend",
            "2f8784fb7bd5ecc5c9334da25ec2ac484a0466f5"
        ],
        [
            "destruct y as [x0 [t|]]; trivial.",
            "VernacExtend",
            "786112e5db229c1db0e0adc143d29540e1633d6b"
        ],
        [
            "pose (g := fun (y:X*X0) => match y with | pair x x0 => pair x (f x0) end).",
            "VernacExtend",
            "99ce98e64d2f5a32c0579494c33ff0c4311a89a9"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "pose (ginv := fun (y:X*Y) => let (x,y0) := y in (x, g0 y0)).",
            "VernacExtend",
            "3cd24b2bce945e06ad9163bc767fd2e6fb7fc604"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [x x0]; unfold ginv, g; try rewrite H1; trivial.",
            "VernacExtend",
            "d054126224b99aaf98c2e2d0c965e488e6a65aaa"
        ],
        [
            "destruct y as [x y]; unfold ginv, g; try rewrite H2; trivial.",
            "VernacExtend",
            "341210bd156e1878f9bf7d68dd4f692d80e448dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import FunctionalExtensionality.",
            "VernacRequire",
            "bb1bf6a28f9de1b2ad0dab7920189198216ed486"
        ],
        [
            "Lemma finite_exp: forall X Y:Type, FiniteT X -> FiniteT Y -> FiniteT (X->Y).",
            "VernacStartTheoremProof",
            "beb1b8b369b72a956ba63e81307d005deefe7582"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "pose (g := fun (x:True) (f:False) => False_rect Y f).",
            "VernacExtend",
            "d3883439cb57045d4feb8f2c53589db6d1746fbf"
        ],
        [
            "pose (ginv := fun (_:False->Y) => I).",
            "VernacExtend",
            "e7d9839d2133db45bfcd765abb6b50652cc216df"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply True_finite.",
            "VernacExtend",
            "dc16a5a462c4fe488e0cc3551ed4bcd49cdb581b"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [].",
            "VernacExtend",
            "4463ad5b67651258ab720bab5c13c15d87c2d008"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro; extensionality f.",
            "VernacExtend",
            "5299994bccdd2c015d68e778b35cebacdd5fcd13"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "pose (g := fun (p:(T->Y)*Y) (x:option T) => let (f,y0) := p in match x with | Some x0 => f x0 | None => y0 end).",
            "VernacExtend",
            "88be9497e4be5399fcc87dd69d7dddb5b5d21cbc"
        ],
        [
            "pose (ginv := fun (f:option T->Y) => (fun x:T => f (Some x), f None)).",
            "VernacExtend",
            "ee128303a69b40bca9edadbaf63b51bac1625f29"
        ],
        [
            "apply bij_finite with _ g.",
            "VernacExtend",
            "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
        ],
        [
            "apply finite_prod.",
            "VernacExtend",
            "3c3f77fcdf7d5c616e65963cb2dbbe7d9cf95005"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists ginv.",
            "VernacExtend",
            "71cd34c56fbba674a2a1fcfc383d70b210c11751"
        ],
        [
            "destruct x as [f y0]; try extensionality t; try destruct t as [t0|]; trivial.",
            "VernacExtend",
            "b2117dc084d42782ed4ce154a0192abfbe9636e7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "extensionality t; destruct t as [t0|]; trivial.",
            "VernacExtend",
            "ef0632da67a4c5d897a9fa69511551a4261ba985"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "pose (g0 := fun (h:X->Y) (y:Y0) => h (g y)).",
            "VernacExtend",
            "86958ff5dc1e61021d4ae84f4c1aae537a182bcf"
        ],
        [
            "apply bij_finite with _ g0.",
            "VernacExtend",
            "830e288c02eb87443e3c2d7c989dbafe8df8c0e3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "pose (g0inv := fun (h:Y0->Y) (x:X) => h (f x)).",
            "VernacExtend",
            "fe9c1c2df4a0406e6acb4b11caa318d19b653b63"
        ],
        [
            "exists g0inv.",
            "VernacExtend",
            "5f404376e2e1f4420ce7403bf97c2681f15cc5e6"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "extensionality x0; unfold g0; unfold g0inv; simpl.",
            "VernacExtend",
            "20b01ed39798b58ce3d783f78c59eac6f7ff8746"
        ],
        [
            "rewrite H1; reflexivity.",
            "VernacExtend",
            "78cd8a23170465d8fbd1f52e805fd4772133410f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "extensionality y0; unfold g0; unfold g0inv; simpl.",
            "VernacExtend",
            "34aeb0c627bdfd2b1feb5f746a3e9f8f3e37779e"
        ],
        [
            "rewrite H2; reflexivity.",
            "VernacExtend",
            "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FiniteT_has_nat_cardinal: forall X:Type, FiniteT X -> exists! n:nat, cardinal _ (@Full_set X) n.",
            "VernacStartTheoremProof",
            "db06c546f0fc16ffed3eb49a2a0b5a778a98d1e3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply -> unique_existence; split.",
            "VernacExtend",
            "ad4085619486794b0f51dc2939aba81209a50ecf"
        ],
        [
            "apply finite_cardinal.",
            "VernacExtend",
            "de2302f7a8cbd80754f6a0baee5d2772b56801a8"
        ],
        [
            "pose (idX := fun x:X => x).",
            "VernacExtend",
            "c28a538df1c19eb8e2e12be7dfbd8403acfbded6"
        ],
        [
            "assert (Im Full_set idX = Full_set).",
            "VernacExtend",
            "41cff86bc1d4a3653282985f8902a4474aa78ea8"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "red; split.",
            "VernacExtend",
            "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
        ],
        [
            "red; intros; constructor.",
            "VernacExtend",
            "9d288f98edf0fef9bfeb189baabb9d79c6ad0f4a"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply FiniteT_img with (f:=fun x:X => x).",
            "VernacExtend",
            "00cff2b8bf73283ca950d4c3829c332bd0176bd6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case (finite_eq_dec X H y1 y2); tauto.",
            "VernacExtend",
            "05e3198c592d379a3c7672b66ddfbc4a453f367c"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply cardinal_unicity with X Full_set; trivial.",
            "VernacExtend",
            "5846e98885a3fc24d67ce441901d9324be67b3bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition FiniteT_nat_cardinal (X:Type) (H:FiniteT X) : nat := proj1_sig (constructive_definite_description _ (FiniteT_has_nat_cardinal X H)).",
            "VernacDefinition",
            "578f7f0f894d469883c5e6c91c0dc6c32b81578a"
        ],
        [
            "Lemma FiniteT_nat_cardinal_def: forall (X:Type) (H:FiniteT X), cardinal _ (@Full_set X) (FiniteT_nat_cardinal X H).",
            "VernacStartTheoremProof",
            "feea413127c1ecf46cc52ed29d2a0ff8220eea41"
        ],
        [
            "intros; unfold FiniteT_nat_cardinal.",
            "VernacExtend",
            "0f4fabfaf7bb04bff356150f2c527ffc99a3ffa4"
        ],
        [
            "destruct constructive_definite_description.",
            "VernacExtend",
            "829d8d5f94eade89ac56143f6cb0d4f177a6e743"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FiniteT_nat_cardinal_cond: forall (X:Type) (H:FiniteT X) (n:nat), cardinal _ (@Full_set X) n -> FiniteT_nat_cardinal X H = n.",
            "VernacStartTheoremProof",
            "8fb2ad45f64262a9d22f63d7af934c8189f50114"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pose proof (FiniteT_has_nat_cardinal X H).",
            "VernacExtend",
            "f227a2024904e0abf9c1b707212f8b2add27b465"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "red in H1.",
            "VernacExtend",
            "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "transitivity x.",
            "VernacExtend",
            "851897936e3ded114b4b5935067c48265cc501b1"
        ],
        [
            "symmetry; apply H2.",
            "VernacExtend",
            "bdbf0edcb2b967bc66b8ce8578b2d558a89bd49c"
        ],
        [
            "apply FiniteT_nat_cardinal_def.",
            "VernacExtend",
            "e50baee43bb13e77fb738f57c7fca426c84f99b6"
        ],
        [
            "apply H2; trivial.",
            "VernacExtend",
            "91036970bc344118009ef71eaf39ec9fc45e9ef2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FiniteT_nat_cardinal_False: FiniteT_nat_cardinal False empty_finite = 0.",
            "VernacStartTheoremProof",
            "24dc78ae0dc45f93d85bfc4c64884b9eb1d1d2a8"
        ],
        [
            "apply FiniteT_nat_cardinal_cond.",
            "VernacExtend",
            "e86ac3e9a8c105d021adca75befd73c318330297"
        ],
        [
            "assert (@Full_set False = @Empty_set False).",
            "VernacExtend",
            "59da631c7bc16e4896f786ae515210649f0d0fa5"
        ],
        [
            "apply Extensionality_Ensembles; red; split; auto with sets.",
            "VernacExtend",
            "4e3477e9f7709d4bbbd9fcf0c819b7062e549f98"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injection_preserves_cardinal: forall (X Y:Type) (f:X->Y) (n:nat) (S:Ensemble X), cardinal _ S n -> injective f -> cardinal _ (Im S f) n.",
            "VernacStartTheoremProof",
            "844b1004ad30db15a906c0f2067f1f3f4629f640"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "assert (Im Empty_set f = Empty_set).",
            "VernacExtend",
            "8c0d6749980401bfe7a5e5a0a9730e4a834373fa"
        ],
        [
            "apply Extensionality_Ensembles; split; auto with sets.",
            "VernacExtend",
            "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "rewrite H; constructor.",
            "VernacExtend",
            "120a7e910e6db2155c79f9e0dbe70976e2a82781"
        ],
        [
            "assert (Im (Add A x) f = Add (Im A f) (f x)).",
            "VernacExtend",
            "9c9fd3a783112968313faa8354c61b3641bf5f8d"
        ],
        [
            "apply Extensionality_Ensembles; split.",
            "VernacExtend",
            "a4c57ea69808be923621e13ef05d8e11d11caf6f"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "symmetry in H3; destruct H3.",
            "VernacExtend",
            "ab651a2f8618052f1de12f71437d99f77ab51225"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "left; exists x0; auto with sets.",
            "VernacExtend",
            "f1fe6a1af36e3c3c0a0f817c28a6f77734e4b4c1"
        ],
        [
            "destruct H2; right; auto with sets.",
            "VernacExtend",
            "43620753bdd95d44d8674e5353b48d9e032e7d76"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "left; auto with sets.",
            "VernacExtend",
            "4e75acc31e799625dd79e2b723ecf84093483ec5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "exists x; trivial; right; auto with sets.",
            "VernacExtend",
            "eaf05f0f3cb196c07fe6d2ca9fc03ac24b8cf190"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "red; intro H3; inversion H3.",
            "VernacExtend",
            "713feca38596222f9830755456c411748a3bda38"
        ],
        [
            "apply H0 in H5; destruct H5.",
            "VernacExtend",
            "9a78b6844aa706d9822c9aecff2af5c89cef63e0"
        ],
        [
            "contradiction H1.",
            "VernacExtend",
            "93a068a62d2389ca7d67d8eaeabac4ea3b9ebd83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FiniteT_nat_cardinal_option: forall (X:Type) (H:FiniteT X), FiniteT_nat_cardinal (option X) (add_finite X H) = S (FiniteT_nat_cardinal X H).",
            "VernacStartTheoremProof",
            "8f057e6605ac3ef5d680ebc6df0a6c29b01f33a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply FiniteT_nat_cardinal_cond.",
            "VernacExtend",
            "e86ac3e9a8c105d021adca75befd73c318330297"
        ],
        [
            "assert (Full_set = Add (Im Full_set (@Some X)) None).",
            "VernacExtend",
            "45bde8b2fc8909c6f72566c92ecd37ec74cc2dde"
        ],
        [
            "apply Extensionality_Ensembles; split.",
            "VernacExtend",
            "a4c57ea69808be923621e13ef05d8e11d11caf6f"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x.",
            "VernacExtend",
            "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
        ],
        [
            "left; exists x; constructor.",
            "VernacExtend",
            "09c70e3e2578539013ea8f64349d1d1a0c47a613"
        ],
        [
            "right; constructor.",
            "VernacExtend",
            "f37b3808039fee4ea721bd0b9bd023d377f00b17"
        ],
        [
            "red; intros; constructor.",
            "VernacExtend",
            "9d288f98edf0fef9bfeb189baabb9d79c6ad0f4a"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply injection_preserves_cardinal.",
            "VernacExtend",
            "7ff3de1af7b1cabf51a8104bfb39da6c38e34d4e"
        ],
        [
            "apply FiniteT_nat_cardinal_def.",
            "VernacExtend",
            "e50baee43bb13e77fb738f57c7fca426c84f99b6"
        ],
        [
            "red; intros x1 x2 Heq; injection Heq; trivial.",
            "VernacExtend",
            "04c57efa6fb67b9f5da78d94fd33fc232142cff4"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "discriminate H3.",
            "VernacExtend",
            "42ee32f33d2232da4875a8e203910564c8735b6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FiniteT_nat_cardinal_bijection: forall (X Y:Type) (H:FiniteT X) (g:X->Y) (Hinv:invertible g), FiniteT_nat_cardinal Y (bij_finite X Y g H Hinv) = FiniteT_nat_cardinal X H.",
            "VernacStartTheoremProof",
            "0da8514036e9c1d51424097f8c37c7bdba9f64a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply FiniteT_nat_cardinal_cond.",
            "VernacExtend",
            "e86ac3e9a8c105d021adca75befd73c318330297"
        ],
        [
            "apply invertible_impl_bijective in Hinv.",
            "VernacExtend",
            "405a63c51ab2a5987139db117e657b8662a5a7c2"
        ],
        [
            "destruct Hinv as [g_inj g_surj].",
            "VernacExtend",
            "b5f390b0a0d5f7de9fdb85282ff3811e5446b1e2"
        ],
        [
            "assert (Full_set = Im Full_set g).",
            "VernacExtend",
            "d676667744396155a79b5d57605d40bed7633002"
        ],
        [
            "apply Extensionality_Ensembles; split; red; intros; try constructor.",
            "VernacExtend",
            "607d73187f94dc11ae502136095b7f16d329c31f"
        ],
        [
            "destruct (g_surj x).",
            "VernacExtend",
            "d3b2fab85a2b836e0d07957bbadfa5909ba17b5a"
        ],
        [
            "exists x0; try constructor; auto.",
            "VernacExtend",
            "c61ef6e6c2edfc174c0131c4b776f69efede4c54"
        ],
        [
            "rewrite H0; apply injection_preserves_cardinal; trivial.",
            "VernacExtend",
            "9dd3256825011545f6090e5820e6952bba401b32"
        ],
        [
            "apply FiniteT_nat_cardinal_def.",
            "VernacExtend",
            "e50baee43bb13e77fb738f57c7fca426c84f99b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unique_FiniteT_nat_cardinal: exists! f: (forall (X:Type), FiniteT X -> nat), f False empty_finite = 0 /\\ (forall (X:Type) (H:FiniteT X), f (option X) (add_finite X H) = S (f X H)) /\\ (forall (X Y:Type) (H:FiniteT X) (g:X->Y) (Hinv:invertible g), f Y (bij_finite X Y g H Hinv) = f X H).",
            "VernacStartTheoremProof",
            "7b486183ab624e2e741b3842cd2613d7d4b299cf"
        ],
        [
            "match goal with |- @ex ?T (@unique ?T ?f) => apply -> (@unique_existence T f) end.",
            "VernacExtend",
            "c18061219e852e21ba3b543ff6d1da2d18a14751"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists FiniteT_nat_cardinal.",
            "VernacExtend",
            "98130b5d1679783657292c295334f80fb43bcc89"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "exact FiniteT_nat_cardinal_False.",
            "VernacExtend",
            "b7167ba7688e52b6166e50cd87e7e8be73f56ed4"
        ],
        [
            "exact FiniteT_nat_cardinal_option.",
            "VernacExtend",
            "47e583c9462b7be2e41db464ba8a1af8c435c2b6"
        ],
        [
            "exact FiniteT_nat_cardinal_bijection.",
            "VernacExtend",
            "5fbdcfaa49ef2cfbbe0806f7b163a192ec107a52"
        ],
        [
            "red; intros f g Hf Hg.",
            "VernacExtend",
            "6e12efbf55b6769255d16f2b0233c400430a1823"
        ],
        [
            "destruct Hf as [HFalse_f [Hoption_f Hbijection_f]].",
            "VernacExtend",
            "695b9be63014a8aa9deb8db8d29d0f3cf014ca6b"
        ],
        [
            "destruct Hg as [HFalse_g [Hoption_g Hbijection_g]].",
            "VernacExtend",
            "3e96203d5cf03be259c4b6289904166a577ae777"
        ],
        [
            "extensionality X; extensionality HFinite.",
            "VernacExtend",
            "527d5fadcd07687298be841c5c25edbf39a60145"
        ],
        [
            "generalize HFinite.",
            "VernacExtend",
            "d86eea1297618690bfc908bfb8b0f30b825d5417"
        ],
        [
            "induction HFinite.",
            "VernacExtend",
            "c2600e4cf79fec414c97c4f1f53d07c062e5ed00"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (proof_irrelevance _ empty_finite HFinite).",
            "VernacExtend",
            "2613384d19e20f58c5a6278456149c15f9b84b0c"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (proof_irrelevance _ (add_finite T HFinite) HFinite0).",
            "VernacExtend",
            "6471060a828e543fcbb04db06d080ba26e306bbe"
        ],
        [
            "rewrite Hoption_f.",
            "VernacExtend",
            "43e8b9b7e8510eb719434f8e41d0a7b306178b92"
        ],
        [
            "rewrite Hoption_g.",
            "VernacExtend",
            "6d8a19b44cda5a6095c84715d7ea6fdb96e7413d"
        ],
        [
            "rewrite IHHFinite.",
            "VernacExtend",
            "9558456cd5813d57637af40e27170101c1d8a7dd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (proof_irrelevance _ (bij_finite _ _ f0 HFinite H) HFinite0).",
            "VernacExtend",
            "d43766576fe9a8528644b7383a416345d32b98fa"
        ],
        [
            "now rewrite Hbijection_f, Hbijection_g, IHHFinite.",
            "VernacExtend",
            "3bcdbe591295fc735e887faa1e19f6d4cec22474"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "True_finite",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "apply bij_finite with (option False) (fun _ => I).",
                        "VernacExtend",
                        "69fec6948e12d72bd88075c2e104f7d990ad7dfa"
                    ]
                },
                {
                    "command": [
                        "constructor; constructor.",
                        "VernacExtend",
                        "972688013a1aca9db3fea43a5edc8228f5b8e1bd"
                    ]
                },
                {
                    "command": [
                        "exists (True_rect None).",
                        "VernacExtend",
                        "6e5c1ad0e68c5637640bae66c32436b63855a4ee"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[]|].",
                        "VernacExtend",
                        "a8f502e2c74257d0d1aaa199ba2c6f36d314e423"
                    ]
                },
                {
                    "command": [
                        "remember (True_rect (@None False) I) as LHS.",
                        "VernacExtend",
                        "67581ac1d888d4acaf4e1a323fc5e5d2a685482b"
                    ]
                },
                {
                    "command": [
                        "destruct LHS as [[]|].",
                        "VernacExtend",
                        "1e0ddbb45de8d0a6dd8f54058faed63827b64c31"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "exact (fun y:True => match y with | I => refl_equal I end).",
                        "VernacExtend",
                        "90905651b3585e413dca67d99fc8673b0c270deb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_dec_exists",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply exclusive_dec.",
                        "VernacExtend",
                        "bb6396dc7583c2a90b9f2e5ae9c04c9c81b5604b"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "contradiction (H1 x).",
                        "VernacExtend",
                        "4ed8a789000192b8b8dc17912af822e43bd7a7a9"
                    ]
                },
                {
                    "command": [
                        "revert P X0.",
                        "VernacExtend",
                        "a2c6144981bb15ac43d0326bb488b8d6ee047071"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (IHFiniteT (fun x:T => P (Some x)) (fun x:T => X0 (Some x))).",
                        "VernacExtend",
                        "f138292d158b02b7b57c0768c2c9fc03ad9bec70"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "exists (Some x).",
                        "VernacExtend",
                        "b9fc015361db5d30070bad520dea244ec58deea5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case (X0 None).",
                        "VernacExtend",
                        "7ae58d628e2a53b6d816ca6736973ecb7c842724"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists None.",
                        "VernacExtend",
                        "9c6725d108313733eda0fba4b5ae46727c2003b2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (IHFiniteT (fun x:X => P (f x)) (fun x:X => X0 (f x))).",
                        "VernacExtend",
                        "91c7dfc4a2d66b80a332f3c33eb42e30c2f58f68"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists (f x).",
                        "VernacExtend",
                        "82d0433c52def299dae52e00c1bf42867054c8b7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1 with x.",
                        "VernacExtend",
                        "46c64fac4aba225feca3c90b6d7360764f23c6a0"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_dec_forall",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply exclusive_dec.",
                        "VernacExtend",
                        "bb6396dc7583c2a90b9f2e5ae9c04c9c81b5604b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "contradiction (H1 x).",
                        "VernacExtend",
                        "4ed8a789000192b8b8dc17912af822e43bd7a7a9"
                    ]
                },
                {
                    "command": [
                        "revert P X0.",
                        "VernacExtend",
                        "a2c6144981bb15ac43d0326bb488b8d6ee047071"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (IHFiniteT (fun x:T => P (Some x)) (fun x:T => X0 (Some x))).",
                        "VernacExtend",
                        "f138292d158b02b7b57c0768c2c9fc03ad9bec70"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "case (X0 None).",
                        "VernacExtend",
                        "7ae58d628e2a53b6d816ca6736973ecb7c842724"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists None.",
                        "VernacExtend",
                        "9c6725d108313733eda0fba4b5ae46727c2003b2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "exists (Some x).",
                        "VernacExtend",
                        "b9fc015361db5d30070bad520dea244ec58deea5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "case (IHFiniteT (fun x:X => P (f x)) (fun x:X => X0 (f x))).",
                        "VernacExtend",
                        "91c7dfc4a2d66b80a332f3c33eb42e30c2f58f68"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists (f x).",
                        "VernacExtend",
                        "82d0433c52def299dae52e00c1bf42867054c8b7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_eq_dec",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply decidable_dec.",
                        "VernacExtend",
                        "7a8646a16403bd77db630c6e45d8235f733699d9"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "case (IHFiniteT (g x) (g y)).",
                        "VernacExtend",
                        "13f9a934ee07efd153cd967d91bf34bb4fc93f31"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1 with x.",
                        "VernacExtend",
                        "46c64fac4aba225feca3c90b6d7360764f23c6a0"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "contradict H2.",
                        "VernacExtend",
                        "d4cda720f35db691740b164be124338be464d95c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_dep_choice",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "revert B R H0.",
                        "VernacExtend",
                        "ee65587bd6399f1baccb17c73b9969f87854a1ac"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists (fun x:False => False_rect (B x) x).",
                        "VernacExtend",
                        "f26dec2745602de7b70217317346ba67b44eba87"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (IHFiniteT (fun x:T => B (Some x)) (fun x:T => R (Some x)) (fun x:T => H0 (Some x))).",
                        "VernacExtend",
                        "c251b5d7aecde0a6a46d785a477968c8d96edf5d"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "pose proof (H0 None).",
                        "VernacExtend",
                        "e5d02e489b8668524d4fcf001aba41644cd98e74"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists (fun y:option T => match y return (B y) with | Some y0 => x y0 | None => x0 end).",
                        "VernacExtend",
                        "ba06c8e6d20d4385511a5968251bc55d49bc99dd"
                    ]
                },
                {
                    "command": [
                        "destruct x1.",
                        "VernacExtend",
                        "ff1dad6ec5db7ff89c9cf6f997a051344d995417"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "pose proof (IHFiniteT (fun x:X => B (f x)) (fun x:X => R (f x)) (fun x:X => H1 (f x))).",
                        "VernacExtend",
                        "2a569817dccb60b1477fe1c8cf7c2810ff245fcd"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "pose (f0 := fun y:Y => x (g y)).",
                        "VernacExtend",
                        "8b7abfb4ff785c2c3a5aaad5b90f1e82c3a8016f"
                    ]
                },
                {
                    "command": [
                        "pose (conv := fun (y:Y) (a:B (f (g y))) => eq_rect (f (g y)) B a y (H2 y)).",
                        "VernacExtend",
                        "1c09ef26acf814138eca7f3aabd96d9f31ee6a7c"
                    ]
                },
                {
                    "command": [
                        "exists (fun y:Y => conv y (x (g y))).",
                        "VernacExtend",
                        "8c8569e902f962a72820c0db334ef1e2f763c4ca"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold conv; simpl.",
                        "VernacExtend",
                        "87a3643346c1938f96216c17833e792f488a90b0"
                    ]
                },
                {
                    "command": [
                        "generalize (H2 x0).",
                        "VernacExtend",
                        "962118ed3438a722850469a4d0479983973698d9"
                    ]
                },
                {
                    "command": [
                        "pattern x0 at 2 3 6.",
                        "VernacExtend",
                        "3ecda000217613509a87bb5035a0a20cb5bddbbd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite <- eq_rect_eq.",
                        "VernacExtend",
                        "8ffe1bc1c9d65ceb90b997a5745ab4bd618c3a24"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_choice",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply finite_dep_choice.",
                        "VernacExtend",
                        "6852d76b91bf32d942da17da3ffa69f10c98940f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Finite_ens_type",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with False (False_rect _).",
                        "VernacExtend",
                        "256d9f76bc7a06ae1ac00a5de84c5cc223e61cfd"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assert (g:{x:X | In Empty_set x}->False).",
                        "VernacExtend",
                        "597d8a81b3ac6a13e29602485acf073c801ec1cf"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct X0.",
                        "VernacExtend",
                        "2568f430ad04c5f0bdd0365ee7a39953fa8b654c"
                    ]
                },
                {
                    "command": [
                        "destruct i.",
                        "VernacExtend",
                        "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
                    ]
                },
                {
                    "command": [
                        "exists g.",
                        "VernacExtend",
                        "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "destruct g.",
                        "VernacExtend",
                        "58c12597ac8434a7c2475af42670d77056ce85a1"
                    ]
                },
                {
                    "command": [
                        "assert (Included A (Add A x)).",
                        "VernacExtend",
                        "974d8eea2b4e4dfdbc8458056316a85ef646b65c"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "assert (In (Add A x) x).",
                        "VernacExtend",
                        "69fe603448013ffbaa7ba3c0226191f34cf6a305"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (y: option {x:X | In A x}) => match y return {x0:X | In (Add A x) x0} with | Some (exist y0 i) => exist (fun x2:X => In (Add A x) x2) y0 (H1 y0 i) | None => exist (fun x2:X => In (Add A x) x2) x H2 end).",
                        "VernacExtend",
                        "c10875d4df33f639402e78903cca42d73e787e8c"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply add_finite.",
                        "VernacExtend",
                        "7f701c3dbaa30d490f031f749254051a750a9832"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (h:forall x0:X, In (Add A x) x0 -> { In A x0 } + { x0 = x }).",
                        "VernacExtend",
                        "2887cfdb3ba062a18d413013d75ee5f94ff99231"
                    ]
                },
                {
                    "command": [
                        "intros; apply exclusive_dec.",
                        "VernacExtend",
                        "c40c7d807018869edf977031704628a3c90c078c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct H6; auto.",
                        "VernacExtend",
                        "b61052e58c81702988f18bc031fec49789ec75c8"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "right; destruct H3; reflexivity.",
                        "VernacExtend",
                        "306f4d72272611e165672def9522baa9a49fb0ee"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun s:{x0:X | In (Add A x) x0} => match s return option {x:X | In A x} with | exist x0 i => match (h x0 i) with | left iA => Some (exist _ x0 iA) | right _ => None end end).",
                        "VernacExtend",
                        "aaf013877114ab0fb1e9bb3634f0f4aaa6e69a2e"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "intro; destruct x0.",
                        "VernacExtend",
                        "96a5715ebfbccbe687506bb9bdf192e4621defff"
                    ]
                },
                {
                    "command": [
                        "destruct s.",
                        "VernacExtend",
                        "25b900e268e7851d959aa45edce33af62b3fca65"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "remember (h x0 (H1 x0 i)) as sum; destruct sum.",
                        "VernacExtend",
                        "af81110e411e93a37494301f91295819c5d7118a"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ i i0).",
                        "VernacExtend",
                        "79ffc064b748309b6f382fde59dbf539530905d9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "contradiction H0.",
                        "VernacExtend",
                        "198cc5fe08678df71b7d70ff1acc682532bbeeca"
                    ]
                },
                {
                    "command": [
                        "rewrite <- e; assumption.",
                        "VernacExtend",
                        "acd1a3b9e4e3c5a3b65d84614a27f0640eb7cfdd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "remember (h x H2) as sum; destruct sum.",
                        "VernacExtend",
                        "ce2e1f0058528d9d7b51830593eb494012fe230d"
                    ]
                },
                {
                    "command": [
                        "contradiction H0.",
                        "VernacExtend",
                        "198cc5fe08678df71b7d70ff1acc682532bbeeca"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold ginv.",
                        "VernacExtend",
                        "18daa86125972b562cc93c85cdddefb5f6a74984"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "destruct (h x0 i).",
                        "VernacExtend",
                        "ade274421d6633439f1c68f276fa14f81db8b3d3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (H1 x0 i0); intro.",
                        "VernacExtend",
                        "b6ec97a8b2ac1b8056bf66834ff410943d2d3cb3"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ i i1).",
                        "VernacExtend",
                        "5e673c3a36c724d075b1c7de7d452063d9e7da0f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct e.",
                        "VernacExtend",
                        "6785fac4a52839433f2a36a721f6e0fc71773d77"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ H2 i).",
                        "VernacExtend",
                        "1d1a7f4d7cb75d931ae5f01da33630a3f4ac928e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_img",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "assert (Im Full_set f = Empty_set).",
                        "VernacExtend",
                        "74c6096772f0214dfa613e9881aa946b6f5cd0b2"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "red; split.",
                        "VernacExtend",
                        "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assert ({exists x:T, f (Some x) = f None} + {forall x:T, f (Some x) <> f None}).",
                        "VernacExtend",
                        "f4f22b70981238774b278474644df2e299056560"
                    ]
                },
                {
                    "command": [
                        "apply finite_dec_exists.",
                        "VernacExtend",
                        "ff19429b88cb81d78902b220050d9694117d5b32"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply decidable_dec.",
                        "VernacExtend",
                        "7a8646a16403bd77db630c6e45d8235f733699d9"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "case H1.",
                        "VernacExtend",
                        "a1cc2c5b7545de9abe2fa54c801395a452f26f10"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:T) => f (Some x)).",
                        "VernacExtend",
                        "787476b92f0127745ed11048edf4bbb99422bef1"
                    ]
                },
                {
                    "command": [
                        "assert (Im Full_set f = Im Full_set g).",
                        "VernacExtend",
                        "44c393066cc05be328fdc20f7e919a81bce5012b"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "red; split.",
                        "VernacExtend",
                        "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "exists t.",
                        "VernacExtend",
                        "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct e.",
                        "VernacExtend",
                        "6785fac4a52839433f2a36a721f6e0fc71773d77"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "transitivity (f None).",
                        "VernacExtend",
                        "18d545ad7bbc75cd7362c5fd8a0e97bc4c58cf09"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists (Some x).",
                        "VernacExtend",
                        "b9fc015361db5d30070bad520dea244ec58deea5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun x:T => f (Some x)).",
                        "VernacExtend",
                        "787476b92f0127745ed11048edf4bbb99422bef1"
                    ]
                },
                {
                    "command": [
                        "assert (Im Full_set f = Add (Im Full_set g) (f None)).",
                        "VernacExtend",
                        "08d38c658e30b000b50ef23def47ca40f93e98a8"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "red; split.",
                        "VernacExtend",
                        "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists t.",
                        "VernacExtend",
                        "1970ed3dcf3aed959b3c5a6207f3f37122ce8608"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists (Some x).",
                        "VernacExtend",
                        "b9fc015361db5d30070bad520dea244ec58deea5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists None.",
                        "VernacExtend",
                        "9c6725d108313733eda0fba4b5ae46727c2003b2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "contradiction (n x).",
                        "VernacExtend",
                        "fdd0ca4eeaa269ad4ab3dbe27629aeac5114d244"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:X) => f (f0 x)).",
                        "VernacExtend",
                        "aa3eb1393dc32e521ce020f62d6a374adccb1ccf"
                    ]
                },
                {
                    "command": [
                        "assert (Im Full_set f = Im Full_set g).",
                        "VernacExtend",
                        "44c393066cc05be328fdc20f7e919a81bce5012b"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "red; split.",
                        "VernacExtend",
                        "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4 with x.",
                        "VernacExtend",
                        "093fa70f01946396568afa7d71cc081e7179e106"
                    ]
                },
                {
                    "command": [
                        "exists (g0 x).",
                        "VernacExtend",
                        "b287b645b01aeadb665189ae6dd4fdf5c7f1dcfe"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "unfold g.",
                        "VernacExtend",
                        "fd78415b188602b878d030c2cbc915af33ab1e1d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists (f0 x).",
                        "VernacExtend",
                        "8f6c54f7830e60502de08ed2ac28dd6b1a557adf"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "surj_finite",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with {y:Y | In (Im Full_set f) y} (@proj1_sig _ (fun y:Y => In (Im Full_set f) y)).",
                        "VernacExtend",
                        "0fa78e01229b15f951ab5f6bc5e2fb3d44823c68"
                    ]
                },
                {
                    "command": [
                        "apply Finite_ens_type.",
                        "VernacExtend",
                        "07a369d07d2546b004f50e1393cfece6fb7eaddb"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_img.",
                        "VernacExtend",
                        "538e66e7585c29985235e1eebec0578e3ac259ce"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (forall y:Y, In (Im Full_set f) y).",
                        "VernacExtend",
                        "37e95b0e94963b79cdbfb1cf104bbf4035b79f77"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 y).",
                        "VernacExtend",
                        "551c7bbd1b22d6bfc742c622d909daea765118f7"
                    ]
                },
                {
                    "command": [
                        "exists x; auto with sets.",
                        "VernacExtend",
                        "84de534c617ae30322cea69828c06843e5da7542"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "pose (proj1_sig_inv := fun y:Y => exist (fun y0:Y => In (Im Full_set f) y0) y (H2 y)).",
                        "VernacExtend",
                        "d3d574928ff4c8bd44d3baf4a1a7a9a436b0c8dc"
                    ]
                },
                {
                    "command": [
                        "exists proj1_sig_inv.",
                        "VernacExtend",
                        "a8775c81847d2dc285bb10602e3180cd23572625"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold proj1_sig_inv.",
                        "VernacExtend",
                        "5d34c4e36642bb22cec8b7ab590b7259e4822dcb"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ (H2 x) i); trivial.",
                        "VernacExtend",
                        "c16ceee5722cc3a53c7b9cb810dc65021bfe7722"
                    ]
                },
                {
                    "command": [
                        "intros; simpl; reflexivity.",
                        "VernacExtend",
                        "854cdc9d9e97990c301aa41eba8e57e0e92b6986"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_subtype",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with False (False_rect _).",
                        "VernacExtend",
                        "256d9f76bc7a06ae1ac00a5de84c5cc223e61cfd"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exists (@proj1_sig _ _).",
                        "VernacExtend",
                        "e83fef4bf6ba461dd8eb69429e03e34536f829b7"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "intro s; destruct s; destruct x.",
                        "VernacExtend",
                        "91d2c098aa876aeb12162c0f68fc67a1498b0f03"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 None).",
                        "VernacExtend",
                        "ecfa010b8a0ecb935247f5eeefed1170e56cb13a"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:option {x:T | P (Some x)}) => match x return {x:option T | P x} with | Some (exist x0 i) => exist (fun x:option T => P x) (Some x0) i | None => exist (fun x:option T => P x) None H1 end).",
                        "VernacExtend",
                        "24a7b4396271481caea5d496e62d5c94179ae726"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply add_finite.",
                        "VernacExtend",
                        "7f701c3dbaa30d490f031f749254051a750a9832"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "intro; apply H0.",
                        "VernacExtend",
                        "c8895980465e8fb07e4c7d46c295473cd3994e2f"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (s:{x0:option T | P x0}) => match s return option {x:T | P (Some x)} with | exist (Some x0) i => Some (exist (fun y:T => P (Some y)) x0 i) | exist None _ => None end).",
                        "VernacExtend",
                        "d58cd1e63f2d66b8abdbf10e33a6f126a9d4e4b3"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[x0]|].",
                        "VernacExtend",
                        "1740c53bd7eeafec447edfbc6cd8b4aa9ce14f0f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct y as [[x0|]].",
                        "VernacExtend",
                        "200d9ec7b0c09a2cf89dd654f70714ae83e8053c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ H1 p).",
                        "VernacExtend",
                        "2bb517f1770aae02874f897f9b438451d9de8da1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:{x:T | P (Some x)}) => match x return {x:option T | P x} with | exist x0 i => exist (fun x:option T => P x) (Some x0) i end).",
                        "VernacExtend",
                        "bca4de3fbb0f26d8700adfc456f60779c9c9d451"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "intro; apply H0.",
                        "VernacExtend",
                        "c8895980465e8fb07e4c7d46c295473cd3994e2f"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun s:{x0:option T | P x0} => match s return {x:T | P (Some x)} with | exist (Some x0) i => exist (fun x:T => P (Some x)) x0 i | exist None i => False_rect _ (H1 i) end).",
                        "VernacExtend",
                        "38b4c54a24a49bf1f7bb783ab5875516f783bc0a"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct y as [[x0|]].",
                        "VernacExtend",
                        "200d9ec7b0c09a2cf89dd654f70714ae83e8053c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "contradiction H1.",
                        "VernacExtend",
                        "93a068a62d2389ca7d67d8eaeabac4ea3b9ebd83"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:{x:X | P (f x)}) => match x with | exist x0 i => exist (fun x:Y => P x) (f x0) i end).",
                        "VernacExtend",
                        "d7a29a36af44793e7de796bd1bbbb215fbc32264"
                    ]
                },
                {
                    "command": [
                        "apply (bij_finite _ _ g).",
                        "VernacExtend",
                        "e054b4cd8e6c116012e77d9db0548ff71b3155ac"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "intro; apply H0.",
                        "VernacExtend",
                        "c8895980465e8fb07e4c7d46c295473cd3994e2f"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "assert (forall y:Y, P y -> P (f (g0 y))).",
                        "VernacExtend",
                        "c63dac41c26b1173e44c18c2bea42827af0a5d10"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H2; assumption.",
                        "VernacExtend",
                        "666a01e9cf03ab2403dc87d1353e85efcc4ec3c0"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (y:{y:Y | P y}) => match y with | exist y0 i => exist (fun x:X => P (f x)) (g0 y0) (H3 y0 i) end).",
                        "VernacExtend",
                        "7ecaa3a746b4a3405ce7852fd93d98750164002b"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x; simpl.",
                        "VernacExtend",
                        "b0c3c03e2d0a8fa13c533c8a79c2c6b3067d60db"
                    ]
                },
                {
                    "command": [
                        "generalize (H3 (f x) p).",
                        "VernacExtend",
                        "9f0192946916ed383d4c1a8a0b32621b2bfb91c0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "intro; destruct (proof_irrelevance _ p p0).",
                        "VernacExtend",
                        "519432ef8bf0c8f25a41b9eefe7f0eb3904b560f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct y; simpl.",
                        "VernacExtend",
                        "3ee7639a8cf990e8e14c61e05c7505a6bd7dbdcb"
                    ]
                },
                {
                    "command": [
                        "generalize (H3 x p).",
                        "VernacExtend",
                        "b264089d357692887c300003386140c01e1250d7"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "intro; destruct (proof_irrelevance _ p p0).",
                        "VernacExtend",
                        "519432ef8bf0c8f25a41b9eefe7f0eb3904b560f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_finite",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall y:{y:Y | exists x:X, f x = y}, {x:X | f x = proj1_sig y}).",
                        "VernacExtend",
                        "7deaaffbb4cd9c0a90ba249c4366bc1caedc4b51"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply constructive_definite_description.",
                        "VernacExtend",
                        "b2eb1a3e024c625f457ac9ed1cbe627dbc746f4b"
                    ]
                },
                {
                    "command": [
                        "destruct e.",
                        "VernacExtend",
                        "6785fac4a52839433f2a36a721f6e0fc71773d77"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "red; split.",
                        "VernacExtend",
                        "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "transitivity x.",
                        "VernacExtend",
                        "851897936e3ded114b4b5935067c48265cc501b1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun y:{y:Y | exists x:X, f x = y} => proj1_sig (X0 y)).",
                        "VernacExtend",
                        "6e90a31fdaf5566c724ab55a4633258edf58bf99"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply finite_subtype.",
                        "VernacExtend",
                        "cdefda1640529fa3e461226522d926fbe640b007"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (x:X) => exist (fun y:Y => exists x:X, f x = y) (f x) (ex_intro _ x (refl_equal _))).",
                        "VernacExtend",
                        "639553764264b37f644084bfeb23ce05c2007584"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [y [x e]].",
                        "VernacExtend",
                        "d05a457182d00f0684d0a1c19455ad9d1aee514c"
                    ]
                },
                {
                    "command": [
                        "unfold g; simpl.",
                        "VernacExtend",
                        "23ffaccc225075cc4fe51c5269d679b78d4117f1"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context [X0 ?arg] => destruct (X0 arg) end.",
                        "VernacExtend",
                        "4996d3bbf2aa4a3ce88ba95dfa1cd06069ab8005"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold ginv; simpl.",
                        "VernacExtend",
                        "54aa14b569429e27dec0d25e29849be20825674d"
                    ]
                },
                {
                    "command": [
                        "simpl in e0.",
                        "VernacExtend",
                        "6625c658aa0c5a91c66063fc2a2824ad6f0407dc"
                    ]
                },
                {
                    "command": [
                        "repeat match goal with |- context [ex_intro ?f ?x ?e] => generalize (ex_intro f x e) end.",
                        "VernacExtend",
                        "7862c85ead75a316124e6f7510f5c68a925b0f38"
                    ]
                },
                {
                    "command": [
                        "rewrite <- e0.",
                        "VernacExtend",
                        "c21a587b75402cf321856b7c985a90ed8d31bdfd"
                    ]
                },
                {
                    "command": [
                        "intros; destruct (proof_irrelevance _ e1 e2).",
                        "VernacExtend",
                        "a148ee0b85a4a82eae3bbd10d86845ba5637ed91"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro; unfold ginv.",
                        "VernacExtend",
                        "f3baa72079f8ea1f988df144fb242a59e4e3564e"
                    ]
                },
                {
                    "command": [
                        "unfold g; simpl.",
                        "VernacExtend",
                        "23ffaccc225075cc4fe51c5269d679b78d4117f1"
                    ]
                },
                {
                    "command": [
                        "match goal with |- context [X0 ?arg] => destruct (X0 arg) end.",
                        "VernacExtend",
                        "4996d3bbf2aa4a3ce88ba95dfa1cd06069ab8005"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in e.",
                        "VernacExtend",
                        "62969136a15bbec355f5d78a45d15b365f0efc41"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_inj_surj",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "remember (f None) as f0; destruct f0 as [a|].",
                        "VernacExtend",
                        "212866bee97f921b7a790f268d77eb4201fe6b63"
                    ]
                },
                {
                    "command": [
                        "assert (forall x:T, f (Some x) <> Some a).",
                        "VernacExtend",
                        "ce480eba497745c5e278a69caf58dfe0ab759b40"
                    ]
                },
                {
                    "command": [
                        "unfold not; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "assert (Some x = None).",
                        "VernacExtend",
                        "4b7a0b36427c80acfb784fc22489549cef2e5cb1"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "discriminate H2.",
                        "VernacExtend",
                        "a34eb414a5dd143442dc6d481a442c7afbcf7604"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun x:T => match f (Some x) with | Some y => y | None => a end).",
                        "VernacExtend",
                        "d5706d75c789daa297ff3142a1e75c4dffd4b74d"
                    ]
                },
                {
                    "command": [
                        "assert (surjective g).",
                        "VernacExtend",
                        "70a33816fb8aab5b05debb509060b2aa951c07f0"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "remember (f (Some x1)) as fx1; destruct fx1; remember (f (Some x2)) as fx2; destruct fx2.",
                        "VernacExtend",
                        "ae3fc9cc3bee20b6ede5ddf6b4a45f2568578f80"
                    ]
                },
                {
                    "command": [
                        "unfold g in H2.",
                        "VernacExtend",
                        "2cc87f958a9442bf8881fcbee5eb9b805d3cb5e2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heqfx1 in H2; rewrite <- Heqfx2 in H2.",
                        "VernacExtend",
                        "beab3a881a95f8e4001a4b8c2f61a6e2f03cb53f"
                    ]
                },
                {
                    "command": [
                        "destruct H2; assert (f (Some x1) = f (Some x2)).",
                        "VernacExtend",
                        "cbde73a653925ab8e25a364e41e179c0de0c065b"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H2.",
                        "VernacExtend",
                        "d887f7b54fc680f0802cf0c8ef67f7262135c938"
                    ]
                },
                {
                    "command": [
                        "injection H2; trivial.",
                        "VernacExtend",
                        "6ca4b94272c0966592f9176bf09130db719feb41"
                    ]
                },
                {
                    "command": [
                        "unfold g in H2; rewrite <- Heqfx1 in H2; rewrite <- Heqfx2 in H2.",
                        "VernacExtend",
                        "ab725b94a58c923a5b701e25da5bced71adc02c5"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "contradiction (H1 x1).",
                        "VernacExtend",
                        "639bf6f57ad1780e859cca40f8ba06ccf72cd281"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "unfold g in H2; rewrite <- Heqfx1 in H2; rewrite <- Heqfx2 in H2.",
                        "VernacExtend",
                        "ab725b94a58c923a5b701e25da5bced71adc02c5"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "contradiction (H1 x2).",
                        "VernacExtend",
                        "b3b1c4d81ca60e89c91cc893f8135f4b5188398d"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "assert (Some x1 = Some x2).",
                        "VernacExtend",
                        "5d7c73c0ec5e455c3dc28c742d6c60374e687886"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "injection H3; trivial.",
                        "VernacExtend",
                        "9ad3c56541d367fbf6a1bef04d106c12006af0a9"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "case (finite_eq_dec _ H t a).",
                        "VernacExtend",
                        "9420089e8751018c39d94cfb6264945f1cb2a0fc"
                    ]
                },
                {
                    "command": [
                        "exists None.",
                        "VernacExtend",
                        "9c6725d108313733eda0fba4b5ae46727c2003b2"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 t).",
                        "VernacExtend",
                        "6dc6f63d4dfda2709c4c566f8394677c36399287"
                    ]
                },
                {
                    "command": [
                        "exists (Some x).",
                        "VernacExtend",
                        "b9fc015361db5d30070bad520dea244ec58deea5"
                    ]
                },
                {
                    "command": [
                        "unfold g in H3.",
                        "VernacExtend",
                        "081119300a17f4e62566b2fb283eaf4e7f8237d3"
                    ]
                },
                {
                    "command": [
                        "destruct (f (Some x)).",
                        "VernacExtend",
                        "2038cfc71fa1bfbce5524cd72afd950a32360a08"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "contradiction n.",
                        "VernacExtend",
                        "1749fecd765c92d2611e829dc09c198dbc050cdd"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 a).",
                        "VernacExtend",
                        "c893a67cc379f7cc653405195bc697e85e28bf79"
                    ]
                },
                {
                    "command": [
                        "exists (Some x).",
                        "VernacExtend",
                        "b9fc015361db5d30070bad520dea244ec58deea5"
                    ]
                },
                {
                    "command": [
                        "unfold g in H3.",
                        "VernacExtend",
                        "081119300a17f4e62566b2fb283eaf4e7f8237d3"
                    ]
                },
                {
                    "command": [
                        "remember (f (Some x)) as fx; destruct fx.",
                        "VernacExtend",
                        "2c8c9b4da2edf3cf9456910405cf2cf4621d7db6"
                    ]
                },
                {
                    "command": [
                        "destruct H3.",
                        "VernacExtend",
                        "1c0230aafd4a4c88f93d392a681d452fd6dea35e"
                    ]
                },
                {
                    "command": [
                        "contradiction (H1 x).",
                        "VernacExtend",
                        "4ed8a789000192b8b8dc17912af822e43bd7a7a9"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assert (forall x:T, { y:T | f (Some x) = Some y }).",
                        "VernacExtend",
                        "3f2fb101c6968ab3dd5a5d5863e039a414aebdf2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "remember (f (Some x)) as fx; destruct fx.",
                        "VernacExtend",
                        "2c8c9b4da2edf3cf9456910405cf2cf4621d7db6"
                    ]
                },
                {
                    "command": [
                        "exists t; reflexivity.",
                        "VernacExtend",
                        "33824fe4253795ec4626707ab69bea11325afca9"
                    ]
                },
                {
                    "command": [
                        "assert (Some x = None).",
                        "VernacExtend",
                        "4b7a0b36427c80acfb784fc22489549cef2e5cb1"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "discriminate H1.",
                        "VernacExtend",
                        "1a1404b79897a18af2dbe03fbbe51add9f287650"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun x:T => proj1_sig (X x)).",
                        "VernacExtend",
                        "ecc26b8c70a79178cc6703af175932be70072033"
                    ]
                },
                {
                    "command": [
                        "assert (surjective g).",
                        "VernacExtend",
                        "70a33816fb8aab5b05debb509060b2aa951c07f0"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "unfold g in H1.",
                        "VernacExtend",
                        "2f3685ba83e5480792be874fd15280710aeb793f"
                    ]
                },
                {
                    "command": [
                        "repeat destruct X in H1.",
                        "VernacExtend",
                        "ae66123c9b7f4353d630ec8dc71e41f0d05390ab"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "assert (Some x1 = Some x2).",
                        "VernacExtend",
                        "5d7c73c0ec5e455c3dc28c742d6c60374e687886"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "injection H2; trivial.",
                        "VernacExtend",
                        "6ca4b94272c0966592f9176bf09130db719feb41"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "destruct (H1 t).",
                        "VernacExtend",
                        "56753d37292ac9a857513ca2a1496a7616fedd6c"
                    ]
                },
                {
                    "command": [
                        "unfold g in H2; destruct X in H2.",
                        "VernacExtend",
                        "4bbb9ef13acdd2f1ffff7001966a08da7751f1de"
                    ]
                },
                {
                    "command": [
                        "simpl in H2.",
                        "VernacExtend",
                        "b1e247c43b6623097ab13813b4de664287dd4249"
                    ]
                },
                {
                    "command": [
                        "exists (Some x).",
                        "VernacExtend",
                        "b9fc015361db5d30070bad520dea244ec58deea5"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "exists None.",
                        "VernacExtend",
                        "9c6725d108313733eda0fba4b5ae46727c2003b2"
                    ]
                },
                {
                    "command": [
                        "symmetry; assumption.",
                        "VernacExtend",
                        "936f544fa969baad9c600ccc844230fa4d067c8b"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "pose (f' := fun (x:X) => g (f (f0 x))).",
                        "VernacExtend",
                        "64a7bb26aae1369a02a3d3a74f490dfa292c4adf"
                    ]
                },
                {
                    "command": [
                        "assert (surjective f').",
                        "VernacExtend",
                        "d81aecaa1b1065c9a421f8924363cb6af8872c6e"
                    ]
                },
                {
                    "command": [
                        "apply IHFiniteT.",
                        "VernacExtend",
                        "cccbcd704e86ee1aa509386beacd11d74ef3e4f4"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "unfold f' in H3.",
                        "VernacExtend",
                        "faf7a881a9cab7757d712095d1d0e5af561e8713"
                    ]
                },
                {
                    "command": [
                        "assert (f (f0 x1) = f (f0 x2)).",
                        "VernacExtend",
                        "60ce0cca6cb07cb3e6de9e6c4cec84d402f89ac3"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H4.",
                        "VernacExtend",
                        "deec126e7097cdc2a291133310dd67fe128b7acf"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct (H3 (g y)).",
                        "VernacExtend",
                        "1ff188dceafc97318ed679fc5349c4b81c3b8dd2"
                    ]
                },
                {
                    "command": [
                        "unfold f' in H4.",
                        "VernacExtend",
                        "fe3eb9f39009721f47dd9c10413d0de6853613b2"
                    ]
                },
                {
                    "command": [
                        "exists (f0 x).",
                        "VernacExtend",
                        "8f6c54f7830e60502de08ed2ac28dd6b1a557adf"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_surj_inj",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (exists g:X->X, forall x:X, f (g x) = x).",
                        "VernacExtend",
                        "ba91efa9918f6cb304916b679d0ce66f4e51ff9d"
                    ]
                },
                {
                    "command": [
                        "apply finite_choice with (R:=fun (x y:X) => f y = x).",
                        "VernacExtend",
                        "fb3a034c7e20a0618eb5653fce250a07fd08be60"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [g].",
                        "VernacExtend",
                        "e959e6effdc8ffb2b2160a66871cc4df5dd9b461"
                    ]
                },
                {
                    "command": [
                        "assert (surjective g).",
                        "VernacExtend",
                        "70a33816fb8aab5b05debb509060b2aa951c07f0"
                    ]
                },
                {
                    "command": [
                        "apply finite_inj_surj.",
                        "VernacExtend",
                        "29625a35fa82c3bccc3416601734a15285492f64"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1 with x1.",
                        "VernacExtend",
                        "c27d09c4c9f6119c54f7bb6aa24d8bee0f85e46a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1 with x2.",
                        "VernacExtend",
                        "aacc361812c3a10cdf2d4af60b5c150beab33694"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; reflexivity.",
                        "VernacExtend",
                        "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 x1).",
                        "VernacExtend",
                        "8978df36fb8b2733a3ea8803beecb16be99beb3b"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 x2).",
                        "VernacExtend",
                        "b616af6960c074a981b360ea77439526a1f62b56"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4 in H3.",
                        "VernacExtend",
                        "e942856bfb4aaf897d4b1f6217838fc9faee9610"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5 in H3.",
                        "VernacExtend",
                        "4dc539e92d159b166dd48536867bbf0926230562"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite H1 in H3.",
                        "VernacExtend",
                        "90c7d27b38c06e6a5cffe88b957162795d49be12"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4.",
                        "VernacExtend",
                        "15801069338f53d2cf64b6951fc88c5758e631f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5.",
                        "VernacExtend",
                        "7e7c68e08488a5f01b85c6a7ae27738d3a8af897"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_sum",
            "line_nb": 545,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ inl.",
                        "VernacExtend",
                        "b8619d531c0360177d2465ac0d85e80d85bee82f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:X+False) => match x with | inl x => x | inr f => False_rect X f end).",
                        "VernacExtend",
                        "8872d31f4e045d1048cc6adb1a2065e2ae39f5b7"
                    ]
                },
                {
                    "command": [
                        "exists g.",
                        "VernacExtend",
                        "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
                    ]
                },
                {
                    "command": [
                        "intro; simpl.",
                        "VernacExtend",
                        "6b02318154ba1426764dbd23d934520cd3e7ae9f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:option (X+T)) => match x with | Some (inl x) => inl _ x | Some (inr t) => inr _ (Some t) | None => inr _ None end).",
                        "VernacExtend",
                        "320e78f502d3afb66018b9ca428fdff579b6cced"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply add_finite.",
                        "VernacExtend",
                        "7f701c3dbaa30d490f031f749254051a750a9832"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (x:X + option T) => match x with | inl x => Some (inl _ x) | inr (Some t) => Some (inr _ t) | inr None => None end).",
                        "VernacExtend",
                        "80d1228f396249a116a4107c319967c9f1be6b40"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[x|t]|]; trivial.",
                        "VernacExtend",
                        "e76b2e1ea50ff869fed881712216517657859925"
                    ]
                },
                {
                    "command": [
                        "destruct y as [x|[t|]]; trivial.",
                        "VernacExtend",
                        "edccb6f5604a65ee0014e860f018b4ee9dc4f8d3"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:X+X0) => match x with | inl x0 => inl _ x0 | inr x0 => inr _ (f x0) end).",
                        "VernacExtend",
                        "4acf2db4520d42f5d01f1fcdabc472285f9f7a0a"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (x:X+Y) => match x with | inl x0 => inl _ x0 | inr y0 => inr _ (g0 y0) end).",
                        "VernacExtend",
                        "2ee8f0980f454113cf1fba88bb7e5e1dbde1749a"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x0|x0]; trivial.",
                        "VernacExtend",
                        "704be6cfd8d0343f40c5322e5e00639328b111cb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; reflexivity.",
                        "VernacExtend",
                        "78cd8a23170465d8fbd1f52e805fd4772133410f"
                    ]
                },
                {
                    "command": [
                        "destruct y as [x|y0]; trivial.",
                        "VernacExtend",
                        "9d647f85fca25cc0a90b05ae7b51f0d8efa84899"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; reflexivity.",
                        "VernacExtend",
                        "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_prod",
            "line_nb": 579,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ (False_rect _).",
                        "VernacExtend",
                        "c8b22ee30ac9c4869fadc1c5c18ddc623a4e50ca"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exists (@snd X False).",
                        "VernacExtend",
                        "d352b37e66105da2f583aa5ba3434001e202e3bf"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:X*T + X) => match x with | inl (pair x0 t) => pair x0 (Some t) | inr x0 => pair x0 None end).",
                        "VernacExtend",
                        "d4e5bc706133555ece83fbcd47a4a0e184ebfc6b"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (x:X * option T) => match x with | (x0, Some t) => inl _ (x0, t) | (x0, None) => inr _ x0 end).",
                        "VernacExtend",
                        "bf1c5446497a47fe45392767ed1bb1a346a8d255"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply finite_sum.",
                        "VernacExtend",
                        "5ad5a2092a0f04f53ae58830155f0d824d3d20f2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [[x0 t]|x0]; trivial.",
                        "VernacExtend",
                        "2f8784fb7bd5ecc5c9334da25ec2ac484a0466f5"
                    ]
                },
                {
                    "command": [
                        "destruct y as [x0 [t|]]; trivial.",
                        "VernacExtend",
                        "786112e5db229c1db0e0adc143d29540e1633d6b"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (y:X*X0) => match y with | pair x x0 => pair x (f x0) end).",
                        "VernacExtend",
                        "99ce98e64d2f5a32c0579494c33ff0c4311a89a9"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (y:X*Y) => let (x,y0) := y in (x, g0 y0)).",
                        "VernacExtend",
                        "3cd24b2bce945e06ad9163bc767fd2e6fb7fc604"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x x0]; unfold ginv, g; try rewrite H1; trivial.",
                        "VernacExtend",
                        "d054126224b99aaf98c2e2d0c965e488e6a65aaa"
                    ]
                },
                {
                    "command": [
                        "destruct y as [x y]; unfold ginv, g; try rewrite H2; trivial.",
                        "VernacExtend",
                        "341210bd156e1878f9bf7d68dd4f692d80e448dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_exp",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (x:True) (f:False) => False_rect Y f).",
                        "VernacExtend",
                        "d3883439cb57045d4feb8f2c53589db6d1746fbf"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (_:False->Y) => I).",
                        "VernacExtend",
                        "e7d9839d2133db45bfcd765abb6b50652cc216df"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply True_finite.",
                        "VernacExtend",
                        "dc16a5a462c4fe488e0cc3551ed4bcd49cdb581b"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [].",
                        "VernacExtend",
                        "4463ad5b67651258ab720bab5c13c15d87c2d008"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro; extensionality f.",
                        "VernacExtend",
                        "5299994bccdd2c015d68e778b35cebacdd5fcd13"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "pose (g := fun (p:(T->Y)*Y) (x:option T) => let (f,y0) := p in match x with | Some x0 => f x0 | None => y0 end).",
                        "VernacExtend",
                        "88be9497e4be5399fcc87dd69d7dddb5b5d21cbc"
                    ]
                },
                {
                    "command": [
                        "pose (ginv := fun (f:option T->Y) => (fun x:T => f (Some x), f None)).",
                        "VernacExtend",
                        "ee128303a69b40bca9edadbaf63b51bac1625f29"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g.",
                        "VernacExtend",
                        "b6dfb6ee9e25799398cc2799cd09d681d4b84bb8"
                    ]
                },
                {
                    "command": [
                        "apply finite_prod.",
                        "VernacExtend",
                        "3c3f77fcdf7d5c616e65963cb2dbbe7d9cf95005"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists ginv.",
                        "VernacExtend",
                        "71cd34c56fbba674a2a1fcfc383d70b210c11751"
                    ]
                },
                {
                    "command": [
                        "destruct x as [f y0]; try extensionality t; try destruct t as [t0|]; trivial.",
                        "VernacExtend",
                        "b2117dc084d42782ed4ce154a0192abfbe9636e7"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "extensionality t; destruct t as [t0|]; trivial.",
                        "VernacExtend",
                        "ef0632da67a4c5d897a9fa69511551a4261ba985"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "pose (g0 := fun (h:X->Y) (y:Y0) => h (g y)).",
                        "VernacExtend",
                        "86958ff5dc1e61021d4ae84f4c1aae537a182bcf"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ g0.",
                        "VernacExtend",
                        "830e288c02eb87443e3c2d7c989dbafe8df8c0e3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "pose (g0inv := fun (h:Y0->Y) (x:X) => h (f x)).",
                        "VernacExtend",
                        "fe9c1c2df4a0406e6acb4b11caa318d19b653b63"
                    ]
                },
                {
                    "command": [
                        "exists g0inv.",
                        "VernacExtend",
                        "5f404376e2e1f4420ce7403bf97c2681f15cc5e6"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "extensionality x0; unfold g0; unfold g0inv; simpl.",
                        "VernacExtend",
                        "20b01ed39798b58ce3d783f78c59eac6f7ff8746"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; reflexivity.",
                        "VernacExtend",
                        "78cd8a23170465d8fbd1f52e805fd4772133410f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "extensionality y0; unfold g0; unfold g0inv; simpl.",
                        "VernacExtend",
                        "34aeb0c627bdfd2b1feb5f746a3e9f8f3e37779e"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; reflexivity.",
                        "VernacExtend",
                        "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_has_nat_cardinal",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply -> unique_existence; split.",
                        "VernacExtend",
                        "ad4085619486794b0f51dc2939aba81209a50ecf"
                    ]
                },
                {
                    "command": [
                        "apply finite_cardinal.",
                        "VernacExtend",
                        "de2302f7a8cbd80754f6a0baee5d2772b56801a8"
                    ]
                },
                {
                    "command": [
                        "pose (idX := fun x:X => x).",
                        "VernacExtend",
                        "c28a538df1c19eb8e2e12be7dfbd8403acfbded6"
                    ]
                },
                {
                    "command": [
                        "assert (Im Full_set idX = Full_set).",
                        "VernacExtend",
                        "41cff86bc1d4a3653282985f8902a4474aa78ea8"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "red; split.",
                        "VernacExtend",
                        "ae4f95e02fc7583b0f69d8e670a5f097c90e7a11"
                    ]
                },
                {
                    "command": [
                        "red; intros; constructor.",
                        "VernacExtend",
                        "9d288f98edf0fef9bfeb189baabb9d79c6ad0f4a"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_img with (f:=fun x:X => x).",
                        "VernacExtend",
                        "00cff2b8bf73283ca950d4c3829c332bd0176bd6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case (finite_eq_dec X H y1 y2); tauto.",
                        "VernacExtend",
                        "05e3198c592d379a3c7672b66ddfbc4a453f367c"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_unicity with X Full_set; trivial.",
                        "VernacExtend",
                        "5846e98885a3fc24d67ce441901d9324be67b3bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_nat_cardinal_def",
            "line_nb": 664,
            "steps": [
                {
                    "command": [
                        "intros; unfold FiniteT_nat_cardinal.",
                        "VernacExtend",
                        "0f4fabfaf7bb04bff356150f2c527ffc99a3ffa4"
                    ]
                },
                {
                    "command": [
                        "destruct constructive_definite_description.",
                        "VernacExtend",
                        "829d8d5f94eade89ac56143f6cb0d4f177a6e743"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_nat_cardinal_cond",
            "line_nb": 669,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pose proof (FiniteT_has_nat_cardinal X H).",
                        "VernacExtend",
                        "f227a2024904e0abf9c1b707212f8b2add27b465"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "red in H1.",
                        "VernacExtend",
                        "2dc8cc7dda58a09dd59c0bb87c164dd60d1f8772"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "transitivity x.",
                        "VernacExtend",
                        "851897936e3ded114b4b5935067c48265cc501b1"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply H2.",
                        "VernacExtend",
                        "bdbf0edcb2b967bc66b8ce8578b2d558a89bd49c"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_nat_cardinal_def.",
                        "VernacExtend",
                        "e50baee43bb13e77fb738f57c7fca426c84f99b6"
                    ]
                },
                {
                    "command": [
                        "apply H2; trivial.",
                        "VernacExtend",
                        "91036970bc344118009ef71eaf39ec9fc45e9ef2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_nat_cardinal_False",
            "line_nb": 680,
            "steps": [
                {
                    "command": [
                        "apply FiniteT_nat_cardinal_cond.",
                        "VernacExtend",
                        "e86ac3e9a8c105d021adca75befd73c318330297"
                    ]
                },
                {
                    "command": [
                        "assert (@Full_set False = @Empty_set False).",
                        "VernacExtend",
                        "59da631c7bc16e4896f786ae515210649f0d0fa5"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; red; split; auto with sets.",
                        "VernacExtend",
                        "4e3477e9f7709d4bbbd9fcf0c819b7062e549f98"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injection_preserves_cardinal",
            "line_nb": 689,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "assert (Im Empty_set f = Empty_set).",
                        "VernacExtend",
                        "8c0d6749980401bfe7a5e5a0a9730e4a834373fa"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; auto with sets.",
                        "VernacExtend",
                        "57c26ee5e454ffaafa7d6a9cdd44faccead2e8ce"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "rewrite H; constructor.",
                        "VernacExtend",
                        "120a7e910e6db2155c79f9e0dbe70976e2a82781"
                    ]
                },
                {
                    "command": [
                        "assert (Im (Add A x) f = Add (Im A f) (f x)).",
                        "VernacExtend",
                        "9c9fd3a783112968313faa8354c61b3641bf5f8d"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split.",
                        "VernacExtend",
                        "a4c57ea69808be923621e13ef05d8e11d11caf6f"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "symmetry in H3; destruct H3.",
                        "VernacExtend",
                        "ab651a2f8618052f1de12f71437d99f77ab51225"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "left; exists x0; auto with sets.",
                        "VernacExtend",
                        "f1fe6a1af36e3c3c0a0f817c28a6f77734e4b4c1"
                    ]
                },
                {
                    "command": [
                        "destruct H2; right; auto with sets.",
                        "VernacExtend",
                        "43620753bdd95d44d8674e5353b48d9e032e7d76"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "left; auto with sets.",
                        "VernacExtend",
                        "4e75acc31e799625dd79e2b723ecf84093483ec5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "exists x; trivial; right; auto with sets.",
                        "VernacExtend",
                        "eaf05f0f3cb196c07fe6d2ca9fc03ac24b8cf190"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "red; intro H3; inversion H3.",
                        "VernacExtend",
                        "713feca38596222f9830755456c411748a3bda38"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H5; destruct H5.",
                        "VernacExtend",
                        "9a78b6844aa706d9822c9aecff2af5c89cef63e0"
                    ]
                },
                {
                    "command": [
                        "contradiction H1.",
                        "VernacExtend",
                        "93a068a62d2389ca7d67d8eaeabac4ea3b9ebd83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_nat_cardinal_option",
            "line_nb": 720,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_nat_cardinal_cond.",
                        "VernacExtend",
                        "e86ac3e9a8c105d021adca75befd73c318330297"
                    ]
                },
                {
                    "command": [
                        "assert (Full_set = Add (Im Full_set (@Some X)) None).",
                        "VernacExtend",
                        "45bde8b2fc8909c6f72566c92ecd37ec74cc2dde"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split.",
                        "VernacExtend",
                        "a4c57ea69808be923621e13ef05d8e11d11caf6f"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x.",
                        "VernacExtend",
                        "24973a7b5353196d2d5bd2a7e0fe5cfacd5f4460"
                    ]
                },
                {
                    "command": [
                        "left; exists x; constructor.",
                        "VernacExtend",
                        "09c70e3e2578539013ea8f64349d1d1a0c47a613"
                    ]
                },
                {
                    "command": [
                        "right; constructor.",
                        "VernacExtend",
                        "f37b3808039fee4ea721bd0b9bd023d377f00b17"
                    ]
                },
                {
                    "command": [
                        "red; intros; constructor.",
                        "VernacExtend",
                        "9d288f98edf0fef9bfeb189baabb9d79c6ad0f4a"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply injection_preserves_cardinal.",
                        "VernacExtend",
                        "7ff3de1af7b1cabf51a8104bfb39da6c38e34d4e"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_nat_cardinal_def.",
                        "VernacExtend",
                        "e50baee43bb13e77fb738f57c7fca426c84f99b6"
                    ]
                },
                {
                    "command": [
                        "red; intros x1 x2 Heq; injection Heq; trivial.",
                        "VernacExtend",
                        "04c57efa6fb67b9f5da78d94fd33fc232142cff4"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "discriminate H3.",
                        "VernacExtend",
                        "42ee32f33d2232da4875a8e203910564c8735b6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_nat_cardinal_bijection",
            "line_nb": 739,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_nat_cardinal_cond.",
                        "VernacExtend",
                        "e86ac3e9a8c105d021adca75befd73c318330297"
                    ]
                },
                {
                    "command": [
                        "apply invertible_impl_bijective in Hinv.",
                        "VernacExtend",
                        "405a63c51ab2a5987139db117e657b8662a5a7c2"
                    ]
                },
                {
                    "command": [
                        "destruct Hinv as [g_inj g_surj].",
                        "VernacExtend",
                        "b5f390b0a0d5f7de9fdb85282ff3811e5446b1e2"
                    ]
                },
                {
                    "command": [
                        "assert (Full_set = Im Full_set g).",
                        "VernacExtend",
                        "d676667744396155a79b5d57605d40bed7633002"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles; split; red; intros; try constructor.",
                        "VernacExtend",
                        "607d73187f94dc11ae502136095b7f16d329c31f"
                    ]
                },
                {
                    "command": [
                        "destruct (g_surj x).",
                        "VernacExtend",
                        "d3b2fab85a2b836e0d07957bbadfa5909ba17b5a"
                    ]
                },
                {
                    "command": [
                        "exists x0; try constructor; auto.",
                        "VernacExtend",
                        "c61ef6e6c2edfc174c0131c4b776f69efede4c54"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply injection_preserves_cardinal; trivial.",
                        "VernacExtend",
                        "9dd3256825011545f6090e5820e6952bba401b32"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_nat_cardinal_def.",
                        "VernacExtend",
                        "e50baee43bb13e77fb738f57c7fca426c84f99b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_FiniteT_nat_cardinal",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "match goal with |- @ex ?T (@unique ?T ?f) => apply -> (@unique_existence T f) end.",
                        "VernacExtend",
                        "c18061219e852e21ba3b543ff6d1da2d18a14751"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exists FiniteT_nat_cardinal.",
                        "VernacExtend",
                        "98130b5d1679783657292c295334f80fb43bcc89"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "exact FiniteT_nat_cardinal_False.",
                        "VernacExtend",
                        "b7167ba7688e52b6166e50cd87e7e8be73f56ed4"
                    ]
                },
                {
                    "command": [
                        "exact FiniteT_nat_cardinal_option.",
                        "VernacExtend",
                        "47e583c9462b7be2e41db464ba8a1af8c435c2b6"
                    ]
                },
                {
                    "command": [
                        "exact FiniteT_nat_cardinal_bijection.",
                        "VernacExtend",
                        "5fbdcfaa49ef2cfbbe0806f7b163a192ec107a52"
                    ]
                },
                {
                    "command": [
                        "red; intros f g Hf Hg.",
                        "VernacExtend",
                        "6e12efbf55b6769255d16f2b0233c400430a1823"
                    ]
                },
                {
                    "command": [
                        "destruct Hf as [HFalse_f [Hoption_f Hbijection_f]].",
                        "VernacExtend",
                        "695b9be63014a8aa9deb8db8d29d0f3cf014ca6b"
                    ]
                },
                {
                    "command": [
                        "destruct Hg as [HFalse_g [Hoption_g Hbijection_g]].",
                        "VernacExtend",
                        "3e96203d5cf03be259c4b6289904166a577ae777"
                    ]
                },
                {
                    "command": [
                        "extensionality X; extensionality HFinite.",
                        "VernacExtend",
                        "527d5fadcd07687298be841c5c25edbf39a60145"
                    ]
                },
                {
                    "command": [
                        "generalize HFinite.",
                        "VernacExtend",
                        "d86eea1297618690bfc908bfb8b0f30b825d5417"
                    ]
                },
                {
                    "command": [
                        "induction HFinite.",
                        "VernacExtend",
                        "c2600e4cf79fec414c97c4f1f53d07c062e5ed00"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ empty_finite HFinite).",
                        "VernacExtend",
                        "2613384d19e20f58c5a6278456149c15f9b84b0c"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ (add_finite T HFinite) HFinite0).",
                        "VernacExtend",
                        "6471060a828e543fcbb04db06d080ba26e306bbe"
                    ]
                },
                {
                    "command": [
                        "rewrite Hoption_f.",
                        "VernacExtend",
                        "43e8b9b7e8510eb719434f8e41d0a7b306178b92"
                    ]
                },
                {
                    "command": [
                        "rewrite Hoption_g.",
                        "VernacExtend",
                        "6d8a19b44cda5a6095c84715d7ea6fdb96e7413d"
                    ]
                },
                {
                    "command": [
                        "rewrite IHHFinite.",
                        "VernacExtend",
                        "9558456cd5813d57637af40e27170101c1d8a7dd"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ (bij_finite _ _ f0 HFinite H) HFinite0).",
                        "VernacExtend",
                        "d43766576fe9a8528644b7383a416345d32b98fa"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hbijection_f, Hbijection_g, IHHFinite.",
                        "VernacExtend",
                        "3bcdbe591295fc735e887faa1e19f6d4cec22474"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}