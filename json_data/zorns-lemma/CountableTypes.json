{
    "filename": "CountableTypes.v",
    "coq_project": "zorns-lemma",
    "vernac_cmds": [
        [
            "Require Export FiniteTypes.",
            "VernacRequire",
            "5afebbcac4fd55a3623326ac5dbd752f3ce3cf8c"
        ],
        [
            "Require Import InfiniteTypes.",
            "VernacRequire",
            "9d6c2c2fa7d7313b5ec2faa16cf3ef200cd60d5f"
        ],
        [
            "Require Import CSB.",
            "VernacRequire",
            "919e3d52e52ec51f5df4015e164b85031cc36f68"
        ],
        [
            "Require Import DecidableDec.",
            "VernacRequire",
            "811550f3459619bf8340c8d8a48eeda763885102"
        ],
        [
            "Require Export Relation_Definitions.",
            "VernacRequire",
            "7609fde823572a97bac3f20d213dd37544e5ef7e"
        ],
        [
            "Require Import Relation_Definitions_Implicit.",
            "VernacRequire",
            "ea99a3658ef1cac6866bb2b8c469ec4708877b77"
        ],
        [
            "Require Import Description.",
            "VernacRequire",
            "3644f4855d7da47082e2bb606a55e6fb76db38fc"
        ],
        [
            "Require Import Proj1SigInjective.",
            "VernacRequire",
            "4d4c66d378e643b66ae81f99557f8cd850038946"
        ],
        [
            "Require Import DependentTypeChoice.",
            "VernacRequire",
            "dcf7628db5e2f7dc609390e20f95f1df3ec24a25"
        ],
        [
            "Set Asymmetric Patterns.",
            "VernacSetOption",
            "3fcd9e746ba5a1aabd289acfb9ab99bec474567d"
        ],
        [
            "Inductive CountableT (X:Type) : Prop := | intro_nat_injection: forall f:X->nat, injective f -> CountableT X.",
            "VernacInductive",
            "558eea0c3e5540f1ef9e48f2ecda7657df1ba6d0"
        ],
        [
            "Lemma CountableT_is_FiniteT_or_countably_infinite: forall X:Type, CountableT X -> {FiniteT X} + {exists f:X->nat, bijective f}.",
            "VernacStartTheoremProof",
            "30e4235b1920159f546121ae0922032e7b14b2df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply exclusive_dec.",
            "VernacExtend",
            "bb6396dc7583c2a90b9f2e5ae9c04c9c81b5604b"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "destruct H0 as [? [f ?]].",
            "VernacExtend",
            "3cee91f421b0ef853a5821a09ef8e3074b53f5a4"
        ],
        [
            "contradiction nat_infinite.",
            "VernacExtend",
            "c71234314cc9f0860d69f2bda3434560cb0496ba"
        ],
        [
            "apply bij_finite with _ f; trivial.",
            "VernacExtend",
            "3fc8ef1273c4bc51b1079426dee1507e15bb4f0a"
        ],
        [
            "apply bijective_impl_invertible; trivial.",
            "VernacExtend",
            "7b3676433c67b37550c62e46643eba60daac8883"
        ],
        [
            "case (classic (FiniteT X)).",
            "VernacExtend",
            "34a4b3553b0b5190b4851a5355197403364fdfd0"
        ],
        [
            "left; trivial.",
            "VernacExtend",
            "2f1efd67ff23560c270a9589d0d1b100a9c80732"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply infinite_nat_inj in H0.",
            "VernacExtend",
            "3731b3f9694e0ea882fd534acf41e2ff380e1ce6"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "destruct H0 as [g].",
            "VernacExtend",
            "a3604bccd4d93556c17ad023dabc85a92b33cf1d"
        ],
        [
            "apply CSB with f g; trivial.",
            "VernacExtend",
            "1f76250d311acfb20e271cb534fda7559bac4c10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countable_nat_product: CountableT (nat*nat).",
            "VernacStartTheoremProof",
            "330841b13be46621c6182068f18003f850db2727"
        ],
        [
            "pose (sum_1_to_n := fix sum_1_to_n n:nat := match n with | O => O | S m => (sum_1_to_n m) + n end).",
            "VernacExtend",
            "afbc7657453c02c371bef3344dc863cbf99f8291"
        ],
        [
            "exists (fun p:nat*nat => let (m,n):=p in (sum_1_to_n (m+n)) + n).",
            "VernacExtend",
            "6dd2b2f7c54fbf1677c612a5e8d8ebc413533826"
        ],
        [
            "assert (forall m n:nat, m<n -> sum_1_to_n m + m < sum_1_to_n n).",
            "VernacExtend",
            "dabe3b837840d45eff83e8c1b735026f02cbd4b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply lt_trans with (sum_1_to_n m0).",
            "VernacExtend",
            "26a1776b42fbc5e83d81fd1d21f64551ff5c193e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (0 < S m0); auto with arith.",
            "VernacExtend",
            "428102bf0d47ba2efa135d019bd8db7a36cc753a"
        ],
        [
            "assert (sum_1_to_n m0 + 0 < sum_1_to_n m0 + S m0); auto with arith.",
            "VernacExtend",
            "c5500f4427868b37162a0f001a8742f25def6411"
        ],
        [
            "assert (sum_1_to_n m0 + 0 = sum_1_to_n m0); auto with arith.",
            "VernacExtend",
            "3785bd9398bbe931921500746e0e39cf60e06bc8"
        ],
        [
            "rewrite H2 in H1; assumption.",
            "VernacExtend",
            "fca73a15300bf22e2e9e2ce71bb4095bd3be9723"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x1 as [x1 y1].",
            "VernacExtend",
            "8f1c2e3e561212afd51b39ebee312c1fa713ba62"
        ],
        [
            "destruct x2 as [x2 y2].",
            "VernacExtend",
            "089a1f91ac019a64400579c3f4cc185422cac677"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "case (lt_eq_lt_dec (x1+y1) (x2+y2)); intro.",
            "VernacExtend",
            "315d5215ee7e6f0b3953f6016e878ed47e957fe1"
        ],
        [
            "case s; intro.",
            "VernacExtend",
            "9fe9e41cde1a23dcdc618a28d2bd3948bc17c6e8"
        ],
        [
            "assert (sum_1_to_n (x1+y1) + y1 < sum_1_to_n (x2+y2) + y2).",
            "VernacExtend",
            "6e2106c0f2722483f4fd615ad447f5956247f4b8"
        ],
        [
            "apply le_lt_trans with (sum_1_to_n (x1+y1) + (x1+y1)).",
            "VernacExtend",
            "2ce6f55a57827d57da2025a1d2434901920d1fb4"
        ],
        [
            "assert (sum_1_to_n (x1+y1) + (x1+y1) = (sum_1_to_n (x1+y1) + y1) + x1).",
            "VernacExtend",
            "afcfb0d336d667b9639af655a964ae53ebd8d4d4"
        ],
        [
            "Require Import ArithRing.",
            "VernacRequire",
            "4bc385370568ddd53384be919634bc0439bf028f"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply lt_le_trans with (sum_1_to_n (x2+y2)).",
            "VernacExtend",
            "427648a0039517fd65fb914c1159561419bd2e8c"
        ],
        [
            "apply H; trivial.",
            "VernacExtend",
            "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "contradict H1.",
            "VernacExtend",
            "0b63c4e4adfc14aec173e00d9e5760db696ca49f"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "assert (y1=y2).",
            "VernacExtend",
            "32490e0984d37511c958341555db2187ea88e3cd"
        ],
        [
            "rewrite e in H0.",
            "VernacExtend",
            "668bc25fa6349d62b5143e2344195feb426a98ee"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "apply plus_reg_l in H0.",
            "VernacExtend",
            "addf721c30d616752c0edc769c404d6b3861aa5c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "f_equal; trivial.",
            "VernacExtend",
            "232e01a4ac5b3c7b3afa8e2ea5ea4fd4a55d1e22"
        ],
        [
            "rewrite H1 in e.",
            "VernacExtend",
            "e2583ae3e179b9a8ce4203c026fcb9a41463c3bd"
        ],
        [
            "rewrite plus_comm in e.",
            "VernacExtend",
            "bbdb1c98aa2fcebe08bc23785f8b02da41f9a9d2"
        ],
        [
            "rewrite (plus_comm x2 y2) in e.",
            "VernacExtend",
            "6cccc1efc068d558e9fe6b5c3919e40b527b61aa"
        ],
        [
            "apply plus_reg_l in e.",
            "VernacExtend",
            "e5c1e638f7c1a1b26e37b551da57aa9723153edc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (sum_1_to_n (x2+y2) + y2 < sum_1_to_n (x1+y1) + y1).",
            "VernacExtend",
            "ec0d0cd5d67a36de7aa7385c231b163b8700736a"
        ],
        [
            "apply le_lt_trans with (sum_1_to_n (x2+y2) + (x2+y2)).",
            "VernacExtend",
            "412094a41e62831c258ead0f06138dfaf1617939"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply lt_le_trans with (sum_1_to_n (x1+y1)); auto with arith.",
            "VernacExtend",
            "f630039e20971534c6dafc5e51405d6a819ce669"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "contradict H1.",
            "VernacExtend",
            "0b63c4e4adfc14aec173e00d9e5760db696ca49f"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countable_sum: forall X Y:Type, CountableT X -> CountableT Y -> CountableT (X+Y).",
            "VernacStartTheoremProof",
            "d249109528834ad161a2492b730773cae172fec5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [f].",
            "VernacExtend",
            "a978a142d2f6b383e62b2d0034f877e1bc6103fd"
        ],
        [
            "destruct H0 as [g].",
            "VernacExtend",
            "a3604bccd4d93556c17ad023dabc85a92b33cf1d"
        ],
        [
            "destruct countable_nat_product as [h].",
            "VernacExtend",
            "7e362ab68933ba2552d5ef1d822af82e8a016710"
        ],
        [
            "exists (fun s:X+Y => match s with | inl x => h (0, f x) | inr y => h (1, g y) end).",
            "VernacExtend",
            "798f72fd4455ed9300d0222772121854c92cdc82"
        ],
        [
            "red; intros s1 s2 ?.",
            "VernacExtend",
            "1c9b63e2ba6fda1135a110ed49a8727e5b0ac3c4"
        ],
        [
            "destruct s1 as [x1|y1]; destruct s2 as [x2|y2]; apply H1 in H2; try discriminate H2; intros; f_equal; (apply H || apply H0); injection H2; trivial.",
            "VernacExtend",
            "eccc9698b407852d1a681fd0f18b51c4f2873e71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countable_product: forall X Y:Type, CountableT X -> CountableT Y -> CountableT (X*Y).",
            "VernacStartTheoremProof",
            "cca697249867d7f8b23258e73285d06d92aa325e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [f].",
            "VernacExtend",
            "a978a142d2f6b383e62b2d0034f877e1bc6103fd"
        ],
        [
            "destruct H0 as [g].",
            "VernacExtend",
            "a3604bccd4d93556c17ad023dabc85a92b33cf1d"
        ],
        [
            "pose (fg := fun (p:X*Y) => let (x,y):=p in (f x, g y)).",
            "VernacExtend",
            "ecd55b8e41591192095e5b57878cf8f6c5bcb670"
        ],
        [
            "destruct countable_nat_product as [h].",
            "VernacExtend",
            "7e362ab68933ba2552d5ef1d822af82e8a016710"
        ],
        [
            "exists (fun p:X*Y => h (fg p)).",
            "VernacExtend",
            "363b3bf602ea9224b4e7eb680fc21a8386ff2cde"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply H1 in H2.",
            "VernacExtend",
            "d3132def680733ecd29eb5bc865040ad28c4dfa0"
        ],
        [
            "destruct x1 as [x1 y1].",
            "VernacExtend",
            "8f1c2e3e561212afd51b39ebee312c1fa713ba62"
        ],
        [
            "destruct x2 as [x2 y2].",
            "VernacExtend",
            "089a1f91ac019a64400579c3f4cc185422cac677"
        ],
        [
            "unfold fg in H2.",
            "VernacExtend",
            "a713c15daf724f6629a9846aaba19088da728d92"
        ],
        [
            "injection H2; intros.",
            "VernacExtend",
            "34557a86268c5c56e0342380388660eaaaaa564e"
        ],
        [
            "apply H0 in H3.",
            "VernacExtend",
            "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
        ],
        [
            "apply H in H4.",
            "VernacExtend",
            "8cdba0fb48f40b8129fb33e99fae70781c437d75"
        ],
        [
            "f_equal; trivial.",
            "VernacExtend",
            "232e01a4ac5b3c7b3afa8e2ea5ea4fd4a55d1e22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import FunctionalExtensionality.",
            "VernacRequire",
            "bb1bf6a28f9de1b2ad0dab7920189198216ed486"
        ],
        [
            "Lemma countable_exp: forall X Y:Type, FiniteT X -> CountableT Y -> CountableT (X->Y).",
            "VernacStartTheoremProof",
            "89bcdc1e48ffd8a7f812ce40010083292df918b9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "exists (fun _ => 0).",
            "VernacExtend",
            "9f71c9d83c3218d5173b15ecb87c06c14ffb9162"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "extensionality f.",
            "VernacExtend",
            "de8f9c7d16c23d9ca4a8c200662e9f51ef368c6e"
        ],
        [
            "destruct f.",
            "VernacExtend",
            "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
        ],
        [
            "destruct (countable_product (T->Y) Y); trivial.",
            "VernacExtend",
            "090766f2987e357cdf7f402d659b1fbecc41b156"
        ],
        [
            "exists (fun (g:option T->Y) => f (fun x:T => g (Some x), g None)).",
            "VernacExtend",
            "4bc676c334df221706885c4fd1c90c80fd2820a6"
        ],
        [
            "red; intros g1 g2 ?.",
            "VernacExtend",
            "63001394489aea72cd3304abeb6eee606219398b"
        ],
        [
            "apply H1 in H2.",
            "VernacExtend",
            "d3132def680733ecd29eb5bc865040ad28c4dfa0"
        ],
        [
            "extensionality o.",
            "VernacExtend",
            "b9b85938c81bb71a7f5d452575495e9d69b9e722"
        ],
        [
            "destruct o.",
            "VernacExtend",
            "7e45d273082b90e03f5f97cde65b5f989324a175"
        ],
        [
            "injection H2; intros.",
            "VernacExtend",
            "34557a86268c5c56e0342380388660eaaaaa564e"
        ],
        [
            "pose proof (equal_f H4).",
            "VernacExtend",
            "d6390038ca18ec5cbc9c4bd02bef847818f6e439"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "injection H2; trivial.",
            "VernacExtend",
            "6ca4b94272c0966592f9176bf09130db719feb41"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "destruct IHFiniteT.",
            "VernacExtend",
            "f94776ee735fd82bcb400504c2f572355a028f68"
        ],
        [
            "exists (fun (h:Y0->Y) => f0 (fun x:X => h (f x))).",
            "VernacExtend",
            "c8bb3574de6d77e2c82628d5a69e096599321d77"
        ],
        [
            "red; intros h1 h2 ?.",
            "VernacExtend",
            "4d3e37125739fc3c5b2103e481e392ac09a2a6c6"
        ],
        [
            "apply H3 in H4.",
            "VernacExtend",
            "78e710138a6143b748f2f0f898a1d3e454fe1c2b"
        ],
        [
            "pose proof (equal_f H4).",
            "VernacExtend",
            "d6390038ca18ec5cbc9c4bd02bef847818f6e439"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "extensionality y.",
            "VernacExtend",
            "74b9cf664299dc3016b507088f18d348160ec9e9"
        ],
        [
            "rewrite <- (H2 y).",
            "VernacExtend",
            "e327ca4cbee40917ac7f86535f8e65b1400d83ac"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Countable {X:Type} (S:Ensemble X) : Prop := CountableT {x:X | In S x}.",
            "VernacDefinition",
            "991ec6a0d4b05aeb273e52c75426a6b87ba176a8"
        ],
        [
            "Lemma inj_countable: forall {X Y:Type} (f:X->Y), CountableT Y -> injective f -> CountableT X.",
            "VernacStartTheoremProof",
            "ec6b368810e47aedca02f9f2c4321030767a7253"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [g].",
            "VernacExtend",
            "a4b7ee72f6e3fbaefb8a63ed57d293d605e8f973"
        ],
        [
            "exists (fun x:X => g (f x)).",
            "VernacExtend",
            "69d8f8bb7088f9a64094433c4c91545d4cc7d2b1"
        ],
        [
            "red; intros; auto.",
            "VernacExtend",
            "f156019c974144f4de49a35ea72135d49fa2af43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma surj_countable: forall {X Y:Type} (f:X->Y), CountableT X -> surjective f -> CountableT Y.",
            "VernacStartTheoremProof",
            "bc0a81e5bc462c6a3548fd5b509334c72cb94b71"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "Require Import ClassicalChoice.",
            "VernacRequire",
            "8d4a90b60ff47eca0263a7bdf9f09ca03b20033b"
        ],
        [
            "pose proof (choice (fun (y:Y) (x:X) => f x = y)).",
            "VernacExtend",
            "f263973ad8099a9d94344540789bc98a35c3826b"
        ],
        [
            "destruct H1 as [finv].",
            "VernacExtend",
            "a506a59ed3fb675aa58ba23432c2fbbac5e73e7e"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "apply inj_countable with finv.",
            "VernacExtend",
            "cec01a71763cf8b7e291aa7f547a577b0704673f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countable_downward_closed: forall {X:Type} (S T:Ensemble X), Countable T -> Included S T -> Countable S.",
            "VernacStartTheoremProof",
            "e57003fc0f23ab159abbef4b8acf145a5765f5cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "exists (fun x:{x:X | In S x} => match x with | exist x0 i => f (exist _ x0 (H0 _ i)) end).",
            "VernacExtend",
            "70da08e8dd0777c08145c2b66b1cd9b25e6562d1"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x1 as [x1].",
            "VernacExtend",
            "b016065599483c32bf8fd4554158068ae2c58e22"
        ],
        [
            "destruct x2 as [x2].",
            "VernacExtend",
            "06727055a45e3841da3a196b77c75b96d017c9d9"
        ],
        [
            "apply H in H1.",
            "VernacExtend",
            "46d1b6927673d867c7806cf0f74cc38356579bf8"
        ],
        [
            "injection H1; intros.",
            "VernacExtend",
            "e85fdf9e0584495092fb3b572756f7424e9c4db8"
        ],
        [
            "destruct H2.",
            "VernacExtend",
            "7d33163a064bad536ec0f601f214b86de6ac5ab6"
        ],
        [
            "destruct (proof_irrelevance _ i i0).",
            "VernacExtend",
            "79ffc064b748309b6f382fde59dbf539530905d9"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countable_img: forall {X Y:Type} (f:X->Y) (S:Ensemble X), Countable S -> Countable (Im S f).",
            "VernacStartTheoremProof",
            "97d19ae213785ce3dad5b2c36ed35d2b796d6d74"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall x:X, In S x -> In (Im S f) (f x)).",
            "VernacExtend",
            "e7ea61bc38d800399571eb425285086a7793be0d"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "pose (fS := fun x:{x:X | In S x} => match x return {y:Y | In (Im S f) y} with | exist x0 i => exist _ (f x0) (H0 x0 i) end).",
            "VernacExtend",
            "7557ffdb60cc29bcf4937251abb313b74ab5d47d"
        ],
        [
            "apply surj_countable with fS; trivial.",
            "VernacExtend",
            "2e19c67ee5da9dea9e5674f76e44f850b6c132a9"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct y.",
            "VernacExtend",
            "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
        ],
        [
            "destruct i.",
            "VernacExtend",
            "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
        ],
        [
            "exists (exist _ x i).",
            "VernacExtend",
            "0b44865291d3a179a4113104719cee39ab9819c0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (H0 x i); intro.",
            "VernacExtend",
            "d44a114e30ae97a01f414e5c3ab1f91441f386c8"
        ],
        [
            "generalize (Im_intro X Y S f x i y e); intro.",
            "VernacExtend",
            "3ae9cd0d187f96372c862c048fd21facb37e7a57"
        ],
        [
            "destruct e.",
            "VernacExtend",
            "6785fac4a52839433f2a36a721f6e0fc71773d77"
        ],
        [
            "destruct (proof_irrelevance _ i0 i1).",
            "VernacExtend",
            "18b4686f9c23a43cf518176678beee8957fe92b3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma countable_type_ensemble: forall {X:Type} (S:Ensemble X), CountableT X -> Countable S.",
            "VernacStartTheoremProof",
            "d717383b2f3eb1cc52b160948bdd05514b4ad47a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "apply inj_countable with (@proj1_sig _ (fun x:X => In S x)).",
            "VernacExtend",
            "06dec27baaca3280671dac84bb05ba3df4fcbdbc"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply proj1_sig_injective.",
            "VernacExtend",
            "4980a9861f0f9cd74cda0564e22ab302a6eb5ded"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FiniteT_impl_CountableT: forall X:Type, FiniteT X -> CountableT X.",
            "VernacStartTheoremProof",
            "c4d4746a5234f9bb58505942bfb8753038a4120c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H.",
            "VernacExtend",
            "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
        ],
        [
            "exists (False_rect nat).",
            "VernacExtend",
            "61bb284504a24e95bebd59825b4356328a2f6a2f"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x1.",
            "VernacExtend",
            "ff1dad6ec5db7ff89c9cf6f997a051344d995417"
        ],
        [
            "destruct IHFiniteT.",
            "VernacExtend",
            "f94776ee735fd82bcb400504c2f572355a028f68"
        ],
        [
            "exists (fun x:option T => match x with | Some x0 => S (f x0) | None => 0 end).",
            "VernacExtend",
            "882038e6e27c6ac23306c20cdb9f837106e0a235"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x1; destruct x2; try (injection H1 || discriminate H1); trivial.",
            "VernacExtend",
            "c6af7e34ec6f2269732abb88166f522c51c40329"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H0 in H2.",
            "VernacExtend",
            "d887f7b54fc680f0802cf0c8ef67f7262135c938"
        ],
        [
            "destruct H2; trivial.",
            "VernacExtend",
            "f4a1b2243ca55dc8d47180c0d2abb5b6923994d9"
        ],
        [
            "destruct IHFiniteT as [g].",
            "VernacExtend",
            "4bbaff36342adf8a744fee5ac85d90e16982aecc"
        ],
        [
            "destruct H0 as [finv].",
            "VernacExtend",
            "581b0351ed6f99b9947b248bb9ff6555bdb56e10"
        ],
        [
            "exists (fun y:Y => g (finv y)).",
            "VernacExtend",
            "6e764530ac55c40c43c8a862aa6136e329c716c8"
        ],
        [
            "red; intros y1 y2 ?.",
            "VernacExtend",
            "39c929fa413c3a074334ee1423042be9254acf53"
        ],
        [
            "apply H1 in H3.",
            "VernacExtend",
            "dd08684d66bb4636666a3dcf829310c46bb9bf9d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Finite_impl_Countable: forall {X:Type} (S:Ensemble X), Finite _ S -> Countable S.",
            "VernacStartTheoremProof",
            "d0ca9b8726df46936bcc8ab43b143270427a5c14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply FiniteT_impl_CountableT.",
            "VernacExtend",
            "5750145deb819c891a2d1197619643f0eb2104f6"
        ],
        [
            "apply Finite_ens_type; trivial.",
            "VernacExtend",
            "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Export ZArith.",
            "VernacRequire",
            "e55f3132f44691206e5b3b8ec9a74fbc1c203a27"
        ],
        [
            "Lemma positive_countable: CountableT positive.",
            "VernacStartTheoremProof",
            "1814de88a475cb82590f92c08fdabc6c2c3f1659"
        ],
        [
            "exists nat_of_P.",
            "VernacExtend",
            "16c78aee9fc0505482c7d551360dc2187599df32"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply nat_of_P_inj; trivial.",
            "VernacExtend",
            "6119652d7d321e59556e411e65de3e4f7b470201"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_countable: CountableT Z.",
            "VernacStartTheoremProof",
            "b9b18e93c0a9414523d8b7d3d674f107c7be36b6"
        ],
        [
            "destruct (countable_nat_product) as [f].",
            "VernacExtend",
            "0d44d59301679fc4d550dd4b189ad49899622771"
        ],
        [
            "destruct positive_countable as [g].",
            "VernacExtend",
            "56edb5d53389a59cab7757f47ef9ea9138b298ee"
        ],
        [
            "exists (fun n:Z => match n with | Z0 => f (0, 0) | Zpos p => f (1, g p) | Zneg p => f (2, g p) end).",
            "VernacExtend",
            "dad35b49645cf529a2fa714bf7c99ead3ea9f573"
        ],
        [
            "red; intros n1 n2 ?.",
            "VernacExtend",
            "22d6bb0c602ced098731757dd90fde0a824d179d"
        ],
        [
            "destruct n1 as [|p1|p1]; destruct n2 as [|p2|p2]; apply H in H1; try discriminate H1.",
            "VernacExtend",
            "ff1af8bc87b246812fcec49b4a0a4db90af9e39e"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "injection H1; intro; f_equal; auto.",
            "VernacExtend",
            "47f341a7b7f617c3e06b04fcbbf80647f74baf33"
        ],
        [
            "injection H1; intro; f_equal; auto.",
            "VernacExtend",
            "47f341a7b7f617c3e06b04fcbbf80647f74baf33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Export QArith.",
            "VernacRequire",
            "424ad429b03636b7d4db6dae11ad827d9efab698"
        ],
        [
            "Lemma Q_countable: CountableT Q.",
            "VernacStartTheoremProof",
            "1477e13de77215f1109a41a0b184e89ce23c2730"
        ],
        [
            "destruct countable_nat_product as [f].",
            "VernacExtend",
            "14addd4bb083cab7e12d15d7e5ba49e984e7533f"
        ],
        [
            "destruct positive_countable as [g].",
            "VernacExtend",
            "56edb5d53389a59cab7757f47ef9ea9138b298ee"
        ],
        [
            "destruct Z_countable as [h].",
            "VernacExtend",
            "c680ae73ea4afe9c122b7078b34c105e506427b0"
        ],
        [
            "exists (fun q:Q => match q with n # d => f (h n, g d) end).",
            "VernacExtend",
            "c511971a2366f2687625fb8a2ea7fae5892b4fff"
        ],
        [
            "red; intros q1 q2 ?.",
            "VernacExtend",
            "c421931286ffa70dc94e132485b05c5617f17eef"
        ],
        [
            "destruct q1 as [n1 d1]; destruct q2 as [n2 d2].",
            "VernacExtend",
            "16b0c9bcc3198355c50739f0c96036da574235ee"
        ],
        [
            "apply H in H2.",
            "VernacExtend",
            "74a212b9e7baa8aa6844e71898c157973d7f5b2a"
        ],
        [
            "injection H2; intros.",
            "VernacExtend",
            "34557a86268c5c56e0342380388660eaaaaa564e"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Export IndexedFamilies.",
            "VernacRequire",
            "1e0e123dc1ef98882f08be9e5c4d201503aa4c92"
        ],
        [
            "Lemma countable_union: forall {X A:Type} (F:IndexedFamily A X), CountableT A -> (forall a:A, Countable (F a)) -> Countable (IndexedUnion F).",
            "VernacStartTheoremProof",
            "979a99154162449a908f41b47c0ad540eebf8fae"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (choice_on_dependent_type (fun (a:A) (f:{x:X | In (F a) x} -> nat) => injective f)) as [choice_fun_inj].",
            "VernacExtend",
            "d985b7ba785bea8131565b2611221b5f46766f93"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct (H0 a).",
            "VernacExtend",
            "692947a23abae9598ed57f8b4928152d3f9af4f3"
        ],
        [
            "exists f; trivial.",
            "VernacExtend",
            "ec7c823061824dde8d9c61f6febe653cd662ea04"
        ],
        [
            "destruct (choice (fun (x:{x:X | In (IndexedUnion F) x}) (a:A) => In (F a) (proj1_sig x))) as [choice_fun_a].",
            "VernacExtend",
            "e70b42fef60b2b32d8802244f5f30371d3c4cb66"
        ],
        [
            "destruct x as [x [a]].",
            "VernacExtend",
            "ecf8c5c38575ea32acf8877779e2a8ab396d66aa"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct countable_nat_product as [g].",
            "VernacExtend",
            "a3371e3e5765be56681d9f4ddb87f082a1743abc"
        ],
        [
            "destruct H as [h].",
            "VernacExtend",
            "5c1a0c24611790306acba06c831903b01c307422"
        ],
        [
            "exists (fun x:{x:X | In (IndexedUnion F) x} => g (h (choice_fun_a x), choice_fun_inj (choice_fun_a x) (exist _ (proj1_sig x) (H2 x)))).",
            "VernacExtend",
            "a8aa5d4007a9a042c592f14a0eb2670a9fb115ab"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply H3 in H4.",
            "VernacExtend",
            "78e710138a6143b748f2f0f898a1d3e454fe1c2b"
        ],
        [
            "injection H4; intros.",
            "VernacExtend",
            "5d46537b251f8e4651d7e8a0e94149bfeb1e7755"
        ],
        [
            "apply H in H6.",
            "VernacExtend",
            "5d6b5823308b9dfec470ec34ff28570a0d6aef78"
        ],
        [
            "revert H5.",
            "VernacExtend",
            "3e14532147b9cf629eb2f0d83d4c89b3ae989c2a"
        ],
        [
            "generalize (H2 x1).",
            "VernacExtend",
            "3ba7d472cdf3752dbd47222ddb3802f0f1cc70f5"
        ],
        [
            "generalize (H2 x2).",
            "VernacExtend",
            "1661e67c00865bdccdb971f1d65c74aa3beb5760"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H1 in H5.",
            "VernacExtend",
            "7b3a46b6a7e41c70a7cba8ddc27f09a527a14f2c"
        ],
        [
            "injection H5.",
            "VernacExtend",
            "fb4c8e913233a4c14f6a37cee93239e050497dba"
        ],
        [
            "apply proj1_sig_injective.",
            "VernacExtend",
            "4980a9861f0f9cd74cda0564e22ab302a6eb5ded"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "CountableT_is_FiniteT_or_countably_infinite",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply exclusive_dec.",
                        "VernacExtend",
                        "bb6396dc7583c2a90b9f2e5ae9c04c9c81b5604b"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [? [f ?]].",
                        "VernacExtend",
                        "3cee91f421b0ef853a5821a09ef8e3074b53f5a4"
                    ]
                },
                {
                    "command": [
                        "contradiction nat_infinite.",
                        "VernacExtend",
                        "c71234314cc9f0860d69f2bda3434560cb0496ba"
                    ]
                },
                {
                    "command": [
                        "apply bij_finite with _ f; trivial.",
                        "VernacExtend",
                        "3fc8ef1273c4bc51b1079426dee1507e15bb4f0a"
                    ]
                },
                {
                    "command": [
                        "apply bijective_impl_invertible; trivial.",
                        "VernacExtend",
                        "7b3676433c67b37550c62e46643eba60daac8883"
                    ]
                },
                {
                    "command": [
                        "case (classic (FiniteT X)).",
                        "VernacExtend",
                        "34a4b3553b0b5190b4851a5355197403364fdfd0"
                    ]
                },
                {
                    "command": [
                        "left; trivial.",
                        "VernacExtend",
                        "2f1efd67ff23560c270a9589d0d1b100a9c80732"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply infinite_nat_inj in H0.",
                        "VernacExtend",
                        "3731b3f9694e0ea882fd534acf41e2ff380e1ce6"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [g].",
                        "VernacExtend",
                        "a3604bccd4d93556c17ad023dabc85a92b33cf1d"
                    ]
                },
                {
                    "command": [
                        "apply CSB with f g; trivial.",
                        "VernacExtend",
                        "1f76250d311acfb20e271cb534fda7559bac4c10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countable_sum",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [f].",
                        "VernacExtend",
                        "a978a142d2f6b383e62b2d0034f877e1bc6103fd"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [g].",
                        "VernacExtend",
                        "a3604bccd4d93556c17ad023dabc85a92b33cf1d"
                    ]
                },
                {
                    "command": [
                        "destruct countable_nat_product as [h].",
                        "VernacExtend",
                        "7e362ab68933ba2552d5ef1d822af82e8a016710"
                    ]
                },
                {
                    "command": [
                        "exists (fun s:X+Y => match s with | inl x => h (0, f x) | inr y => h (1, g y) end).",
                        "VernacExtend",
                        "798f72fd4455ed9300d0222772121854c92cdc82"
                    ]
                },
                {
                    "command": [
                        "red; intros s1 s2 ?.",
                        "VernacExtend",
                        "1c9b63e2ba6fda1135a110ed49a8727e5b0ac3c4"
                    ]
                },
                {
                    "command": [
                        "destruct s1 as [x1|y1]; destruct s2 as [x2|y2]; apply H1 in H2; try discriminate H2; intros; f_equal; (apply H || apply H0); injection H2; trivial.",
                        "VernacExtend",
                        "eccc9698b407852d1a681fd0f18b51c4f2873e71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countable_product",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [f].",
                        "VernacExtend",
                        "a978a142d2f6b383e62b2d0034f877e1bc6103fd"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [g].",
                        "VernacExtend",
                        "a3604bccd4d93556c17ad023dabc85a92b33cf1d"
                    ]
                },
                {
                    "command": [
                        "pose (fg := fun (p:X*Y) => let (x,y):=p in (f x, g y)).",
                        "VernacExtend",
                        "ecd55b8e41591192095e5b57878cf8f6c5bcb670"
                    ]
                },
                {
                    "command": [
                        "destruct countable_nat_product as [h].",
                        "VernacExtend",
                        "7e362ab68933ba2552d5ef1d822af82e8a016710"
                    ]
                },
                {
                    "command": [
                        "exists (fun p:X*Y => h (fg p)).",
                        "VernacExtend",
                        "363b3bf602ea9224b4e7eb680fc21a8386ff2cde"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H2.",
                        "VernacExtend",
                        "d3132def680733ecd29eb5bc865040ad28c4dfa0"
                    ]
                },
                {
                    "command": [
                        "destruct x1 as [x1 y1].",
                        "VernacExtend",
                        "8f1c2e3e561212afd51b39ebee312c1fa713ba62"
                    ]
                },
                {
                    "command": [
                        "destruct x2 as [x2 y2].",
                        "VernacExtend",
                        "089a1f91ac019a64400579c3f4cc185422cac677"
                    ]
                },
                {
                    "command": [
                        "unfold fg in H2.",
                        "VernacExtend",
                        "a713c15daf724f6629a9846aaba19088da728d92"
                    ]
                },
                {
                    "command": [
                        "injection H2; intros.",
                        "VernacExtend",
                        "34557a86268c5c56e0342380388660eaaaaa564e"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H3.",
                        "VernacExtend",
                        "6ce74944a0ebf1f39c68ae69c10979913eb4e4a4"
                    ]
                },
                {
                    "command": [
                        "apply H in H4.",
                        "VernacExtend",
                        "8cdba0fb48f40b8129fb33e99fae70781c437d75"
                    ]
                },
                {
                    "command": [
                        "f_equal; trivial.",
                        "VernacExtend",
                        "232e01a4ac5b3c7b3afa8e2ea5ea4fd4a55d1e22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countable_exp",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "exists (fun _ => 0).",
                        "VernacExtend",
                        "9f71c9d83c3218d5173b15ecb87c06c14ffb9162"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "extensionality f.",
                        "VernacExtend",
                        "de8f9c7d16c23d9ca4a8c200662e9f51ef368c6e"
                    ]
                },
                {
                    "command": [
                        "destruct f.",
                        "VernacExtend",
                        "fa7dd60fb40b788ad759ba689237e8819dd1d13e"
                    ]
                },
                {
                    "command": [
                        "destruct (countable_product (T->Y) Y); trivial.",
                        "VernacExtend",
                        "090766f2987e357cdf7f402d659b1fbecc41b156"
                    ]
                },
                {
                    "command": [
                        "exists (fun (g:option T->Y) => f (fun x:T => g (Some x), g None)).",
                        "VernacExtend",
                        "4bc676c334df221706885c4fd1c90c80fd2820a6"
                    ]
                },
                {
                    "command": [
                        "red; intros g1 g2 ?.",
                        "VernacExtend",
                        "63001394489aea72cd3304abeb6eee606219398b"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H2.",
                        "VernacExtend",
                        "d3132def680733ecd29eb5bc865040ad28c4dfa0"
                    ]
                },
                {
                    "command": [
                        "extensionality o.",
                        "VernacExtend",
                        "b9b85938c81bb71a7f5d452575495e9d69b9e722"
                    ]
                },
                {
                    "command": [
                        "destruct o.",
                        "VernacExtend",
                        "7e45d273082b90e03f5f97cde65b5f989324a175"
                    ]
                },
                {
                    "command": [
                        "injection H2; intros.",
                        "VernacExtend",
                        "34557a86268c5c56e0342380388660eaaaaa564e"
                    ]
                },
                {
                    "command": [
                        "pose proof (equal_f H4).",
                        "VernacExtend",
                        "d6390038ca18ec5cbc9c4bd02bef847818f6e439"
                    ]
                },
                {
                    "command": [
                        "simpl in H5.",
                        "VernacExtend",
                        "03fbfc7bb6b248b41f6241227db3e5c410547157"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "injection H2; trivial.",
                        "VernacExtend",
                        "6ca4b94272c0966592f9176bf09130db719feb41"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "destruct IHFiniteT.",
                        "VernacExtend",
                        "f94776ee735fd82bcb400504c2f572355a028f68"
                    ]
                },
                {
                    "command": [
                        "exists (fun (h:Y0->Y) => f0 (fun x:X => h (f x))).",
                        "VernacExtend",
                        "c8bb3574de6d77e2c82628d5a69e096599321d77"
                    ]
                },
                {
                    "command": [
                        "red; intros h1 h2 ?.",
                        "VernacExtend",
                        "4d3e37125739fc3c5b2103e481e392ac09a2a6c6"
                    ]
                },
                {
                    "command": [
                        "apply H3 in H4.",
                        "VernacExtend",
                        "78e710138a6143b748f2f0f898a1d3e454fe1c2b"
                    ]
                },
                {
                    "command": [
                        "pose proof (equal_f H4).",
                        "VernacExtend",
                        "d6390038ca18ec5cbc9c4bd02bef847818f6e439"
                    ]
                },
                {
                    "command": [
                        "simpl in H5.",
                        "VernacExtend",
                        "03fbfc7bb6b248b41f6241227db3e5c410547157"
                    ]
                },
                {
                    "command": [
                        "extensionality y.",
                        "VernacExtend",
                        "74b9cf664299dc3016b507088f18d348160ec9e9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H2 y).",
                        "VernacExtend",
                        "e327ca4cbee40917ac7f86535f8e65b1400d83ac"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_countable",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [g].",
                        "VernacExtend",
                        "a4b7ee72f6e3fbaefb8a63ed57d293d605e8f973"
                    ]
                },
                {
                    "command": [
                        "exists (fun x:X => g (f x)).",
                        "VernacExtend",
                        "69d8f8bb7088f9a64094433c4c91545d4cc7d2b1"
                    ]
                },
                {
                    "command": [
                        "red; intros; auto.",
                        "VernacExtend",
                        "f156019c974144f4de49a35ea72135d49fa2af43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countable_downward_closed",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "exists (fun x:{x:X | In S x} => match x with | exist x0 i => f (exist _ x0 (H0 _ i)) end).",
                        "VernacExtend",
                        "70da08e8dd0777c08145c2b66b1cd9b25e6562d1"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x1 as [x1].",
                        "VernacExtend",
                        "b016065599483c32bf8fd4554158068ae2c58e22"
                    ]
                },
                {
                    "command": [
                        "destruct x2 as [x2].",
                        "VernacExtend",
                        "06727055a45e3841da3a196b77c75b96d017c9d9"
                    ]
                },
                {
                    "command": [
                        "apply H in H1.",
                        "VernacExtend",
                        "46d1b6927673d867c7806cf0f74cc38356579bf8"
                    ]
                },
                {
                    "command": [
                        "injection H1; intros.",
                        "VernacExtend",
                        "e85fdf9e0584495092fb3b572756f7424e9c4db8"
                    ]
                },
                {
                    "command": [
                        "destruct H2.",
                        "VernacExtend",
                        "7d33163a064bad536ec0f601f214b86de6ac5ab6"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ i i0).",
                        "VernacExtend",
                        "79ffc064b748309b6f382fde59dbf539530905d9"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countable_img",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall x:X, In S x -> In (Im S f) (f x)).",
                        "VernacExtend",
                        "e7ea61bc38d800399571eb425285086a7793be0d"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "pose (fS := fun x:{x:X | In S x} => match x return {y:Y | In (Im S f) y} with | exist x0 i => exist _ (f x0) (H0 x0 i) end).",
                        "VernacExtend",
                        "7557ffdb60cc29bcf4937251abb313b74ab5d47d"
                    ]
                },
                {
                    "command": [
                        "apply surj_countable with fS; trivial.",
                        "VernacExtend",
                        "2e19c67ee5da9dea9e5674f76e44f850b6c132a9"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct y.",
                        "VernacExtend",
                        "fbeb4c3b73b2f0e6bfc89563d7f3b824ea0ea309"
                    ]
                },
                {
                    "command": [
                        "destruct i.",
                        "VernacExtend",
                        "7ab4d0c959e49705b3528aeb0ec3e44ca47eacef"
                    ]
                },
                {
                    "command": [
                        "exists (exist _ x i).",
                        "VernacExtend",
                        "0b44865291d3a179a4113104719cee39ab9819c0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (H0 x i); intro.",
                        "VernacExtend",
                        "d44a114e30ae97a01f414e5c3ab1f91441f386c8"
                    ]
                },
                {
                    "command": [
                        "generalize (Im_intro X Y S f x i y e); intro.",
                        "VernacExtend",
                        "3ae9cd0d187f96372c862c048fd21facb37e7a57"
                    ]
                },
                {
                    "command": [
                        "destruct e.",
                        "VernacExtend",
                        "6785fac4a52839433f2a36a721f6e0fc71773d77"
                    ]
                },
                {
                    "command": [
                        "destruct (proof_irrelevance _ i0 i1).",
                        "VernacExtend",
                        "18b4686f9c23a43cf518176678beee8957fe92b3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countable_type_ensemble",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "apply inj_countable with (@proj1_sig _ (fun x:X => In S x)).",
                        "VernacExtend",
                        "06dec27baaca3280671dac84bb05ba3df4fcbdbc"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply proj1_sig_injective.",
                        "VernacExtend",
                        "4980a9861f0f9cd74cda0564e22ab302a6eb5ded"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FiniteT_impl_CountableT",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H.",
                        "VernacExtend",
                        "f8e74d6b42ecd6b509e6a20cee53bb69d051cd07"
                    ]
                },
                {
                    "command": [
                        "exists (False_rect nat).",
                        "VernacExtend",
                        "61bb284504a24e95bebd59825b4356328a2f6a2f"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x1.",
                        "VernacExtend",
                        "ff1dad6ec5db7ff89c9cf6f997a051344d995417"
                    ]
                },
                {
                    "command": [
                        "destruct IHFiniteT.",
                        "VernacExtend",
                        "f94776ee735fd82bcb400504c2f572355a028f68"
                    ]
                },
                {
                    "command": [
                        "exists (fun x:option T => match x with | Some x0 => S (f x0) | None => 0 end).",
                        "VernacExtend",
                        "882038e6e27c6ac23306c20cdb9f837106e0a235"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x1; destruct x2; try (injection H1 || discriminate H1); trivial.",
                        "VernacExtend",
                        "c6af7e34ec6f2269732abb88166f522c51c40329"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H0 in H2.",
                        "VernacExtend",
                        "d887f7b54fc680f0802cf0c8ef67f7262135c938"
                    ]
                },
                {
                    "command": [
                        "destruct H2; trivial.",
                        "VernacExtend",
                        "f4a1b2243ca55dc8d47180c0d2abb5b6923994d9"
                    ]
                },
                {
                    "command": [
                        "destruct IHFiniteT as [g].",
                        "VernacExtend",
                        "4bbaff36342adf8a744fee5ac85d90e16982aecc"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as [finv].",
                        "VernacExtend",
                        "581b0351ed6f99b9947b248bb9ff6555bdb56e10"
                    ]
                },
                {
                    "command": [
                        "exists (fun y:Y => g (finv y)).",
                        "VernacExtend",
                        "6e764530ac55c40c43c8a862aa6136e329c716c8"
                    ]
                },
                {
                    "command": [
                        "red; intros y1 y2 ?.",
                        "VernacExtend",
                        "39c929fa413c3a074334ee1423042be9254acf53"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H3.",
                        "VernacExtend",
                        "dd08684d66bb4636666a3dcf829310c46bb9bf9d"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Finite_impl_Countable",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply FiniteT_impl_CountableT.",
                        "VernacExtend",
                        "5750145deb819c891a2d1197619643f0eb2104f6"
                    ]
                },
                {
                    "command": [
                        "apply Finite_ens_type; trivial.",
                        "VernacExtend",
                        "2bd98a8ddf9e146f34a14d0cdd2a17f8aaeefa87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "positive_countable",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "exists nat_of_P.",
                        "VernacExtend",
                        "16c78aee9fc0505482c7d551360dc2187599df32"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply nat_of_P_inj; trivial.",
                        "VernacExtend",
                        "6119652d7d321e59556e411e65de3e4f7b470201"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_countable",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "destruct (countable_nat_product) as [f].",
                        "VernacExtend",
                        "0d44d59301679fc4d550dd4b189ad49899622771"
                    ]
                },
                {
                    "command": [
                        "destruct positive_countable as [g].",
                        "VernacExtend",
                        "56edb5d53389a59cab7757f47ef9ea9138b298ee"
                    ]
                },
                {
                    "command": [
                        "exists (fun n:Z => match n with | Z0 => f (0, 0) | Zpos p => f (1, g p) | Zneg p => f (2, g p) end).",
                        "VernacExtend",
                        "dad35b49645cf529a2fa714bf7c99ead3ea9f573"
                    ]
                },
                {
                    "command": [
                        "red; intros n1 n2 ?.",
                        "VernacExtend",
                        "22d6bb0c602ced098731757dd90fde0a824d179d"
                    ]
                },
                {
                    "command": [
                        "destruct n1 as [|p1|p1]; destruct n2 as [|p2|p2]; apply H in H1; try discriminate H1.",
                        "VernacExtend",
                        "ff1af8bc87b246812fcec49b4a0a4db90af9e39e"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "injection H1; intro; f_equal; auto.",
                        "VernacExtend",
                        "47f341a7b7f617c3e06b04fcbbf80647f74baf33"
                    ]
                },
                {
                    "command": [
                        "injection H1; intro; f_equal; auto.",
                        "VernacExtend",
                        "47f341a7b7f617c3e06b04fcbbf80647f74baf33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q_countable",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "destruct countable_nat_product as [f].",
                        "VernacExtend",
                        "14addd4bb083cab7e12d15d7e5ba49e984e7533f"
                    ]
                },
                {
                    "command": [
                        "destruct positive_countable as [g].",
                        "VernacExtend",
                        "56edb5d53389a59cab7757f47ef9ea9138b298ee"
                    ]
                },
                {
                    "command": [
                        "destruct Z_countable as [h].",
                        "VernacExtend",
                        "c680ae73ea4afe9c122b7078b34c105e506427b0"
                    ]
                },
                {
                    "command": [
                        "exists (fun q:Q => match q with n # d => f (h n, g d) end).",
                        "VernacExtend",
                        "c511971a2366f2687625fb8a2ea7fae5892b4fff"
                    ]
                },
                {
                    "command": [
                        "red; intros q1 q2 ?.",
                        "VernacExtend",
                        "c421931286ffa70dc94e132485b05c5617f17eef"
                    ]
                },
                {
                    "command": [
                        "destruct q1 as [n1 d1]; destruct q2 as [n2 d2].",
                        "VernacExtend",
                        "16b0c9bcc3198355c50739f0c96036da574235ee"
                    ]
                },
                {
                    "command": [
                        "apply H in H2.",
                        "VernacExtend",
                        "74a212b9e7baa8aa6844e71898c157973d7f5b2a"
                    ]
                },
                {
                    "command": [
                        "injection H2; intros.",
                        "VernacExtend",
                        "34557a86268c5c56e0342380388660eaaaaa564e"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "countable_union",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (choice_on_dependent_type (fun (a:A) (f:{x:X | In (F a) x} -> nat) => injective f)) as [choice_fun_inj].",
                        "VernacExtend",
                        "d985b7ba785bea8131565b2611221b5f46766f93"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 a).",
                        "VernacExtend",
                        "692947a23abae9598ed57f8b4928152d3f9af4f3"
                    ]
                },
                {
                    "command": [
                        "exists f; trivial.",
                        "VernacExtend",
                        "ec7c823061824dde8d9c61f6febe653cd662ea04"
                    ]
                },
                {
                    "command": [
                        "destruct (choice (fun (x:{x:X | In (IndexedUnion F) x}) (a:A) => In (F a) (proj1_sig x))) as [choice_fun_a].",
                        "VernacExtend",
                        "e70b42fef60b2b32d8802244f5f30371d3c4cb66"
                    ]
                },
                {
                    "command": [
                        "destruct x as [x [a]].",
                        "VernacExtend",
                        "ecf8c5c38575ea32acf8877779e2a8ab396d66aa"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct countable_nat_product as [g].",
                        "VernacExtend",
                        "a3371e3e5765be56681d9f4ddb87f082a1743abc"
                    ]
                },
                {
                    "command": [
                        "destruct H as [h].",
                        "VernacExtend",
                        "5c1a0c24611790306acba06c831903b01c307422"
                    ]
                },
                {
                    "command": [
                        "exists (fun x:{x:X | In (IndexedUnion F) x} => g (h (choice_fun_a x), choice_fun_inj (choice_fun_a x) (exist _ (proj1_sig x) (H2 x)))).",
                        "VernacExtend",
                        "a8aa5d4007a9a042c592f14a0eb2670a9fb115ab"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply H3 in H4.",
                        "VernacExtend",
                        "78e710138a6143b748f2f0f898a1d3e454fe1c2b"
                    ]
                },
                {
                    "command": [
                        "injection H4; intros.",
                        "VernacExtend",
                        "5d46537b251f8e4651d7e8a0e94149bfeb1e7755"
                    ]
                },
                {
                    "command": [
                        "apply H in H6.",
                        "VernacExtend",
                        "5d6b5823308b9dfec470ec34ff28570a0d6aef78"
                    ]
                },
                {
                    "command": [
                        "revert H5.",
                        "VernacExtend",
                        "3e14532147b9cf629eb2f0d83d4c89b3ae989c2a"
                    ]
                },
                {
                    "command": [
                        "generalize (H2 x1).",
                        "VernacExtend",
                        "3ba7d472cdf3752dbd47222ddb3802f0f1cc70f5"
                    ]
                },
                {
                    "command": [
                        "generalize (H2 x2).",
                        "VernacExtend",
                        "1661e67c00865bdccdb971f1d65c74aa3beb5760"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H1 in H5.",
                        "VernacExtend",
                        "7b3a46b6a7e41c70a7cba8ddc27f09a527a14f2c"
                    ]
                },
                {
                    "command": [
                        "injection H5.",
                        "VernacExtend",
                        "fb4c8e913233a4c14f6a37cee93239e050497dba"
                    ]
                },
                {
                    "command": [
                        "apply proj1_sig_injective.",
                        "VernacExtend",
                        "4980a9861f0f9cd74cda0564e22ab302a6eb5ded"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}