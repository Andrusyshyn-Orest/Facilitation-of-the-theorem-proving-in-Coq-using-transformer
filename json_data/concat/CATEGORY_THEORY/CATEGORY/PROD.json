{
    "filename": "CATEGORY_THEORY/CATEGORY/PROD.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Category.",
            "VernacRequire",
            "6a125bf50b9576ff635d4739a20cdc31336a753f"
        ],
        [
            "Require Export SetoidPROD.",
            "VernacRequire",
            "8905dc8efa17c293061fbbc906169feff69b4160"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section ProdCat.",
            "VernacBeginSection",
            "12d1bccf57b08638b2e46e204ba845ba37c09050"
        ],
        [
            "Variable A B : Category.",
            "VernacAssumption",
            "a93c38b03794b1bf2c8f2cf5a92e6c15c99781aa"
        ],
        [
            "Structure POb : Type := {Ob_l : A; Ob_r : B}.",
            "VernacInductive",
            "27a617f449d46a2cc4f8d8dfa169edfc62467b9a"
        ],
        [
            "Section pmor_setoid_def.",
            "VernacBeginSection",
            "c98e7ecd4dd80208f5af1f4094e18c649f8c5284"
        ],
        [
            "Variable u t : POb.",
            "VernacAssumption",
            "7194d4651dddd0c53b22b68b50128802aaf3bb60"
        ],
        [
            "Structure Pmor : Type := {Hom_l : Ob_l u --> Ob_l t; Hom_r : Ob_r u --> Ob_r t}.",
            "VernacInductive",
            "4f0b2726a311cd15abb8d9441c4bba03029a0fbd"
        ],
        [
            "Definition Equal_Pmor (f g : Pmor) := Hom_l f =_S Hom_l g /\\ Hom_r f =_S Hom_r g.",
            "VernacDefinition",
            "3873b1471df704e6dee6996c7de6f7bda9fcc5f7"
        ],
        [
            "Lemma Equal_Pmor_equiv : Equivalence Equal_Pmor.",
            "VernacStartTheoremProof",
            "2630bfc149f33565bcb07c3092b6b6b752f21941"
        ],
        [
            "apply Build_Equivalence.",
            "VernacExtend",
            "6179e27dcd740b742a59fad768ff2e759dba2ba2"
        ],
        [
            "unfold Reflexive, Equal_Pmor in |- *; intro x; split; apply Refl.",
            "VernacExtend",
            "9d0b62ff44a9d07ced90b21cf462b769c4bdce35"
        ],
        [
            "apply Build_Partial_equivalence.",
            "VernacExtend",
            "5de4c099bba37baf71314284222f46bb7a8fa46f"
        ],
        [
            "unfold Transitive, Equal_Pmor in |- *; intros x1 x2 x3 H H0.",
            "VernacExtend",
            "039a4ff1622e93e5ed92ae1d78026f03e8e1267a"
        ],
        [
            "elim H; intros H1 H2; elim H0; intros H3 H4; split.",
            "VernacExtend",
            "48e06d76de6872c968bdf3be1515b819da2577d4"
        ],
        [
            "apply Trans with (Hom_l x2); assumption.",
            "VernacExtend",
            "3092a081f1b74e6b0d489ebd8988e481ceb93bc6"
        ],
        [
            "apply Trans with (Hom_r x2); assumption.",
            "VernacExtend",
            "03fdd2bca494abca8bb3deec53cd8a8a960242e7"
        ],
        [
            "unfold Symmetric, Equal_Pmor in |- *; intros x1 x2 H.",
            "VernacExtend",
            "719645ab9c901b0baa9e7bfebbba554c3ae02e70"
        ],
        [
            "elim H; intros H1 H2; split; apply Sym; assumption.",
            "VernacExtend",
            "1669ab33c9c3b8445f7d0fc3252bf5d41e1c216a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Prod_Hom : Setoid := Equal_Pmor_equiv.",
            "VernacDefinition",
            "a4bf007c11a33d04a9648e1177c536eaefcadf3d"
        ],
        [
            "Definition Prod_Hom' := SPROD (Ob_l u --> Ob_l t) (Ob_r u --> Ob_r t).",
            "VernacDefinition",
            "b3f336ea3768a09eea96de46ff872118ca643ab9"
        ],
        [
            "Definition Build1_Pmor : (Ob_l u --> Ob_l t) -> (Ob_r u --> Ob_r t) -> Prod_Hom := Build_Pmor.",
            "VernacDefinition",
            "059cc085579b7bc2ae986c535afb6f01ab74c54b"
        ],
        [
            "End pmor_setoid_def.",
            "VernacEndSegment",
            "13dbba8a8615b623513448c384d815b6a0aa67f5"
        ],
        [
            "Definition Comp_Pmor (a b c : POb) (f : Prod_Hom a b) (g : Prod_Hom b c) := Build_Pmor (Hom_l f o Hom_l g) (Hom_r f o Hom_r g).",
            "VernacDefinition",
            "244523a2dbda26c6576a41e6a53ec0c6034e0ad2"
        ],
        [
            "Lemma Comp_Pmor_congl : Congl_law Comp_Pmor.",
            "VernacStartTheoremProof",
            "9e9305ca2ca9a192353694ded4ff27f8c3744d92"
        ],
        [
            "unfold Congl_law in |- *; simpl in |- *.",
            "VernacExtend",
            "17461d5180d7375dd6f792992ed5f6e115b86da1"
        ],
        [
            "unfold Equal_Pmor, Comp_Pmor in |- *; simpl in |- *.",
            "VernacExtend",
            "78a4a8c2f608d7eb76cb25cd45faec3eade2410c"
        ],
        [
            "intros a b c f g h H.",
            "VernacExtend",
            "6f27332c824db00f62789ce3a1d1bda95b36d148"
        ],
        [
            "elim H; intros H1 H2; split; apply Comp_l; assumption.",
            "VernacExtend",
            "5809912508c34e4cbb7249d8d2f7a7f098301cdd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Comp_Pmor_congr : Congr_law Comp_Pmor.",
            "VernacStartTheoremProof",
            "c8c25b6008d79557becf0e5bbd4e1f286cbd8b89"
        ],
        [
            "unfold Congr_law in |- *; simpl in |- *.",
            "VernacExtend",
            "1bc2aa08254604db23e9dba34e01645bc09c0cb0"
        ],
        [
            "unfold Equal_Pmor, Comp_Pmor in |- *; simpl in |- *.",
            "VernacExtend",
            "78a4a8c2f608d7eb76cb25cd45faec3eade2410c"
        ],
        [
            "intros a b c f g.",
            "VernacExtend",
            "e011f6422d72b963bab0a9170a02342c75d6d360"
        ],
        [
            "elim f; elim g; simpl in |- *.",
            "VernacExtend",
            "56fdeee256f1aec385f97869ae1eba88506a74c2"
        ],
        [
            "intros gl gr fl fr H h.",
            "VernacExtend",
            "581bd17c98d0e066e6cc2bd0be0b98d01749dcd9"
        ],
        [
            "elim h; simpl in |- *.",
            "VernacExtend",
            "a6b53db3dc85514ff3281391e504ad920bc07383"
        ],
        [
            "intros hl hr.",
            "VernacExtend",
            "cf1b1a32714f51851a8540ee5b54e77e360aa89b"
        ],
        [
            "elim H; intros H1 H2; split; apply Comp_r; assumption.",
            "VernacExtend",
            "d92c09f89f2f637272bd3470220333058b0fe857"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Comp_PROD := Build_Comp Comp_Pmor_congl Comp_Pmor_congr.",
            "VernacDefinition",
            "b6a21224c1152b77df8a66d8f4dab31e6463cd7f"
        ],
        [
            "Lemma Assoc_PROD : Assoc_law Comp_PROD.",
            "VernacStartTheoremProof",
            "849585c383c3beb6b975b9ede6f3245c3d29b7ea"
        ],
        [
            "unfold Assoc_law in |- *; simpl in |- *.",
            "VernacExtend",
            "d9d3d7f80d0c051e865b542b19520435a57fce4f"
        ],
        [
            "unfold Equal_Pmor in |- *; simpl in |- *.",
            "VernacExtend",
            "1c9319ec2b40ec88833ef652a1ee7dfa6452dbc9"
        ],
        [
            "intros; split; apply Ass.",
            "VernacExtend",
            "038b20d8a9d9073e36b23fac78c802be728c3356"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Id_PROD (a : POb) := Build_Pmor (Id (Ob_l a)) (Id (Ob_r a)).",
            "VernacDefinition",
            "91bbba860fb0660f6e63c153785a930de38c7741"
        ],
        [
            "Lemma Idl_PROD : Idl_law Comp_PROD Id_PROD.",
            "VernacStartTheoremProof",
            "4fca0d37381bd617fc26c3ea71fc038671abe4c9"
        ],
        [
            "unfold Idl_law in |- *; simpl in |- *.",
            "VernacExtend",
            "c544db831bac6adebafc6003cefa689024327ef5"
        ],
        [
            "unfold Equal_Pmor in |- *; simpl in |- *.",
            "VernacExtend",
            "1c9319ec2b40ec88833ef652a1ee7dfa6452dbc9"
        ],
        [
            "intros; split; apply Idl.",
            "VernacExtend",
            "b2f29112017d7bdec5fb2f9bd166e68070c1aece"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Idr_PROD : Idr_law Comp_PROD Id_PROD.",
            "VernacStartTheoremProof",
            "27307268a386ac409fd4a679ef090e5969475825"
        ],
        [
            "unfold Idr_law in |- *; simpl in |- *.",
            "VernacExtend",
            "eb4abb4b3ae07053f3e57b877863a045d63fd6d9"
        ],
        [
            "unfold Equal_Pmor in |- *; simpl in |- *.",
            "VernacExtend",
            "1c9319ec2b40ec88833ef652a1ee7dfa6452dbc9"
        ],
        [
            "intros; split; apply Idr.",
            "VernacExtend",
            "919b2210945dad4b34506e9df12ff83684d5eef7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure PROD := Build_Category Assoc_PROD Idl_PROD Idr_PROD.",
            "VernacDefinition",
            "369b8d2af4abab4c95c9d7965bc27a970733766a"
        ],
        [
            "End ProdCat.",
            "VernacEndSegment",
            "466d808dbbb82a9e167dbdb27b005e5d0d23ae41"
        ]
    ],
    "proofs": [
        {
            "name": "Equal_Pmor_equiv",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "apply Build_Equivalence.",
                        "VernacExtend",
                        "6179e27dcd740b742a59fad768ff2e759dba2ba2"
                    ]
                },
                {
                    "command": [
                        "unfold Reflexive, Equal_Pmor in |- *; intro x; split; apply Refl.",
                        "VernacExtend",
                        "9d0b62ff44a9d07ced90b21cf462b769c4bdce35"
                    ]
                },
                {
                    "command": [
                        "apply Build_Partial_equivalence.",
                        "VernacExtend",
                        "5de4c099bba37baf71314284222f46bb7a8fa46f"
                    ]
                },
                {
                    "command": [
                        "unfold Transitive, Equal_Pmor in |- *; intros x1 x2 x3 H H0.",
                        "VernacExtend",
                        "039a4ff1622e93e5ed92ae1d78026f03e8e1267a"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H1 H2; elim H0; intros H3 H4; split.",
                        "VernacExtend",
                        "48e06d76de6872c968bdf3be1515b819da2577d4"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Hom_l x2); assumption.",
                        "VernacExtend",
                        "3092a081f1b74e6b0d489ebd8988e481ceb93bc6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Hom_r x2); assumption.",
                        "VernacExtend",
                        "03fdd2bca494abca8bb3deec53cd8a8a960242e7"
                    ]
                },
                {
                    "command": [
                        "unfold Symmetric, Equal_Pmor in |- *; intros x1 x2 H.",
                        "VernacExtend",
                        "719645ab9c901b0baa9e7bfebbba554c3ae02e70"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H1 H2; split; apply Sym; assumption.",
                        "VernacExtend",
                        "1669ab33c9c3b8445f7d0fc3252bf5d41e1c216a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp_Pmor_congl",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold Congl_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "17461d5180d7375dd6f792992ed5f6e115b86da1"
                    ]
                },
                {
                    "command": [
                        "unfold Equal_Pmor, Comp_Pmor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "78a4a8c2f608d7eb76cb25cd45faec3eade2410c"
                    ]
                },
                {
                    "command": [
                        "intros a b c f g h H.",
                        "VernacExtend",
                        "6f27332c824db00f62789ce3a1d1bda95b36d148"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H1 H2; split; apply Comp_l; assumption.",
                        "VernacExtend",
                        "5809912508c34e4cbb7249d8d2f7a7f098301cdd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp_Pmor_congr",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "unfold Congr_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1bc2aa08254604db23e9dba34e01645bc09c0cb0"
                    ]
                },
                {
                    "command": [
                        "unfold Equal_Pmor, Comp_Pmor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "78a4a8c2f608d7eb76cb25cd45faec3eade2410c"
                    ]
                },
                {
                    "command": [
                        "intros a b c f g.",
                        "VernacExtend",
                        "e011f6422d72b963bab0a9170a02342c75d6d360"
                    ]
                },
                {
                    "command": [
                        "elim f; elim g; simpl in |- *.",
                        "VernacExtend",
                        "56fdeee256f1aec385f97869ae1eba88506a74c2"
                    ]
                },
                {
                    "command": [
                        "intros gl gr fl fr H h.",
                        "VernacExtend",
                        "581bd17c98d0e066e6cc2bd0be0b98d01749dcd9"
                    ]
                },
                {
                    "command": [
                        "elim h; simpl in |- *.",
                        "VernacExtend",
                        "a6b53db3dc85514ff3281391e504ad920bc07383"
                    ]
                },
                {
                    "command": [
                        "intros hl hr.",
                        "VernacExtend",
                        "cf1b1a32714f51851a8540ee5b54e77e360aa89b"
                    ]
                },
                {
                    "command": [
                        "elim H; intros H1 H2; split; apply Comp_r; assumption.",
                        "VernacExtend",
                        "d92c09f89f2f637272bd3470220333058b0fe857"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Assoc_PROD",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "unfold Assoc_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "d9d3d7f80d0c051e865b542b19520435a57fce4f"
                    ]
                },
                {
                    "command": [
                        "unfold Equal_Pmor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1c9319ec2b40ec88833ef652a1ee7dfa6452dbc9"
                    ]
                },
                {
                    "command": [
                        "intros; split; apply Ass.",
                        "VernacExtend",
                        "038b20d8a9d9073e36b23fac78c802be728c3356"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Idl_PROD",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold Idl_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "c544db831bac6adebafc6003cefa689024327ef5"
                    ]
                },
                {
                    "command": [
                        "unfold Equal_Pmor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1c9319ec2b40ec88833ef652a1ee7dfa6452dbc9"
                    ]
                },
                {
                    "command": [
                        "intros; split; apply Idl.",
                        "VernacExtend",
                        "b2f29112017d7bdec5fb2f9bd166e68070c1aece"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Idr_PROD",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "unfold Idr_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "eb4abb4b3ae07053f3e57b877863a045d63fd6d9"
                    ]
                },
                {
                    "command": [
                        "unfold Equal_Pmor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "1c9319ec2b40ec88833ef652a1ee7dfa6452dbc9"
                    ]
                },
                {
                    "command": [
                        "intros; split; apply Idr.",
                        "VernacExtend",
                        "919b2210945dad4b34506e9df12ff83684d5eef7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}