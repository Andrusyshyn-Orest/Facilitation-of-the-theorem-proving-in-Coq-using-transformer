{
    "filename": "CATEGORY_THEORY/CATEGORY/ONE.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Category.",
            "VernacRequire",
            "6a125bf50b9576ff635d4739a20cdc31336a753f"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Inductive One_ob : Type := Obone : One_ob.",
            "VernacInductive",
            "5a3d545d4cafd8fcbd5fb594c8a84ae1088e86da"
        ],
        [
            "Inductive One_mor : One_ob -> One_ob -> Type := Id_Obone : One_mor Obone Obone.",
            "VernacInductive",
            "3ff707b0c2fd5d8b212d56f24c94b4585cc25a9e"
        ],
        [
            "Section equal_one_mor.",
            "VernacBeginSection",
            "f65c876d37c04c9946d8f92265e3392f7be26713"
        ],
        [
            "Variable a b : One_ob.",
            "VernacAssumption",
            "272a17446723b193ba89484798e1cbcf2ace9ae2"
        ],
        [
            "Definition Equal_One_mor (f g : One_mor a b) := True.",
            "VernacDefinition",
            "5d7bcafa804d3e709891f69f655818ecd135bf04"
        ],
        [
            "Lemma Equal_One_mor_equiv : Equivalence Equal_One_mor.",
            "VernacStartTheoremProof",
            "2f4e0d914ec1d01b66b3bffa044ec84520249c11"
        ],
        [
            "unfold Equal_One_mor in |- *; apply Build_Equivalence; [ trivial | apply Build_Partial_equivalence ]; red in |- *; trivial.",
            "VernacExtend",
            "f329aec33285e8f27249ae2931fa73fd13ef99c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure One_mor_setoid : Setoid := Equal_One_mor_equiv.",
            "VernacDefinition",
            "3b070e419d1e2a72449ea7d47df3113557308081"
        ],
        [
            "End equal_one_mor.",
            "VernacEndSegment",
            "9e79e151dc4ecb5370da973a56f72a683a6f439f"
        ],
        [
            "Definition Comp_One_mor (a : One_ob) := let () as x return (forall b c : One_ob, One_mor_setoid x b -> One_mor_setoid b c -> One_mor_setoid x c) := a in fun b c => let () as x return (One_mor_setoid Obone b -> One_mor_setoid b x -> One_mor_setoid Obone x) := c in fun _ _ => Id_Obone.",
            "VernacDefinition",
            "dc05a0dd3f5b49f6cf6bac904cd47b314fddb527"
        ],
        [
            "Lemma Comp_One_mor_congl : Congl_law Comp_One_mor.",
            "VernacStartTheoremProof",
            "aea3ec42e0aef72275aa830269af04076a7623e6"
        ],
        [
            "unfold Congl_law, Comp_One_mor in |- *; simpl in |- *; unfold Equal_One_mor in |- *; trivial.",
            "VernacExtend",
            "23989c680326eb82016a467d7e8bf1de213bdcc9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Comp_One_mor_congr : Congr_law Comp_One_mor.",
            "VernacStartTheoremProof",
            "673c2d8915dc260a05df824f45089a02f7bbedb4"
        ],
        [
            "unfold Congr_law, Comp_One_mor in |- *; simpl in |- *; unfold Equal_One_mor in |- *; trivial.",
            "VernacExtend",
            "8490554b01fb860167e971c868c631609fe7c2cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Comp_One := Build_Comp Comp_One_mor_congl Comp_One_mor_congr.",
            "VernacDefinition",
            "cd3fdf0dd80bbe4d4a2e57284b8692ad868fc5dc"
        ],
        [
            "Lemma Assoc_One : Assoc_law Comp_One.",
            "VernacStartTheoremProof",
            "565983035a2e0545794da51e1528fd8a4268c11f"
        ],
        [
            "unfold Assoc_law in |- *; simpl in |- *.",
            "VernacExtend",
            "d9d3d7f80d0c051e865b542b19520435a57fce4f"
        ],
        [
            "unfold Comp_One, Equal_One_mor in |- *; trivial.",
            "VernacExtend",
            "d06752cc5122f08437c306f0c59a9bcd112e77c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Id_One (a : One_ob) : One_mor_setoid a a := let () as x return (One_mor x x) := a in Id_Obone.",
            "VernacDefinition",
            "e2e74875c42f0781424a53a5d2b78d378d5805bc"
        ],
        [
            "Lemma Idl_One : Idl_law Comp_One Id_One.",
            "VernacStartTheoremProof",
            "5c94b32bc33f6ad8bfb45e64046f4e1196a514c3"
        ],
        [
            "unfold Idl_law in |- *; simpl in |- *.",
            "VernacExtend",
            "c544db831bac6adebafc6003cefa689024327ef5"
        ],
        [
            "unfold Comp_One, Id_One, Equal_One_mor in |- *; trivial.",
            "VernacExtend",
            "be5df232780b0499621ef95c9d50c1cbca1d898e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Idr_One : Idr_law Comp_One Id_One.",
            "VernacStartTheoremProof",
            "6d49be7b8baf834be862742a1dca748259a9a2bc"
        ],
        [
            "unfold Idr_law in |- *; simpl in |- *.",
            "VernacExtend",
            "eb4abb4b3ae07053f3e57b877863a045d63fd6d9"
        ],
        [
            "unfold Comp_One, Id_One, Equal_One_mor in |- *; trivial.",
            "VernacExtend",
            "be5df232780b0499621ef95c9d50c1cbca1d898e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure One := Build_Category Assoc_One Idl_One Idr_One.",
            "VernacDefinition",
            "6b0384ba8a7fb05a1565e67b76f8d9dced25e042"
        ]
    ],
    "proofs": [
        {
            "name": "Equal_One_mor_equiv",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "unfold Equal_One_mor in |- *; apply Build_Equivalence; [ trivial | apply Build_Partial_equivalence ]; red in |- *; trivial.",
                        "VernacExtend",
                        "f329aec33285e8f27249ae2931fa73fd13ef99c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp_One_mor_congl",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "unfold Congl_law, Comp_One_mor in |- *; simpl in |- *; unfold Equal_One_mor in |- *; trivial.",
                        "VernacExtend",
                        "23989c680326eb82016a467d7e8bf1de213bdcc9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp_One_mor_congr",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "unfold Congr_law, Comp_One_mor in |- *; simpl in |- *; unfold Equal_One_mor in |- *; trivial.",
                        "VernacExtend",
                        "8490554b01fb860167e971c868c631609fe7c2cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Assoc_One",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold Assoc_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "d9d3d7f80d0c051e865b542b19520435a57fce4f"
                    ]
                },
                {
                    "command": [
                        "unfold Comp_One, Equal_One_mor in |- *; trivial.",
                        "VernacExtend",
                        "d06752cc5122f08437c306f0c59a9bcd112e77c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Idl_One",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold Idl_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "c544db831bac6adebafc6003cefa689024327ef5"
                    ]
                },
                {
                    "command": [
                        "unfold Comp_One, Id_One, Equal_One_mor in |- *; trivial.",
                        "VernacExtend",
                        "be5df232780b0499621ef95c9d50c1cbca1d898e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Idr_One",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "unfold Idr_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "eb4abb4b3ae07053f3e57b877863a045d63fd6d9"
                    ]
                },
                {
                    "command": [
                        "unfold Comp_One, Id_One, Equal_One_mor in |- *; trivial.",
                        "VernacExtend",
                        "be5df232780b0499621ef95c9d50c1cbca1d898e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}