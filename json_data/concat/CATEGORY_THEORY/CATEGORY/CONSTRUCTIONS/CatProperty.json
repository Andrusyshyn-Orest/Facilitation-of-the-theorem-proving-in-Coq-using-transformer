{
    "filename": "CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/CatProperty.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Dual.",
            "VernacRequire",
            "489241dd37eecf6eceab9d36285bfe58c833b155"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section epic_monic_def.",
            "VernacBeginSection",
            "5fb47ee0a4b7299cbf27b488b712ad8195deff10"
        ],
        [
            "Variables (C : Category) (a b : C).",
            "VernacAssumption",
            "cf4f60558db18792a734e437c9434ad8fb5d3984"
        ],
        [
            "Definition Epic_law (f : a --> b) := forall (c : C) (g h : b --> c), f o g =_S f o h -> g =_S h.",
            "VernacDefinition",
            "cf1974ad37c0174c1cb11a35996beeb54ca26570"
        ],
        [
            "Structure > Epic : Type := {Epic_mor : a --> b; Prf_isEpic :> Epic_law Epic_mor}.",
            "VernacInductive",
            "f4dbe1fa30748846bfd9204321ab988175d9b1c0"
        ],
        [
            "Definition Monic_law (f : b --> a) := forall (c : C) (g h : c --> b), g o f =_S h o f -> g =_S h.",
            "VernacDefinition",
            "ee83439bd648a46a0f421e4f2fd099655b396f8d"
        ],
        [
            "Structure > Monic : Type := {Monic_mor : b --> a; Prf_isMonic :> Monic_law Monic_mor}.",
            "VernacInductive",
            "eee17cc1df008de95a5a39004e751016facb6901"
        ],
        [
            "End epic_monic_def.",
            "VernacEndSegment",
            "6abca66e785b3851c36bb29f3f2d36998606a516"
        ],
        [
            "Section iso_def.",
            "VernacBeginSection",
            "4a7ad14092a7fbf7a5c44f1df2bb83c960bec97a"
        ],
        [
            "Variable C : Category.",
            "VernacAssumption",
            "3908f80da9b93e635be09130e31de9b67174ab99"
        ],
        [
            "Definition RIso_law (a b : C) (f : a --> b) (f1 : b --> a) := f1 o f =_S Id b.",
            "VernacDefinition",
            "83b8ff5740de81eedb0f07a90424649e23cdf270"
        ],
        [
            "Variable a b : C.",
            "VernacAssumption",
            "b9b2f8ff6f2675f72fe503c53880f8cb9ff936a5"
        ],
        [
            "Definition AreIsos (f : a --> b) (f1 : b --> a) := RIso_law f f1 /\\ RIso_law f1 f.",
            "VernacDefinition",
            "0c4078cd8e3d951d2e8412a8453a4e0aeec011ed"
        ],
        [
            "Structure > Iso : Type := {Iso_mor : a --> b; Inv_iso : b --> a; Prf_Iso :> AreIsos Iso_mor Inv_iso}.",
            "VernacInductive",
            "b3bbe3793530606302808559ac3358f83797dc02"
        ],
        [
            "Lemma Idl_inv : forall i : Iso, RIso_law (Iso_mor i) (Inv_iso i).",
            "VernacStartTheoremProof",
            "8b88c968ff7127e726a32caa240863ee1e0012ea"
        ],
        [
            "simple induction i; unfold AreIsos in |- *; intros f g p; elim p; auto.",
            "VernacExtend",
            "774d97bd3e0372d0102fb644fd33d4277c7d4bba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Idr_inv : forall i : Iso, RIso_law (Inv_iso i) (Iso_mor i).",
            "VernacStartTheoremProof",
            "4d18c97300daac4f8d22ce6651310f1191cfd562"
        ],
        [
            "simple induction i; unfold AreIsos in |- *; intros f g p; elim p; auto.",
            "VernacExtend",
            "774d97bd3e0372d0102fb644fd33d4277c7d4bba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inv_iso_unique : forall f g : Iso, Iso_mor f =_S Iso_mor g -> Inv_iso f =_S Inv_iso g.",
            "VernacStartTheoremProof",
            "ff50594386b780bb4d53be50114991cf30c5b03c"
        ],
        [
            "intros f g H.",
            "VernacExtend",
            "7db5a67c3e26d36c11bbaca7620abc6aa084ad5d"
        ],
        [
            "apply Trans with ((Inv_iso f o Iso_mor f) o Inv_iso g).",
            "VernacExtend",
            "c4aad83c13248b149257ca9a029f63e03a5b8958"
        ],
        [
            "apply Trans with (Inv_iso f o Iso_mor f o Inv_iso g).",
            "VernacExtend",
            "23ac4c53bb0f085623bf12627f7c8a3b10447c08"
        ],
        [
            "apply Trans with (Inv_iso f o Id a).",
            "VernacExtend",
            "4f50c74d57c3423f0505a26e60a2ae774598eab6"
        ],
        [
            "apply Idr.",
            "VernacExtend",
            "065b91ed625fa820463937eb48686d897b72e45e"
        ],
        [
            "apply Comp_l.",
            "VernacExtend",
            "5455d6bdb34d7e111449cbfc5ea07ca403feee43"
        ],
        [
            "apply Trans with (Iso_mor g o Inv_iso g).",
            "VernacExtend",
            "59c2e4174e3a2f27e8ecff0e4176b1741e56e591"
        ],
        [
            "apply Sym; apply (Idr_inv g).",
            "VernacExtend",
            "7cb647211a531bdbb4d920616f5cfcda1c728ca7"
        ],
        [
            "apply Comp_r; apply Sym; trivial.",
            "VernacExtend",
            "1bd489992b753d1611fae452f669ac7cab98734b"
        ],
        [
            "apply Ass.",
            "VernacExtend",
            "745732c9901e4f904812f16f825942132db848c1"
        ],
        [
            "apply Trans with (Id b o Inv_iso g).",
            "VernacExtend",
            "54ac69788252ec8fc506b1e5a7c0d4d9b6ee250e"
        ],
        [
            "apply Comp_r; apply (Idl_inv f).",
            "VernacExtend",
            "2a1f7aeafbaacd2f25ae78eb07e30c38c6b185bc"
        ],
        [
            "apply Idl.",
            "VernacExtend",
            "7c1da8f6c5ce2ecb8f9105cc26b64af2f5e044ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RightInv_epic : forall (h : a --> b) (h1 : b --> a), RIso_law h h1 -> Epic_law h.",
            "VernacStartTheoremProof",
            "551a19555cad6bc0e924adc0a213696b5e32bc39"
        ],
        [
            "intros h h1 H.",
            "VernacExtend",
            "112b9e1425eccef575d35060894b03554b477e57"
        ],
        [
            "unfold Epic_law in |- *; intros c f g H1.",
            "VernacExtend",
            "33aa8d4ff1c74af6ce5ebb6d310ae4f96bb47a33"
        ],
        [
            "apply Trans with (Id b o f).",
            "VernacExtend",
            "e99713dc9e636c9cea40be6cb8ef9819a4dc02e8"
        ],
        [
            "apply Idl1.",
            "VernacExtend",
            "bbf8e3440704f016f2b7d5e198de60a8bc51c590"
        ],
        [
            "apply Trans with (Id b o g).",
            "VernacExtend",
            "d1c5e2b9a0b671075489c8d77677b18a8b32e869"
        ],
        [
            "apply Trans with ((h1 o h) o f).",
            "VernacExtend",
            "49d8748d2ae7d461462a5507f7571ad988aab789"
        ],
        [
            "apply Comp_r; apply Sym; trivial.",
            "VernacExtend",
            "1bd489992b753d1611fae452f669ac7cab98734b"
        ],
        [
            "apply Trans with ((h1 o h) o g).",
            "VernacExtend",
            "9702c2e51c941dc0110ac97bbfed4cc529cef053"
        ],
        [
            "apply Trans with (h1 o h o f).",
            "VernacExtend",
            "a45a6594c5dabdda3a31e87ffc237ae5eaa13df4"
        ],
        [
            "apply Ass1.",
            "VernacExtend",
            "5528fa9cfa91af30a65eb535ffb0bfc08f223c20"
        ],
        [
            "apply Trans with (h1 o h o g).",
            "VernacExtend",
            "03557c7011d85ee2791335a4cbc10836fda11121"
        ],
        [
            "apply Comp_l; trivial.",
            "VernacExtend",
            "55368cf32392b2691562e8662c5cdc7f92477aa2"
        ],
        [
            "apply Ass.",
            "VernacExtend",
            "745732c9901e4f904812f16f825942132db848c1"
        ],
        [
            "apply Comp_r; trivial.",
            "VernacExtend",
            "c3c3e476e16b74dd40d97d86e934ed506f9daa72"
        ],
        [
            "apply Idl.",
            "VernacExtend",
            "7c1da8f6c5ce2ecb8f9105cc26b64af2f5e044ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End iso_def.",
            "VernacEndSegment",
            "e530695e855e56824f890ab7dca7cef5b0331842"
        ],
        [
            "Coercion RightInv_epic : RIso_law >-> Epic_law.",
            "VernacCoercion",
            "27fa2fed47ce590d7ee394ba1fc458be7711a7fd"
        ],
        [
            "Section initial_def.",
            "VernacBeginSection",
            "c6542d58b032e3423b9700e0a4ac772dd1364736"
        ],
        [
            "Variable C : Category.",
            "VernacAssumption",
            "3908f80da9b93e635be09130e31de9b67174ab99"
        ],
        [
            "Definition IsInitial (a : C) (h : forall b : C, a --> b) := forall (b : C) (f : a --> b), f =_S h b.",
            "VernacDefinition",
            "63f261f24ba14d1147093815ef47e32e9886f3fa"
        ],
        [
            "Structure > Initial : Type := {Initial_ob : C; MorI : forall b : C, Initial_ob --> b; Prf_isInitial :> IsInitial MorI}.",
            "VernacInductive",
            "6f553badcc4ffdf56287c8a42025564fcd966a3f"
        ],
        [
            "Definition At_most_1mor (a b : C) := forall f g : a --> b, f =_S g.",
            "VernacDefinition",
            "886ef690d7521357c89c4658a482296146d424d8"
        ],
        [
            "Lemma UniqueI : forall (i : Initial) (b : C), At_most_1mor (Initial_ob i) b.",
            "VernacStartTheoremProof",
            "7b87d669d3d1992c49388cf8a540b022b3a86674"
        ],
        [
            "intros i b; red in |- *; intros f g.",
            "VernacExtend",
            "c7fd95f782a45a81ac19be086aba3fc807730db6"
        ],
        [
            "apply Trans with (MorI i b).",
            "VernacExtend",
            "d635188d491296b9acc47b33e636a88c7a45bb1a"
        ],
        [
            "apply (Prf_isInitial (i:=i)).",
            "VernacExtend",
            "7a85faa341697f95214774fcca4fff5eec6baad5"
        ],
        [
            "apply Sym; apply (Prf_isInitial (i:=i)).",
            "VernacExtend",
            "2c91649b3d3a941ce3aa662e1427033657feb777"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma I_unic : forall i1 i2 : Initial, Iso (Initial_ob i1) (Initial_ob i2).",
            "VernacStartTheoremProof",
            "2122e4785d35348cf47d7b54be51b0568939da67"
        ],
        [
            "intros i1 i2.",
            "VernacExtend",
            "3bf555986340fb8d82995d93da6f5f867d57fd72"
        ],
        [
            "apply (Build_Iso (Iso_mor:=MorI i1 (Initial_ob i2)) (Inv_iso:=MorI i2 (Initial_ob i1))); unfold AreIsos in |- *; unfold RIso_law in |- *; split.",
            "VernacExtend",
            "426064d7931a3ee8ea86b02a47ed9033d8c781b7"
        ],
        [
            "apply (UniqueI (i:=i2) (b:=Initial_ob i2)).",
            "VernacExtend",
            "90fb9bc7592066bf4acd86cb532602f78ab7b268"
        ],
        [
            "apply (UniqueI (i:=i1) (b:=Initial_ob i1)).",
            "VernacExtend",
            "7e376b4a2d6f2ca02df044fd4003f59291a9dd5c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End initial_def.",
            "VernacEndSegment",
            "1a4a8feff3c0506b199e1c8e0af92565718ac6e3"
        ],
        [
            "Section terminal_def.",
            "VernacBeginSection",
            "1db344a392c036146fc83c51da3117818660cb58"
        ],
        [
            "Variable C : Category.",
            "VernacAssumption",
            "3908f80da9b93e635be09130e31de9b67174ab99"
        ],
        [
            "Definition IsTerminal (b : C) (h : forall a : C, a --> b) := forall (a : C) (f : a --> b), f =_S h a.",
            "VernacDefinition",
            "2583a0baf87652ed42c3c13cea551da36e15bd00"
        ],
        [
            "Structure > Terminal : Type := {Terminal_ob : C; MorT : forall a : C, a --> Terminal_ob; Prf_isTerminal :> IsTerminal MorT}.",
            "VernacInductive",
            "2fd72bf5f638d7430c364eb8ced5f72bf624fae8"
        ],
        [
            "Lemma UniqueT : forall (t : Terminal) (a : C), At_most_1mor a (Terminal_ob t).",
            "VernacStartTheoremProof",
            "8279a7477690f4edde657b8c78c2c17d0c1e3457"
        ],
        [
            "intros t a; red in |- *; intros f g.",
            "VernacExtend",
            "f7a55f9669ab07eba3b7eb11879a4ccbed070362"
        ],
        [
            "apply Trans with (MorT t a).",
            "VernacExtend",
            "97ff8dc8b0c2ed17f8a2591e7d2dabe6a4b8f463"
        ],
        [
            "apply (Prf_isTerminal (t:=t)).",
            "VernacExtend",
            "c3e18ce626d443119c5826af81f5ad2ec5d251f1"
        ],
        [
            "apply Sym; apply (Prf_isTerminal (t:=t)).",
            "VernacExtend",
            "31cba980fbf0f2632dd47e2be940f4888973c6f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End terminal_def.",
            "VernacEndSegment",
            "6e0bf528eda2ba7617e68be5af6ea4c47d25b873"
        ],
        [
            "Lemma Initial_dual : forall (C : Category) (a : C) (h : forall b : C, a --> b), IsInitial h -> IsTerminal (C:=Dual C) h.",
            "VernacStartTheoremProof",
            "b13f9fd64b2587c03534d054caaf583e7f0af0b4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Coercion Initial_dual : IsInitial >-> IsTerminal.",
            "VernacCoercion",
            "44a47af6c20a4266b09809bd77aacf3802b87e81"
        ],
        [
            "Definition IsTerminal' (C : Category) (b : C) (h : forall a : C, a --> b) := IsInitial (C:=Dual C) h.",
            "VernacDefinition",
            "6f731b2820455becdb5862e5bc1b359fc83fa77d"
        ]
    ],
    "proofs": [
        {
            "name": "Idl_inv",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "simple induction i; unfold AreIsos in |- *; intros f g p; elim p; auto.",
                        "VernacExtend",
                        "774d97bd3e0372d0102fb644fd33d4277c7d4bba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Idr_inv",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "simple induction i; unfold AreIsos in |- *; intros f g p; elim p; auto.",
                        "VernacExtend",
                        "774d97bd3e0372d0102fb644fd33d4277c7d4bba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inv_iso_unique",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros f g H.",
                        "VernacExtend",
                        "7db5a67c3e26d36c11bbaca7620abc6aa084ad5d"
                    ]
                },
                {
                    "command": [
                        "apply Trans with ((Inv_iso f o Iso_mor f) o Inv_iso g).",
                        "VernacExtend",
                        "c4aad83c13248b149257ca9a029f63e03a5b8958"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Inv_iso f o Iso_mor f o Inv_iso g).",
                        "VernacExtend",
                        "23ac4c53bb0f085623bf12627f7c8a3b10447c08"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Inv_iso f o Id a).",
                        "VernacExtend",
                        "4f50c74d57c3423f0505a26e60a2ae774598eab6"
                    ]
                },
                {
                    "command": [
                        "apply Idr.",
                        "VernacExtend",
                        "065b91ed625fa820463937eb48686d897b72e45e"
                    ]
                },
                {
                    "command": [
                        "apply Comp_l.",
                        "VernacExtend",
                        "5455d6bdb34d7e111449cbfc5ea07ca403feee43"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Iso_mor g o Inv_iso g).",
                        "VernacExtend",
                        "59c2e4174e3a2f27e8ecff0e4176b1741e56e591"
                    ]
                },
                {
                    "command": [
                        "apply Sym; apply (Idr_inv g).",
                        "VernacExtend",
                        "7cb647211a531bdbb4d920616f5cfcda1c728ca7"
                    ]
                },
                {
                    "command": [
                        "apply Comp_r; apply Sym; trivial.",
                        "VernacExtend",
                        "1bd489992b753d1611fae452f669ac7cab98734b"
                    ]
                },
                {
                    "command": [
                        "apply Ass.",
                        "VernacExtend",
                        "745732c9901e4f904812f16f825942132db848c1"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Id b o Inv_iso g).",
                        "VernacExtend",
                        "54ac69788252ec8fc506b1e5a7c0d4d9b6ee250e"
                    ]
                },
                {
                    "command": [
                        "apply Comp_r; apply (Idl_inv f).",
                        "VernacExtend",
                        "2a1f7aeafbaacd2f25ae78eb07e30c38c6b185bc"
                    ]
                },
                {
                    "command": [
                        "apply Idl.",
                        "VernacExtend",
                        "7c1da8f6c5ce2ecb8f9105cc26b64af2f5e044ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RightInv_epic",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros h h1 H.",
                        "VernacExtend",
                        "112b9e1425eccef575d35060894b03554b477e57"
                    ]
                },
                {
                    "command": [
                        "unfold Epic_law in |- *; intros c f g H1.",
                        "VernacExtend",
                        "33aa8d4ff1c74af6ce5ebb6d310ae4f96bb47a33"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Id b o f).",
                        "VernacExtend",
                        "e99713dc9e636c9cea40be6cb8ef9819a4dc02e8"
                    ]
                },
                {
                    "command": [
                        "apply Idl1.",
                        "VernacExtend",
                        "bbf8e3440704f016f2b7d5e198de60a8bc51c590"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Id b o g).",
                        "VernacExtend",
                        "d1c5e2b9a0b671075489c8d77677b18a8b32e869"
                    ]
                },
                {
                    "command": [
                        "apply Trans with ((h1 o h) o f).",
                        "VernacExtend",
                        "49d8748d2ae7d461462a5507f7571ad988aab789"
                    ]
                },
                {
                    "command": [
                        "apply Comp_r; apply Sym; trivial.",
                        "VernacExtend",
                        "1bd489992b753d1611fae452f669ac7cab98734b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with ((h1 o h) o g).",
                        "VernacExtend",
                        "9702c2e51c941dc0110ac97bbfed4cc529cef053"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (h1 o h o f).",
                        "VernacExtend",
                        "a45a6594c5dabdda3a31e87ffc237ae5eaa13df4"
                    ]
                },
                {
                    "command": [
                        "apply Ass1.",
                        "VernacExtend",
                        "5528fa9cfa91af30a65eb535ffb0bfc08f223c20"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (h1 o h o g).",
                        "VernacExtend",
                        "03557c7011d85ee2791335a4cbc10836fda11121"
                    ]
                },
                {
                    "command": [
                        "apply Comp_l; trivial.",
                        "VernacExtend",
                        "55368cf32392b2691562e8662c5cdc7f92477aa2"
                    ]
                },
                {
                    "command": [
                        "apply Ass.",
                        "VernacExtend",
                        "745732c9901e4f904812f16f825942132db848c1"
                    ]
                },
                {
                    "command": [
                        "apply Comp_r; trivial.",
                        "VernacExtend",
                        "c3c3e476e16b74dd40d97d86e934ed506f9daa72"
                    ]
                },
                {
                    "command": [
                        "apply Idl.",
                        "VernacExtend",
                        "7c1da8f6c5ce2ecb8f9105cc26b64af2f5e044ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UniqueI",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros i b; red in |- *; intros f g.",
                        "VernacExtend",
                        "c7fd95f782a45a81ac19be086aba3fc807730db6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (MorI i b).",
                        "VernacExtend",
                        "d635188d491296b9acc47b33e636a88c7a45bb1a"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_isInitial (i:=i)).",
                        "VernacExtend",
                        "7a85faa341697f95214774fcca4fff5eec6baad5"
                    ]
                },
                {
                    "command": [
                        "apply Sym; apply (Prf_isInitial (i:=i)).",
                        "VernacExtend",
                        "2c91649b3d3a941ce3aa662e1427033657feb777"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "I_unic",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros i1 i2.",
                        "VernacExtend",
                        "3bf555986340fb8d82995d93da6f5f867d57fd72"
                    ]
                },
                {
                    "command": [
                        "apply (Build_Iso (Iso_mor:=MorI i1 (Initial_ob i2)) (Inv_iso:=MorI i2 (Initial_ob i1))); unfold AreIsos in |- *; unfold RIso_law in |- *; split.",
                        "VernacExtend",
                        "426064d7931a3ee8ea86b02a47ed9033d8c781b7"
                    ]
                },
                {
                    "command": [
                        "apply (UniqueI (i:=i2) (b:=Initial_ob i2)).",
                        "VernacExtend",
                        "90fb9bc7592066bf4acd86cb532602f78ab7b268"
                    ]
                },
                {
                    "command": [
                        "apply (UniqueI (i:=i1) (b:=Initial_ob i1)).",
                        "VernacExtend",
                        "7e376b4a2d6f2ca02df044fd4003f59291a9dd5c"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UniqueT",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros t a; red in |- *; intros f g.",
                        "VernacExtend",
                        "f7a55f9669ab07eba3b7eb11879a4ccbed070362"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (MorT t a).",
                        "VernacExtend",
                        "97ff8dc8b0c2ed17f8a2591e7d2dabe6a4b8f463"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_isTerminal (t:=t)).",
                        "VernacExtend",
                        "c3e18ce626d443119c5826af81f5ad2ec5d251f1"
                    ]
                },
                {
                    "command": [
                        "apply Sym; apply (Prf_isTerminal (t:=t)).",
                        "VernacExtend",
                        "31cba980fbf0f2632dd47e2be940f4888973c6f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Initial_dual",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}