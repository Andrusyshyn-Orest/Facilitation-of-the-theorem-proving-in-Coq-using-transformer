{
    "filename": "CATEGORY_THEORY/CATEGORY/CONSTRUCTIONS/SETProperty.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export SET.",
            "VernacRequire",
            "bb5ed82962b127579d22faa3fdfd2e9eafb86b5d"
        ],
        [
            "Require Export CatProperty.",
            "VernacRequire",
            "8c35ac4f22cea7f869f565ae7c01765918cb0b31"
        ],
        [
            "Require Export MapProperty.",
            "VernacRequire",
            "a38046dabada0f58cc7738d9580638d9481ab1a8"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "SubClass SET_Epic_law (A B : Setoid) (f : Map A B) := Epic_law f.",
            "VernacDefinition",
            "a6e736aa13d07b7b733abee673eae954c2e2a476"
        ],
        [
            "SubClass SET_Monic_law (A B : Setoid) (f : Map A B) := Monic_law f.",
            "VernacDefinition",
            "19774b50a63e69158fb69a7399d97d9c259cd9ce"
        ],
        [
            "Section set_epic_monic.",
            "VernacBeginSection",
            "e9ed99b104aa811a6ef77fa02a78adbea1bc3c93"
        ],
        [
            "Variables (A B : Setoid) (f : Map A B).",
            "VernacAssumption",
            "9155c62f2810bc694b7c13ecee257c2b51a59b8b"
        ],
        [
            "Lemma Surj_epic : forall h : B -> A, Surj_law f h -> SET_Epic_law f.",
            "VernacStartTheoremProof",
            "c1ec6689f4401448890547fb8df01556af596024"
        ],
        [
            "intros h H; unfold Surj_law, SET_Epic_law, Epic_law in |- *; intros a f' f'' H1.",
            "VernacExtend",
            "d404a28ed2863a060a89ae77f9dca611e78ad91f"
        ],
        [
            "simpl in |- *; unfold Ext in |- *; intro x.",
            "VernacExtend",
            "336202f5e086148b94cbf8ce24780d56d1049b01"
        ],
        [
            "apply Trans with (f' (f (h x))).",
            "VernacExtend",
            "39f219a8df796d48446d85f961789cdac98820d2"
        ],
        [
            "apply Pres1; apply H.",
            "VernacExtend",
            "9c0e5a476bc17dcd8b16bc21041b78ba72978eda"
        ],
        [
            "apply Trans with (f'' (f (h x))).",
            "VernacExtend",
            "5f5f4c53140e7b2b5d7e14859a40b713669ed123"
        ],
        [
            "exact (H1 (h x)).",
            "VernacExtend",
            "6b0b3e90b64d0d5fc76d603fe91495938c9089cc"
        ],
        [
            "apply Pres1; apply Sym; apply H.",
            "VernacExtend",
            "32e4c5d1839575ed0b68bd23ee19a9a5499ba6e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inj_monic : Inj_law f -> SET_Monic_law f.",
            "VernacStartTheoremProof",
            "b194e4cc394da79a95db0fe8950073ee5b618a90"
        ],
        [
            "unfold Inj_law, SET_Monic_law in |- *; intro H1; unfold Monic_law in |- *.",
            "VernacExtend",
            "68e9531a52a0af11714b413a694d204b31cd78c7"
        ],
        [
            "intros C g h H2; simpl in |- *; unfold Ext in |- *; intro x.",
            "VernacExtend",
            "5faeff9bd4d1b7746d1811ed86aebceb430dee6a"
        ],
        [
            "apply H1; exact (H2 x).",
            "VernacExtend",
            "8eb6b10c08aa4544161edbcd8cfc34ad8fc28ff3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section map_const_fun.",
            "VernacBeginSection",
            "e74a7a5691f8c44bf3c9c8c46be571b64d2179a6"
        ],
        [
            "Variable a : A.",
            "VernacAssumption",
            "6f1bcddbd7f216ffdcede2ecefedf4bb55c8864e"
        ],
        [
            "Definition MapConst_fun (b : B) := a.",
            "VernacDefinition",
            "93359bf6dc17f939db8273624c2e146e7c8f2a82"
        ],
        [
            "Lemma MapConst_map_law : Map_law MapConst_fun.",
            "VernacStartTheoremProof",
            "60ff5879ad142b04f9c02e21de7e320f8db5f3fc"
        ],
        [
            "unfold Map_law in |- *; intros x y H; apply Refl.",
            "VernacExtend",
            "9090e11da87cee014ad67915998790d7fe7a1d37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition MapConst : Map B A := MapConst_map_law.",
            "VernacDefinition",
            "a50e5f8d76fce6006f395206ced81074ffa5e1ac"
        ],
        [
            "End map_const_fun.",
            "VernacEndSegment",
            "d12bf11eacd98fd5b3053693061733a6d88f180e"
        ],
        [
            "Lemma Monic_inj : SET_Monic_law f -> Inj_law f.",
            "VernacStartTheoremProof",
            "9ea452fb856d74fc8372e1da1a233d118f142ac5"
        ],
        [
            "unfold Monic_law in |- *; intros H1; unfold Inj_law in |- *.",
            "VernacExtend",
            "d99bf0239a6d168ac90b62250912f475d4f6fa95"
        ],
        [
            "intros x y H2.",
            "VernacExtend",
            "48fa0c3aa85dff2ebbdc9ecad99c93fbb8d4e0d2"
        ],
        [
            "generalize (H1 _ (MapConst x) (MapConst y)).",
            "VernacExtend",
            "956e4f59d65040175ca8500ea2fb8f4e5a0c59ea"
        ],
        [
            "intros H3; exact (H3 (fun z : B => H2) (f x)).",
            "VernacExtend",
            "3cef7f29decb71cff7b50e1a0196663db0126eb5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End set_epic_monic.",
            "VernacEndSegment",
            "9ab9fe436dcc2884bb27f0a9081d247f1c230044"
        ],
        [
            "Coercion Surj_epic : Surj_law >-> SET_Epic_law.",
            "VernacCoercion",
            "1d8b7dba42468fb6b933e50a776d723613d8b13f"
        ],
        [
            "Coercion Inj_monic : Inj_law >-> SET_Monic_law.",
            "VernacCoercion",
            "5f3458df69783875d18dcf1a4a9bd0271c229d84"
        ],
        [
            "Coercion Monic_inj : SET_Monic_law >-> Inj_law.",
            "VernacCoercion",
            "2589255042c23e38048cbce9c5840e560f0fa417"
        ]
    ],
    "proofs": [
        {
            "name": "Surj_epic",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros h H; unfold Surj_law, SET_Epic_law, Epic_law in |- *; intros a f' f'' H1.",
                        "VernacExtend",
                        "d404a28ed2863a060a89ae77f9dca611e78ad91f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; unfold Ext in |- *; intro x.",
                        "VernacExtend",
                        "336202f5e086148b94cbf8ce24780d56d1049b01"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (f' (f (h x))).",
                        "VernacExtend",
                        "39f219a8df796d48446d85f961789cdac98820d2"
                    ]
                },
                {
                    "command": [
                        "apply Pres1; apply H.",
                        "VernacExtend",
                        "9c0e5a476bc17dcd8b16bc21041b78ba72978eda"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (f'' (f (h x))).",
                        "VernacExtend",
                        "5f5f4c53140e7b2b5d7e14859a40b713669ed123"
                    ]
                },
                {
                    "command": [
                        "exact (H1 (h x)).",
                        "VernacExtend",
                        "6b0b3e90b64d0d5fc76d603fe91495938c9089cc"
                    ]
                },
                {
                    "command": [
                        "apply Pres1; apply Sym; apply H.",
                        "VernacExtend",
                        "32e4c5d1839575ed0b68bd23ee19a9a5499ba6e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inj_monic",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "unfold Inj_law, SET_Monic_law in |- *; intro H1; unfold Monic_law in |- *.",
                        "VernacExtend",
                        "68e9531a52a0af11714b413a694d204b31cd78c7"
                    ]
                },
                {
                    "command": [
                        "intros C g h H2; simpl in |- *; unfold Ext in |- *; intro x.",
                        "VernacExtend",
                        "5faeff9bd4d1b7746d1811ed86aebceb430dee6a"
                    ]
                },
                {
                    "command": [
                        "apply H1; exact (H2 x).",
                        "VernacExtend",
                        "8eb6b10c08aa4544161edbcd8cfc34ad8fc28ff3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MapConst_map_law",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *; intros x y H; apply Refl.",
                        "VernacExtend",
                        "9090e11da87cee014ad67915998790d7fe7a1d37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Monic_inj",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "unfold Monic_law in |- *; intros H1; unfold Inj_law in |- *.",
                        "VernacExtend",
                        "d99bf0239a6d168ac90b62250912f475d4f6fa95"
                    ]
                },
                {
                    "command": [
                        "intros x y H2.",
                        "VernacExtend",
                        "48fa0c3aa85dff2ebbdc9ecad99c93fbb8d4e0d2"
                    ]
                },
                {
                    "command": [
                        "generalize (H1 _ (MapConst x) (MapConst y)).",
                        "VernacExtend",
                        "956e4f59d65040175ca8500ea2fb8f4e5a0c59ea"
                    ]
                },
                {
                    "command": [
                        "intros H3; exact (H3 (fun z : B => H2) (f x)).",
                        "VernacExtend",
                        "3cef7f29decb71cff7b50e1a0196663db0126eb5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}