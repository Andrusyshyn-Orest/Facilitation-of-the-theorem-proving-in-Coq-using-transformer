{
    "filename": "CATEGORY_THEORY/FUNCTOR/Functor.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Setoid_dup1.",
            "VernacRequire",
            "7ba3b454a680f5091580bfaabfb58ed139d4266e"
        ],
        [
            "Require Export Hom_Equality.",
            "VernacRequire",
            "bf8b679c73b2838593b454c345f85935d56b12da"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section funct_def.",
            "VernacBeginSection",
            "5134c279c648abb6f737f93bd458d9563a65c974"
        ],
        [
            "Variable C D : Category.",
            "VernacAssumption",
            "6b501e53df3f362ed0044375cdffe3af4f42a100"
        ],
        [
            "Section funct_laws.",
            "VernacBeginSection",
            "34ca7991c8100879b03f04d52e41c92caa5e3b7b"
        ],
        [
            "Variables (FOb : C -> D) (FMap : forall a b : C, Map (a --> b) (FOb a --> FOb b)).",
            "VernacAssumption",
            "f7b88c3473427c5ef57e380985662b1753508a25"
        ],
        [
            "Definition Fcomp_law := forall (a b c : C) (f : a --> b) (g : b --> c), FMap a c (f o g) =_S FMap a b f o FMap b c g.",
            "VernacDefinition",
            "9ef2530d1488eed9178aa278e9249db752d5f7e8"
        ],
        [
            "Definition Fid_law := forall a : C, FMap a a (Id a) =_S Id (FOb a).",
            "VernacDefinition",
            "8c623bf066e0b9331061de604417780e0c715f99"
        ],
        [
            "End funct_laws.",
            "VernacEndSegment",
            "39c7e990150317763eaad8c55ac9c226dd15952e"
        ],
        [
            "Structure Functor : Type := {FOb :> C -> D; FMap : forall a b : C, Map (a --> b) (FOb a --> FOb b); Prf_Fcomp_law : Fcomp_law FMap; Prf_Fid_law : Fid_law FMap}.",
            "VernacInductive",
            "6f4126fbd54cd9b55519e842d30527e71a5a7059"
        ],
        [
            "Definition FMor (F : Functor) (a b : C) (f : a --> b) := FMap F a b f.",
            "VernacDefinition",
            "52341e47b1823e47d42c6f36cfea3e52b02a3a24"
        ],
        [
            "Lemma FPres : forall (F : Functor) (a b : C) (f g : a --> b), f =_S g -> FMor F f =_S FMor F g.",
            "VernacStartTheoremProof",
            "3dd9530f9e48adb5615edae842d350ac01a9fb67"
        ],
        [
            "intros F a b; exact (Pres (FMap F a b)).",
            "VernacExtend",
            "3a95029a225819c8c9841a41e693f3fbe96e0fde"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FComp : forall (F : Functor) (a b c : C) (f : a --> b) (g : b --> c), FMor F (f o g) =_S FMor F f o FMor F g.",
            "VernacStartTheoremProof",
            "579062a5e78add823efe79d412c1e87dac9b6de5"
        ],
        [
            "exact Prf_Fcomp_law.",
            "VernacExtend",
            "3ba77f89ba25e2a453d21fcfbb14d316bf4fc04e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FComp1 : forall (F : Functor) (a b c : C) (f : a --> b) (g : b --> c), FMor F f o FMor F g =_S FMor F (f o g).",
            "VernacStartTheoremProof",
            "e4197e2bb82aa005efeae45db57698831a7ef7a8"
        ],
        [
            "intros; apply Sym; apply (Prf_Fcomp_law F f g).",
            "VernacExtend",
            "7b75ab2b08b6134a7d0f69c1e108e0fc0fb69b13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FId : forall (F : Functor) (a : C), FMor F (Id a) =_S Id (FOb F a).",
            "VernacStartTheoremProof",
            "654f135b6e98c8a2c4388819b96380194712ff50"
        ],
        [
            "exact Prf_Fid_law.",
            "VernacExtend",
            "26aac8fdc62d11698108aeb7f747e761e5f4664b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FId1 : forall (F : Functor) (a : C), Id (FOb F a) =_S FMor F (Id a).",
            "VernacStartTheoremProof",
            "95cc6a1c5f84d58e397f3bf83ca95f6454be1f75"
        ],
        [
            "intros; apply Sym; apply (Prf_Fid_law F a).",
            "VernacExtend",
            "62f6fbc098644ac73283881e098aa6ef618d3b59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End funct_def.",
            "VernacEndSegment",
            "76c4a290d3f3c134ec1a266a49e112463e0c5e0e"
        ],
        [
            "Section funct_setoid.",
            "VernacBeginSection",
            "b5b0782211655ba83ad741337ed29cd5e3a017df"
        ],
        [
            "Variable C D : Category.",
            "VernacAssumption",
            "6b501e53df3f362ed0044375cdffe3af4f42a100"
        ],
        [
            "Definition Equal_Functor (F G : Functor C D) := forall (a b : C) (f : a --> b), FMor F f =_H FMor G f.",
            "VernacDefinition",
            "2816d9fa3222be37c5a86d62b9ad3e537412630e"
        ],
        [
            "Lemma Equal_Functor_equiv : Equivalence Equal_Functor.",
            "VernacStartTheoremProof",
            "4d1869ba36aa1c6aa7c6cd20cbe14527fcc2e313"
        ],
        [
            "apply Build_Equivalence; unfold Equal_Functor in |- *.",
            "VernacExtend",
            "a15ab72ab6c9425cb874af1d0d36e6c1e60a89a8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Build_Partial_equivalence.",
            "VernacExtend",
            "5de4c099bba37baf71314284222f46bb7a8fa46f"
        ],
        [
            "unfold Transitive in |- *; intros F G H Ass1 Ass2 a b f.",
            "VernacExtend",
            "2608a1266566441c48d78b0136ab50b2ff40a8db"
        ],
        [
            "apply Equal_hom_trans with (G a) (G b) (FMor G f); auto.",
            "VernacExtend",
            "461f24a43207b1bb5096b7ee2c52bbfb278b2b7a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Functor_setoid := Build_Setoid' Equal_Functor_equiv.",
            "VernacDefinition",
            "9bb57b45f0ca627f3a1430adad5371c4e305d6d4"
        ],
        [
            "End funct_setoid.",
            "VernacEndSegment",
            "51ad251b16744767fbf4482fd45c3669ac0df029"
        ],
        [
            "Infix \"=_F\" := Equal_Functor (at level 70).",
            "VernacInfix",
            "65d71a3d66bc4f2132b30cf69d1ba7e4df54676c"
        ],
        [
            "Section Comp_F.",
            "VernacBeginSection",
            "8813b69aeacf469fe24016fdd5c65714c61e68b4"
        ],
        [
            "Variables (C D E : Category) (G : Functor C D) (H : Functor D E).",
            "VernacAssumption",
            "47361083661996adb33476b4b38f642264f8c58d"
        ],
        [
            "Definition Comp_FOb (a : C) := H (G a).",
            "VernacDefinition",
            "d4432ba3b21ac20ff2be491b46a4d579074b2938"
        ],
        [
            "Section comp_functor_map.",
            "VernacBeginSection",
            "a265bdde33cc66e2117cb5bfbd9334cf45d2aa6a"
        ],
        [
            "Variable a b : C.",
            "VernacAssumption",
            "b9b2f8ff6f2675f72fe503c53880f8cb9ff936a5"
        ],
        [
            "Definition Comp_FMor (f : a --> b) := FMor H (FMor G f).",
            "VernacDefinition",
            "03a969b42c2adce4801d3fea6194ae8088f32a62"
        ],
        [
            "Lemma Comp_FMap_law : Map_law Comp_FMor.",
            "VernacStartTheoremProof",
            "f3381615b9ff06fea9b49fe7fa52755359bdaaf5"
        ],
        [
            "unfold Map_law, Comp_FMor, FMor in |- *; intros f g eqfg.",
            "VernacExtend",
            "f9837369abac324909d948f046a38b4ce7af80c2"
        ],
        [
            "apply Pres1; apply Pres1; assumption.",
            "VernacExtend",
            "b16cc9f903aaa2f6917acfc741d7e293ee822385"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Comp_FMap := Build_Map (B:=Comp_FOb a --> Comp_FOb b) Comp_FMap_law.",
            "VernacDefinition",
            "853fe346445ca13deafa0e8be5ab54a6a7d94ff6"
        ],
        [
            "End comp_functor_map.",
            "VernacEndSegment",
            "98290287f2ccbf14c19dd859d7777dda67ecf50c"
        ],
        [
            "Lemma Comp_Functor_comp_law : Fcomp_law Comp_FMap.",
            "VernacStartTheoremProof",
            "dc7d04b170f92cecf4e52955669c45cdf0fae13b"
        ],
        [
            "unfold Fcomp_law, Comp_FOb, Comp_FMap, Comp_FMor in |- *.",
            "VernacExtend",
            "99c901b3c856ed3be7aefe61014107dd1cccc2c9"
        ],
        [
            "simpl in |- *; intros a b c f g.",
            "VernacExtend",
            "8bbafde1d83990d1868d3fba73c3c11d9cf17b7e"
        ],
        [
            "apply Trans with (FMor H (FMor G f o FMor G g)).",
            "VernacExtend",
            "ccc879b2d1f353a8c15e6dd0a525661a28da5c3d"
        ],
        [
            "apply FPres; apply FComp.",
            "VernacExtend",
            "b626bccdfe8655c40efc4ff0d0b5d3bd6b83254f"
        ],
        [
            "apply FComp.",
            "VernacExtend",
            "25d475429a2dd9e8e06a13b981c7ea42378c697e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Comp_Functor_id_law : Fid_law Comp_FMap.",
            "VernacStartTheoremProof",
            "79fc0995896da2f365e4327cb93fa2ccef297f0b"
        ],
        [
            "unfold Fid_law, Comp_FOb, Comp_FMap, Comp_FMor in |- *.",
            "VernacExtend",
            "8d3214e0cdfb768e6a8cc02cd7ec1bff5ea5da58"
        ],
        [
            "simpl in |- *; intro a.",
            "VernacExtend",
            "5a7cd951fc0196010f6a7c7aec447993d4b8f465"
        ],
        [
            "apply Trans with (FMor H (Id (G a))).",
            "VernacExtend",
            "33b8fa00d1f322b0b08109652d2496c1c1dc6591"
        ],
        [
            "apply FPres; apply FId.",
            "VernacExtend",
            "14e0333842d10216d38a268e789d0e18bdae6b8a"
        ],
        [
            "apply FId.",
            "VernacExtend",
            "a1c11fd3a00d95f1235efe32072aa5a2c627a6ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Comp_Functor := Build_Functor Comp_Functor_comp_law Comp_Functor_id_law.",
            "VernacDefinition",
            "46a325a2164048a0c18697b27e7ef80c7df4a03a"
        ],
        [
            "End Comp_F.",
            "VernacEndSegment",
            "d0125d5245033e742d0319a0ca67bd71cd54f053"
        ],
        [
            "Infix \"o_F\" := Comp_Functor (at level 20, right associativity).",
            "VernacInfix",
            "ef6f33df62bca71f30e1e4f5aa2348c936b7cb4d"
        ]
    ],
    "proofs": [
        {
            "name": "FPres",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros F a b; exact (Pres (FMap F a b)).",
                        "VernacExtend",
                        "3a95029a225819c8c9841a41e693f3fbe96e0fde"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FComp",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "exact Prf_Fcomp_law.",
                        "VernacExtend",
                        "3ba77f89ba25e2a453d21fcfbb14d316bf4fc04e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FComp1",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; apply Sym; apply (Prf_Fcomp_law F f g).",
                        "VernacExtend",
                        "7b75ab2b08b6134a7d0f69c1e108e0fc0fb69b13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FId",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "exact Prf_Fid_law.",
                        "VernacExtend",
                        "26aac8fdc62d11698108aeb7f747e761e5f4664b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FId1",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros; apply Sym; apply (Prf_Fid_law F a).",
                        "VernacExtend",
                        "62f6fbc098644ac73283881e098aa6ef618d3b59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_Functor_equiv",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "apply Build_Equivalence; unfold Equal_Functor in |- *.",
                        "VernacExtend",
                        "a15ab72ab6c9425cb874af1d0d36e6c1e60a89a8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Build_Partial_equivalence.",
                        "VernacExtend",
                        "5de4c099bba37baf71314284222f46bb7a8fa46f"
                    ]
                },
                {
                    "command": [
                        "unfold Transitive in |- *; intros F G H Ass1 Ass2 a b f.",
                        "VernacExtend",
                        "2608a1266566441c48d78b0136ab50b2ff40a8db"
                    ]
                },
                {
                    "command": [
                        "apply Equal_hom_trans with (G a) (G b) (FMor G f); auto.",
                        "VernacExtend",
                        "461f24a43207b1bb5096b7ee2c52bbfb278b2b7a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp_FMap_law",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "unfold Map_law, Comp_FMor, FMor in |- *; intros f g eqfg.",
                        "VernacExtend",
                        "f9837369abac324909d948f046a38b4ce7af80c2"
                    ]
                },
                {
                    "command": [
                        "apply Pres1; apply Pres1; assumption.",
                        "VernacExtend",
                        "b16cc9f903aaa2f6917acfc741d7e293ee822385"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp_Functor_comp_law",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "unfold Fcomp_law, Comp_FOb, Comp_FMap, Comp_FMor in |- *.",
                        "VernacExtend",
                        "99c901b3c856ed3be7aefe61014107dd1cccc2c9"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros a b c f g.",
                        "VernacExtend",
                        "8bbafde1d83990d1868d3fba73c3c11d9cf17b7e"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FMor H (FMor G f o FMor G g)).",
                        "VernacExtend",
                        "ccc879b2d1f353a8c15e6dd0a525661a28da5c3d"
                    ]
                },
                {
                    "command": [
                        "apply FPres; apply FComp.",
                        "VernacExtend",
                        "b626bccdfe8655c40efc4ff0d0b5d3bd6b83254f"
                    ]
                },
                {
                    "command": [
                        "apply FComp.",
                        "VernacExtend",
                        "25d475429a2dd9e8e06a13b981c7ea42378c697e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp_Functor_id_law",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "unfold Fid_law, Comp_FOb, Comp_FMap, Comp_FMor in |- *.",
                        "VernacExtend",
                        "8d3214e0cdfb768e6a8cc02cd7ec1bff5ea5da58"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intro a.",
                        "VernacExtend",
                        "5a7cd951fc0196010f6a7c7aec447993d4b8f465"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FMor H (Id (G a))).",
                        "VernacExtend",
                        "33b8fa00d1f322b0b08109652d2496c1c1dc6591"
                    ]
                },
                {
                    "command": [
                        "apply FPres; apply FId.",
                        "VernacExtend",
                        "14e0333842d10216d38a268e789d0e18bdae6b8a"
                    ]
                },
                {
                    "command": [
                        "apply FId.",
                        "VernacExtend",
                        "a1c11fd3a00d95f1235efe32072aa5a2c627a6ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}