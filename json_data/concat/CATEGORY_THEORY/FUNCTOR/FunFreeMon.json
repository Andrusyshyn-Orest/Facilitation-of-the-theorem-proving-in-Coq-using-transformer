{
    "filename": "CATEGORY_THEORY/FUNCTOR/FunFreeMon.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export FreeMonoid.",
            "VernacRequire",
            "7ab35e9becb35dcdca82f6bd8d4793d33573f488"
        ],
        [
            "Require Export Functor.",
            "VernacRequire",
            "a81a66160b306838d6886f769c4529008a544c6b"
        ],
        [
            "Require Export MON.",
            "VernacRequire",
            "94ea9b2ee4bff799e824272a5cc6891fccae1907"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section funfreemon_map_def.",
            "VernacBeginSection",
            "84efc34c9a4f297d13df26226752d1040314bef1"
        ],
        [
            "Variable A B : Setoid.",
            "VernacAssumption",
            "c71dda629bc97bfaca45ab4606f4dcc1b96246a5"
        ],
        [
            "Section funfreemon_mor_def.",
            "VernacBeginSection",
            "3360bf4940cfc77d7b1eede9223731891d120136"
        ],
        [
            "Variable f : Map A B.",
            "VernacAssumption",
            "b7d460640ac79a5061449fc3c7a382ee894ee376"
        ],
        [
            "Fixpoint Dist_fun (l : Tlist A) : Tlist B := match l with | Empty => Empty B | Concat1 a l1 => Concat1 (f a) (Dist_fun l1) end.",
            "VernacFixpoint",
            "9cf00794f4b212edf7adcc3d1026cf3dd4e04dc3"
        ],
        [
            "Lemma Dist_map_law : Map_law Dist_fun.",
            "VernacStartTheoremProof",
            "445c7b194c4cba739fb63420c3dd32ec5bc785dc"
        ],
        [
            "unfold Map_law in |- *; intros l1; elim l1.",
            "VernacExtend",
            "0bc0663431425185a906cf8e2456f594e9997afa"
        ],
        [
            "intro l2; elim l2.",
            "VernacExtend",
            "dd79d109ef89a8d3307ba5c0d94bbc822514e5c6"
        ],
        [
            "intros; apply Refl.",
            "VernacExtend",
            "7569c1ce2ca7c355f521ee2aa5bdbc01cdaef358"
        ],
        [
            "intros c t H H1; elim H1.",
            "VernacExtend",
            "fd28436ded092c090ace73c54210b10ff56849da"
        ],
        [
            "intros c t H l2; elim l2.",
            "VernacExtend",
            "02c1cd64da7e0b5a2dd23c51cc3899b2677473d5"
        ],
        [
            "intro H1; absurd (Equal_Tlist (Concat1 c t) (Empty A)).",
            "VernacExtend",
            "a7717ea88db75694a81cbd2ae6052dd280da59cd"
        ],
        [
            "apply (Diff_Concat1_Empty (A:=A)).",
            "VernacExtend",
            "a6784b847861c3c186067804152bbf5a8fd5f5a6"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros c0 t0 H1 H2.",
            "VernacExtend",
            "008e9a14d510f9032f2be9074c197e62ca4917ad"
        ],
        [
            "elim H2; intros H3 H4.",
            "VernacExtend",
            "f455df15d0158e37f7e401fe8612a4a04746f291"
        ],
        [
            "simpl in |- *; split.",
            "VernacExtend",
            "5df6d9880e03fe53a827564b8d8b1d6d4aca7948"
        ],
        [
            "apply Pres1; trivial.",
            "VernacExtend",
            "d97d16403b5a7ba80ec74125fa07e51626688fb6"
        ],
        [
            "exact (H t0 H4).",
            "VernacExtend",
            "770e658ffd19f76d8a2e789e0583123e47e130f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Dist_map := Build_Map Dist_map_law.",
            "VernacDefinition",
            "e0dcd76f872e548dab63432575cb88e202124306"
        ],
        [
            "Lemma Dist_map_unit_law : MonUnit_law Dist_map.",
            "VernacStartTheoremProof",
            "d5f88d22e4e24e2d7ad862621552634b179a38c3"
        ],
        [
            "unfold MonUnit_law in |- *; simpl in |- *; trivial.",
            "VernacExtend",
            "194f07c4a2de8de59ab46e0151b01adca958efac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Dist_map_op_law : MonOp_law Dist_map.",
            "VernacStartTheoremProof",
            "7697347099c7730674c3c7f620b34cddc7f8ffb8"
        ],
        [
            "unfold MonOp_law in |- *.",
            "VernacExtend",
            "3e721ffd2825360bef469762e6453a85b893cf90"
        ],
        [
            "intros l1 l2; elim l1.",
            "VernacExtend",
            "e924a57e3deb62b8444744e84df72cf7a1b0245a"
        ],
        [
            "unfold ApMop in |- *; apply Refl.",
            "VernacExtend",
            "e36bd84a9fb55f7989713ce09afc73a73e30cd22"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure FunFreeMon_mor := Build_MonMor Dist_map_unit_law Dist_map_op_law.",
            "VernacDefinition",
            "b8e5664f3467e0e2427bfdbab9cd8e6f8994458d"
        ],
        [
            "End funfreemon_mor_def.",
            "VernacEndSegment",
            "e6569d24e83064df272c4f890dc2607c857b24b1"
        ],
        [
            "Lemma FunFreeMon_map_law : Map_law FunFreeMon_mor.",
            "VernacStartTheoremProof",
            "ffc091b95877600db7013d83178c8e7d74f7fece"
        ],
        [
            "unfold Map_law in |- *; simpl in |- *.",
            "VernacExtend",
            "63e006e61be04a0030bcdd5ffea48f48cee6c173"
        ],
        [
            "intros f g; unfold Equal_MonMor in |- *; simpl in |- *.",
            "VernacExtend",
            "f49332bc66f48e79cc6c24449f3609148b5dd673"
        ],
        [
            "unfold Ext in |- *; simpl in |- *; intro H; intro l; elim l; simpl in |- *.",
            "VernacExtend",
            "f88634414f5dd24edc2730790169f152bcfa0a6f"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros c t H1; split.",
            "VernacExtend",
            "1993132d0d4859b431ef42b09178859282a5567e"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure FunFreeMon_map := Build_Map FunFreeMon_map_law.",
            "VernacDefinition",
            "4d72b4839aea62e8e0fbf3d5d382a4b2c3345cdd"
        ],
        [
            "End funfreemon_map_def.",
            "VernacEndSegment",
            "79d65f9f3eab74b8c5f5092b20ae0d29c5f3d56a"
        ],
        [
            "Lemma FunFreeMon_fcomp_law : Fcomp_law FunFreeMon_map.",
            "VernacStartTheoremProof",
            "2cf714a1b6f322633178f3e886e63c77f0b19fe0"
        ],
        [
            "unfold Fcomp_law in |- *; simpl in |- *.",
            "VernacExtend",
            "41e70b9057b85e02eee0c1742009960b87785a65"
        ],
        [
            "intros A B C f g; unfold Equal_MonMor in |- *; simpl in |- *.",
            "VernacExtend",
            "995033dc8a3c6c0324c14ba01559a3c193236940"
        ],
        [
            "unfold Ext in |- *; simpl in |- *; intro l; elim l; simpl in |- *.",
            "VernacExtend",
            "0cd9e42a0a27c4031e39623442d22f38ef8d0a4d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros c t H; split.",
            "VernacExtend",
            "be1b2859d83259a8e5a6250ca75b5a9e8820fc0d"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FunFreeMon_fid_law : Fid_law FunFreeMon_map.",
            "VernacStartTheoremProof",
            "e04fc23883787329ab576c51e27e6bd5a81c0892"
        ],
        [
            "unfold Fid_law in |- *; simpl in |- *.",
            "VernacExtend",
            "ba5699e28b4724f4847e53978ae55bf81eebe428"
        ],
        [
            "intro A; unfold Equal_MonMor in |- *; simpl in |- *.",
            "VernacExtend",
            "45ad4a951ba64ced1a0645fb603b9d2f566bb4d6"
        ],
        [
            "unfold Ext in |- *; simpl in |- *; intro l; elim l; simpl in |- *.",
            "VernacExtend",
            "0cd9e42a0a27c4031e39623442d22f38ef8d0a4d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros c t H; split.",
            "VernacExtend",
            "be1b2859d83259a8e5a6250ca75b5a9e8820fc0d"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure FunFreeMon := Build_Functor FunFreeMon_fcomp_law FunFreeMon_fid_law.",
            "VernacDefinition",
            "de74ab3fac9b3c15caeb73e95d957da9733c023a"
        ]
    ],
    "proofs": [
        {
            "name": "Dist_map_law",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *; intros l1; elim l1.",
                        "VernacExtend",
                        "0bc0663431425185a906cf8e2456f594e9997afa"
                    ]
                },
                {
                    "command": [
                        "intro l2; elim l2.",
                        "VernacExtend",
                        "dd79d109ef89a8d3307ba5c0d94bbc822514e5c6"
                    ]
                },
                {
                    "command": [
                        "intros; apply Refl.",
                        "VernacExtend",
                        "7569c1ce2ca7c355f521ee2aa5bdbc01cdaef358"
                    ]
                },
                {
                    "command": [
                        "intros c t H H1; elim H1.",
                        "VernacExtend",
                        "fd28436ded092c090ace73c54210b10ff56849da"
                    ]
                },
                {
                    "command": [
                        "intros c t H l2; elim l2.",
                        "VernacExtend",
                        "02c1cd64da7e0b5a2dd23c51cc3899b2677473d5"
                    ]
                },
                {
                    "command": [
                        "intro H1; absurd (Equal_Tlist (Concat1 c t) (Empty A)).",
                        "VernacExtend",
                        "a7717ea88db75694a81cbd2ae6052dd280da59cd"
                    ]
                },
                {
                    "command": [
                        "apply (Diff_Concat1_Empty (A:=A)).",
                        "VernacExtend",
                        "a6784b847861c3c186067804152bbf5a8fd5f5a6"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros c0 t0 H1 H2.",
                        "VernacExtend",
                        "008e9a14d510f9032f2be9074c197e62ca4917ad"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros H3 H4.",
                        "VernacExtend",
                        "f455df15d0158e37f7e401fe8612a4a04746f291"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; split.",
                        "VernacExtend",
                        "5df6d9880e03fe53a827564b8d8b1d6d4aca7948"
                    ]
                },
                {
                    "command": [
                        "apply Pres1; trivial.",
                        "VernacExtend",
                        "d97d16403b5a7ba80ec74125fa07e51626688fb6"
                    ]
                },
                {
                    "command": [
                        "exact (H t0 H4).",
                        "VernacExtend",
                        "770e658ffd19f76d8a2e789e0583123e47e130f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Dist_map_unit_law",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold MonUnit_law in |- *; simpl in |- *; trivial.",
                        "VernacExtend",
                        "194f07c4a2de8de59ab46e0151b01adca958efac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Dist_map_op_law",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "unfold MonOp_law in |- *.",
                        "VernacExtend",
                        "3e721ffd2825360bef469762e6453a85b893cf90"
                    ]
                },
                {
                    "command": [
                        "intros l1 l2; elim l1.",
                        "VernacExtend",
                        "e924a57e3deb62b8444744e84df72cf7a1b0245a"
                    ]
                },
                {
                    "command": [
                        "unfold ApMop in |- *; apply Refl.",
                        "VernacExtend",
                        "e36bd84a9fb55f7989713ce09afc73a73e30cd22"
                    ]
                },
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FunFreeMon_map_law",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "63e006e61be04a0030bcdd5ffea48f48cee6c173"
                    ]
                },
                {
                    "command": [
                        "intros f g; unfold Equal_MonMor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "f49332bc66f48e79cc6c24449f3609148b5dd673"
                    ]
                },
                {
                    "command": [
                        "unfold Ext in |- *; simpl in |- *; intro H; intro l; elim l; simpl in |- *.",
                        "VernacExtend",
                        "f88634414f5dd24edc2730790169f152bcfa0a6f"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros c t H1; split.",
                        "VernacExtend",
                        "1993132d0d4859b431ef42b09178859282a5567e"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FunFreeMon_fcomp_law",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold Fcomp_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "41e70b9057b85e02eee0c1742009960b87785a65"
                    ]
                },
                {
                    "command": [
                        "intros A B C f g; unfold Equal_MonMor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "995033dc8a3c6c0324c14ba01559a3c193236940"
                    ]
                },
                {
                    "command": [
                        "unfold Ext in |- *; simpl in |- *; intro l; elim l; simpl in |- *.",
                        "VernacExtend",
                        "0cd9e42a0a27c4031e39623442d22f38ef8d0a4d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros c t H; split.",
                        "VernacExtend",
                        "be1b2859d83259a8e5a6250ca75b5a9e8820fc0d"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FunFreeMon_fid_law",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "unfold Fid_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ba5699e28b4724f4847e53978ae55bf81eebe428"
                    ]
                },
                {
                    "command": [
                        "intro A; unfold Equal_MonMor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "45ad4a951ba64ced1a0645fb603b9d2f566bb4d6"
                    ]
                },
                {
                    "command": [
                        "unfold Ext in |- *; simpl in |- *; intro l; elim l; simpl in |- *.",
                        "VernacExtend",
                        "0cd9e42a0a27c4031e39623442d22f38ef8d0a4d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros c t H; split.",
                        "VernacExtend",
                        "be1b2859d83259a8e5a6250ca75b5a9e8820fc0d"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}