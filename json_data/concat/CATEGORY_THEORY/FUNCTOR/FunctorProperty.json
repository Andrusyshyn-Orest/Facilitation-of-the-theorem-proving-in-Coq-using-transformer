{
    "filename": "CATEGORY_THEORY/FUNCTOR/FunctorProperty.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Functor.",
            "VernacRequire",
            "a81a66160b306838d6886f769c4529008a544c6b"
        ],
        [
            "Require Export CatProperty.",
            "VernacRequire",
            "8c35ac4f22cea7f869f565ae7c01765918cb0b31"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section functor_prop.",
            "VernacBeginSection",
            "d9e15fb78fbc720dd7fae8f1f825066bdf458c20"
        ],
        [
            "Variable C D : Category.",
            "VernacAssumption",
            "6b501e53df3f362ed0044375cdffe3af4f42a100"
        ],
        [
            "Lemma Functor_preserves_iso : forall (F : Functor C D) (a b : C), Iso a b -> Iso (F a) (F b).",
            "VernacStartTheoremProof",
            "b35b9be9c2d8178ebcaf52ff6f89a4e7afe7c0ef"
        ],
        [
            "intros F a b f.",
            "VernacExtend",
            "0ab3eb00d005532158f4967e38c6d6ca73350a0f"
        ],
        [
            "apply Build_Iso with (FMor F (Iso_mor f)) (FMor F (Inv_iso f)).",
            "VernacExtend",
            "2e9ad5e12c47ca2eaaf58311dc32e8b2547c7fda"
        ],
        [
            "red in |- *; split; red in |- *.",
            "VernacExtend",
            "55e4b6d2cda0ae10607a60c26b6faf9946bca07b"
        ],
        [
            "apply Trans with (FMor F (Inv_iso f o Iso_mor f)).",
            "VernacExtend",
            "8a2fc35551114d91cd7196a2cc13d6b07e614bb0"
        ],
        [
            "apply FComp1.",
            "VernacExtend",
            "826623d0e722af113d5b57761b48e02c53e7e3bd"
        ],
        [
            "apply Trans with (FMor F (Id b)).",
            "VernacExtend",
            "f7be1a9627d5bcb507a2d1eebcc25184db3acbe4"
        ],
        [
            "apply FPres; apply (Idl_inv f).",
            "VernacExtend",
            "34240214142ec359fb5f856062f1030332e6b5ce"
        ],
        [
            "apply FId.",
            "VernacExtend",
            "a1c11fd3a00d95f1235efe32072aa5a2c627a6ff"
        ],
        [
            "apply Trans with (FMor F (Iso_mor f o Inv_iso f)).",
            "VernacExtend",
            "fb82f6f1e9b8ae86199ceb1b95e996b82ed6d436"
        ],
        [
            "apply FComp1.",
            "VernacExtend",
            "826623d0e722af113d5b57761b48e02c53e7e3bd"
        ],
        [
            "apply Trans with (FMor F (Id a)).",
            "VernacExtend",
            "4bddbbfc2062413851e48f21e90ab26061c96b0a"
        ],
        [
            "apply FPres; apply (Idr_inv f).",
            "VernacExtend",
            "1226eacfbf64521b56834ca9d21b920024aa6e33"
        ],
        [
            "apply FId.",
            "VernacExtend",
            "a1c11fd3a00d95f1235efe32072aa5a2c627a6ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Faithful_law (F : Functor C D) := forall (a b : C) (f g : a --> b), FMor F f =_S FMor F g -> f =_S g.",
            "VernacDefinition",
            "3a42ad6fad4e7219a2738f649b559baa8931c38e"
        ],
        [
            "Structure > Faithful : Type := {Faithful_functor :> Functor C D; Prf_isFaithful :> Faithful_law Faithful_functor}.",
            "VernacInductive",
            "cc824f77fc1fa9a9556b2aa847ef01a2bc799479"
        ],
        [
            "Definition Full_law (F : Functor C D) (H : forall a b : C, (F a --> F b) -> (a --> b)) := forall (a b : C) (h : F a --> F b), h =_S FMor F (H a b h).",
            "VernacDefinition",
            "3e97578b9caceb9de6af10fa9017675f9660fe94"
        ],
        [
            "Structure > Full : Type := {Full_functor :> Functor C D; Full_mor : forall a b : C, (Full_functor a --> Full_functor b) -> (a --> b); Prf_isFull :> Full_law Full_mor}.",
            "VernacInductive",
            "7d8d61d75df8bdc7c860c6b820d3e0430cdd33fc"
        ],
        [
            "End functor_prop.",
            "VernacEndSegment",
            "36e6c927f5d81e4bb0bcb50556714d3653d2107c"
        ],
        [
            "Section comp_functor_prop.",
            "VernacBeginSection",
            "7c97c39832eb085d2dac9ca6b6a685f3c7647ab8"
        ],
        [
            "Variables (C D E : Category) (F : Functor C D) (G : Functor D E).",
            "VernacAssumption",
            "25a9212dbd0f534c51b5a92836ceb0a8acb1a344"
        ],
        [
            "Lemma IsFaithful_comp : Faithful_law F -> Faithful_law G -> Faithful_law (F o_F G).",
            "VernacStartTheoremProof",
            "992acf6260b859ebc13fb38fbccdf3121bbd3e97"
        ],
        [
            "intros H1 H2; unfold Faithful_law in |- *; intros a b f g.",
            "VernacExtend",
            "3a15b3f1add97c4632461e3a43a02b60d07a7dc8"
        ],
        [
            "unfold Comp_Functor, FMor in |- *; simpl in |- *.",
            "VernacExtend",
            "5acaba5a54bbc4d64d3ec1b765fef5e87d4f0594"
        ],
        [
            "unfold Comp_FMor in |- *; auto.",
            "VernacExtend",
            "667456c42f9e229b3416c74489e2b4f214e91c77"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variables (F1 : forall a b : C, (F a --> F b) -> (a --> b)) (G1 : forall a b : D, (G a --> G b) -> (a --> b)).",
            "VernacAssumption",
            "6f0063d92bdc8ade9f06527fbbdb40d100255c8d"
        ],
        [
            "Lemma IsFull_comp : Full_law F1 -> Full_law G1 -> let H1 := fun (a b : C) (h : G (F a) --> G (F b)) => F1 (G1 h) in Full_law (F:=F o_F G) H1.",
            "VernacStartTheoremProof",
            "c688061a8a604ebfe8e5156932475bda331d6f95"
        ],
        [
            "intros p1 p2.",
            "VernacExtend",
            "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
        ],
        [
            "unfold Full_law in |- *; intros a b h.",
            "VernacExtend",
            "be73e607ff9cfd699375fe9764470ea6ae6de91b"
        ],
        [
            "unfold FMor in |- *; simpl in |- *; unfold Comp_FMor, Comp_FOb in |- *.",
            "VernacExtend",
            "d3e4bf5bab308d30467f59061de9d11de3aec5f4"
        ],
        [
            "apply Trans with (FMor G (G1 h)).",
            "VernacExtend",
            "bdb7a2753c497aebf6a4894e6902a2bafb2c9100"
        ],
        [
            "apply (p2 _ _ h).",
            "VernacExtend",
            "b64a59c7cf6079fba219353064fb5c410da4d7fc"
        ],
        [
            "apply FPres.",
            "VernacExtend",
            "50d779919022dcd1dd9ccc24053a69569f5e3939"
        ],
        [
            "apply (p1 _ _ (G1 h)).",
            "VernacExtend",
            "4013d73d1c9ed809fb86fda7a9aa4bbd75830411"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End comp_functor_prop.",
            "VernacEndSegment",
            "35a893cef3e09117168dc80daa9521dc7f4cab51"
        ]
    ],
    "proofs": [
        {
            "name": "Functor_preserves_iso",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros F a b f.",
                        "VernacExtend",
                        "0ab3eb00d005532158f4967e38c6d6ca73350a0f"
                    ]
                },
                {
                    "command": [
                        "apply Build_Iso with (FMor F (Iso_mor f)) (FMor F (Inv_iso f)).",
                        "VernacExtend",
                        "2e9ad5e12c47ca2eaaf58311dc32e8b2547c7fda"
                    ]
                },
                {
                    "command": [
                        "red in |- *; split; red in |- *.",
                        "VernacExtend",
                        "55e4b6d2cda0ae10607a60c26b6faf9946bca07b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FMor F (Inv_iso f o Iso_mor f)).",
                        "VernacExtend",
                        "8a2fc35551114d91cd7196a2cc13d6b07e614bb0"
                    ]
                },
                {
                    "command": [
                        "apply FComp1.",
                        "VernacExtend",
                        "826623d0e722af113d5b57761b48e02c53e7e3bd"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FMor F (Id b)).",
                        "VernacExtend",
                        "f7be1a9627d5bcb507a2d1eebcc25184db3acbe4"
                    ]
                },
                {
                    "command": [
                        "apply FPres; apply (Idl_inv f).",
                        "VernacExtend",
                        "34240214142ec359fb5f856062f1030332e6b5ce"
                    ]
                },
                {
                    "command": [
                        "apply FId.",
                        "VernacExtend",
                        "a1c11fd3a00d95f1235efe32072aa5a2c627a6ff"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FMor F (Iso_mor f o Inv_iso f)).",
                        "VernacExtend",
                        "fb82f6f1e9b8ae86199ceb1b95e996b82ed6d436"
                    ]
                },
                {
                    "command": [
                        "apply FComp1.",
                        "VernacExtend",
                        "826623d0e722af113d5b57761b48e02c53e7e3bd"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FMor F (Id a)).",
                        "VernacExtend",
                        "4bddbbfc2062413851e48f21e90ab26061c96b0a"
                    ]
                },
                {
                    "command": [
                        "apply FPres; apply (Idr_inv f).",
                        "VernacExtend",
                        "1226eacfbf64521b56834ca9d21b920024aa6e33"
                    ]
                },
                {
                    "command": [
                        "apply FId.",
                        "VernacExtend",
                        "a1c11fd3a00d95f1235efe32072aa5a2c627a6ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IsFaithful_comp",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros H1 H2; unfold Faithful_law in |- *; intros a b f g.",
                        "VernacExtend",
                        "3a15b3f1add97c4632461e3a43a02b60d07a7dc8"
                    ]
                },
                {
                    "command": [
                        "unfold Comp_Functor, FMor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5acaba5a54bbc4d64d3ec1b765fef5e87d4f0594"
                    ]
                },
                {
                    "command": [
                        "unfold Comp_FMor in |- *; auto.",
                        "VernacExtend",
                        "667456c42f9e229b3416c74489e2b4f214e91c77"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IsFull_comp",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros p1 p2.",
                        "VernacExtend",
                        "e93b18f6dbe7145e13c2eeb78585225f0efe7250"
                    ]
                },
                {
                    "command": [
                        "unfold Full_law in |- *; intros a b h.",
                        "VernacExtend",
                        "be73e607ff9cfd699375fe9764470ea6ae6de91b"
                    ]
                },
                {
                    "command": [
                        "unfold FMor in |- *; simpl in |- *; unfold Comp_FMor, Comp_FOb in |- *.",
                        "VernacExtend",
                        "d3e4bf5bab308d30467f59061de9d11de3aec5f4"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FMor G (G1 h)).",
                        "VernacExtend",
                        "bdb7a2753c497aebf6a4894e6902a2bafb2c9100"
                    ]
                },
                {
                    "command": [
                        "apply (p2 _ _ h).",
                        "VernacExtend",
                        "b64a59c7cf6079fba219353064fb5c410da4d7fc"
                    ]
                },
                {
                    "command": [
                        "apply FPres.",
                        "VernacExtend",
                        "50d779919022dcd1dd9ccc24053a69569f5e3939"
                    ]
                },
                {
                    "command": [
                        "apply (p1 _ _ (G1 h)).",
                        "VernacExtend",
                        "4013d73d1c9ed809fb86fda7a9aa4bbd75830411"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}