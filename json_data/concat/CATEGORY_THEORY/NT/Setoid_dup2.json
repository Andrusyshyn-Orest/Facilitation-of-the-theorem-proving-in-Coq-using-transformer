{
    "filename": "CATEGORY_THEORY/NT/Setoid_dup2.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Relations.",
            "VernacRequire",
            "ca942e55691cd1c29ddde01ebb7404769af28098"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Structure > Setoid'' : Type := {Carrier'' :> Type; Equal'' : Relation Carrier''; Prf_equiv'' :> Equivalence Equal''}.",
            "VernacInductive",
            "62c258edffdc7988e2cbae6c454a0a777fb0e5d9"
        ],
        [
            "Infix \"=_S''\" := Equal'' (at level 70).",
            "VernacInfix",
            "f2e054f56a579d5670be272a38ec041400231515"
        ],
        [
            "Lemma Refl'' : forall (S : Setoid'') (x : S), x =_S'' x.",
            "VernacStartTheoremProof",
            "fe7cd3d20a874adb40cceec0442c9045e1035514"
        ],
        [
            "intro S; exact (Prf_refl S).",
            "VernacExtend",
            "df4d03e4d6400175c339779edaf70de0a4b21e43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sym'' : forall (S : Setoid'') (x y : S), x =_S'' y -> y =_S'' x.",
            "VernacStartTheoremProof",
            "1a1334a91023680ef622d2a4bdeb0c80da2e78d1"
        ],
        [
            "intro S; exact (Prf_sym S).",
            "VernacExtend",
            "782a4d3fea7b3661c309f90cd3fc273475555da0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Trans'' : forall (S : Setoid'') (x y z : S), x =_S'' y -> y =_S'' z -> x =_S'' z.",
            "VernacStartTheoremProof",
            "8ef4990886a8599f326df62f36f0a9e0ba444b2d"
        ],
        [
            "intro S; exact (Prf_trans S).",
            "VernacExtend",
            "0ac43f4ce2a4a546b7b82799805bf194498089b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section maps''.",
            "VernacBeginSection",
            "aa63bc2d84fa79cb3ad078dae8629da93dcd7b13"
        ],
        [
            "Variable A B : Setoid''.",
            "VernacAssumption",
            "5ef05106037a3d720a42c0dda95ca3317e18a458"
        ],
        [
            "Definition Map_law'' (f : A -> B) := forall x y : A, x =_S'' y -> f x =_S'' f y.",
            "VernacDefinition",
            "6562627d0ac1d64b2d5fc535e047307f54bc1f82"
        ],
        [
            "Structure > Map'' : Type := {Ap'' :> A -> B; Pres'' :> Map_law'' Ap''}.",
            "VernacInductive",
            "e6e432df4130975dfe3ae75641d75bda5a2018f1"
        ],
        [
            "Lemma Pres1'' : forall (m : Map'') (x y : A), x =_S'' y -> m x =_S'' m y.",
            "VernacStartTheoremProof",
            "08a23d196afed4a5497c6d00828d457aae30faea"
        ],
        [
            "exact Pres''.",
            "VernacExtend",
            "90fd22c5146f5ab34e12fbb26126ec6b0a6425cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Ext'' (f g : Map'') := forall x : A, f x =_S'' g x.",
            "VernacDefinition",
            "d7c3c3ac9837301433b0ce802a9bf234b38658e9"
        ],
        [
            "Lemma Ext_equiv'' : Equivalence Ext''.",
            "VernacStartTheoremProof",
            "012ff7d2a91c6b3dec7a1d1a3a7103e0f9ae4554"
        ],
        [
            "intros; apply Build_Equivalence.",
            "VernacExtend",
            "1b7eab7afcaa4fe7d6474d4275e98a493632352d"
        ],
        [
            "unfold Reflexive in |- *; unfold Ext'' in |- *; intros f x.",
            "VernacExtend",
            "07bd56054d5d931bfcc3a682e41e714be97e5105"
        ],
        [
            "apply Refl''.",
            "VernacExtend",
            "4f75e8fb9b17a4af8d0238b1d40250e68a32b3d3"
        ],
        [
            "apply Build_Partial_equivalence.",
            "VernacExtend",
            "5de4c099bba37baf71314284222f46bb7a8fa46f"
        ],
        [
            "unfold Transitive in |- *; unfold Ext'' in |- *; intros f g h e1 e2 x.",
            "VernacExtend",
            "c2f657df8f039b5269c97c561ab707d8c13be9f6"
        ],
        [
            "apply Trans'' with (g x).",
            "VernacExtend",
            "fbb3b10ee9474612464231a98819e41109ee9608"
        ],
        [
            "apply (e1 x).",
            "VernacExtend",
            "2263c9ac2269f954a7bb1e9e4496fdda5c2f462c"
        ],
        [
            "apply (e2 x).",
            "VernacExtend",
            "0f7b80f91cc28d14500d52b865766c35978a455f"
        ],
        [
            "unfold Symmetric in |- *; unfold Ext'' in |- *; intros f g e x.",
            "VernacExtend",
            "627e98799f7c2a8f8a40cbd2184b95d816089e7d"
        ],
        [
            "apply Sym''; trivial.",
            "VernacExtend",
            "25b58fe4d7613893d389eb465235dd615e036da1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Map_setoid'' : Setoid'' := Ext_equiv''.",
            "VernacDefinition",
            "65957d7c44b9e5e46f6bf05c960f187b8a677bda"
        ],
        [
            "End maps''.",
            "VernacEndSegment",
            "0e18be75a81117460622be15b67ce7ed5dd699ea"
        ],
        [
            "Section fun2_to_map2''.",
            "VernacBeginSection",
            "999d1c83c9f3846a6b0d101fb9fcd213e219389f"
        ],
        [
            "Variable A B C : Setoid''.",
            "VernacAssumption",
            "4239705a84bc249ba1a69f6eb7dbd603d76cb341"
        ],
        [
            "Definition Map2'' := Map'' A (Map_setoid'' B C).",
            "VernacDefinition",
            "c33b5e37d77fe596aa0ec0bfa8c5cd9fa21a6893"
        ],
        [
            "Variable f : A -> B -> C.",
            "VernacAssumption",
            "43e9c5907ad5d67097b95e0b8d029e9dfccd8592"
        ],
        [
            "Definition Map2_congl_law'' := forall (b1 b2 : B) (a : A), b1 =_S'' b2 -> f a b1 =_S'' f a b2.",
            "VernacDefinition",
            "82b73684816940aed1ee02b4abf2425af2545055"
        ],
        [
            "Definition Map2_congr_law'' := forall (a1 a2 : A) (b : B), a1 =_S'' a2 -> f a1 b =_S'' f a2 b.",
            "VernacDefinition",
            "024d0e07ec69f2578b1eea3f393a192ff36846cb"
        ],
        [
            "Definition Map2_cong_law'' := forall (a1 a2 : A) (b1 b2 : B), a1 =_S'' a2 -> b1 =_S'' b2 -> f a1 b1 =_S'' f a2 b2.",
            "VernacDefinition",
            "385be4db585d736adc2ef64a170d14374c92fdf0"
        ],
        [
            "Hypothesis pgcl : Map2_congl_law''.",
            "VernacAssumption",
            "336ad9ffe0496fd2a015c0592f04abb29615a2c4"
        ],
        [
            "Hypothesis pgcr : Map2_congr_law''.",
            "VernacAssumption",
            "6f7829a9280bce3d3de8cc1c70c3799ca1e9442a"
        ],
        [
            "Lemma Map2_map_law1'' : forall a : A, Map_law'' (f a).",
            "VernacStartTheoremProof",
            "74a10f6e4d2be15c73d68832015c3238a71a0ade"
        ],
        [
            "intro a; unfold Map_law'' in |- *.",
            "VernacExtend",
            "f1bd04e8afcb26b11aa9ae571d9324db3c538826"
        ],
        [
            "intros b1 b2 H; apply (pgcl a H).",
            "VernacExtend",
            "1b3bb87b16df28e25f9bb1013fb12d3145f67491"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Map2_map1'' (a : A) := Build_Map'' (Map2_map_law1'' a).",
            "VernacDefinition",
            "0beb0a627d6dc46df5246afdd6771bae153e12b8"
        ],
        [
            "Lemma Map2_map_law2'' : Map_law'' Map2_map1''.",
            "VernacStartTheoremProof",
            "f8fb65c009318ef12f54b52f79de3a4615cb96a9"
        ],
        [
            "unfold Map_law'', Map2_map1'' in |- *.",
            "VernacExtend",
            "8e78357327169c61bef6f4730870a125e14a82b1"
        ],
        [
            "intros a1 a2 H; simpl in |- *; unfold Ext'' in |- *; intro b; simpl in |- *.",
            "VernacExtend",
            "45277aedecb7e67c415e673cb87b8c7dd2250f8b"
        ],
        [
            "apply pgcr; trivial.",
            "VernacExtend",
            "f8ed075ff402d29035148a5b7e80a214b1d48562"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Build_Map2'' : Map2'' := Build_Map'' Map2_map_law2''.",
            "VernacDefinition",
            "8c3907bd31d90563779b9371b5210340903443f2"
        ],
        [
            "End fun2_to_map2''.",
            "VernacEndSegment",
            "9511cf9536cc6aa7147f922bc310a7ea075ece9c"
        ],
        [
            "Section prop_map2''.",
            "VernacBeginSection",
            "cfa6dbee59c27817206b7e888b040a56cb60357c"
        ],
        [
            "Variables (A B C : Setoid'') (f : Map2'' A B C).",
            "VernacAssumption",
            "ec6eff14661ca6375aac54b7b35e1dcddcf1d1ca"
        ],
        [
            "Definition Ap2'' (a : A) (b : B) := f a b.",
            "VernacDefinition",
            "3b492f5b86d132cf0c6f0ab2b733bb0d255c0294"
        ],
        [
            "Lemma Prf_map2_congl'' : Map2_congl_law'' Ap2''.",
            "VernacStartTheoremProof",
            "c1a8054b37326013b143bf08bab73cfc6fc86af2"
        ],
        [
            "unfold Map2_congl_law'' in |- *; intros b1 b2 a H.",
            "VernacExtend",
            "525fc81ecd11078ce2f7c59a9ac087c1b3d7cb6d"
        ],
        [
            "unfold Ap2'' in |- *; apply (Pres1'' (f a)); trivial.",
            "VernacExtend",
            "593b7c6cb303e3aa855e4ff224b2092ebf106614"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Prf_map2_congr'' : Map2_congr_law'' Ap2''.",
            "VernacStartTheoremProof",
            "2366b2cc3ccc0df845c6ca5bfc44210d40fd2a9d"
        ],
        [
            "unfold Map2_congr_law'' in |- *; intros a1 a2 b H.",
            "VernacExtend",
            "299bbe9db053e13507f4f6018472d4d28f34c326"
        ],
        [
            "apply (Pres1'' f H b).",
            "VernacExtend",
            "c20fbccbfdc926c7c764fe84a333fc1986402205"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Prf_map2_cong'' : Map2_cong_law'' Ap2''.",
            "VernacStartTheoremProof",
            "3061e2a2cdcddd0170c8de60ab93b78d668543bc"
        ],
        [
            "unfold Map2_cong_law'' in |- *; intros a1 a2 b1 b2 H1 H2.",
            "VernacExtend",
            "0cb907c5cd2e1bafc0029bb515bf109e8446e454"
        ],
        [
            "apply Trans'' with (Ap2'' a2 b1).",
            "VernacExtend",
            "d6a9ad5ffafb2a8262e771a449c922cb9ee15008"
        ],
        [
            "apply (Prf_map2_congr'' b1 H1).",
            "VernacExtend",
            "29e553f55dc9c8adbed127168ac32baddd513a71"
        ],
        [
            "apply (Prf_map2_congl'' a2 H2).",
            "VernacExtend",
            "0ff6b8077a7046f62e8648d4aa9e96611db3c57c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End prop_map2''.",
            "VernacEndSegment",
            "44d1abd28bf962c45524e420bc27deb4aa54521e"
        ],
        [
            "Coercion Ap2'' : Map2'' >-> Funclass.",
            "VernacCoercion",
            "23d175d94c852b746ce307e9cbb9cfdc2fe85434"
        ],
        [
            "Identity Coercion Map2''_Map'' : Map2'' >-> Map''.",
            "VernacIdentityCoercion",
            "12dab8d0031e829cd387fd6fc1378f7c510e436d"
        ]
    ],
    "proofs": [
        {
            "name": "Refl''",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro S; exact (Prf_refl S).",
                        "VernacExtend",
                        "df4d03e4d6400175c339779edaf70de0a4b21e43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sym''",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intro S; exact (Prf_sym S).",
                        "VernacExtend",
                        "782a4d3fea7b3661c309f90cd3fc273475555da0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Trans''",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intro S; exact (Prf_trans S).",
                        "VernacExtend",
                        "0ac43f4ce2a4a546b7b82799805bf194498089b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pres1''",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "exact Pres''.",
                        "VernacExtend",
                        "90fd22c5146f5ab34e12fbb26126ec6b0a6425cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ext_equiv''",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros; apply Build_Equivalence.",
                        "VernacExtend",
                        "1b7eab7afcaa4fe7d6474d4275e98a493632352d"
                    ]
                },
                {
                    "command": [
                        "unfold Reflexive in |- *; unfold Ext'' in |- *; intros f x.",
                        "VernacExtend",
                        "07bd56054d5d931bfcc3a682e41e714be97e5105"
                    ]
                },
                {
                    "command": [
                        "apply Refl''.",
                        "VernacExtend",
                        "4f75e8fb9b17a4af8d0238b1d40250e68a32b3d3"
                    ]
                },
                {
                    "command": [
                        "apply Build_Partial_equivalence.",
                        "VernacExtend",
                        "5de4c099bba37baf71314284222f46bb7a8fa46f"
                    ]
                },
                {
                    "command": [
                        "unfold Transitive in |- *; unfold Ext'' in |- *; intros f g h e1 e2 x.",
                        "VernacExtend",
                        "c2f657df8f039b5269c97c561ab707d8c13be9f6"
                    ]
                },
                {
                    "command": [
                        "apply Trans'' with (g x).",
                        "VernacExtend",
                        "fbb3b10ee9474612464231a98819e41109ee9608"
                    ]
                },
                {
                    "command": [
                        "apply (e1 x).",
                        "VernacExtend",
                        "2263c9ac2269f954a7bb1e9e4496fdda5c2f462c"
                    ]
                },
                {
                    "command": [
                        "apply (e2 x).",
                        "VernacExtend",
                        "0f7b80f91cc28d14500d52b865766c35978a455f"
                    ]
                },
                {
                    "command": [
                        "unfold Symmetric in |- *; unfold Ext'' in |- *; intros f g e x.",
                        "VernacExtend",
                        "627e98799f7c2a8f8a40cbd2184b95d816089e7d"
                    ]
                },
                {
                    "command": [
                        "apply Sym''; trivial.",
                        "VernacExtend",
                        "25b58fe4d7613893d389eb465235dd615e036da1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Map2_map_law1''",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intro a; unfold Map_law'' in |- *.",
                        "VernacExtend",
                        "f1bd04e8afcb26b11aa9ae571d9324db3c538826"
                    ]
                },
                {
                    "command": [
                        "intros b1 b2 H; apply (pgcl a H).",
                        "VernacExtend",
                        "1b3bb87b16df28e25f9bb1013fb12d3145f67491"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Map2_map_law2''",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold Map_law'', Map2_map1'' in |- *.",
                        "VernacExtend",
                        "8e78357327169c61bef6f4730870a125e14a82b1"
                    ]
                },
                {
                    "command": [
                        "intros a1 a2 H; simpl in |- *; unfold Ext'' in |- *; intro b; simpl in |- *.",
                        "VernacExtend",
                        "45277aedecb7e67c415e673cb87b8c7dd2250f8b"
                    ]
                },
                {
                    "command": [
                        "apply pgcr; trivial.",
                        "VernacExtend",
                        "f8ed075ff402d29035148a5b7e80a214b1d48562"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_map2_congl''",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "unfold Map2_congl_law'' in |- *; intros b1 b2 a H.",
                        "VernacExtend",
                        "525fc81ecd11078ce2f7c59a9ac087c1b3d7cb6d"
                    ]
                },
                {
                    "command": [
                        "unfold Ap2'' in |- *; apply (Pres1'' (f a)); trivial.",
                        "VernacExtend",
                        "593b7c6cb303e3aa855e4ff224b2092ebf106614"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_map2_congr''",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "unfold Map2_congr_law'' in |- *; intros a1 a2 b H.",
                        "VernacExtend",
                        "299bbe9db053e13507f4f6018472d4d28f34c326"
                    ]
                },
                {
                    "command": [
                        "apply (Pres1'' f H b).",
                        "VernacExtend",
                        "c20fbccbfdc926c7c764fe84a333fc1986402205"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_map2_cong''",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "unfold Map2_cong_law'' in |- *; intros a1 a2 b1 b2 H1 H2.",
                        "VernacExtend",
                        "0cb907c5cd2e1bafc0029bb515bf109e8446e454"
                    ]
                },
                {
                    "command": [
                        "apply Trans'' with (Ap2'' a2 b1).",
                        "VernacExtend",
                        "d6a9ad5ffafb2a8262e771a449c922cb9ee15008"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_map2_congr'' b1 H1).",
                        "VernacExtend",
                        "29e553f55dc9c8adbed127168ac32baddd513a71"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_map2_congl'' a2 H2).",
                        "VernacExtend",
                        "0ff6b8077a7046f62e8648d4aa9e96611db3c57c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}