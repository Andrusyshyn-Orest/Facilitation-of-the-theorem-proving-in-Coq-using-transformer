{
    "filename": "CATEGORY_THEORY/ADJUNCTION/CCC/CCC1.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Cartesian1.",
            "VernacRequire",
            "b436ef73c5dc6812d767751d32089260ae36807c"
        ],
        [
            "Require Export CCC.",
            "VernacRequire",
            "344e42daf5888da6a353dadeef7b06c38add12e3"
        ],
        [
            "Require Export FunProd.",
            "VernacRequire",
            "fd6f5ec0fd155f300bcf2a9970ff0bd8238188dd"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section funprod_hasexpo.",
            "VernacBeginSection",
            "2344dbf44836eb340c4eb9dd96665e389dd1ca8c"
        ],
        [
            "Variable C : Category.",
            "VernacAssumption",
            "3908f80da9b93e635be09130e31de9b67174ab99"
        ],
        [
            "Variable H : HasBinProd C.",
            "VernacAssumption",
            "6935e0ef3ed3068264cdaee57e17cd947fef84b6"
        ],
        [
            "Definition HasExponent1 := forall a : C, RightAdj (Fun_prod H a).",
            "VernacDefinition",
            "3e71e203de628a9ca5713e3a3803602d86e62012"
        ],
        [
            "Variable H1 : HasExponent1.",
            "VernacAssumption",
            "496c51ffed41955f452001013578890947d511d7"
        ],
        [
            "Section funprod_expo.",
            "VernacBeginSection",
            "7feb6ca1877bfcb269e0e23472b81bffa6d6d111"
        ],
        [
            "Variable a b : C.",
            "VernacAssumption",
            "b9b2f8ff6f2675f72fe503c53880f8cb9ff936a5"
        ],
        [
            "Let ua' := CoUnit (H1 a) b.",
            "VernacDefinition",
            "b9fb15d90f4da4c2d5763c42cfd768d8cb23004c"
        ],
        [
            "Definition Expo1 := CoUA_ob ua'.",
            "VernacDefinition",
            "c919d6ac6006a72c3cd0e587194ee8aeaa23144c"
        ],
        [
            "Definition Eval1 := CoUA_mor ua'.",
            "VernacDefinition",
            "cfade5784cce08c8eac5ced5274d4a8f7cf29504"
        ],
        [
            "Section lambda1_def.",
            "VernacBeginSection",
            "e358a2994c2984ed24994da1bd5dc218a07cf05f"
        ],
        [
            "Variable c : C.",
            "VernacAssumption",
            "27862364d5441ca6a0469a9037350596316dc7e4"
        ],
        [
            "Definition Lambda1_mor (f : H_obj_prod H c a --> b) := CoUA_diese ua' f.",
            "VernacDefinition",
            "f2ea88d12606c9cb4e9ffbcb1a71c7d8b7b73cc9"
        ],
        [
            "Lemma Lambda1_map_law : Map_law Lambda1_mor.",
            "VernacStartTheoremProof",
            "796f0d16ae09e29b2051aa5246db272e70b009b2"
        ],
        [
            "unfold Map_law in |- *; intros f g H'.",
            "VernacExtend",
            "3524e92612c835905993e737fa789d2ace31149d"
        ],
        [
            "unfold Lambda1_mor in |- *.",
            "VernacExtend",
            "e68a5b3dcdd64138607019f129cc5ef98f142015"
        ],
        [
            "apply (Codiese_map ua' (x:=f) (y:=g)).",
            "VernacExtend",
            "083aa661b66b9815d11028991fbe3678d6841d5c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Lambda1 := Build_Map Lambda1_map_law.",
            "VernacDefinition",
            "ce9dad90abad5cf7c0e2f4ecdd2295c990561d05"
        ],
        [
            "End lambda1_def.",
            "VernacEndSegment",
            "df23a5423b0006fdcaec413a83b651539808f0d9"
        ],
        [
            "Lemma Prf_beta_rule1 : Beta_rule_law Eval1 Lambda1.",
            "VernacStartTheoremProof",
            "368949d088c20f3b3b9382cc154fcb27313fc741"
        ],
        [
            "unfold Beta_rule_law in |- *; intros c f.",
            "VernacExtend",
            "78083c3859f7e033d4f9c45401958df68e1cf5df"
        ],
        [
            "unfold Lambda1, Eval1 in |- *.",
            "VernacExtend",
            "8b09bc4e7a519b49bee091fc56d2df60b958554b"
        ],
        [
            "apply (Prf_isCoUA_law1 ua' f).",
            "VernacExtend",
            "cced8a74d3d7e4a604b64f8397392d5b3b04716c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Prf_eta_rule1 : Eta_rule_law Eval1 Lambda1.",
            "VernacStartTheoremProof",
            "70dc4eb8130aa08b34d328deaacf100beec430bd"
        ],
        [
            "unfold Eta_rule_law in |- *; intros c h; simpl in |- *.",
            "VernacExtend",
            "ff1c08d006acce096e706459b41f183f8995f7d4"
        ],
        [
            "unfold Lambda1_mor in |- *.",
            "VernacExtend",
            "e68a5b3dcdd64138607019f129cc5ef98f142015"
        ],
        [
            "apply Sym.",
            "VernacExtend",
            "b91ee1c3035127bafc790ce54633c93301d2dbb0"
        ],
        [
            "apply (Prf_isCoUA_law2 ua' (a':=c) (f:=Mor_prod H h (Id a) o Eval1) (g:=h)).",
            "VernacExtend",
            "73f326834061143822722a88a0eac467014c0651"
        ],
        [
            "unfold CoUA_eq in |- *.",
            "VernacExtend",
            "a74222f2c9e1c636faee0a5fd357345bef587530"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End funprod_expo.",
            "VernacEndSegment",
            "9b15f20b63fb269c4535c19b31b3e4d5377f0668"
        ],
        [
            "Definition HasExp1_to_HasExp : HasExponent H := fun a b : C => Build_Exponent (Prf_beta_rule1 (a:=a) (b:=b)) (Prf_eta_rule1 (a:=a) (b:=b)).",
            "VernacDefinition",
            "0f9a6c02e5376e76202e3da1835ba94519047e4d"
        ],
        [
            "End funprod_hasexpo.",
            "VernacEndSegment",
            "e4113786453f513b8288073e21ce8fef1f7a95e0"
        ],
        [
            "Coercion HasExp1_to_HasExp : HasExponent1 >-> HasExponent.",
            "VernacCoercion",
            "0d30bd39a0dd577cc4aa64ebab94659e1c8b8dcc"
        ],
        [
            "Structure IsCCC1 (C : Category) : Type := {CCC1_Car :> IsCartesian1 C; CCC1_exponent :> HasExponent1 CCC1_Car}.",
            "VernacInductive",
            "c3573ab952a98c018325cba452b5972e4b62e095"
        ],
        [
            "Coercion CCC1_to_CCC (C : Category) (H : IsCCC1 C) := Build_IsCCC (CCC_isCar:=H) H.",
            "VernacDefinition",
            "913f1535f6550e54dab73125c4f3f9d39fedfb94"
        ]
    ],
    "proofs": [
        {
            "name": "Lambda1_map_law",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *; intros f g H'.",
                        "VernacExtend",
                        "3524e92612c835905993e737fa789d2ace31149d"
                    ]
                },
                {
                    "command": [
                        "unfold Lambda1_mor in |- *.",
                        "VernacExtend",
                        "e68a5b3dcdd64138607019f129cc5ef98f142015"
                    ]
                },
                {
                    "command": [
                        "apply (Codiese_map ua' (x:=f) (y:=g)).",
                        "VernacExtend",
                        "083aa661b66b9815d11028991fbe3678d6841d5c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_beta_rule1",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold Beta_rule_law in |- *; intros c f.",
                        "VernacExtend",
                        "78083c3859f7e033d4f9c45401958df68e1cf5df"
                    ]
                },
                {
                    "command": [
                        "unfold Lambda1, Eval1 in |- *.",
                        "VernacExtend",
                        "8b09bc4e7a519b49bee091fc56d2df60b958554b"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_isCoUA_law1 ua' f).",
                        "VernacExtend",
                        "cced8a74d3d7e4a604b64f8397392d5b3b04716c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_eta_rule1",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "unfold Eta_rule_law in |- *; intros c h; simpl in |- *.",
                        "VernacExtend",
                        "ff1c08d006acce096e706459b41f183f8995f7d4"
                    ]
                },
                {
                    "command": [
                        "unfold Lambda1_mor in |- *.",
                        "VernacExtend",
                        "e68a5b3dcdd64138607019f129cc5ef98f142015"
                    ]
                },
                {
                    "command": [
                        "apply Sym.",
                        "VernacExtend",
                        "b91ee1c3035127bafc790ce54633c93301d2dbb0"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_isCoUA_law2 ua' (a':=c) (f:=Mor_prod H h (Id a) o Eval1) (g:=h)).",
                        "VernacExtend",
                        "73f326834061143822722a88a0eac467014c0651"
                    ]
                },
                {
                    "command": [
                        "unfold CoUA_eq in |- *.",
                        "VernacExtend",
                        "a74222f2c9e1c636faee0a5fd357345bef587530"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}