{
    "filename": "CATEGORY_THEORY/ADJUNCTION/FREYD_THEOREM/FAFT_Part2_Proof2.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Th_Adjoint.",
            "VernacRequire",
            "e585fafc406cda694c94831af8d48d6592ab4d06"
        ],
        [
            "Require Export Pres_Limits.",
            "VernacRequire",
            "caa0293670a5adcf4b2f7737fa58f234c1e7db78"
        ],
        [
            "Require Export Comma_Complete.",
            "VernacRequire",
            "6bd8224ff7a1cf1898c4e649016b2dadd3de17fb"
        ],
        [
            "Require Export Th_Initial.",
            "VernacRequire",
            "b6931544c81f9f962dc9b87a5976bfab5bd0020f"
        ],
        [
            "Require Export Comma_UA.",
            "VernacRequire",
            "2da098113d6805fec033810d0055330346891974"
        ],
        [
            "Require Export FAFT_SSC2.",
            "VernacRequire",
            "5422a9007aee33bba6f35e737d32e927aebe759d"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section freyd_th_2'.",
            "VernacBeginSection",
            "587ce31bb131bb3837cf2d6fe0d167d3e86d6aaa"
        ],
        [
            "Variables (A X : Category) (G : Functor A X) (A_c : Complete A) (G_c : Continuous G) (s : forall x : X, SSC2 G x).",
            "VernacAssumption",
            "52b4b51aadc962dd27f9c91dfc48936e6cff93b4"
        ],
        [
            "Section uaxG'.",
            "VernacBeginSection",
            "77a53afaaab8393fd584f5e49d6c9a1d195f783e"
        ],
        [
            "Variable x : X.",
            "VernacAssumption",
            "4b371581215d18e74ddc54b2fcda02248a2a2c86"
        ],
        [
            "Section ssc2_to_ssc1.",
            "VernacBeginSection",
            "2fa2304815b634270fa8c45da266afc0d94c35e4"
        ],
        [
            "Let I := SSC2_I (s x).",
            "VernacDefinition",
            "9d4522e14558e49e837a2822ec1fbda052a03a9e"
        ],
        [
            "Let f (i : I) := SSC2_f i.",
            "VernacDefinition",
            "7c7e3c6892de0ada23913034c8fed1277b61df99"
        ],
        [
            "Let a (i : I) := SSC2_a i.",
            "VernacDefinition",
            "f040da3d75693f1b90c3ceee734e1ce9965dc6fa"
        ],
        [
            "Let k (i : I) := Build_Com_ob (f i).",
            "VernacDefinition",
            "a1ee68b51f7c7ef984cf087306d9283cd4a49136"
        ],
        [
            "Section ssc2_to_cond1.",
            "VernacBeginSection",
            "5ae551632dbb8fc77f52204f53a7ff70e6d5f0e2"
        ],
        [
            "Variable axh : Comma G x.",
            "VernacAssumption",
            "b7a5caa02924ded49b6035c442f867161677ef0d"
        ],
        [
            "Definition SSC2_1_i := SSC2_i (s x) (Mor_com_ob axh).",
            "VernacDefinition",
            "4659fe3afe22d2b6590ab0021c07d12fbaf5128e"
        ],
        [
            "Definition SSC2_1_t := SSC2_t (s x) (Mor_com_ob axh).",
            "VernacDefinition",
            "8fa59cbc2e73d863251b48fe38bc6d23cb9f0742"
        ],
        [
            "Lemma SSC2_1_f_com_law : Com_law (axf:=k SSC2_1_i) (bxg:=axh) SSC2_1_t.",
            "VernacStartTheoremProof",
            "8f2fa5aa967e939f23c444c3cd1b24860e7fae68"
        ],
        [
            "unfold Com_law in |- *.",
            "VernacExtend",
            "5e23eaa4a89d697ba368122cc4bd05d99e132b34"
        ],
        [
            "apply (Prf_SSC2_law (s _) (Mor_com_ob axh)).",
            "VernacExtend",
            "44fae25386ac92f044b066197c8080914896e368"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure SSC2_1_f := Build_Com_arrow SSC2_1_f_com_law.",
            "VernacDefinition",
            "e8288063fb8a9f1e72578bc13ed913a8c89d77db"
        ],
        [
            "Canonical Structure SSC2_1_cond := Build_Cond1 (I:=I) SSC2_1_f.",
            "VernacDefinition",
            "63be4218047eea27ca41ea54751ffc183e9a94f0"
        ],
        [
            "End ssc2_to_cond1.",
            "VernacEndSegment",
            "93c528d4f4f74f1390fdd638a0ad2ceeda4799ef"
        ],
        [
            "Canonical Structure SSC2_1 := Build_SSC1 SSC2_1_cond.",
            "VernacDefinition",
            "387fe27abb719ae1ffa860882508da661614f869"
        ],
        [
            "End ssc2_to_ssc1.",
            "VernacEndSegment",
            "fdcf1eb88614c3c4400ea61b633f3828dc79140c"
        ],
        [
            "Definition FT_UA' := Com_UA (Thi2_initial (Comma_complete A_c G_c (x:=x)) SSC2_1).",
            "VernacDefinition",
            "94a5d1b391d73ad6fa8cc7484ab153731c820f2b"
        ],
        [
            "End uaxG'.",
            "VernacEndSegment",
            "e341f0b3fa37fcbe329d120888d42727c2b7d42f"
        ],
        [
            "Definition AFT1' : LeftAdj G := LeftAdjUA FT_UA'.",
            "VernacDefinition",
            "7b0f687d5b32c16189c665b55d276956ed94ad86"
        ],
        [
            "End freyd_th_2'.",
            "VernacEndSegment",
            "4053870a9a5cdc0d5ed47bd12b5ecaabd703e21c"
        ]
    ],
    "proofs": [
        {
            "name": "SSC2_1_f_com_law",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold Com_law in |- *.",
                        "VernacExtend",
                        "5e23eaa4a89d697ba368122cc4bd05d99e132b34"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_SSC2_law (s _) (Mor_com_ob axh)).",
                        "VernacExtend",
                        "44fae25386ac92f044b066197c8080914896e368"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}