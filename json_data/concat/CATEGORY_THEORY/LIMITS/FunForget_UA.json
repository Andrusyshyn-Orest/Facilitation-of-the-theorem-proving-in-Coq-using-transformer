{
    "filename": "CATEGORY_THEORY/LIMITS/FunForget_UA.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export FunForget.",
            "VernacRequire",
            "1374f9b812939be62090492ea3de96c2ebfbb01a"
        ],
        [
            "Require Export FreeMonoid.",
            "VernacRequire",
            "7ab35e9becb35dcdca82f6bd8d4793d33573f488"
        ],
        [
            "Require Export UniversalArrow.",
            "VernacRequire",
            "7e450f10cd71703575c956242b5409feb9778a10"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section ua_fm.",
            "VernacBeginSection",
            "282421709aa2b20f0a3840b1a2329d8a38438815"
        ],
        [
            "Variable A : Setoid.",
            "VernacAssumption",
            "5313bf7d7a362d347e137b00724b1953a498f593"
        ],
        [
            "Definition UA_FM_fun (a : A) : FunForget A := Concat1 a (Empty A).",
            "VernacDefinition",
            "2781440c6679f952c6f86aac7d79e838e21bcf77"
        ],
        [
            "Lemma UA_FM_map_law : Map_law UA_FM_fun.",
            "VernacStartTheoremProof",
            "d40a83516d7e383b43ab317ff0455340d37571f9"
        ],
        [
            "unfold Map_law in |- *; simpl in |- *; intros a b H; split; trivial.",
            "VernacExtend",
            "f9f611427b73bfcda12b4d4ed4be99146bddfe52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure UA_FM_mor := Build_Map UA_FM_map_law.",
            "VernacDefinition",
            "f77ad41bd84945e4b9784cd83822f31b850e39d4"
        ],
        [
            "Section ua_fm_diese_def.",
            "VernacBeginSection",
            "0af4615ae67438266cc5da86c4644df9c3ce06ee"
        ],
        [
            "Variables (B : Monoid) (f : Map A (FunForget B)).",
            "VernacAssumption",
            "682a64e11e5ea3b1e8e6e3b7280f0219613d7b8f"
        ],
        [
            "Fixpoint UA_FM_diese_fun (l : FreeMonoid A) : B := match l with | Empty => Munit B | Concat1 a m => f a +_M UA_FM_diese_fun m end.",
            "VernacFixpoint",
            "52af9b75140271ebe48b598fd6fe115f0fc9ac52"
        ],
        [
            "Lemma UA_FM_diese_map_law : Map_law UA_FM_diese_fun.",
            "VernacStartTheoremProof",
            "5b4b1cc737ea9b8c8cf20010b80fbf0f08842a50"
        ],
        [
            "unfold Map_law in |- *; simpl in |- *.",
            "VernacExtend",
            "63e006e61be04a0030bcdd5ffea48f48cee6c173"
        ],
        [
            "intros l1; elim l1.",
            "VernacExtend",
            "47f32996eb2e102aa5084da3ee22453f61736824"
        ],
        [
            "intro l2; elim l2.",
            "VernacExtend",
            "dd79d109ef89a8d3307ba5c0d94bbc822514e5c6"
        ],
        [
            "simpl in |- *; intro; apply Refl.",
            "VernacExtend",
            "ed110568c8ab578cfb4cf1ba711081c0929d745f"
        ],
        [
            "intros c t H1 H2; elim H2.",
            "VernacExtend",
            "8f9744e07514cf31cb3d145d568cda45053d6f66"
        ],
        [
            "intros c t H1 l2; elim l2.",
            "VernacExtend",
            "d696b09ca7655437d2f7136ea29b45c0878e0b55"
        ],
        [
            "intro H2; absurd (Equal_Tlist (Concat1 c t) (Empty A)).",
            "VernacExtend",
            "f07a92636d1bb3f1f39d828b4f7e70a996cca43d"
        ],
        [
            "apply Diff_Concat1_Empty.",
            "VernacExtend",
            "eb92f683a22b51de7fe538cafa9dc3a53319a342"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros c0 t0 H2; simpl in |- *; intro H3; elim H3; intros H4 H5.",
            "VernacExtend",
            "9ada07dbf6284eeb601c38e1f1bad85e15c1a18a"
        ],
        [
            "apply Trans with (f c +_M UA_FM_diese_fun t0).",
            "VernacExtend",
            "9481f9ba47a683b174e5087e566db23cfdef7a87"
        ],
        [
            "unfold ApMop in |- *; apply Map2_l.",
            "VernacExtend",
            "abaf02feae7b26ac2712ff12c1afc01281861a6e"
        ],
        [
            "apply H1; trivial.",
            "VernacExtend",
            "0267d3710abb1665708a5614187c94d8c85243a1"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "unfold ApMop in |- *; apply Map2_r.",
            "VernacExtend",
            "990e39b91f3b2ca4bb6f9657e725810602cf4ed4"
        ],
        [
            "apply Pres1; trivial.",
            "VernacExtend",
            "d97d16403b5a7ba80ec74125fa07e51626688fb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure UA_FM_diese_map := Build_Map UA_FM_diese_map_law.",
            "VernacDefinition",
            "d3c068aefa21ea7516f5ac51df5fb6e25549c59e"
        ],
        [
            "Lemma UA_FM_diese_unit_law : MonUnit_law UA_FM_diese_map.",
            "VernacStartTheoremProof",
            "8af0bdd99696b88e9bdb5dcbbe368208ecb3f4d2"
        ],
        [
            "unfold MonUnit_law in |- *; simpl in |- *.",
            "VernacExtend",
            "f7dfab358ba3df294ebc20ef21e4cfe552d9c97e"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UA_FM_diese_op_law : MonOp_law UA_FM_diese_map.",
            "VernacStartTheoremProof",
            "e0474ef3ef1ceb508f73d3f6df5b46ba360a0c0c"
        ],
        [
            "unfold MonOp_law in |- *; simpl in |- *.",
            "VernacExtend",
            "eca770f1f2ef4fbf1d8ad6a1ae7db0de6b76f237"
        ],
        [
            "intro l1; elim l1.",
            "VernacExtend",
            "2551d07185188449675681bf13aa1b3909eab765"
        ],
        [
            "simpl in |- *; intro l2.",
            "VernacExtend",
            "24a1ae7bc9ff153e0a29c4855a4fc80114fa5b4b"
        ],
        [
            "apply Trans with (UA_FM_diese_fun l2).",
            "VernacExtend",
            "ea953ebd42078a80b190e5c048b7000a02681ead"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "apply Midl1.",
            "VernacExtend",
            "24c38284f563175d46d55ccd8a1adae05c2a430c"
        ],
        [
            "simpl in |- *; intros c t H l2.",
            "VernacExtend",
            "853ebe3f778f67fc4e0e85c3e72e6e8c4726848a"
        ],
        [
            "apply Trans with (f c +_M (UA_FM_diese_fun t +_M UA_FM_diese_fun l2)).",
            "VernacExtend",
            "8961b7e831149c0d5dc1c9819b79d5f0ae1c9f3b"
        ],
        [
            "unfold ApMop in |- *; apply Map2_l; exact (H l2).",
            "VernacExtend",
            "80c1a390ee225c68849d429685289af24a53a335"
        ],
        [
            "apply Mass.",
            "VernacExtend",
            "af173b9e105d17af8db1c5e2bbd652b8679304d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure UA_FM_diese := Build_MonMor UA_FM_diese_unit_law UA_FM_diese_op_law.",
            "VernacDefinition",
            "14197887dc7797888bb83294506488aaa259195e"
        ],
        [
            "End ua_fm_diese_def.",
            "VernacEndSegment",
            "a6b310e3577f8aab7abc02c1fea2e2c17f81a8b6"
        ],
        [
            "Lemma UA_FM_law1 : UA_law1 UA_FM_mor UA_FM_diese.",
            "VernacStartTheoremProof",
            "f8c5149fa80f8d2c7d73766cb9025c0b61ff05eb"
        ],
        [
            "unfold UA_law1, UA_eq in |- *; intros B f.",
            "VernacExtend",
            "c1e63966930109184093a918dd174096bf438d97"
        ],
        [
            "unfold UA_FM_mor in |- *; simpl in |- *.",
            "VernacExtend",
            "131034249ce400d0a650f3b173c060d518609d22"
        ],
        [
            "unfold Ext in |- *; simpl in |- *.",
            "VernacExtend",
            "92dd999f32f70cdf83c4530ca7ac54c6348787bc"
        ],
        [
            "intro a; apply Midr1.",
            "VernacExtend",
            "7ae907a1103b5415871ce930dae05af188012bcb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UA_FM_law2 : UA_law2 UA_FM_mor UA_FM_diese.",
            "VernacStartTheoremProof",
            "18ec895047b90f048096a07adb524a48f24c9a1e"
        ],
        [
            "unfold UA_law2 in |- *; simpl in |- *.",
            "VernacExtend",
            "660758b6fde66455ca32dd3d876d49422f886727"
        ],
        [
            "unfold UA_eq, Equal_MonMor in |- *; simpl in |- *.",
            "VernacExtend",
            "5e7a60e2f2188bd738b15c2cbeb15f466022288a"
        ],
        [
            "unfold UA_FM_diese_map, Ext in |- *; simpl in |- *.",
            "VernacExtend",
            "9a27144db17fd9405c0bbe99800797f5dea142b6"
        ],
        [
            "unfold Comp_fun, UA_FM_fun, FMor at 1 in |- *; simpl in |- *.",
            "VernacExtend",
            "2de41e5b09e18bfa5f075150c3727348fa2d15fa"
        ],
        [
            "intros B f h H l; elim l; simpl in |- *.",
            "VernacExtend",
            "eee89db42854bda71d31b728d4f44dcba465aff6"
        ],
        [
            "apply (MMon_unit h).",
            "VernacExtend",
            "c73f7b618b6552adb8bbb67cf500b476ed4e3733"
        ],
        [
            "intros c t H1.",
            "VernacExtend",
            "9aa619a7c3b460464abbd6b2218404e43be66186"
        ],
        [
            "apply Trans with (h (Concat1 c (Empty A)) +_M h t).",
            "VernacExtend",
            "663ecb5ef26733d59a190fdff8be9357bd2be71e"
        ],
        [
            "apply (MMon_op h (Concat1 c (Empty A)) t).",
            "VernacExtend",
            "2338a27d74988d0a1b1f8f52c201005d25f62774"
        ],
        [
            "apply Trans with (f c +_M h t).",
            "VernacExtend",
            "48dd013dcd84cdc071e4eb98318e1143d5a52541"
        ],
        [
            "unfold ApMop in |- *; apply Map2_r; exact (H c).",
            "VernacExtend",
            "6e5f18d2791c3c64d7ffeb38f4e4c185163968e6"
        ],
        [
            "unfold ApMop in |- *; apply Map2_l; trivial.",
            "VernacExtend",
            "05bb6097529fb4ef26370b07e5791b640ad315ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma IsUA_FM : IsUA UA_FM_mor.",
            "VernacStartTheoremProof",
            "fdcb7ea7795947c7da20ace234bd53c15e4ad282"
        ],
        [
            "exact (Build_IsUA UA_FM_law1 UA_FM_law2).",
            "VernacExtend",
            "eea1104444eed446954613d183ca327df190893b"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition UA_FM : UA A FunForget := IsUA_FM.",
            "VernacDefinition",
            "5ee35df0a216d568922c6fee6b274f09b18eae73"
        ],
        [
            "End ua_fm.",
            "VernacEndSegment",
            "a1f66149fb8682d4b077abf900cdb937f240907d"
        ]
    ],
    "proofs": [
        {
            "name": "UA_FM_map_law",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *; simpl in |- *; intros a b H; split; trivial.",
                        "VernacExtend",
                        "f9f611427b73bfcda12b4d4ed4be99146bddfe52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UA_FM_diese_map_law",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "63e006e61be04a0030bcdd5ffea48f48cee6c173"
                    ]
                },
                {
                    "command": [
                        "intros l1; elim l1.",
                        "VernacExtend",
                        "47f32996eb2e102aa5084da3ee22453f61736824"
                    ]
                },
                {
                    "command": [
                        "intro l2; elim l2.",
                        "VernacExtend",
                        "dd79d109ef89a8d3307ba5c0d94bbc822514e5c6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intro; apply Refl.",
                        "VernacExtend",
                        "ed110568c8ab578cfb4cf1ba711081c0929d745f"
                    ]
                },
                {
                    "command": [
                        "intros c t H1 H2; elim H2.",
                        "VernacExtend",
                        "8f9744e07514cf31cb3d145d568cda45053d6f66"
                    ]
                },
                {
                    "command": [
                        "intros c t H1 l2; elim l2.",
                        "VernacExtend",
                        "d696b09ca7655437d2f7136ea29b45c0878e0b55"
                    ]
                },
                {
                    "command": [
                        "intro H2; absurd (Equal_Tlist (Concat1 c t) (Empty A)).",
                        "VernacExtend",
                        "f07a92636d1bb3f1f39d828b4f7e70a996cca43d"
                    ]
                },
                {
                    "command": [
                        "apply Diff_Concat1_Empty.",
                        "VernacExtend",
                        "eb92f683a22b51de7fe538cafa9dc3a53319a342"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros c0 t0 H2; simpl in |- *; intro H3; elim H3; intros H4 H5.",
                        "VernacExtend",
                        "9ada07dbf6284eeb601c38e1f1bad85e15c1a18a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (f c +_M UA_FM_diese_fun t0).",
                        "VernacExtend",
                        "9481f9ba47a683b174e5087e566db23cfdef7a87"
                    ]
                },
                {
                    "command": [
                        "unfold ApMop in |- *; apply Map2_l.",
                        "VernacExtend",
                        "abaf02feae7b26ac2712ff12c1afc01281861a6e"
                    ]
                },
                {
                    "command": [
                        "apply H1; trivial.",
                        "VernacExtend",
                        "0267d3710abb1665708a5614187c94d8c85243a1"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "unfold ApMop in |- *; apply Map2_r.",
                        "VernacExtend",
                        "990e39b91f3b2ca4bb6f9657e725810602cf4ed4"
                    ]
                },
                {
                    "command": [
                        "apply Pres1; trivial.",
                        "VernacExtend",
                        "d97d16403b5a7ba80ec74125fa07e51626688fb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UA_FM_diese_unit_law",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold MonUnit_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "f7dfab358ba3df294ebc20ef21e4cfe552d9c97e"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UA_FM_diese_op_law",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "unfold MonOp_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "eca770f1f2ef4fbf1d8ad6a1ae7db0de6b76f237"
                    ]
                },
                {
                    "command": [
                        "intro l1; elim l1.",
                        "VernacExtend",
                        "2551d07185188449675681bf13aa1b3909eab765"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intro l2.",
                        "VernacExtend",
                        "24a1ae7bc9ff153e0a29c4855a4fc80114fa5b4b"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (UA_FM_diese_fun l2).",
                        "VernacExtend",
                        "ea953ebd42078a80b190e5c048b7000a02681ead"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "apply Midl1.",
                        "VernacExtend",
                        "24c38284f563175d46d55ccd8a1adae05c2a430c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros c t H l2.",
                        "VernacExtend",
                        "853ebe3f778f67fc4e0e85c3e72e6e8c4726848a"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (f c +_M (UA_FM_diese_fun t +_M UA_FM_diese_fun l2)).",
                        "VernacExtend",
                        "8961b7e831149c0d5dc1c9819b79d5f0ae1c9f3b"
                    ]
                },
                {
                    "command": [
                        "unfold ApMop in |- *; apply Map2_l; exact (H l2).",
                        "VernacExtend",
                        "80c1a390ee225c68849d429685289af24a53a335"
                    ]
                },
                {
                    "command": [
                        "apply Mass.",
                        "VernacExtend",
                        "af173b9e105d17af8db1c5e2bbd652b8679304d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UA_FM_law1",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "unfold UA_law1, UA_eq in |- *; intros B f.",
                        "VernacExtend",
                        "c1e63966930109184093a918dd174096bf438d97"
                    ]
                },
                {
                    "command": [
                        "unfold UA_FM_mor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "131034249ce400d0a650f3b173c060d518609d22"
                    ]
                },
                {
                    "command": [
                        "unfold Ext in |- *; simpl in |- *.",
                        "VernacExtend",
                        "92dd999f32f70cdf83c4530ca7ac54c6348787bc"
                    ]
                },
                {
                    "command": [
                        "intro a; apply Midr1.",
                        "VernacExtend",
                        "7ae907a1103b5415871ce930dae05af188012bcb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UA_FM_law2",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "unfold UA_law2 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "660758b6fde66455ca32dd3d876d49422f886727"
                    ]
                },
                {
                    "command": [
                        "unfold UA_eq, Equal_MonMor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5e7a60e2f2188bd738b15c2cbeb15f466022288a"
                    ]
                },
                {
                    "command": [
                        "unfold UA_FM_diese_map, Ext in |- *; simpl in |- *.",
                        "VernacExtend",
                        "9a27144db17fd9405c0bbe99800797f5dea142b6"
                    ]
                },
                {
                    "command": [
                        "unfold Comp_fun, UA_FM_fun, FMor at 1 in |- *; simpl in |- *.",
                        "VernacExtend",
                        "2de41e5b09e18bfa5f075150c3727348fa2d15fa"
                    ]
                },
                {
                    "command": [
                        "intros B f h H l; elim l; simpl in |- *.",
                        "VernacExtend",
                        "eee89db42854bda71d31b728d4f44dcba465aff6"
                    ]
                },
                {
                    "command": [
                        "apply (MMon_unit h).",
                        "VernacExtend",
                        "c73f7b618b6552adb8bbb67cf500b476ed4e3733"
                    ]
                },
                {
                    "command": [
                        "intros c t H1.",
                        "VernacExtend",
                        "9aa619a7c3b460464abbd6b2218404e43be66186"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (h (Concat1 c (Empty A)) +_M h t).",
                        "VernacExtend",
                        "663ecb5ef26733d59a190fdff8be9357bd2be71e"
                    ]
                },
                {
                    "command": [
                        "apply (MMon_op h (Concat1 c (Empty A)) t).",
                        "VernacExtend",
                        "2338a27d74988d0a1b1f8f52c201005d25f62774"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (f c +_M h t).",
                        "VernacExtend",
                        "48dd013dcd84cdc071e4eb98318e1143d5a52541"
                    ]
                },
                {
                    "command": [
                        "unfold ApMop in |- *; apply Map2_r; exact (H c).",
                        "VernacExtend",
                        "6e5f18d2791c3c64d7ffeb38f4e4c185163968e6"
                    ]
                },
                {
                    "command": [
                        "unfold ApMop in |- *; apply Map2_l; trivial.",
                        "VernacExtend",
                        "05bb6097529fb4ef26370b07e5791b640ad315ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IsUA_FM",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "exact (Build_IsUA UA_FM_law1 UA_FM_law2).",
                        "VernacExtend",
                        "eea1104444eed446954613d183ca327df190893b"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}