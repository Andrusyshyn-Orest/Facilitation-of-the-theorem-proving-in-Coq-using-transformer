{
    "filename": "CATEGORY_THEORY/LIMITS/Products1.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Limit.",
            "VernacRequire",
            "f952ace82bbb252c052537ad617dd57a310a9e9b"
        ],
        [
            "Require Export Discr.",
            "VernacRequire",
            "bd4099bd0e783c45b7090ad178e4421a55400f3f"
        ],
        [
            "Require Export Products.",
            "VernacRequire",
            "319c59c872d6a07abdfce2135ecc36e4456f2f97"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section products_limit_def.",
            "VernacBeginSection",
            "e76b38391b931ffc947b93d13a9d1a8cf48af3e3"
        ],
        [
            "Variables (C : Category) (I : Type) (a : I -> C).",
            "VernacAssumption",
            "535c58c675bffbabb596ef0c469efb4ef58c62ea"
        ],
        [
            "Definition FunDiscr_ob (i : Discr I) := a i.",
            "VernacDefinition",
            "a2d49787f32a7dbdcb3d007710610f481ac9f204"
        ],
        [
            "Definition FunDiscr_arrow (i j : Discr I) (f : i --> j) := match f in (Discr_mor d d0) return (Carrier (a d --> a d0)) with | Build_Discr_mor k => Id (a k) end.",
            "VernacDefinition",
            "427bd9bcba894131d16433fd6146423fcb3bea81"
        ],
        [
            "Lemma FunDiscr_map_law : forall i j : I, Map_law (FunDiscr_arrow (i:=i) (j:=j)).",
            "VernacStartTheoremProof",
            "82a027bf86a5e08a977ff9e5a8cd58557de6fd34"
        ],
        [
            "unfold Map_law in |- *.",
            "VernacExtend",
            "36ce4d0011f3499dbc27b5880c519353b1d73e26"
        ],
        [
            "intros i j f; elim f; intros k f1 H.",
            "VernacExtend",
            "ed1573a66fdca47c956557cbfa6b6b102849bdf0"
        ],
        [
            "apply (Discr_mor_ind1 (P:=fun f1 : Discr_mor k k => FunDiscr_arrow (Build_Discr_mor k) =_S FunDiscr_arrow f1)).",
            "VernacExtend",
            "49544cf89f657add0c06cac131d52e8bad98b83e"
        ],
        [
            "simpl in |- *; apply Refl.",
            "VernacExtend",
            "b8f5c63f7c99b70dcb65128956a52f2555c17a56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure FunDiscr_map (i j : Discr I) := Build_Map (FunDiscr_map_law (i:=i) (j:=j)).",
            "VernacDefinition",
            "cd43b374754bf7d664dc20a5788de859f7c486b9"
        ],
        [
            "Lemma FunDiscr_comp_law : Fcomp_law FunDiscr_map.",
            "VernacStartTheoremProof",
            "88dfae1fbb2dad5eef2323aeacd40686ef9976d4"
        ],
        [
            "unfold Fcomp_law in |- *; intros i j k f.",
            "VernacExtend",
            "d98e41f95b44a45a5dd39b1d1cd58cade5f3bbfe"
        ],
        [
            "elim f; simpl in |- *.",
            "VernacExtend",
            "2e5f8ed5df3439198ff486a1ba0b5af1089df6e1"
        ],
        [
            "intros i' g; elim g; simpl in |- *.",
            "VernacExtend",
            "cf9401ee37a568f5b0c57f695a8c9737420c9b97"
        ],
        [
            "intro i''; unfold Comp in |- *; apply (Prf_idr (c:=C)).",
            "VernacExtend",
            "8e3c19c1afbf6131b7ad8cda1bd69aef3d0e0626"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FunDiscr_id_law : Fid_law FunDiscr_map.",
            "VernacStartTheoremProof",
            "83bee2265f639ab9d0d8a2b516630d840ed6c3ec"
        ],
        [
            "unfold Fid_law in |- *; simpl in |- *.",
            "VernacExtend",
            "ba5699e28b4724f4847e53978ae55bf81eebe428"
        ],
        [
            "intro i; apply Refl.",
            "VernacExtend",
            "9f487ddcb8e10c61c62d6333849648c47890a6a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure FunDiscr := Build_Functor FunDiscr_comp_law FunDiscr_id_law.",
            "VernacDefinition",
            "2280f5e60d814f4a27b8d6c038645825c8a65b84"
        ],
        [
            "SubClass Product1 := Limit FunDiscr.",
            "VernacDefinition",
            "546717aa3dc5ae74c44436d4e4d8b77fe7531c8c"
        ],
        [
            "Variable l : Product1.",
            "VernacAssumption",
            "8bb1b9afafceb59a3c777507d3ecaa50eaa6fe71"
        ],
        [
            "Definition Pi1 := Lim l.",
            "VernacDefinition",
            "d30926f25417c9dfabb5b2041ee9c043eecda667"
        ],
        [
            "Definition Proj1 (i : I) : Pi1 --> a i := Limiting_cone l i.",
            "VernacDefinition",
            "d4335757e28bceb315f824d63597b4f09fa7d491"
        ],
        [
            "Section pd1_diese_def.",
            "VernacBeginSection",
            "7dfe95d37bc8bd9eb28a6abf00ce958cc07715f5"
        ],
        [
            "Variables (c : C) (f : forall j : I, c --> FunDiscr j).",
            "VernacAssumption",
            "0b49b8bb061a8c342f0fcc839423bf0179fa7182"
        ],
        [
            "Definition Product_tau (j : Discr I) := f j.",
            "VernacDefinition",
            "fa96727ec7e3a05c276d546153f605e3e2b9bced"
        ],
        [
            "Lemma Product_tau_cone_law : Cone_law Product_tau.",
            "VernacStartTheoremProof",
            "5776c784fdb39bb3e9da82898e4a1d84da876185"
        ],
        [
            "unfold Cone_law, Product_tau in |- *; simpl in |- *.",
            "VernacExtend",
            "ee9d26ddc495aff1de6fdad42c467c7187e57f30"
        ],
        [
            "intros a' b g; elim g; simpl in |- *; intro i.",
            "VernacExtend",
            "531c69e02ebd10376516fad5de70fc2be55a2848"
        ],
        [
            "unfold FMor in |- *; simpl in |- *.",
            "VernacExtend",
            "3e411e3c578e98522ae81e8b9ea7c21ec0de70a4"
        ],
        [
            "apply Idr.",
            "VernacExtend",
            "065b91ed625fa820463937eb48686d897b72e45e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Product_nt := Build_Cone Product_tau_cone_law.",
            "VernacDefinition",
            "00db42018e59f9386558ca31038a97bf392256ba"
        ],
        [
            "Definition Pd1_diese : c --> Pi1 := Lim_diese l Product_nt.",
            "VernacDefinition",
            "13dd2effeb6cc4eb5d27e096366b79a988859ec8"
        ],
        [
            "End pd1_diese_def.",
            "VernacEndSegment",
            "e3c1410b5d019ae7aa66510f8564968205496c50"
        ],
        [
            "Lemma Prf_pd1_law1 : Product_law1 Proj1 Pd1_diese.",
            "VernacStartTheoremProof",
            "454a3df14d4232b6397e042251efe3eede215a05"
        ],
        [
            "unfold Product_law1, Product_eq in |- *; intros c f j.",
            "VernacExtend",
            "da893fcda3b163947eb490d05bbd6daab97d87b2"
        ],
        [
            "apply Sym; apply (Prf_limit1 l (Product_nt f) j).",
            "VernacExtend",
            "5b66dcd73bca780f5b9745ac82af730064159e45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Prf_pd1_law2 : Product_law2 Proj1 Pd1_diese.",
            "VernacStartTheoremProof",
            "491efedc7bfee03b6ed31c87839cb4bbf7c2fdb7"
        ],
        [
            "unfold Product_law2, Product_eq in |- *; intros c f g H.",
            "VernacExtend",
            "2d6b73a184a73180ae4831ef22e6f43a02ebe59e"
        ],
        [
            "unfold Pd1_diese in |- *; apply (Prf_limit2 l).",
            "VernacExtend",
            "b4bc3150ae02f61648e14eae018b16f20b310e51"
        ],
        [
            "unfold Limit_eq in |- *; simpl in |- *; unfold Product_tau in |- *; simpl in |- *.",
            "VernacExtend",
            "7d0cba40acf199e3ac208ea86996fae9868bbead"
        ],
        [
            "intro i; apply Sym; apply (H i).",
            "VernacExtend",
            "c750cc910ae4e64f974fdf380d4aa5a994816982"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Product1_to_Product := Build_Product Prf_pd1_law1 Prf_pd1_law2.",
            "VernacDefinition",
            "f7488d66178390f8db910aab7efb70103fc4562d"
        ],
        [
            "End products_limit_def.",
            "VernacEndSegment",
            "f6d69a2754ae8a925b205323bee48e4e9d962052"
        ],
        [
            "Coercion Product1_to_Product : Product1 >-> Product.",
            "VernacCoercion",
            "acce5026de16e96e74fcdd57299bed0726221431"
        ]
    ],
    "proofs": [
        {
            "name": "FunDiscr_map_law",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *.",
                        "VernacExtend",
                        "36ce4d0011f3499dbc27b5880c519353b1d73e26"
                    ]
                },
                {
                    "command": [
                        "intros i j f; elim f; intros k f1 H.",
                        "VernacExtend",
                        "ed1573a66fdca47c956557cbfa6b6b102849bdf0"
                    ]
                },
                {
                    "command": [
                        "apply (Discr_mor_ind1 (P:=fun f1 : Discr_mor k k => FunDiscr_arrow (Build_Discr_mor k) =_S FunDiscr_arrow f1)).",
                        "VernacExtend",
                        "49544cf89f657add0c06cac131d52e8bad98b83e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply Refl.",
                        "VernacExtend",
                        "b8f5c63f7c99b70dcb65128956a52f2555c17a56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FunDiscr_comp_law",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "unfold Fcomp_law in |- *; intros i j k f.",
                        "VernacExtend",
                        "d98e41f95b44a45a5dd39b1d1cd58cade5f3bbfe"
                    ]
                },
                {
                    "command": [
                        "elim f; simpl in |- *.",
                        "VernacExtend",
                        "2e5f8ed5df3439198ff486a1ba0b5af1089df6e1"
                    ]
                },
                {
                    "command": [
                        "intros i' g; elim g; simpl in |- *.",
                        "VernacExtend",
                        "cf9401ee37a568f5b0c57f695a8c9737420c9b97"
                    ]
                },
                {
                    "command": [
                        "intro i''; unfold Comp in |- *; apply (Prf_idr (c:=C)).",
                        "VernacExtend",
                        "8e3c19c1afbf6131b7ad8cda1bd69aef3d0e0626"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FunDiscr_id_law",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "unfold Fid_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ba5699e28b4724f4847e53978ae55bf81eebe428"
                    ]
                },
                {
                    "command": [
                        "intro i; apply Refl.",
                        "VernacExtend",
                        "9f487ddcb8e10c61c62d6333849648c47890a6a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Product_tau_cone_law",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold Cone_law, Product_tau in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ee9d26ddc495aff1de6fdad42c467c7187e57f30"
                    ]
                },
                {
                    "command": [
                        "intros a' b g; elim g; simpl in |- *; intro i.",
                        "VernacExtend",
                        "531c69e02ebd10376516fad5de70fc2be55a2848"
                    ]
                },
                {
                    "command": [
                        "unfold FMor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3e411e3c578e98522ae81e8b9ea7c21ec0de70a4"
                    ]
                },
                {
                    "command": [
                        "apply Idr.",
                        "VernacExtend",
                        "065b91ed625fa820463937eb48686d897b72e45e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_pd1_law1",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "unfold Product_law1, Product_eq in |- *; intros c f j.",
                        "VernacExtend",
                        "da893fcda3b163947eb490d05bbd6daab97d87b2"
                    ]
                },
                {
                    "command": [
                        "apply Sym; apply (Prf_limit1 l (Product_nt f) j).",
                        "VernacExtend",
                        "5b66dcd73bca780f5b9745ac82af730064159e45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_pd1_law2",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "unfold Product_law2, Product_eq in |- *; intros c f g H.",
                        "VernacExtend",
                        "2d6b73a184a73180ae4831ef22e6f43a02ebe59e"
                    ]
                },
                {
                    "command": [
                        "unfold Pd1_diese in |- *; apply (Prf_limit2 l).",
                        "VernacExtend",
                        "b4bc3150ae02f61648e14eae018b16f20b310e51"
                    ]
                },
                {
                    "command": [
                        "unfold Limit_eq in |- *; simpl in |- *; unfold Product_tau in |- *; simpl in |- *.",
                        "VernacExtend",
                        "7d0cba40acf199e3ac208ea86996fae9868bbead"
                    ]
                },
                {
                    "command": [
                        "intro i; apply Sym; apply (H i).",
                        "VernacExtend",
                        "c750cc910ae4e64f974fdf380d4aa5a994816982"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}