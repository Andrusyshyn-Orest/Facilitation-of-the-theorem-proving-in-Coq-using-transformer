{
    "filename": "CATEGORY_THEORY/LIMITS/Equalizers1.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Equalizers.",
            "VernacRequire",
            "3e3e2fd16a704b86610099c3986ed15d86907952"
        ],
        [
            "Require Export PA.",
            "VernacRequire",
            "9016c1695729fdd7fd720a2f0d6b213137ea99fa"
        ],
        [
            "Require Export Limit.",
            "VernacRequire",
            "f952ace82bbb252c052537ad617dd57a310a9e9b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section equalizer_limit_def.",
            "VernacBeginSection",
            "c995351ffe1a4fc9a748ce6c075e5b69b8e40c22"
        ],
        [
            "Variables (C : Category) (a b : C) (I : Type) (k : I -> (a --> b)).",
            "VernacAssumption",
            "da0c6a7ea4ca903c0031cdb4793d8ab2763eee9f"
        ],
        [
            "Definition FPA_ob (x : PA k) := match x with | PA1 => a | PA2 => b end.",
            "VernacDefinition",
            "a177ec8465d99f3cc05a4a0783a929c961a9d8d7"
        ],
        [
            "Definition FPA_mor (x y : PA k) (f : x --> y) := match f in (PA_mor _ x' y') return (Carrier (FPA_ob x' --> FPA_ob y')) with | PA_I1 => Id a | PA_I2 => Id b | PA_f i => k i end.",
            "VernacDefinition",
            "e541afffe4c48b4d54f027b4d331d96fb24e7c05"
        ],
        [
            "Lemma FPA_map_law : forall x y : PA_ob, Map_law (FPA_mor (x:=x) (y:=y)).",
            "VernacStartTheoremProof",
            "0b604ba87c4d8b774fdfc95437ab4f81ccc14fe1"
        ],
        [
            "unfold Map_law in |- *; simpl in |- *.",
            "VernacExtend",
            "63e006e61be04a0030bcdd5ffea48f48cee6c173"
        ],
        [
            "intros x y f; elim f.",
            "VernacExtend",
            "337801fb09609063d246fcd5148ce15375a1aba5"
        ],
        [
            "simpl in |- *; intros g H; apply (PA_11_ind (P:=fun x : PA_mor_setoid k PA1 PA1 => Id a =_S FPA_mor x)).",
            "VernacExtend",
            "68b34773355a750c733d39e918a1276cc4d0e051"
        ],
        [
            "simpl in |- *; apply Refl.",
            "VernacExtend",
            "b8f5c63f7c99b70dcb65128956a52f2555c17a56"
        ],
        [
            "simpl in |- *; intros g H; apply (PA_22_ind (P:=fun x' : PA_mor_setoid k PA2 PA2 => Id b =_S FPA_mor x')).",
            "VernacExtend",
            "aa0e29f25c979cc45377c645c13ce15ebc945609"
        ],
        [
            "simpl in |- *; apply Refl.",
            "VernacExtend",
            "b8f5c63f7c99b70dcb65128956a52f2555c17a56"
        ],
        [
            "intros i g; lapply (PA_12_ind (P:=fun x' : PA_mor_setoid k PA1 PA2 => Equal_PA_mor k (PA_f i) x' -> k i =_S FPA_mor x')).",
            "VernacExtend",
            "079f1dec9d416b5cf3dc8fc99a475180f3978951"
        ],
        [
            "intros H H0; apply (H g H0).",
            "VernacExtend",
            "cb4607c7495a7a223b253387244a36e40f05e674"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure FPA_map (x y : PA k) := Build_Map (FPA_map_law (x:=x) (y:=y)).",
            "VernacDefinition",
            "707b1ecb419f420f386f116368cde08de7bbfa80"
        ],
        [
            "Lemma FPA_comp_law : Fcomp_law FPA_map.",
            "VernacStartTheoremProof",
            "92e8de01e4c506463f283915377ec2c0cdd8c3a5"
        ],
        [
            "unfold Fcomp_law in |- *.",
            "VernacExtend",
            "4ade14e492d2755332595f709da8346c9ff8dfe4"
        ],
        [
            "intros x y z f; elim f.",
            "VernacExtend",
            "7239f9b15ec25a723921b3eff1648bbaf9c95b18"
        ],
        [
            "intro g.",
            "VernacExtend",
            "fe2063eb65354ed5bfcbf9883759571e93c4cf1c"
        ],
        [
            "apply Trans with (FPA_map _ _ g).",
            "VernacExtend",
            "d0b6f5110c52a61b959a04b10dffd17fc4c69e00"
        ],
        [
            "apply Pres1.",
            "VernacExtend",
            "5fbb85859b275e89c8c9612a2e024e3051b16e3c"
        ],
        [
            "apply (Comp_PA_fact1 k (PA_I1 I) g).",
            "VernacExtend",
            "a9bfd902d38145f5e31ffd5824b51a01ec849cdd"
        ],
        [
            "simpl in |- *; apply Idl1.",
            "VernacExtend",
            "1d0ae1541822942202ad8bc7ca8eefc981b7ae2d"
        ],
        [
            "intro g.",
            "VernacExtend",
            "fe2063eb65354ed5bfcbf9883759571e93c4cf1c"
        ],
        [
            "apply Trans with (FPA_map _ _ g).",
            "VernacExtend",
            "d0b6f5110c52a61b959a04b10dffd17fc4c69e00"
        ],
        [
            "apply Pres1.",
            "VernacExtend",
            "5fbb85859b275e89c8c9612a2e024e3051b16e3c"
        ],
        [
            "apply (Comp_PA_fact2 k (PA_I2 I) g).",
            "VernacExtend",
            "b54ea8bfbc4339785ce1bd4063dfeac4671e8df1"
        ],
        [
            "simpl in |- *; apply Idl1.",
            "VernacExtend",
            "1d0ae1541822942202ad8bc7ca8eefc981b7ae2d"
        ],
        [
            "intro i; elim z; intro g.",
            "VernacExtend",
            "8b20ea502ca5876035f9d213077a08d8b602f5d9"
        ],
        [
            "apply (PA_21_ind (fun x' : PA_mor I PA2 PA1 => FPA_mor (Comp_PA_mor (PA_f i) g) =_S k i o FPA_mor g) g).",
            "VernacExtend",
            "6190f21374d8e8ab135eeb07db8b6c5fb342e6e0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (PA_22_ind (P:=fun x : PA_mor I PA2 PA2 => k i =_S k i o FPA_mor x)).",
            "VernacExtend",
            "3ae8527dbaa5ecc13484170e6df85eb4bd13cad8"
        ],
        [
            "simpl in |- *; apply Idr.",
            "VernacExtend",
            "1da3ed60f5dc4e4e4c45084cf06ff66326994c0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma FPA_id_law : Fid_law FPA_map.",
            "VernacStartTheoremProof",
            "83e85d61604d1ab82ecef56b357e9d70ccc3e67a"
        ],
        [
            "unfold Fid_law in |- *; simpl in |- *.",
            "VernacExtend",
            "ba5699e28b4724f4847e53978ae55bf81eebe428"
        ],
        [
            "intro x; elim x; simpl in |- *; apply Refl.",
            "VernacExtend",
            "c3720131ea3129bdf9be8582122f8a8d4c7d2e27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure FPA := Build_Functor FPA_comp_law FPA_id_law.",
            "VernacDefinition",
            "c3a61527c4946d3ce44614c6632daa2c6a6143d7"
        ],
        [
            "SubClass Equalizer1 := Limit FPA.",
            "VernacDefinition",
            "1472e3ad058db0a2bd97c2823a93990047fc91c5"
        ],
        [
            "Structure Equalizer2 : Type := {Prf_equalizer1 :> Equalizer1; Witness : I}.",
            "VernacInductive",
            "757aeb2144dd964289ea90b2e30620627861337a"
        ],
        [
            "Variable l : Equalizer2.",
            "VernacAssumption",
            "db2699e4eaf169fd798c9c95bce1545e705ddc04"
        ],
        [
            "Definition E1_ob := Lim l.",
            "VernacDefinition",
            "0bd51d808f70b1e19307c51cd99d6ab12ff0f326"
        ],
        [
            "Definition E1_mor : E1_ob --> a := Limiting_cone l PA1.",
            "VernacDefinition",
            "91f7ef752b02d4e3325668b1a6802019335bcd7b"
        ],
        [
            "Lemma Prf_E1_law1 : Equalizer_law1 k E1_mor.",
            "VernacStartTheoremProof",
            "c865b14da6b4e2c5da7b0e3f70c62ac1d3be539f"
        ],
        [
            "unfold Equalizer_law1, Equalizer_eq, E1_mor in |- *.",
            "VernacExtend",
            "c32976c315de62b043b1116a22ba628779eebbf6"
        ],
        [
            "intros i j.",
            "VernacExtend",
            "9b4db6c7cccf562d910832cc8dbf5907416668e2"
        ],
        [
            "apply Trans with (Limiting_cone l PA2).",
            "VernacExtend",
            "d1470613fefd0b2a2c3c0dad326e89672c0dac54"
        ],
        [
            "apply (EqC1 (Limiting_cone l) (PA_f i)).",
            "VernacExtend",
            "260012642b43e9448a2392b876df70cf12ff0330"
        ],
        [
            "apply (EqC (Limiting_cone l) (PA_f j)).",
            "VernacExtend",
            "0d9d1b3557670920f5af8f801e024bd1e999d8fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section e1_diese_def.",
            "VernacBeginSection",
            "65e5bdf08a227f8488be2db43e38f497c6c9ca70"
        ],
        [
            "Variables (r : C) (h : r --> a).",
            "VernacAssumption",
            "56040c329331f23d8a174eab3e952d519ea259a7"
        ],
        [
            "Hypothesis p : Equalizer_eq k h.",
            "VernacAssumption",
            "c881958740bb940234d956030d2dbda6ee298749"
        ],
        [
            "Definition E_tau (x : PA k) := match x as x' return (Carrier (r --> FPA x')) with | PA1 => h | PA2 => h o k (Witness l) end.",
            "VernacDefinition",
            "fe1c91d795346444e7daffafcc6d53f06595b221"
        ],
        [
            "Lemma E_tau_cone_law : Cone_law E_tau.",
            "VernacStartTheoremProof",
            "2ea2476b1ceb9d452518fb6c8c3885b339a8eaeb"
        ],
        [
            "unfold Cone_law in |- *; intros x o2 f.",
            "VernacExtend",
            "93e7d01eea8e7a500a9c8ad6f29eeea64adc918a"
        ],
        [
            "elim f.",
            "VernacExtend",
            "b36be97c542e09e0a5e44d921c3421f1af816f37"
        ],
        [
            "unfold FMor in |- *; simpl in |- *; apply Idr.",
            "VernacExtend",
            "479b89759ec82d55c5bb80febad8a0a0695b39ec"
        ],
        [
            "unfold FMor in |- *; simpl in |- *; apply Idr.",
            "VernacExtend",
            "479b89759ec82d55c5bb80febad8a0a0695b39ec"
        ],
        [
            "unfold FMor in |- *; simpl in |- *.",
            "VernacExtend",
            "3e411e3c578e98522ae81e8b9ea7c21ec0de70a4"
        ],
        [
            "intro i; apply (p (Witness l) i).",
            "VernacExtend",
            "c1500bb9b5c1361e988331523d49a41ec128dbcb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition E_NT := Build_Cone E_tau_cone_law.",
            "VernacDefinition",
            "4d5344a213f259819659c118f7212f084d53fc04"
        ],
        [
            "Definition E1_diese : r --> E1_ob := Lim_diese l E_NT.",
            "VernacDefinition",
            "460a9a41d018b2ec2563b91ff83a1581b6e96c1d"
        ],
        [
            "End e1_diese_def.",
            "VernacEndSegment",
            "3d915f473e655f152574e8a8e751a4eba056f850"
        ],
        [
            "Lemma Prf_E1_law2 : Equalizer_law2 E1_mor E1_diese.",
            "VernacStartTheoremProof",
            "d95c56ea8e2ed4dde718c6cd68527cfc5329a068"
        ],
        [
            "unfold Equalizer_law2, E1_mor, Equalizer_eq in |- *.",
            "VernacExtend",
            "5291db0ee33bc7fad7c33542f0e9a2d807e11c05"
        ],
        [
            "intros r h p.",
            "VernacExtend",
            "0b1dc5ad8f3d54d296fe5b89ad41237e7a0878dd"
        ],
        [
            "apply Sym; apply (Prf_limit1 l (E_NT p) PA1).",
            "VernacExtend",
            "acfb34a2baa34ec859b74e834bfb5af0a1f4ef3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Prf_E1_law3 : Equalizer_law3 E1_mor E1_diese.",
            "VernacStartTheoremProof",
            "88447247b74b6c71308fe328718e716b134476b7"
        ],
        [
            "unfold Equalizer_law3, E1_mor, Equalizer_eq in |- *.",
            "VernacExtend",
            "cf9de390142c3aee95da3b8a69853f7ff910a6e5"
        ],
        [
            "intros r h p q H.",
            "VernacExtend",
            "1fa9585660bd8c9c58e3710a37eaf4be53a8038b"
        ],
        [
            "unfold E1_diese in |- *; apply (Prf_limit2 l).",
            "VernacExtend",
            "32e65b84617175e7bd57d3a95583469a1ac88421"
        ],
        [
            "unfold Limit_eq in |- *; simpl in |- *.",
            "VernacExtend",
            "a3a46dd95dcefe34f7c9fc1217f99afaf81708df"
        ],
        [
            "intro x; elim x; simpl in |- *.",
            "VernacExtend",
            "c3562075a9a2858c1f4c69a4044a639156e41920"
        ],
        [
            "apply Sym; apply H.",
            "VernacExtend",
            "a8f4e0175214b2262cb6cd2be4a230d48dda3638"
        ],
        [
            "apply Trans with ((q o E1_mor) o k (Witness l)).",
            "VernacExtend",
            "b18d5b08148655121fd67f9a354933196a95e749"
        ],
        [
            "apply Trans with (q o E1_mor o k (Witness l)).",
            "VernacExtend",
            "0229234cd9e28592c6ebcdd3124c3ae9e27483aa"
        ],
        [
            "apply Comp_l.",
            "VernacExtend",
            "5455d6bdb34d7e111449cbfc5ea07ca403feee43"
        ],
        [
            "apply (EqC (Limiting_cone l) (PA_f (Witness l))).",
            "VernacExtend",
            "a8a93bcff056ca6aeb7a023c9b6e26d9d5e5ee94"
        ],
        [
            "apply Ass.",
            "VernacExtend",
            "745732c9901e4f904812f16f825942132db848c1"
        ],
        [
            "apply Comp_r; apply Sym; apply H.",
            "VernacExtend",
            "3a6a3c302c57496db1a837591849b0a462fa6bb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Equalizer2_to_Equalizer := Build_Equalizer Prf_E1_law1 Prf_E1_law2 Prf_E1_law3.",
            "VernacDefinition",
            "b11a1d8e69faeed10bccc3d6376b008f5efb96c5"
        ],
        [
            "End equalizer_limit_def.",
            "VernacEndSegment",
            "554eb665a28196a77b889499be2e7b4b8153f0b5"
        ],
        [
            "Coercion Equalizer2_to_Equalizer : Equalizer2 >-> Equalizer.",
            "VernacCoercion",
            "b692ad8161c5b6ce94c3fa6411a5ad8db96f53fe"
        ],
        [
            "Section equaz_fg.",
            "VernacBeginSection",
            "43d214def5c811b4153593123f427dc72edadfef"
        ],
        [
            "Variables (C : Category) (a b : C) (f g : a --> b).",
            "VernacAssumption",
            "af55802ce9169065b9e8cdacd2ef42380b892cc1"
        ],
        [
            "Definition K_fg (i : TwoElts) := match i with | Elt1 => f | Elt2 => g end.",
            "VernacDefinition",
            "3348a385118a814936ac2382b89e8ab8e0d22313"
        ],
        [
            "Definition J_fg := PA K_fg.",
            "VernacDefinition",
            "623d044e21564c484eb51282bb7deca2585a41a2"
        ],
        [
            "Definition F_fg := FPA K_fg.",
            "VernacDefinition",
            "ed042a9b5dd39cce39f67e8f51c0793b36b65508"
        ],
        [
            "SubClass Equalizer1_fg := Equalizer1 K_fg.",
            "VernacDefinition",
            "02ec3fa5f495689b8500f20d66ec6e704252d515"
        ],
        [
            "Lemma Prf_law1_fg : forall (r : C) (h : r --> a), h o f =_S h o g -> Equalizer_eq K_fg h.",
            "VernacStartTheoremProof",
            "5b2d07a5a159fe2b64a82622aee5467a2d44cc6e"
        ],
        [
            "intros r h H; unfold Equalizer_eq in |- *.",
            "VernacExtend",
            "40bdd0dae10d72d87022fe7f3695cd512ba3fb08"
        ],
        [
            "intros i j; elim i; elim j; simpl in |- *.",
            "VernacExtend",
            "eb82ba7dc113d23d9a216bd7e96994e50b7d9c24"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Sym; trivial.",
            "VernacExtend",
            "b9c4e356dcc86c00657eec7ffa80eb594d5e1b88"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End equaz_fg.",
            "VernacEndSegment",
            "30c901eae8763767574beb8429990de33bd71d10"
        ],
        [
            "Section equaz_hom.",
            "VernacBeginSection",
            "1e4519d43bb4fe05bba71bebde6e8f563d2224b1"
        ],
        [
            "Variables (C : Category) (a b : C).",
            "VernacAssumption",
            "cf4f60558db18792a734e437c9434ad8fb5d3984"
        ],
        [
            "Definition K_hom (f : a --> b) := f.",
            "VernacDefinition",
            "2df716d19e7fdadafe8d228fe509f2ee197ba977"
        ],
        [
            "Definition J_hom := PA K_hom.",
            "VernacDefinition",
            "fca1ba8311dd2f8108e149aa53cb98b683e66d81"
        ],
        [
            "Definition F_hom := FPA K_hom.",
            "VernacDefinition",
            "ea1fc3e12bc8facde012ed53bcc429b8a6a0baf3"
        ],
        [
            "SubClass Equalizer1_hom := Equalizer1 K_hom.",
            "VernacDefinition",
            "a0d60f516b82b118a680c7a2f11619ed5f9885b7"
        ],
        [
            "End equaz_hom.",
            "VernacEndSegment",
            "ad293199c40752baa807df8646de2cd0e4767f4d"
        ]
    ],
    "proofs": [
        {
            "name": "FPA_map_law",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold Map_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "63e006e61be04a0030bcdd5ffea48f48cee6c173"
                    ]
                },
                {
                    "command": [
                        "intros x y f; elim f.",
                        "VernacExtend",
                        "337801fb09609063d246fcd5148ce15375a1aba5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros g H; apply (PA_11_ind (P:=fun x : PA_mor_setoid k PA1 PA1 => Id a =_S FPA_mor x)).",
                        "VernacExtend",
                        "68b34773355a750c733d39e918a1276cc4d0e051"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply Refl.",
                        "VernacExtend",
                        "b8f5c63f7c99b70dcb65128956a52f2555c17a56"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros g H; apply (PA_22_ind (P:=fun x' : PA_mor_setoid k PA2 PA2 => Id b =_S FPA_mor x')).",
                        "VernacExtend",
                        "aa0e29f25c979cc45377c645c13ce15ebc945609"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply Refl.",
                        "VernacExtend",
                        "b8f5c63f7c99b70dcb65128956a52f2555c17a56"
                    ]
                },
                {
                    "command": [
                        "intros i g; lapply (PA_12_ind (P:=fun x' : PA_mor_setoid k PA1 PA2 => Equal_PA_mor k (PA_f i) x' -> k i =_S FPA_mor x')).",
                        "VernacExtend",
                        "079f1dec9d416b5cf3dc8fc99a475180f3978951"
                    ]
                },
                {
                    "command": [
                        "intros H H0; apply (H g H0).",
                        "VernacExtend",
                        "cb4607c7495a7a223b253387244a36e40f05e674"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FPA_comp_law",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold Fcomp_law in |- *.",
                        "VernacExtend",
                        "4ade14e492d2755332595f709da8346c9ff8dfe4"
                    ]
                },
                {
                    "command": [
                        "intros x y z f; elim f.",
                        "VernacExtend",
                        "7239f9b15ec25a723921b3eff1648bbaf9c95b18"
                    ]
                },
                {
                    "command": [
                        "intro g.",
                        "VernacExtend",
                        "fe2063eb65354ed5bfcbf9883759571e93c4cf1c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FPA_map _ _ g).",
                        "VernacExtend",
                        "d0b6f5110c52a61b959a04b10dffd17fc4c69e00"
                    ]
                },
                {
                    "command": [
                        "apply Pres1.",
                        "VernacExtend",
                        "5fbb85859b275e89c8c9612a2e024e3051b16e3c"
                    ]
                },
                {
                    "command": [
                        "apply (Comp_PA_fact1 k (PA_I1 I) g).",
                        "VernacExtend",
                        "a9bfd902d38145f5e31ffd5824b51a01ec849cdd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply Idl1.",
                        "VernacExtend",
                        "1d0ae1541822942202ad8bc7ca8eefc981b7ae2d"
                    ]
                },
                {
                    "command": [
                        "intro g.",
                        "VernacExtend",
                        "fe2063eb65354ed5bfcbf9883759571e93c4cf1c"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (FPA_map _ _ g).",
                        "VernacExtend",
                        "d0b6f5110c52a61b959a04b10dffd17fc4c69e00"
                    ]
                },
                {
                    "command": [
                        "apply Pres1.",
                        "VernacExtend",
                        "5fbb85859b275e89c8c9612a2e024e3051b16e3c"
                    ]
                },
                {
                    "command": [
                        "apply (Comp_PA_fact2 k (PA_I2 I) g).",
                        "VernacExtend",
                        "b54ea8bfbc4339785ce1bd4063dfeac4671e8df1"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply Idl1.",
                        "VernacExtend",
                        "1d0ae1541822942202ad8bc7ca8eefc981b7ae2d"
                    ]
                },
                {
                    "command": [
                        "intro i; elim z; intro g.",
                        "VernacExtend",
                        "8b20ea502ca5876035f9d213077a08d8b602f5d9"
                    ]
                },
                {
                    "command": [
                        "apply (PA_21_ind (fun x' : PA_mor I PA2 PA1 => FPA_mor (Comp_PA_mor (PA_f i) g) =_S k i o FPA_mor g) g).",
                        "VernacExtend",
                        "6190f21374d8e8ab135eeb07db8b6c5fb342e6e0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (PA_22_ind (P:=fun x : PA_mor I PA2 PA2 => k i =_S k i o FPA_mor x)).",
                        "VernacExtend",
                        "3ae8527dbaa5ecc13484170e6df85eb4bd13cad8"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply Idr.",
                        "VernacExtend",
                        "1da3ed60f5dc4e4e4c45084cf06ff66326994c0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "FPA_id_law",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "unfold Fid_law in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ba5699e28b4724f4847e53978ae55bf81eebe428"
                    ]
                },
                {
                    "command": [
                        "intro x; elim x; simpl in |- *; apply Refl.",
                        "VernacExtend",
                        "c3720131ea3129bdf9be8582122f8a8d4c7d2e27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_E1_law1",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold Equalizer_law1, Equalizer_eq, E1_mor in |- *.",
                        "VernacExtend",
                        "c32976c315de62b043b1116a22ba628779eebbf6"
                    ]
                },
                {
                    "command": [
                        "intros i j.",
                        "VernacExtend",
                        "9b4db6c7cccf562d910832cc8dbf5907416668e2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Limiting_cone l PA2).",
                        "VernacExtend",
                        "d1470613fefd0b2a2c3c0dad326e89672c0dac54"
                    ]
                },
                {
                    "command": [
                        "apply (EqC1 (Limiting_cone l) (PA_f i)).",
                        "VernacExtend",
                        "260012642b43e9448a2392b876df70cf12ff0330"
                    ]
                },
                {
                    "command": [
                        "apply (EqC (Limiting_cone l) (PA_f j)).",
                        "VernacExtend",
                        "0d9d1b3557670920f5af8f801e024bd1e999d8fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "E_tau_cone_law",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "unfold Cone_law in |- *; intros x o2 f.",
                        "VernacExtend",
                        "93e7d01eea8e7a500a9c8ad6f29eeea64adc918a"
                    ]
                },
                {
                    "command": [
                        "elim f.",
                        "VernacExtend",
                        "b36be97c542e09e0a5e44d921c3421f1af816f37"
                    ]
                },
                {
                    "command": [
                        "unfold FMor in |- *; simpl in |- *; apply Idr.",
                        "VernacExtend",
                        "479b89759ec82d55c5bb80febad8a0a0695b39ec"
                    ]
                },
                {
                    "command": [
                        "unfold FMor in |- *; simpl in |- *; apply Idr.",
                        "VernacExtend",
                        "479b89759ec82d55c5bb80febad8a0a0695b39ec"
                    ]
                },
                {
                    "command": [
                        "unfold FMor in |- *; simpl in |- *.",
                        "VernacExtend",
                        "3e411e3c578e98522ae81e8b9ea7c21ec0de70a4"
                    ]
                },
                {
                    "command": [
                        "intro i; apply (p (Witness l) i).",
                        "VernacExtend",
                        "c1500bb9b5c1361e988331523d49a41ec128dbcb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_E1_law2",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "unfold Equalizer_law2, E1_mor, Equalizer_eq in |- *.",
                        "VernacExtend",
                        "5291db0ee33bc7fad7c33542f0e9a2d807e11c05"
                    ]
                },
                {
                    "command": [
                        "intros r h p.",
                        "VernacExtend",
                        "0b1dc5ad8f3d54d296fe5b89ad41237e7a0878dd"
                    ]
                },
                {
                    "command": [
                        "apply Sym; apply (Prf_limit1 l (E_NT p) PA1).",
                        "VernacExtend",
                        "acfb34a2baa34ec859b74e834bfb5af0a1f4ef3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_E1_law3",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "unfold Equalizer_law3, E1_mor, Equalizer_eq in |- *.",
                        "VernacExtend",
                        "cf9de390142c3aee95da3b8a69853f7ff910a6e5"
                    ]
                },
                {
                    "command": [
                        "intros r h p q H.",
                        "VernacExtend",
                        "1fa9585660bd8c9c58e3710a37eaf4be53a8038b"
                    ]
                },
                {
                    "command": [
                        "unfold E1_diese in |- *; apply (Prf_limit2 l).",
                        "VernacExtend",
                        "32e65b84617175e7bd57d3a95583469a1ac88421"
                    ]
                },
                {
                    "command": [
                        "unfold Limit_eq in |- *; simpl in |- *.",
                        "VernacExtend",
                        "a3a46dd95dcefe34f7c9fc1217f99afaf81708df"
                    ]
                },
                {
                    "command": [
                        "intro x; elim x; simpl in |- *.",
                        "VernacExtend",
                        "c3562075a9a2858c1f4c69a4044a639156e41920"
                    ]
                },
                {
                    "command": [
                        "apply Sym; apply H.",
                        "VernacExtend",
                        "a8f4e0175214b2262cb6cd2be4a230d48dda3638"
                    ]
                },
                {
                    "command": [
                        "apply Trans with ((q o E1_mor) o k (Witness l)).",
                        "VernacExtend",
                        "b18d5b08148655121fd67f9a354933196a95e749"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (q o E1_mor o k (Witness l)).",
                        "VernacExtend",
                        "0229234cd9e28592c6ebcdd3124c3ae9e27483aa"
                    ]
                },
                {
                    "command": [
                        "apply Comp_l.",
                        "VernacExtend",
                        "5455d6bdb34d7e111449cbfc5ea07ca403feee43"
                    ]
                },
                {
                    "command": [
                        "apply (EqC (Limiting_cone l) (PA_f (Witness l))).",
                        "VernacExtend",
                        "a8a93bcff056ca6aeb7a023c9b6e26d9d5e5ee94"
                    ]
                },
                {
                    "command": [
                        "apply Ass.",
                        "VernacExtend",
                        "745732c9901e4f904812f16f825942132db848c1"
                    ]
                },
                {
                    "command": [
                        "apply Comp_r; apply Sym; apply H.",
                        "VernacExtend",
                        "3a6a3c302c57496db1a837591849b0a462fa6bb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Prf_law1_fg",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros r h H; unfold Equalizer_eq in |- *.",
                        "VernacExtend",
                        "40bdd0dae10d72d87022fe7f3695cd512ba3fb08"
                    ]
                },
                {
                    "command": [
                        "intros i j; elim i; elim j; simpl in |- *.",
                        "VernacExtend",
                        "eb82ba7dc113d23d9a216bd7e96994e50b7d9c24"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Sym; trivial.",
                        "VernacExtend",
                        "b9c4e356dcc86c00657eec7ffa80eb594d5e1b88"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}