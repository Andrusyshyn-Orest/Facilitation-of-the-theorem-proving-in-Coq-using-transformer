{
    "filename": "CATEGORY_THEORY/LIMITS/CoLimit.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Limit.",
            "VernacRequire",
            "f952ace82bbb252c052537ad617dd57a310a9e9b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section def_cocone.",
            "VernacBeginSection",
            "1d95aa2ace322595494911816b624a4b5bd9e68d"
        ],
        [
            "Variables (J C : Category) (F : Functor J C) (c : C).",
            "VernacAssumption",
            "48f354ffa0761d22f25919b05d6392d70f3f049e"
        ],
        [
            "SubClass CoCone := NT F (Const J c).",
            "VernacDefinition",
            "e87401726cdeaec64ca3499d0549d9167d679748"
        ],
        [
            "Section cocone_nt.",
            "VernacBeginSection",
            "ae335a5fc34fe5f0c5e0b864cf8a9b018111d891"
        ],
        [
            "Variable T : forall a : J, F a --> c.",
            "VernacAssumption",
            "19c131761c0954a0a17e25abad28da59e44fde2f"
        ],
        [
            "Definition CoCone_law := forall (i j : J) (g : i --> j), FMor F g o T j =_S T i.",
            "VernacDefinition",
            "124ce30edb55cef0eb78074d61a129d53658184c"
        ],
        [
            "Lemma Prf_CoCone_nt_law : CoCone_law -> NT_law (G:=Const J c) T.",
            "VernacStartTheoremProof",
            "33ab38dbfc2aff1eec723c8fc8d1a65d89f08297"
        ],
        [
            "unfold NT_law in |- *; intros H a b f.",
            "VernacExtend",
            "40df5ee557caf2c03d6a0894cd53804010396c42"
        ],
        [
            "unfold FMor at 2 in |- *; simpl in |- *; unfold Const_mor in |- *.",
            "VernacExtend",
            "5f9bb4a812ea88fb4bd0df2893982b07a7320b86"
        ],
        [
            "apply Trans with (T a).",
            "VernacExtend",
            "1f418c27258c23a2d8d06b1c0d114a631e79c7ab"
        ],
        [
            "apply (H a b).",
            "VernacExtend",
            "223fdcb3c87966c97f2b642d193f12d8212064b8"
        ],
        [
            "apply Idr.",
            "VernacExtend",
            "065b91ed625fa820463937eb48686d897b72e45e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Coercion Prf_CoCone_nt_law : CoCone_law >-> NT_law.",
            "VernacCoercion",
            "2c45fda4cd81793815a7f5124ede4f346752e2fa"
        ],
        [
            "Variable p : CoCone_law.",
            "VernacAssumption",
            "f6574112385f34eafb8de142ade4ef777fca249d"
        ],
        [
            "Canonical Structure Build_CoCone : CoCone := Build_NT (Prf_CoCone_nt_law p).",
            "VernacDefinition",
            "2c82c0fbcf74f60e782b131d6828eebb0e782743"
        ],
        [
            "End cocone_nt.",
            "VernacEndSegment",
            "7da05fac1a57c4a81a115244230e1f01587049fe"
        ],
        [
            "Coercion Build_CoCone : CoCone_law >-> CoCone.",
            "VernacCoercion",
            "3ffdf8308a39f4c436b7ca421900b7f9297af993"
        ],
        [
            "Lemma Eq_coCone : forall tau : CoCone, CoCone_law (ApNT tau).",
            "VernacStartTheoremProof",
            "c7dd0e76d620c78c252efae883a2e1c07da70740"
        ],
        [
            "unfold CoCone_law in |- *; intros tau i j g.",
            "VernacExtend",
            "e6c6a42f73fb22920cbc4216cc920192a11914c0"
        ],
        [
            "apply Trans with (tau i o Id c).",
            "VernacExtend",
            "ef8e9da0b1aa6994c0d0487d7177062e4683abc0"
        ],
        [
            "apply (Prf_NT_law tau g).",
            "VernacExtend",
            "66dd29393a9cce94d1a3ea83db82b1725604a964"
        ],
        [
            "apply Idr1.",
            "VernacExtend",
            "09fc32baeead0cda83a15d475112c2996ba801e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Co_EqC : forall (tau : CoCone) (i j : J) (g : i --> j), FMor F g o tau j =_S tau i.",
            "VernacStartTheoremProof",
            "794afb421d2b54db17edac714ca71bc2900f01f9"
        ],
        [
            "exact Eq_coCone.",
            "VernacExtend",
            "9bcadc16f84c9fb9298b253addf22c7e3204c142"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Co_EqC1 : forall (tau : CoCone) (i j : J) (g : i --> j), tau i =_S FMor F g o tau j.",
            "VernacStartTheoremProof",
            "7287bc10d37cccbf45c46e86985bb0027f6e5153"
        ],
        [
            "intros; apply Sym; exact (Co_EqC tau (i:=i) (j:=j) g).",
            "VernacExtend",
            "1c6f931223267b91676802b76852f1d7934e7791"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End def_cocone.",
            "VernacEndSegment",
            "3245793b1e4111da70ae079810532608f1826d3b"
        ],
        [
            "Section colimit_def.",
            "VernacBeginSection",
            "8aa0933cf892354aedccabd1bf9530986d62a942"
        ],
        [
            "Variables (J C : Category) (F : Functor J C).",
            "VernacAssumption",
            "a4db6981ee0045af4b510ee2fe2de1bc6c435528"
        ],
        [
            "Section iscolimit_def.",
            "VernacBeginSection",
            "986521cdc115dfd18205139ec31f33ed15b376d7"
        ],
        [
            "Variables (colim : C) (nu : CoCone F colim).",
            "VernacAssumption",
            "4ecb8705cb2462e144e8f639f043ebf7c42365bf"
        ],
        [
            "Section colimit_laws.",
            "VernacBeginSection",
            "feff4bb33a4f9210b87536dc1353802df646c548"
        ],
        [
            "Variable cl_diese : forall c : C, CoCone F c -> (colim --> c).",
            "VernacAssumption",
            "9cee7a2b3aecaa1ac25845ecb5cc240d784e0ef2"
        ],
        [
            "Definition CoLimit_eq (c : C) (tau : CoCone F c) (g : colim --> c) := forall i : J, nu i o g =_S tau i.",
            "VernacDefinition",
            "76c96361db682792fbb5b748655fc86039a81659"
        ],
        [
            "Definition CoLimit_law1 := forall (c : C) (tau : CoCone F c), CoLimit_eq tau (cl_diese tau).",
            "VernacDefinition",
            "3e53896637288dac1f86fe9cd36a7827f4cb17ad"
        ],
        [
            "Definition CoLimit_law2 := forall (c : C) (tau : CoCone F c) (g : colim --> c), CoLimit_eq tau g -> g =_S cl_diese tau.",
            "VernacDefinition",
            "f7b2478853718cfb17475f3905a3cdfbaaf93582"
        ],
        [
            "End colimit_laws.",
            "VernacEndSegment",
            "30d16fbd4c3e0c859bc47f049b895b90207fcbed"
        ],
        [
            "Structure IsColimit : Type := {Colim_diese : forall c : C, CoCone F c -> (colim --> c); Prf_colimit1 : CoLimit_law1 Colim_diese; Prf_colimit2 : CoLimit_law2 Colim_diese}.",
            "VernacInductive",
            "01b56b16862afd8778350765a71d12524cf3cc98"
        ],
        [
            "Variable l : IsColimit.",
            "VernacAssumption",
            "847e199ecd23fecc93c17aef470159f7f3cbf93c"
        ],
        [
            "Lemma Cldiese_map : forall (c : C) (tau1 tau2 : CoCone F c), tau1 =_NT tau2 -> Colim_diese l tau1 =_S Colim_diese l tau2.",
            "VernacStartTheoremProof",
            "1b8037e04b6f57628bf9486c2f0b65ef3cfa0cdd"
        ],
        [
            "intros c tau1 tau2 p.",
            "VernacExtend",
            "70569755a735aada833394678b1abc47da77af0e"
        ],
        [
            "apply (Prf_colimit2 l (tau:=tau2) (g:=Colim_diese l tau1)).",
            "VernacExtend",
            "10f7ccce6f8f2c816cd66ca5a56393fbc529f154"
        ],
        [
            "unfold CoLimit_eq in |- *; intro i.",
            "VernacExtend",
            "d603469bdcf68bd68eed64ea7bb4589d8d6c58f0"
        ],
        [
            "apply Trans with (tau1 i).",
            "VernacExtend",
            "480ad088de71530bf987d6f3bdf554594ee20747"
        ],
        [
            "apply (Prf_colimit1 l tau1).",
            "VernacExtend",
            "46dd13e3158e7097caadbe6ffa29e79656bb20b8"
        ],
        [
            "apply (p i).",
            "VernacExtend",
            "32d8d841408f8042d1289be18455c06b6e3c4036"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End iscolimit_def.",
            "VernacEndSegment",
            "6ebd8c2ace91a54b911871ebed516675086810d1"
        ],
        [
            "Structure > Colimit : Type := {Colim : C; Limiting_cocone : CoCone F Colim; Prf_IsColimit :> IsColimit Limiting_cocone}.",
            "VernacInductive",
            "ca31fef8746e8517835426bb3d0cdd2ddbc39ccb"
        ],
        [
            "End colimit_def.",
            "VernacEndSegment",
            "ef74a0103d69cc10da2a5fd52c3dfb7f43f2f96f"
        ],
        [
            "Definition Cocomplete (C : Category) := forall (J : Category) (F : Functor J C), Colimit F.",
            "VernacDefinition",
            "e9b7afc9718a73b9cbc3f5d2db249f50b5469e0c"
        ]
    ],
    "proofs": [
        {
            "name": "Prf_CoCone_nt_law",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold NT_law in |- *; intros H a b f.",
                        "VernacExtend",
                        "40df5ee557caf2c03d6a0894cd53804010396c42"
                    ]
                },
                {
                    "command": [
                        "unfold FMor at 2 in |- *; simpl in |- *; unfold Const_mor in |- *.",
                        "VernacExtend",
                        "5f9bb4a812ea88fb4bd0df2893982b07a7320b86"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (T a).",
                        "VernacExtend",
                        "1f418c27258c23a2d8d06b1c0d114a631e79c7ab"
                    ]
                },
                {
                    "command": [
                        "apply (H a b).",
                        "VernacExtend",
                        "223fdcb3c87966c97f2b642d193f12d8212064b8"
                    ]
                },
                {
                    "command": [
                        "apply Idr.",
                        "VernacExtend",
                        "065b91ed625fa820463937eb48686d897b72e45e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Eq_coCone",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold CoCone_law in |- *; intros tau i j g.",
                        "VernacExtend",
                        "e6c6a42f73fb22920cbc4216cc920192a11914c0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (tau i o Id c).",
                        "VernacExtend",
                        "ef8e9da0b1aa6994c0d0487d7177062e4683abc0"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_NT_law tau g).",
                        "VernacExtend",
                        "66dd29393a9cce94d1a3ea83db82b1725604a964"
                    ]
                },
                {
                    "command": [
                        "apply Idr1.",
                        "VernacExtend",
                        "09fc32baeead0cda83a15d475112c2996ba801e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Co_EqC",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "exact Eq_coCone.",
                        "VernacExtend",
                        "9bcadc16f84c9fb9298b253addf22c7e3204c142"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Co_EqC1",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros; apply Sym; exact (Co_EqC tau (i:=i) (j:=j) g).",
                        "VernacExtend",
                        "1c6f931223267b91676802b76852f1d7934e7791"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Cldiese_map",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros c tau1 tau2 p.",
                        "VernacExtend",
                        "70569755a735aada833394678b1abc47da77af0e"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_colimit2 l (tau:=tau2) (g:=Colim_diese l tau1)).",
                        "VernacExtend",
                        "10f7ccce6f8f2c816cd66ca5a56393fbc529f154"
                    ]
                },
                {
                    "command": [
                        "unfold CoLimit_eq in |- *; intro i.",
                        "VernacExtend",
                        "d603469bdcf68bd68eed64ea7bb4589d8d6c58f0"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (tau1 i).",
                        "VernacExtend",
                        "480ad088de71530bf987d6f3bdf554594ee20747"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_colimit1 l tau1).",
                        "VernacExtend",
                        "46dd13e3158e7097caadbe6ffa29e79656bb20b8"
                    ]
                },
                {
                    "command": [
                        "apply (p i).",
                        "VernacExtend",
                        "32d8d841408f8042d1289be18455c06b6e3c4036"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}