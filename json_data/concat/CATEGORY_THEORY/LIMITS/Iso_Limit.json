{
    "filename": "CATEGORY_THEORY/LIMITS/Iso_Limit.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export SET.",
            "VernacRequire",
            "bb5ed82962b127579d22faa3fdfd2e9eafb86b5d"
        ],
        [
            "Require Export Limit.",
            "VernacRequire",
            "f952ace82bbb252c052537ad617dd57a310a9e9b"
        ],
        [
            "Require Export Map0_dup1.",
            "VernacRequire",
            "29cf5f8c2dfb0b9c65acfd0338f944bf0934f3c1"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section iso_cone.",
            "VernacBeginSection",
            "f9001d14937705f820f5d051e178de3a31916183"
        ],
        [
            "Variables (J C : Category) (F : Functor J C) (l : Limit F) (c : C).",
            "VernacAssumption",
            "b13355cf06706b123c5e702ff8de525f191a527f"
        ],
        [
            "Definition PhiCone_fun (tau : Cones c F) := Lim_diese l tau.",
            "VernacDefinition",
            "70cc32b94253d98abe58af76a7ea1e4660738819"
        ],
        [
            "Lemma PhiCone_map_law : Map_law''0 PhiCone_fun.",
            "VernacStartTheoremProof",
            "16f286476fa4adea78225d8152c5c8c8810bb04d"
        ],
        [
            "unfold Map_law''0, PhiCone_fun in |- *; simpl in |- *.",
            "VernacExtend",
            "4f710cdbdab874d5597e996e57bc0e196cda9983"
        ],
        [
            "intros T1 T2 H.",
            "VernacExtend",
            "f4cbfbf5a396432c15b5aabf513079d1c9a5802b"
        ],
        [
            "apply (Ldiese_map l); trivial.",
            "VernacExtend",
            "85cdab083fe7ce7e9337a854578b5e1cd96967a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure PhiCone_map := Build_Map''0 PhiCone_map_law.",
            "VernacDefinition",
            "ee12026202c183cddffe0b703475af1638edb398"
        ],
        [
            "Section phicone_1_fun_def.",
            "VernacBeginSection",
            "3ede68d7d08be038c9d1582286218a8b9f7566c9"
        ],
        [
            "Variable f : c --> Lim l.",
            "VernacAssumption",
            "d1168debf5f179775c1ccd5e49c224105ae677c8"
        ],
        [
            "Definition PhiCone_1_fun_tau (i : J) := f o Limiting_cone l i.",
            "VernacDefinition",
            "6c150f6aa901b8be79d6bc79f20d06da7fabbd32"
        ],
        [
            "Lemma PhiCone_1_fun_cone_law : Cone_law PhiCone_1_fun_tau.",
            "VernacStartTheoremProof",
            "27d49fce176c36b5a2b3d50d74d217dc89bb8ea5"
        ],
        [
            "unfold Cone_law, PhiCone_1_fun_tau in |- *; simpl in |- *.",
            "VernacExtend",
            "e7741361d0079d7b48355c5972e74ceebcd70244"
        ],
        [
            "intros i j g.",
            "VernacExtend",
            "c95c1520b005abcf29a4b4b13be3f6f241cc88b9"
        ],
        [
            "apply Trans with (f o Limiting_cone l i o FMor F g).",
            "VernacExtend",
            "cbf0e3c1d8eb169692d05599cb9d022021c79631"
        ],
        [
            "apply Comp_l; apply (EqC (Limiting_cone l) g).",
            "VernacExtend",
            "b02f4b80c2e277f177eff7761a5fe9af50b97815"
        ],
        [
            "apply Ass.",
            "VernacExtend",
            "745732c9901e4f904812f16f825942132db848c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure PhiCone_1_fun : Cones c F := PhiCone_1_fun_cone_law.",
            "VernacDefinition",
            "d88f56361d67a189767ed9856a5e24fbbfb389ec"
        ],
        [
            "End phicone_1_fun_def.",
            "VernacEndSegment",
            "00b5a82f5369d35025e4f9f81e28d4981f927f34"
        ],
        [
            "Lemma PhiCone_1_map_law : Map_law0'' PhiCone_1_fun.",
            "VernacStartTheoremProof",
            "938b55a9f8d2b4a84727715bdc98e5425d2a07f1"
        ],
        [
            "unfold Map_law0'', PhiCone_1_fun in |- *.",
            "VernacExtend",
            "82af67cfe02be783d611387d77efff83de8cb962"
        ],
        [
            "intros f g H; simpl in |- *.",
            "VernacExtend",
            "027b0b1e530ae17d0be9157efa177a8a9110f0d2"
        ],
        [
            "unfold Equal_NT in |- *; simpl in |- *.",
            "VernacExtend",
            "0c2654eae389ef45dae11d69b25d85bb9ddabff7"
        ],
        [
            "unfold PhiCone_1_fun_tau in |- *; intro i.",
            "VernacExtend",
            "ae2cc9f39b9296ae9ce441f55ac8dc0e941b1bf0"
        ],
        [
            "apply Comp_r; trivial.",
            "VernacExtend",
            "c3c3e476e16b74dd40d97d86e934ed506f9daa72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure PhiCone_1_map : Map0'' (c --> Lim l) (Cones c F) := PhiCone_1_map_law.",
            "VernacDefinition",
            "6702911bb387d90c3366bec5be21124d1720c35d"
        ],
        [
            "Lemma Lim_areIso : AreBij0'' PhiCone_1_map PhiCone_map.",
            "VernacStartTheoremProof",
            "cb14e47d8bbdc3d0bba5870f05188b6948accf9c"
        ],
        [
            "unfold AreBij0'' in |- *; split.",
            "VernacExtend",
            "09eed6ccd2e714fe89d905a31812bb5632d01cb3"
        ],
        [
            "intro f; simpl in |- *; unfold PhiCone_fun in |- *.",
            "VernacExtend",
            "9a2e88d4f2cfc80384100b4891618bdc3e792489"
        ],
        [
            "apply Sym; apply (Prf_limit2 l).",
            "VernacExtend",
            "bb7ef637e12d85b5fd5900c1dc06c9d88ded4f53"
        ],
        [
            "unfold Limit_eq, PhiCone_1_fun in |- *; simpl in |- *.",
            "VernacExtend",
            "23a3b05ee08cc8b236e5bcebdf1b5d1d086fc802"
        ],
        [
            "intro i; apply Refl.",
            "VernacExtend",
            "9f487ddcb8e10c61c62d6333849648c47890a6a3"
        ],
        [
            "intro tau; simpl in |- *; unfold Equal_NT in |- *.",
            "VernacExtend",
            "4e555e64b7d86ebbf5d3c73b4b7ef60e15c5ea70"
        ],
        [
            "unfold PhiCone_1_fun, PhiCone_fun in |- *; simpl in |- *.",
            "VernacExtend",
            "678569f98c4e766caaeff709170202c49451f737"
        ],
        [
            "intro i; unfold PhiCone_1_fun_tau in |- *.",
            "VernacExtend",
            "fd4dbabee59b6715634b93826d275fa1f602dfea"
        ],
        [
            "apply (Prf_limit1 l tau i).",
            "VernacExtend",
            "bb74f1138f3dba4cd82d3d635400f462f8ac57dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End iso_cone.",
            "VernacEndSegment",
            "37e3e5607be1ec07c7ff3de3ebc3b3438ae9deb4"
        ]
    ],
    "proofs": [
        {
            "name": "PhiCone_map_law",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "unfold Map_law''0, PhiCone_fun in |- *; simpl in |- *.",
                        "VernacExtend",
                        "4f710cdbdab874d5597e996e57bc0e196cda9983"
                    ]
                },
                {
                    "command": [
                        "intros T1 T2 H.",
                        "VernacExtend",
                        "f4cbfbf5a396432c15b5aabf513079d1c9a5802b"
                    ]
                },
                {
                    "command": [
                        "apply (Ldiese_map l); trivial.",
                        "VernacExtend",
                        "85cdab083fe7ce7e9337a854578b5e1cd96967a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PhiCone_1_fun_cone_law",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "unfold Cone_law, PhiCone_1_fun_tau in |- *; simpl in |- *.",
                        "VernacExtend",
                        "e7741361d0079d7b48355c5972e74ceebcd70244"
                    ]
                },
                {
                    "command": [
                        "intros i j g.",
                        "VernacExtend",
                        "c95c1520b005abcf29a4b4b13be3f6f241cc88b9"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (f o Limiting_cone l i o FMor F g).",
                        "VernacExtend",
                        "cbf0e3c1d8eb169692d05599cb9d022021c79631"
                    ]
                },
                {
                    "command": [
                        "apply Comp_l; apply (EqC (Limiting_cone l) g).",
                        "VernacExtend",
                        "b02f4b80c2e277f177eff7761a5fe9af50b97815"
                    ]
                },
                {
                    "command": [
                        "apply Ass.",
                        "VernacExtend",
                        "745732c9901e4f904812f16f825942132db848c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PhiCone_1_map_law",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold Map_law0'', PhiCone_1_fun in |- *.",
                        "VernacExtend",
                        "82af67cfe02be783d611387d77efff83de8cb962"
                    ]
                },
                {
                    "command": [
                        "intros f g H; simpl in |- *.",
                        "VernacExtend",
                        "027b0b1e530ae17d0be9157efa177a8a9110f0d2"
                    ]
                },
                {
                    "command": [
                        "unfold Equal_NT in |- *; simpl in |- *.",
                        "VernacExtend",
                        "0c2654eae389ef45dae11d69b25d85bb9ddabff7"
                    ]
                },
                {
                    "command": [
                        "unfold PhiCone_1_fun_tau in |- *; intro i.",
                        "VernacExtend",
                        "ae2cc9f39b9296ae9ce441f55ac8dc0e941b1bf0"
                    ]
                },
                {
                    "command": [
                        "apply Comp_r; trivial.",
                        "VernacExtend",
                        "c3c3e476e16b74dd40d97d86e934ed506f9daa72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Lim_areIso",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold AreBij0'' in |- *; split.",
                        "VernacExtend",
                        "09eed6ccd2e714fe89d905a31812bb5632d01cb3"
                    ]
                },
                {
                    "command": [
                        "intro f; simpl in |- *; unfold PhiCone_fun in |- *.",
                        "VernacExtend",
                        "9a2e88d4f2cfc80384100b4891618bdc3e792489"
                    ]
                },
                {
                    "command": [
                        "apply Sym; apply (Prf_limit2 l).",
                        "VernacExtend",
                        "bb7ef637e12d85b5fd5900c1dc06c9d88ded4f53"
                    ]
                },
                {
                    "command": [
                        "unfold Limit_eq, PhiCone_1_fun in |- *; simpl in |- *.",
                        "VernacExtend",
                        "23a3b05ee08cc8b236e5bcebdf1b5d1d086fc802"
                    ]
                },
                {
                    "command": [
                        "intro i; apply Refl.",
                        "VernacExtend",
                        "9f487ddcb8e10c61c62d6333849648c47890a6a3"
                    ]
                },
                {
                    "command": [
                        "intro tau; simpl in |- *; unfold Equal_NT in |- *.",
                        "VernacExtend",
                        "4e555e64b7d86ebbf5d3c73b4b7ef60e15c5ea70"
                    ]
                },
                {
                    "command": [
                        "unfold PhiCone_1_fun, PhiCone_fun in |- *; simpl in |- *.",
                        "VernacExtend",
                        "678569f98c4e766caaeff709170202c49451f737"
                    ]
                },
                {
                    "command": [
                        "intro i; unfold PhiCone_1_fun_tau in |- *.",
                        "VernacExtend",
                        "fd4dbabee59b6715634b93826d275fa1f602dfea"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_limit1 l tau i).",
                        "VernacExtend",
                        "bb74f1138f3dba4cd82d3d635400f462f8ac57dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}