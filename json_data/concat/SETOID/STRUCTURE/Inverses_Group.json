{
    "filename": "SETOID/STRUCTURE/Inverses_Group.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Export Group.",
            "VernacRequire",
            "687ff69a3bffa652b288e6b5fa9cd02469e47760"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Section inv_def.",
            "VernacBeginSection",
            "fc739e49181bba72811215cdde7a2e17d5a7e8b6"
        ],
        [
            "Variable A : Monoid.",
            "VernacAssumption",
            "69350867eb69182541004095154161e7a1ca8f89"
        ],
        [
            "Structure Inverses : Type := {Inv_elt_l : A; Inv_elt_r : A; Prf_invs1 : Inverses_rel Inv_elt_l Inv_elt_r; Prf_invs2 : Inverses_rel Inv_elt_r Inv_elt_l}.",
            "VernacInductive",
            "9e8e919ec6969b5bf400f416b613d9f6b4482be5"
        ],
        [
            "Definition Inverses_eq (x y : Inverses) := Inv_elt_l x =_S Inv_elt_l y.",
            "VernacDefinition",
            "51cfe245e493501a48b1fd4e42eca0efe32b6dbf"
        ],
        [
            "Lemma Inverses_equiv : Equivalence Inverses_eq.",
            "VernacStartTheoremProof",
            "e33aae2bc94d66c50ee359f836f5b0a12c5337e0"
        ],
        [
            "apply Build_Equivalence.",
            "VernacExtend",
            "6179e27dcd740b742a59fad768ff2e759dba2ba2"
        ],
        [
            "unfold Reflexive in |- *.",
            "VernacExtend",
            "68bc9355fdb3e158c6fb398c30a327ea5454574d"
        ],
        [
            "intro x; unfold Inverses_eq in |- *.",
            "VernacExtend",
            "83f2f89bd05df85ecc0cfdfaa59fda079156e422"
        ],
        [
            "apply Refl.",
            "VernacExtend",
            "64c21b04c4d864da74440455ec9ef517f0f4452a"
        ],
        [
            "apply Build_Partial_equivalence.",
            "VernacExtend",
            "5de4c099bba37baf71314284222f46bb7a8fa46f"
        ],
        [
            "unfold Transitive in |- *.",
            "VernacExtend",
            "c59dd7be648cd1b1f5f87504c548ca5d849f47cf"
        ],
        [
            "intros x y z H1 H2; unfold Inverses_eq in |- *.",
            "VernacExtend",
            "27e5164bae337aea811eae6ef8d1aea69402f028"
        ],
        [
            "apply Trans with (Inv_elt_l y); assumption.",
            "VernacExtend",
            "7ca971e75c17953280be85fb4edfe90f1d697276"
        ],
        [
            "unfold Symmetric in |- *.",
            "VernacExtend",
            "50bf97f5ca1885ff59e48f2c34c387a6fc3d5814"
        ],
        [
            "intros x y H; unfold Inverses_eq in |- *.",
            "VernacExtend",
            "e8afc6dc206c36d06c44eda7d7e22082f9b8c626"
        ],
        [
            "apply Sym; assumption.",
            "VernacExtend",
            "7f514752cbb1b84da972eb3638d8a2ed2a03949b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Inverses_setoid : Setoid := Inverses_equiv.",
            "VernacDefinition",
            "295b7040bea7a5d24970a42086a741a9f97e80d1"
        ],
        [
            "Lemma Eq_abb'a' : forall a b a' b' : A, Inverses_rel a a' -> Inverses_rel b b' -> Inverses_rel (a +_M b) (b' +_M a').",
            "VernacStartTheoremProof",
            "d0d42fdb3428006509c3f7440396dc691d75e096"
        ],
        [
            "intros a b a' b' i j.",
            "VernacExtend",
            "ef7c2b724a9fbe58607776e83ea6e55e3b211eee"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "apply Trans with (a +_M (b +_M (b' +_M a'))).",
            "VernacExtend",
            "9a43022c9bebebc589504feeefba4929d068bb9e"
        ],
        [
            "apply Mass1.",
            "VernacExtend",
            "fc9c371d5bb721d72dbf3e798b7fc54e613f6bd2"
        ],
        [
            "apply Trans with (a +_M a').",
            "VernacExtend",
            "232a2f9ddbe180d9652b5de821f422503987a073"
        ],
        [
            "apply (Map2_l (Mop A) (b1:=b +_M (b' +_M a')) (b2:=a') a).",
            "VernacExtend",
            "db2a45d88ad0f653640003dbe2d12bfbf46c88d6"
        ],
        [
            "apply Trans with (b +_M b' +_M a').",
            "VernacExtend",
            "5e15828430f9632fe94484e951cf5538eb18cd9e"
        ],
        [
            "apply Mass.",
            "VernacExtend",
            "af173b9e105d17af8db1c5e2bbd652b8679304d2"
        ],
        [
            "apply Trans with (Munit A +_M a').",
            "VernacExtend",
            "9f5cb2126c99515892620eac98178026c7279f51"
        ],
        [
            "apply (Map2_r (Mop A) (a1:=b +_M b') (a2:=Munit A) a').",
            "VernacExtend",
            "e002121719b791a141ad3e8c19f4fa61b146d6b3"
        ],
        [
            "apply j.",
            "VernacExtend",
            "f352e66361d2d434dfc6ca97a192a87dedb85399"
        ],
        [
            "apply Midl.",
            "VernacExtend",
            "9f30f1354ad3848faee452807a11d750060a260b"
        ],
        [
            "apply i.",
            "VernacExtend",
            "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section inverses_comp_def.",
            "VernacBeginSection",
            "43460cf72e7457a94e1071164500db2688552e56"
        ],
        [
            "Variable x y : Inverses_setoid.",
            "VernacAssumption",
            "0ae8702b2940569300a321734de2d44772953809"
        ],
        [
            "Definition Inv_comp_elt_l := Inv_elt_l x +_M Inv_elt_l y.",
            "VernacDefinition",
            "9c7c35c67d29b20c2a985c514af30c13465c68d3"
        ],
        [
            "Definition Inv_comp_elt_r := Inv_elt_r y +_M Inv_elt_r x.",
            "VernacDefinition",
            "d89bf8245848a3488a0e6af59d22aa5b653aa329"
        ],
        [
            "Lemma Inv_comp_invs1 : Inverses_rel Inv_comp_elt_l Inv_comp_elt_r.",
            "VernacStartTheoremProof",
            "a8c8d8a4e5e2c102e2e84f3b566402cc41624a0e"
        ],
        [
            "exact (Eq_abb'a' (Prf_invs1 x) (Prf_invs1 y)).",
            "VernacExtend",
            "72e6c46401f3e4dae3578b52ab35fa7af1314dd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inv_comp_invs2 : Inverses_rel Inv_comp_elt_r Inv_comp_elt_l.",
            "VernacStartTheoremProof",
            "434c62862ab923d5874181eb67380bc01b964981"
        ],
        [
            "exact (Eq_abb'a' (Prf_invs2 y) (Prf_invs2 x)).",
            "VernacExtend",
            "2bbaf26a0f4f6edde2467f4e17e0df61232f4762"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Inverses_comp : Inverses_setoid := Build_Inverses Inv_comp_invs1 Inv_comp_invs2.",
            "VernacDefinition",
            "0bd3f4eaef813d4eeea955c6c6d090252c7f7da8"
        ],
        [
            "End inverses_comp_def.",
            "VernacEndSegment",
            "b6a4583d0888a49de8a6923043d92b74afc87b15"
        ],
        [
            "Lemma Inverses_congl : Map2_congl_law Inverses_comp.",
            "VernacStartTheoremProof",
            "c6a5c341f447e3602829cebce07c9108d8c5cc28"
        ],
        [
            "unfold Map2_congl_law in |- *.",
            "VernacExtend",
            "42ed9ee763b8edd9091c61cd30415d165adaeb11"
        ],
        [
            "intros x y z.",
            "VernacExtend",
            "8357c7ce661033f932c65582aab008de3b5d8530"
        ],
        [
            "elim x; elim y; elim z; simpl in |- *.",
            "VernacExtend",
            "c8fb10e206e9d4566fe3e883cad208ed317528b3"
        ],
        [
            "intros a a' p p' a0 a0' p0 p0' a1 a1' p1 p1' H.",
            "VernacExtend",
            "f487d8c1df611f1fe66b610aae72becbb37ce227"
        ],
        [
            "unfold Inv_comp_elt_l, Inv_comp_elt_r in |- *; simpl in |- *.",
            "VernacExtend",
            "2bdd109121f9fafa08120cec3e9360a418ec7e6d"
        ],
        [
            "apply (Prf_map2_congl (Mop A) (b1:=a1) (b2:=a0) a); trivial.",
            "VernacExtend",
            "4db7354c3d091d02c7a7c14dfdc01bc20989f21e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inverses_congr : Map2_congr_law Inverses_comp.",
            "VernacStartTheoremProof",
            "8dcf911d4e43c212cea32e699d707ab5f3a28f05"
        ],
        [
            "unfold Map2_congr_law in |- *; simple induction a1; simple induction a2; simpl in |- *.",
            "VernacExtend",
            "b1e15ef0c648ca8a9f4fe39965e10a32bd72fe1f"
        ],
        [
            "intros b0 b0' p0 p0' z; elim z.",
            "VernacExtend",
            "b7234514376aa7f9094d6f596d405a5e93f2eddc"
        ],
        [
            "intros b1 b1' p1 p1' H.",
            "VernacExtend",
            "bf583bb42b0f59879faf76cb66daecfe3fed1631"
        ],
        [
            "unfold Inv_comp_elt_l, Inv_comp_elt_r in |- *; simpl in |- *.",
            "VernacExtend",
            "2bdd109121f9fafa08120cec3e9360a418ec7e6d"
        ],
        [
            "apply (Prf_map2_congr (Mop A) (a1:=Inv_elt_l0) (a2:=b0) b1); trivial.",
            "VernacExtend",
            "63c18c18297ca2815ce3b392fe9e0f818df1facc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Inverses_op := Build_Map2 Inverses_congl Inverses_congr.",
            "VernacDefinition",
            "903c555567caf478344c396e2624b6835d28a003"
        ],
        [
            "Lemma Mass_Inverses : Monoid_ass Inverses_op.",
            "VernacStartTheoremProof",
            "46d03bbb0b1e081f06eebd8aafbd8f0ba07571d8"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simple induction x; simple induction y; simple induction z; simpl in |- *; intros.",
            "VernacExtend",
            "1d7f4653fc2dfae0588eb807254fe75e172313a2"
        ],
        [
            "unfold Inverses_comp, Inv_comp_elt_l, Inv_comp_elt_r in |- *; simpl in |- *.",
            "VernacExtend",
            "aba45807e4ced14fc9c1f47db87329993d86433f"
        ],
        [
            "apply (Prf_monoid_ass Inv_elt_l0 Inv_elt_l1 Inv_elt_l2).",
            "VernacExtend",
            "d2234afa27cfcd3cb382fcbb787ffbbbef54d33e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inverses_unit_invs : Inverses_rel (Munit A) (Munit A).",
            "VernacStartTheoremProof",
            "24902fec3d60f0138094562702bf8b2584e46bae"
        ],
        [
            "apply (Prf_monoid_idl (Munit A)).",
            "VernacExtend",
            "bc5c0caa5bbcc4baa89e37bc16636e90af533dce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Inverses_unit := Build_Inverses Inverses_unit_invs Inverses_unit_invs.",
            "VernacDefinition",
            "51d6b0dc6e5e809978730467e976e350f8bc8e5b"
        ],
        [
            "Lemma Midl_Inverses : Monoid_idl Inverses_op Inverses_unit.",
            "VernacStartTheoremProof",
            "be369c387c0029af1a0733790be91d2b23d70efd"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simple induction x; simpl in |- *; intros.",
            "VernacExtend",
            "73122fa49e4bd10cca1bb4c82293f020cdf8a3ee"
        ],
        [
            "unfold Inverses_eq, Inv_comp_elt_l in |- *; simpl in |- *.",
            "VernacExtend",
            "5ec903b365997da25935901203070a5ae9e5a2cb"
        ],
        [
            "apply (Prf_monoid_idl Inv_elt_l0).",
            "VernacExtend",
            "d3e8d797509c1c82a1b08b70405f764ad3d7fa0e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Midr_Inverses : Monoid_idr Inverses_op Inverses_unit.",
            "VernacStartTheoremProof",
            "14b88334d41670f23e4dfa770e7d338c3f8382e0"
        ],
        [
            "red in |- *.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "simple induction x; simpl in |- *; intros.",
            "VernacExtend",
            "73122fa49e4bd10cca1bb4c82293f020cdf8a3ee"
        ],
        [
            "apply (Prf_monoid_idr Inv_elt_l0).",
            "VernacExtend",
            "92f60fef2d36daf28a5bb8ac0ff9423c9ddd2b0c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Inverses_Monoid := Build_Monoid Mass_Inverses Midl_Inverses Midr_Inverses.",
            "VernacDefinition",
            "7d226371da22b96b5b953bd64ca34580c8400d70"
        ],
        [
            "Definition Opposite (x : Inverses_setoid) : Inverses_setoid := Build_Inverses (Prf_invs2 x) (Prf_invs1 x).",
            "VernacDefinition",
            "4cf38d181042e39da349038bc2670ea84fe684fd"
        ],
        [
            "Lemma Opposite_map_law : Map_law Opposite.",
            "VernacStartTheoremProof",
            "94ccbc15731ac8c7be395567fab39986ec14011f"
        ],
        [
            "red in |- *; intros x y.",
            "VernacExtend",
            "e59e04c1dcff076fc80ec2ec65fdaeb9b4f77572"
        ],
        [
            "elim x; elim y; simpl in |- *; unfold Inverses_eq in |- *; simpl in |- *.",
            "VernacExtend",
            "b7d1d4004e286b7185507bd92a7928ba92f06052"
        ],
        [
            "intros a a' aa' a'a b b' bb' b'b ba.",
            "VernacExtend",
            "9ec366eedd308679d15373ad9315efc7e2dfd2f2"
        ],
        [
            "apply Trans with (b' +_M Munit A).",
            "VernacExtend",
            "eba9d32f13c53d8ace641d94f846ab0787402d9f"
        ],
        [
            "apply Midr.",
            "VernacExtend",
            "856031b95ac563a86b44911140c43c334f427fc6"
        ],
        [
            "apply Trans with (b' +_M (a +_M a')).",
            "VernacExtend",
            "ffe776d711f56b9fc962749b32d6fd3dd955d489"
        ],
        [
            "unfold ApMop in |- *; apply Map2_l.",
            "VernacExtend",
            "abaf02feae7b26ac2712ff12c1afc01281861a6e"
        ],
        [
            "apply Sym; trivial.",
            "VernacExtend",
            "b9c4e356dcc86c00657eec7ffa80eb594d5e1b88"
        ],
        [
            "apply Trans with (y := b' +_M a +_M a').",
            "VernacExtend",
            "95e1118918a310b157fb6ebd1161ee67db794c15"
        ],
        [
            "apply Mass.",
            "VernacExtend",
            "af173b9e105d17af8db1c5e2bbd652b8679304d2"
        ],
        [
            "apply Trans with (Munit A +_M a').",
            "VernacExtend",
            "9f5cb2126c99515892620eac98178026c7279f51"
        ],
        [
            "2: apply Midl.",
            "VernacExtend",
            "716341f21f3940af2b94c87593278d5aa6e35e92"
        ],
        [
            "unfold ApMop in |- *; apply Map2_r.",
            "VernacExtend",
            "990e39b91f3b2ca4bb6f9657e725810602cf4ed4"
        ],
        [
            "apply Trans with (b' +_M b).",
            "VernacExtend",
            "9d8f33c7c3d100934be9cbdd14aef16374629305"
        ],
        [
            "2: assumption.",
            "VernacExtend",
            "733bef30779add23f5d2d5ba011ac50b88aa9b5a"
        ],
        [
            "unfold ApMop in |- *; apply Map2_l.",
            "VernacExtend",
            "abaf02feae7b26ac2712ff12c1afc01281861a6e"
        ],
        [
            "apply Sym; trivial.",
            "VernacExtend",
            "b9c4e356dcc86c00657eec7ffa80eb594d5e1b88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Opposite_map := Build_Map Opposite_map_law.",
            "VernacDefinition",
            "df614f216994973c2147c238b348e5a172331c75"
        ],
        [
            "Lemma Inverses_invl : Group_invl Opposite_map.",
            "VernacStartTheoremProof",
            "fa38cbd46cca49307e88f5a76ba25e9e426a3c42"
        ],
        [
            "red in |- *; simple induction x; trivial.",
            "VernacExtend",
            "1825c3ca76ad72420b2712158512baeb0f9d3e1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inverses_invr : Group_invr Opposite_map.",
            "VernacStartTheoremProof",
            "7a2c048577abc6aae6eaa42214a7fa22dc58b0f9"
        ],
        [
            "red in |- *; simple induction x; trivial.",
            "VernacExtend",
            "1825c3ca76ad72420b2712158512baeb0f9d3e1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical Structure Inverses_group := Build_Group Inverses_invl Inverses_invr.",
            "VernacDefinition",
            "0360138d1e5f1394e4b05cbc45885c614954dbc0"
        ],
        [
            "End inv_def.",
            "VernacEndSegment",
            "35af832113be8a7f2a585b2245286d727c9b037c"
        ]
    ],
    "proofs": [
        {
            "name": "Inverses_equiv",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "apply Build_Equivalence.",
                        "VernacExtend",
                        "6179e27dcd740b742a59fad768ff2e759dba2ba2"
                    ]
                },
                {
                    "command": [
                        "unfold Reflexive in |- *.",
                        "VernacExtend",
                        "68bc9355fdb3e158c6fb398c30a327ea5454574d"
                    ]
                },
                {
                    "command": [
                        "intro x; unfold Inverses_eq in |- *.",
                        "VernacExtend",
                        "83f2f89bd05df85ecc0cfdfaa59fda079156e422"
                    ]
                },
                {
                    "command": [
                        "apply Refl.",
                        "VernacExtend",
                        "64c21b04c4d864da74440455ec9ef517f0f4452a"
                    ]
                },
                {
                    "command": [
                        "apply Build_Partial_equivalence.",
                        "VernacExtend",
                        "5de4c099bba37baf71314284222f46bb7a8fa46f"
                    ]
                },
                {
                    "command": [
                        "unfold Transitive in |- *.",
                        "VernacExtend",
                        "c59dd7be648cd1b1f5f87504c548ca5d849f47cf"
                    ]
                },
                {
                    "command": [
                        "intros x y z H1 H2; unfold Inverses_eq in |- *.",
                        "VernacExtend",
                        "27e5164bae337aea811eae6ef8d1aea69402f028"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Inv_elt_l y); assumption.",
                        "VernacExtend",
                        "7ca971e75c17953280be85fb4edfe90f1d697276"
                    ]
                },
                {
                    "command": [
                        "unfold Symmetric in |- *.",
                        "VernacExtend",
                        "50bf97f5ca1885ff59e48f2c34c387a6fc3d5814"
                    ]
                },
                {
                    "command": [
                        "intros x y H; unfold Inverses_eq in |- *.",
                        "VernacExtend",
                        "e8afc6dc206c36d06c44eda7d7e22082f9b8c626"
                    ]
                },
                {
                    "command": [
                        "apply Sym; assumption.",
                        "VernacExtend",
                        "7f514752cbb1b84da972eb3638d8a2ed2a03949b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Eq_abb'a'",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros a b a' b' i j.",
                        "VernacExtend",
                        "ef7c2b724a9fbe58607776e83ea6e55e3b211eee"
                    ]
                },
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (a +_M (b +_M (b' +_M a'))).",
                        "VernacExtend",
                        "9a43022c9bebebc589504feeefba4929d068bb9e"
                    ]
                },
                {
                    "command": [
                        "apply Mass1.",
                        "VernacExtend",
                        "fc9c371d5bb721d72dbf3e798b7fc54e613f6bd2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (a +_M a').",
                        "VernacExtend",
                        "232a2f9ddbe180d9652b5de821f422503987a073"
                    ]
                },
                {
                    "command": [
                        "apply (Map2_l (Mop A) (b1:=b +_M (b' +_M a')) (b2:=a') a).",
                        "VernacExtend",
                        "db2a45d88ad0f653640003dbe2d12bfbf46c88d6"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (b +_M b' +_M a').",
                        "VernacExtend",
                        "5e15828430f9632fe94484e951cf5538eb18cd9e"
                    ]
                },
                {
                    "command": [
                        "apply Mass.",
                        "VernacExtend",
                        "af173b9e105d17af8db1c5e2bbd652b8679304d2"
                    ]
                },
                {
                    "command": [
                        "apply Trans with (Munit A +_M a').",
                        "VernacExtend",
                        "9f5cb2126c99515892620eac98178026c7279f51"
                    ]
                },
                {
                    "command": [
                        "apply (Map2_r (Mop A) (a1:=b +_M b') (a2:=Munit A) a').",
                        "VernacExtend",
                        "e002121719b791a141ad3e8c19f4fa61b146d6b3"
                    ]
                },
                {
                    "command": [
                        "apply j.",
                        "VernacExtend",
                        "f352e66361d2d434dfc6ca97a192a87dedb85399"
                    ]
                },
                {
                    "command": [
                        "apply Midl.",
                        "VernacExtend",
                        "9f30f1354ad3848faee452807a11d750060a260b"
                    ]
                },
                {
                    "command": [
                        "apply i.",
                        "VernacExtend",
                        "2c918aa2f8724ebf7e0b8c3a8d8e04fb142be162"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inv_comp_invs1",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "exact (Eq_abb'a' (Prf_invs1 x) (Prf_invs1 y)).",
                        "VernacExtend",
                        "72e6c46401f3e4dae3578b52ab35fa7af1314dd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inv_comp_invs2",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "exact (Eq_abb'a' (Prf_invs2 y) (Prf_invs2 x)).",
                        "VernacExtend",
                        "2bbaf26a0f4f6edde2467f4e17e0df61232f4762"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inverses_congl",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "unfold Map2_congl_law in |- *.",
                        "VernacExtend",
                        "42ed9ee763b8edd9091c61cd30415d165adaeb11"
                    ]
                },
                {
                    "command": [
                        "intros x y z.",
                        "VernacExtend",
                        "8357c7ce661033f932c65582aab008de3b5d8530"
                    ]
                },
                {
                    "command": [
                        "elim x; elim y; elim z; simpl in |- *.",
                        "VernacExtend",
                        "c8fb10e206e9d4566fe3e883cad208ed317528b3"
                    ]
                },
                {
                    "command": [
                        "intros a a' p p' a0 a0' p0 p0' a1 a1' p1 p1' H.",
                        "VernacExtend",
                        "f487d8c1df611f1fe66b610aae72becbb37ce227"
                    ]
                },
                {
                    "command": [
                        "unfold Inv_comp_elt_l, Inv_comp_elt_r in |- *; simpl in |- *.",
                        "VernacExtend",
                        "2bdd109121f9fafa08120cec3e9360a418ec7e6d"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_map2_congl (Mop A) (b1:=a1) (b2:=a0) a); trivial.",
                        "VernacExtend",
                        "4db7354c3d091d02c7a7c14dfdc01bc20989f21e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inverses_congr",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "unfold Map2_congr_law in |- *; simple induction a1; simple induction a2; simpl in |- *.",
                        "VernacExtend",
                        "b1e15ef0c648ca8a9f4fe39965e10a32bd72fe1f"
                    ]
                },
                {
                    "command": [
                        "intros b0 b0' p0 p0' z; elim z.",
                        "VernacExtend",
                        "b7234514376aa7f9094d6f596d405a5e93f2eddc"
                    ]
                },
                {
                    "command": [
                        "intros b1 b1' p1 p1' H.",
                        "VernacExtend",
                        "bf583bb42b0f59879faf76cb66daecfe3fed1631"
                    ]
                },
                {
                    "command": [
                        "unfold Inv_comp_elt_l, Inv_comp_elt_r in |- *; simpl in |- *.",
                        "VernacExtend",
                        "2bdd109121f9fafa08120cec3e9360a418ec7e6d"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_map2_congr (Mop A) (a1:=Inv_elt_l0) (a2:=b0) b1); trivial.",
                        "VernacExtend",
                        "63c18c18297ca2815ce3b392fe9e0f818df1facc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Mass_Inverses",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simple induction x; simple induction y; simple induction z; simpl in |- *; intros.",
                        "VernacExtend",
                        "1d7f4653fc2dfae0588eb807254fe75e172313a2"
                    ]
                },
                {
                    "command": [
                        "unfold Inverses_comp, Inv_comp_elt_l, Inv_comp_elt_r in |- *; simpl in |- *.",
                        "VernacExtend",
                        "aba45807e4ced14fc9c1f47db87329993d86433f"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_monoid_ass Inv_elt_l0 Inv_elt_l1 Inv_elt_l2).",
                        "VernacExtend",
                        "d2234afa27cfcd3cb382fcbb787ffbbbef54d33e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inverses_unit_invs",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "apply (Prf_monoid_idl (Munit A)).",
                        "VernacExtend",
                        "bc5c0caa5bbcc4baa89e37bc16636e90af533dce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Midl_Inverses",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simple induction x; simpl in |- *; intros.",
                        "VernacExtend",
                        "73122fa49e4bd10cca1bb4c82293f020cdf8a3ee"
                    ]
                },
                {
                    "command": [
                        "unfold Inverses_eq, Inv_comp_elt_l in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5ec903b365997da25935901203070a5ae9e5a2cb"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_monoid_idl Inv_elt_l0).",
                        "VernacExtend",
                        "d3e8d797509c1c82a1b08b70405f764ad3d7fa0e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Midr_Inverses",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "red in |- *.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "simple induction x; simpl in |- *; intros.",
                        "VernacExtend",
                        "73122fa49e4bd10cca1bb4c82293f020cdf8a3ee"
                    ]
                },
                {
                    "command": [
                        "apply (Prf_monoid_idr Inv_elt_l0).",
                        "VernacExtend",
                        "92f60fef2d36daf28a5bb8ac0ff9423c9ddd2b0c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inverses_invl",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "red in |- *; simple induction x; trivial.",
                        "VernacExtend",
                        "1825c3ca76ad72420b2712158512baeb0f9d3e1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inverses_invr",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "red in |- *; simple induction x; trivial.",
                        "VernacExtend",
                        "1825c3ca76ad72420b2712158512baeb0f9d3e1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}