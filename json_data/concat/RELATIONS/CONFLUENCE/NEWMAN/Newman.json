{
    "filename": "RELATIONS/CONFLUENCE/NEWMAN/Newman.v",
    "coq_project": "concat",
    "vernac_cmds": [
        [
            "Require Import Relations.",
            "VernacRequire",
            "e1c772579226dab59a43a462d5506decc27ae0bb"
        ],
        [
            "Require Import Confluence.",
            "VernacRequire",
            "3e8da24d947a04546b6c301a308ee2a9db417335"
        ],
        [
            "Require Import Coherence.",
            "VernacRequire",
            "59b5722ce1999a209ddd6718a3ab608700a2057b"
        ],
        [
            "Require Import Noetherian.",
            "VernacRequire",
            "fcf150cca9629d65602576ad996ab34b055896d2"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Theorem Newman : forall (U : Type) (R : Relation U), Noetherian R -> Locally_confluent R -> Confluent R.",
            "VernacStartTheoremProof",
            "c6c2a157508eabb2f66b016b20e66a0a5fe9ef3e"
        ],
        [
            "intros U R H' H'0; red in |- *; intro x; red in |- *.",
            "VernacExtend",
            "78eeaad93ac48a618675d3323652432c1516501a"
        ],
        [
            "red in H'; generalize (H' x); intro H'1; elim H'1.",
            "VernacExtend",
            "271e5f1ef7a0a13349d8789ad5817c6288a04a2e"
        ],
        [
            "intros x0 H'2 H'3 y z H'4 H'5; clear H' H'1.",
            "VernacExtend",
            "a9b8b2bcc29495a4618ff6733f9e590fda425c2c"
        ],
        [
            "generalize (Rstar_cases (U:=U) (R:=R) (x:=x0) (y:=y)); intro h; lapply h; [ intro H'6; clear h | clear h; assumption ].",
            "VernacExtend",
            "e0b3143d3c50748fb2800771f867a85efe5df8a8"
        ],
        [
            "generalize (Rstar_cases (U:=U) (R:=R) (x:=x0) (y:=z)); intro h; lapply h; [ intro H'7; clear h | clear h; assumption ].",
            "VernacExtend",
            "7478f176b0b825b2eba43aa53e6cd841916989cb"
        ],
        [
            "elim H'6; [ clear H'6; intro h | intro h; elim h; intros u h0; elim h0; intros H' H'1; clear H'6 h h0 ].",
            "VernacExtend",
            "1ca29dc815b93ccf68efe8fcbd1217e0f4092e90"
        ],
        [
            "rewrite <- h; auto.",
            "VernacExtend",
            "e7a9b23f3d062d9bd42075f249cfb5d9e40c7139"
        ],
        [
            "elim H'7; [ clear H'7; intro h | intro h; elim h; intros v h0; elim h0; intros H'6 H'8; clear H'7 h h0 ].",
            "VernacExtend",
            "da6e5b116a67605fda46b400c8b9d274b61052c9"
        ],
        [
            "rewrite <- h; generalize coherent_symmetric; intro H_cs; red in H_cs; auto.",
            "VernacExtend",
            "d28e023660d164c8fce84f0e0aa3c4e290e3938a"
        ],
        [
            "unfold Locally_confluent, locally_confluent, coherent in H'0.",
            "VernacExtend",
            "a458f4287a07090d04f01a472f5e03e2fe16da92"
        ],
        [
            "generalize (H'0 x0 u v); intro h; lapply h; [ intro H'7; lapply H'7; [ intro h0; elim h0; intros t h1; elim h1; intros H'9 H'10; clear h H'7 h0 h1 | clear h ] | clear h ]; auto.",
            "VernacExtend",
            "1122c65d3895aaf86dad37b10f1c03e078328064"
        ],
        [
            "clear H'0.",
            "VernacExtend",
            "e75a56fb7c522f89a156bab27b9c0ea8c0512bf6"
        ],
        [
            "unfold coherent at 1 in H'3.",
            "VernacExtend",
            "098f3bc538dc55c9000b896398fdf54d2cf2d190"
        ],
        [
            "generalize (H'3 u); intro h; lapply h; [ intro H'0; generalize (H'0 y t); intro h0; lapply h0; [ intro H'7; lapply H'7; [ intro h1; elim h1; intros y1 h2; elim h2; intros H'11 H'12; clear h h0 H'7 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto.",
            "VernacExtend",
            "474ed063da9cb40edac7828b9af4e541e1ff47c3"
        ],
        [
            "generalize Rstar_transitive; intro H_Rst; red in H_Rst.",
            "VernacExtend",
            "2c2756a55db70ce6ea8ed949a2ec1a1ad5a5cec7"
        ],
        [
            "generalize (H'3 v); intro h; lapply h; [ intro H'7; generalize (H'7 y1 z); intro h0; lapply h0; [ intro H'13; lapply H'13; [ intro h1; elim h1; intros z1 h2; elim h2; intros H'14 H'15; clear h h0 H'13 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto.",
            "VernacExtend",
            "20f25f803385d6129e7f6377fc99177dc4d13ab7"
        ],
        [
            "red in |- *; (exists z1; split); auto.",
            "VernacExtend",
            "103cd2a501e3ac4463090bbb796ec59f5af1a77c"
        ],
        [
            "apply H_Rst with y1; auto.",
            "VernacExtend",
            "c9c4a4b16c2688be064368dc5d44fad2f3c49405"
        ],
        [
            "apply H_Rst with t; auto.",
            "VernacExtend",
            "bc88b6ecd74d95b3d6a80a3ee3474bb26fb36fe6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Newman",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros U R H' H'0; red in |- *; intro x; red in |- *.",
                        "VernacExtend",
                        "78eeaad93ac48a618675d3323652432c1516501a"
                    ]
                },
                {
                    "command": [
                        "red in H'; generalize (H' x); intro H'1; elim H'1.",
                        "VernacExtend",
                        "271e5f1ef7a0a13349d8789ad5817c6288a04a2e"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'2 H'3 y z H'4 H'5; clear H' H'1.",
                        "VernacExtend",
                        "a9b8b2bcc29495a4618ff6733f9e590fda425c2c"
                    ]
                },
                {
                    "command": [
                        "generalize (Rstar_cases (U:=U) (R:=R) (x:=x0) (y:=y)); intro h; lapply h; [ intro H'6; clear h | clear h; assumption ].",
                        "VernacExtend",
                        "e0b3143d3c50748fb2800771f867a85efe5df8a8"
                    ]
                },
                {
                    "command": [
                        "generalize (Rstar_cases (U:=U) (R:=R) (x:=x0) (y:=z)); intro h; lapply h; [ intro H'7; clear h | clear h; assumption ].",
                        "VernacExtend",
                        "7478f176b0b825b2eba43aa53e6cd841916989cb"
                    ]
                },
                {
                    "command": [
                        "elim H'6; [ clear H'6; intro h | intro h; elim h; intros u h0; elim h0; intros H' H'1; clear H'6 h h0 ].",
                        "VernacExtend",
                        "1ca29dc815b93ccf68efe8fcbd1217e0f4092e90"
                    ]
                },
                {
                    "command": [
                        "rewrite <- h; auto.",
                        "VernacExtend",
                        "e7a9b23f3d062d9bd42075f249cfb5d9e40c7139"
                    ]
                },
                {
                    "command": [
                        "elim H'7; [ clear H'7; intro h | intro h; elim h; intros v h0; elim h0; intros H'6 H'8; clear H'7 h h0 ].",
                        "VernacExtend",
                        "da6e5b116a67605fda46b400c8b9d274b61052c9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- h; generalize coherent_symmetric; intro H_cs; red in H_cs; auto.",
                        "VernacExtend",
                        "d28e023660d164c8fce84f0e0aa3c4e290e3938a"
                    ]
                },
                {
                    "command": [
                        "unfold Locally_confluent, locally_confluent, coherent in H'0.",
                        "VernacExtend",
                        "a458f4287a07090d04f01a472f5e03e2fe16da92"
                    ]
                },
                {
                    "command": [
                        "generalize (H'0 x0 u v); intro h; lapply h; [ intro H'7; lapply H'7; [ intro h0; elim h0; intros t h1; elim h1; intros H'9 H'10; clear h H'7 h0 h1 | clear h ] | clear h ]; auto.",
                        "VernacExtend",
                        "1122c65d3895aaf86dad37b10f1c03e078328064"
                    ]
                },
                {
                    "command": [
                        "clear H'0.",
                        "VernacExtend",
                        "e75a56fb7c522f89a156bab27b9c0ea8c0512bf6"
                    ]
                },
                {
                    "command": [
                        "unfold coherent at 1 in H'3.",
                        "VernacExtend",
                        "098f3bc538dc55c9000b896398fdf54d2cf2d190"
                    ]
                },
                {
                    "command": [
                        "generalize (H'3 u); intro h; lapply h; [ intro H'0; generalize (H'0 y t); intro h0; lapply h0; [ intro H'7; lapply H'7; [ intro h1; elim h1; intros y1 h2; elim h2; intros H'11 H'12; clear h h0 H'7 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto.",
                        "VernacExtend",
                        "474ed063da9cb40edac7828b9af4e541e1ff47c3"
                    ]
                },
                {
                    "command": [
                        "generalize Rstar_transitive; intro H_Rst; red in H_Rst.",
                        "VernacExtend",
                        "2c2756a55db70ce6ea8ed949a2ec1a1ad5a5cec7"
                    ]
                },
                {
                    "command": [
                        "generalize (H'3 v); intro h; lapply h; [ intro H'7; generalize (H'7 y1 z); intro h0; lapply h0; [ intro H'13; lapply H'13; [ intro h1; elim h1; intros z1 h2; elim h2; intros H'14 H'15; clear h h0 H'13 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto.",
                        "VernacExtend",
                        "20f25f803385d6129e7f6377fc99177dc4d13ab7"
                    ]
                },
                {
                    "command": [
                        "red in |- *; (exists z1; split); auto.",
                        "VernacExtend",
                        "103cd2a501e3ac4463090bbb796ec59f5af1a77c"
                    ]
                },
                {
                    "command": [
                        "apply H_Rst with y1; auto.",
                        "VernacExtend",
                        "c9c4a4b16c2688be064368dc5d44fad2f3c49405"
                    ]
                },
                {
                    "command": [
                        "apply H_Rst with t; auto.",
                        "VernacExtend",
                        "bc88b6ecd74d95b3d6a80a3ee3474bb26fb36fe6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}