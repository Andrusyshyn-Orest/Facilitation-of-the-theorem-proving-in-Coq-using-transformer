{
    "filename": "PA.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import folProp.",
            "VernacRequire",
            "9a8c9e707f6075129a70023b069f5369c9a9b295"
        ],
        [
            "Require Import subAll.",
            "VernacRequire",
            "3bc44800880fcbfa701035610cc9224d4b5ca16f"
        ],
        [
            "Require Import folLogic3.",
            "VernacRequire",
            "5313da917cbd8284650f06a63d4e78e11cf70419"
        ],
        [
            "Require Export Languages.",
            "VernacRequire",
            "91a4d3c3df8dcbac8b4a165d5cf26cad2555b98a"
        ],
        [
            "Require Export LNT.",
            "VernacRequire",
            "4ef964b44e9f466b368c97f24f85cf6e3a4f3709"
        ],
        [
            "Section PA.",
            "VernacBeginSection",
            "13dd2fd984724173f65a9dd4d5e4c3dd31734b0e"
        ],
        [
            "Definition PA1 := forallH 0 (notH (equal (Succ (var 0)) Zero)).",
            "VernacDefinition",
            "8f088865545ad24cd21ea51c8246880e1ada380f"
        ],
        [
            "Definition PA2 := forallH 1 (forallH 0 (impH (equal (Succ (var 0)) (Succ (var 1))) (equal (var 0) (var 1)))).",
            "VernacDefinition",
            "f7c49b6406a65356bedbf0fb947607862c61f69f"
        ],
        [
            "Definition PA3 := forallH 0 (equal (Plus (var 0) Zero) (var 0)).",
            "VernacDefinition",
            "1d8732bca12090cd00e01d834350e32f82b938d0"
        ],
        [
            "Definition PA4 := forallH 1 (forallH 0 (equal (Plus (var 0) (Succ (var 1))) (Succ (Plus (var 0) (var 1))))).",
            "VernacDefinition",
            "09295308ade80bcb0b6d70e2bb469446866aa054"
        ],
        [
            "Definition PA5 := forallH 0 (equal (Times (var 0) Zero) Zero).",
            "VernacDefinition",
            "a1cb680bc219c9b96e7a0ff2c74ead4f61da71b9"
        ],
        [
            "Definition PA6 := forallH 1 (forallH 0 (equal (Times (var 0) (Succ (var 1))) (Plus (Times (var 0) (var 1)) (var 0)))).",
            "VernacDefinition",
            "2815f331857b506343339c5075118e6788e341e6"
        ],
        [
            "Definition PA7 (f : Formula) (v : nat) : Formula := close LNT (impH (substituteFormula LNT f v Zero) (impH (forallH v (impH f (substituteFormula LNT f v (Succ (var v))))) (forallH v f))).",
            "VernacDefinition",
            "e8dd94ddb77075f3854299f941f2e2ec4c3a4bef"
        ],
        [
            "Definition InductionSchema (f : Formula) : Prop := exists g : Formula, (exists v : nat, f = PA7 g v).",
            "VernacDefinition",
            "a9049bed64c48c7314ccc12eff8462794a1793e3"
        ],
        [
            "Definition PA := Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ InductionSchema PA1) PA2) PA3) PA4) PA5) PA6.",
            "VernacDefinition",
            "cb1e4a5217f0b7ad99bd31dd1c10cdafa0088d17"
        ],
        [
            "Definition open := Formula_rec LNT (fun _ => Formula) (fun t t0 : Term => equal t t0) (fun (r : Relations LNT) (ts : Terms (arity LNT (inl (Functions LNT) r))) => atomic LNT r ts) (fun (f : Formula) _ (f0 : Formula) _ => impH f f0) (fun (f : Formula) _ => notH f) (fun (n : nat) _ (recf : Formula) => recf).",
            "VernacDefinition",
            "9d7877392b989ab6b5383f9a7d4c8d59cd863dd3"
        ],
        [
            "Lemma PAdec : forall x : Formula, In _ PA x \\/ ~ In _ PA x.",
            "VernacStartTheoremProof",
            "376a62eb54212ecfc781735e2a1bd542bcaa19fb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold PA in |- *.",
            "VernacExtend",
            "77b42df8c8b5e0727e4aafeea94bc55af7452a05"
        ],
        [
            "induction (formula_dec LNT LNT_dec x PA6).",
            "VernacExtend",
            "47bf20ffc88bcd9d642b98e70b8c503d3e977c55"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "induction (formula_dec LNT LNT_dec x PA5).",
            "VernacExtend",
            "d4b3ae38dd4ec67a0aa39d7ce057cbd24e1c19b2"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "left; right.",
            "VernacExtend",
            "3147bd2a87ed0c94ae0497db6dfd508659e14888"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "induction (formula_dec LNT LNT_dec x PA4).",
            "VernacExtend",
            "1c5bca30d61e6d98d86c8743a20298c23e3d85ed"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "do 2 left; right.",
            "VernacExtend",
            "b20b43ed1a64b43c359c65f8d6a5e854ceca36aa"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "induction (formula_dec LNT LNT_dec x PA3).",
            "VernacExtend",
            "ab0af772cd4b37b79f540366e7af60208b4d3eae"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "do 3 left; right.",
            "VernacExtend",
            "4fc0a4c44c033be86e7f30e997c4ff252cd2b8dd"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "induction (formula_dec LNT LNT_dec x PA2).",
            "VernacExtend",
            "eba265e73cfa5ee3ceed89a49a0042f2d0ed4f93"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "do 4 left; right.",
            "VernacExtend",
            "75b455effa5e8d0dbd21c2c3ada8cb75ed11d898"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "induction (formula_dec LNT LNT_dec x PA1).",
            "VernacExtend",
            "f4f4b9e48a9a63c85dbfddf6ac511c3b70dc90a8"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "do 5 left; right.",
            "VernacExtend",
            "bd2c5287dc16de733aba1afb7826d2ef9f9f6f61"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "cut (In Formula InductionSchema x \\/ ~ In Formula InductionSchema x).",
            "VernacExtend",
            "0f8bebf01b34449c31b3c13f3515937c882e7263"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as [H| H].",
            "VernacExtend",
            "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "do 6 left.",
            "VernacExtend",
            "0335fa2fb31be3fc2ee68313af8c66623e222f7a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "repeat tauto || induction H0.",
            "VernacExtend",
            "70f98ada89b9ec0c4f5c2b78cb6c97bcedcae76d"
        ],
        [
            "clear b b0 b1 b2 b3 b4.",
            "VernacExtend",
            "2692cfb07a78f0af207f83a62367f2ab3a684709"
        ],
        [
            "assert (forall y : Formula, (exists f : Formula, (exists v : nat, impH (substituteFormula LNT f v Zero) (impH (forallH v (impH f (substituteFormula LNT f v (Succ (var v))))) (forallH v f)) = y)) \\/ ~ (exists f : Formula, (exists v : nat, impH (substituteFormula LNT f v Zero) (impH (forallH v (impH f (substituteFormula LNT f v (Succ (var v))))) (forallH v f)) = y))).",
            "VernacExtend",
            "4d32e6c51fddad30574a8b69fbf9366fa422a597"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct y as [t t0| r t| f f0| f| n f]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
            "VernacExtend",
            "4050451dd1c54c95536c4b08c520d57463a9021f"
        ],
        [
            "destruct f0 as [t t0| r t| f0 f1| f0| n f0]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
            "VernacExtend",
            "290052b64a3673f16f160586c93cc5211252f936"
        ],
        [
            "destruct f0 as [t t0| r t| f0 f2| f0| n f0]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
            "VernacExtend",
            "5fe3e6b0a7188a41382279e79f0e27dd27bb5c0f"
        ],
        [
            "destruct f1 as [t t0| r t| f1 f2| f1| n0 f1]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
            "VernacExtend",
            "056f1f81fc969128986a1cea5978ba1ee4f50e04"
        ],
        [
            "do 4 fold impH in |- *.",
            "VernacExtend",
            "059f47338a25fae153158207e59d384e7da6475f"
        ],
        [
            "do 4 fold forallH in |- *.",
            "VernacExtend",
            "0f4cf96f7bb7cd5a0ea95c82406b2e9af14048af"
        ],
        [
            "induction (formula_dec LNT LNT_dec (substituteFormula LNT f1 n0 Zero) f).",
            "VernacExtend",
            "f4e15130c1992b53f3544f4eafac2a1743f58bec"
        ],
        [
            "rewrite <- a.",
            "VernacExtend",
            "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
        ],
        [
            "clear a f.",
            "VernacExtend",
            "a7caea366a4a333c84895870c9588fbe93b793b0"
        ],
        [
            "destruct f0 as [t t0| r t| f f0| f| n1 f]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
            "VernacExtend",
            "b0b5ea651932eb5bbbe0987799bc71d41ecc90b1"
        ],
        [
            "induction (formula_dec LNT LNT_dec f1 f).",
            "VernacExtend",
            "ae0ac6cef61bc53784bea77070995be8b7e7f608"
        ],
        [
            "rewrite <- a.",
            "VernacExtend",
            "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
        ],
        [
            "clear a f.",
            "VernacExtend",
            "a7caea366a4a333c84895870c9588fbe93b793b0"
        ],
        [
            "induction (formula_dec LNT LNT_dec (substituteFormula LNT f1 n0 (Succ (var n0))) f0).",
            "VernacExtend",
            "8cb52482ba883e40aaa9c2798756fb958aef4fd7"
        ],
        [
            "rewrite <- a.",
            "VernacExtend",
            "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
        ],
        [
            "clear a f0.",
            "VernacExtend",
            "39f3b2643dd609463b3f48344d1cb7c77140ee24"
        ],
        [
            "induction (eq_nat_dec n n0).",
            "VernacExtend",
            "01b6be4c2892cf9f70e0db461abb99bbbdbd17cf"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists f1.",
            "VernacExtend",
            "3d301be0c8a5794eabdf8e245a837fa5da56341b"
        ],
        [
            "exists n0.",
            "VernacExtend",
            "4a157d74b622bc162db1c65030947db5e98084b6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "right; unfold not in |- *; intros; apply b; decompose record H.",
            "VernacExtend",
            "c870689a3771b6f73ff6b87a18638ba980d05a75"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; unfold not in |- *; intros; apply b; decompose record H.",
            "VernacExtend",
            "c870689a3771b6f73ff6b87a18638ba980d05a75"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; unfold not in |- *; intros; apply b; decompose record H.",
            "VernacExtend",
            "c870689a3771b6f73ff6b87a18638ba980d05a75"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right; unfold not in |- *; intros; apply b; decompose record H.",
            "VernacExtend",
            "c870689a3771b6f73ff6b87a18638ba980d05a75"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (formula_dec LNT LNT_dec x (close LNT (open x))).",
            "VernacExtend",
            "3a8105ad0ab29cbce2d3a78584d37a8503c08fd5"
        ],
        [
            "induction (H (open x)).",
            "VernacExtend",
            "4ccda90c91c78db30edd8fb1c64f3b9f63a00bc7"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "unfold In, InductionSchema, PA7 in |- *.",
            "VernacExtend",
            "ad960ccc993aa86e4c865de1300724e6a1013447"
        ],
        [
            "decompose record H0.",
            "VernacExtend",
            "a6c0c8c7a5a9605ed0d434c62f68b436bce3159c"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold not in |- *; intros; apply H0.",
            "VernacExtend",
            "c7e62175021595bd7035587cbdb2c509e17a3a0c"
        ],
        [
            "unfold In, InductionSchema, PA7 in H1.",
            "VernacExtend",
            "5d96056ffb5dd0c53199ab9cb5689299b2c23420"
        ],
        [
            "decompose record H1.",
            "VernacExtend",
            "fc89bc5e30950f44e0dd70feb01cfe1cc8129126"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "unfold close in |- *.",
            "VernacExtend",
            "492307f3dc9b9cf0bc01d32091a1ae69725495f5"
        ],
        [
            "induction (ListExt.no_dup nat eq_nat_dec (freeVarFormula LNT (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))))).",
            "VernacExtend",
            "9f9667d822863533ad12527631865772feddbca2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "unfold not in |- *; intros; apply b.",
            "VernacExtend",
            "14c5888382a0bd59bcadb881385a13a48cc99b8d"
        ],
        [
            "unfold In, InductionSchema, PA7 in H0.",
            "VernacExtend",
            "59b06d011f00fc263e385d3166cbbcde21d0d756"
        ],
        [
            "decompose record H0.",
            "VernacExtend",
            "a6c0c8c7a5a9605ed0d434c62f68b436bce3159c"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "replace (open (close LNT (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))))) with (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))).",
            "VernacExtend",
            "edd790d90da39a49b01396256dff6e4921338545"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold close in |- *.",
            "VernacExtend",
            "492307f3dc9b9cf0bc01d32091a1ae69725495f5"
        ],
        [
            "induction (ListExt.no_dup nat eq_nat_dec (freeVarFormula LNT (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))))).",
            "VernacExtend",
            "9f9667d822863533ad12527631865772feddbca2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closedPA1 : ClosedSystem LNT PA.",
            "VernacStartTheoremProof",
            "feab477c441fa3f7a595825bcdf2b1f7e0ab5e22"
        ],
        [
            "unfold ClosedSystem in |- *.",
            "VernacExtend",
            "b64861ad193e303f5998f4ce049538afc4ae451a"
        ],
        [
            "unfold PA in |- *.",
            "VernacExtend",
            "77b42df8c8b5e0727e4aafeea94bc55af7452a05"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as [x H| x H].",
            "VernacExtend",
            "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
        ],
        [
            "induction H as [x H| x H].",
            "VernacExtend",
            "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
        ],
        [
            "induction H as [x H| x H].",
            "VernacExtend",
            "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
        ],
        [
            "induction H as [x H| x H].",
            "VernacExtend",
            "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
        ],
        [
            "induction H as [x H| x H].",
            "VernacExtend",
            "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
        ],
        [
            "induction H as [x H| x H].",
            "VernacExtend",
            "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
        ],
        [
            "induction H as (x0, H).",
            "VernacExtend",
            "e46a6f07411e55ef5ba483e7d28382fdafbb42ea"
        ],
        [
            "induction H as (x1, H).",
            "VernacExtend",
            "462f29bebd9f721ffa25b9bd7b5c953a8d4f98ad"
        ],
        [
            "unfold PA7 in H.",
            "VernacExtend",
            "a26e449bc765633a9312da3b3faf69698e6df3a5"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply freeVarClosed.",
            "VernacExtend",
            "aa9ce97d9f8c0aab82607e68f51ffedbbca78a8c"
        ],
        [
            "induction H; auto.",
            "VernacExtend",
            "90cc3845c5168577531b5e1147599d755edab1c2"
        ],
        [
            "induction H; auto.",
            "VernacExtend",
            "90cc3845c5168577531b5e1147599d755edab1c2"
        ],
        [
            "induction H; auto.",
            "VernacExtend",
            "90cc3845c5168577531b5e1147599d755edab1c2"
        ],
        [
            "induction H; auto.",
            "VernacExtend",
            "90cc3845c5168577531b5e1147599d755edab1c2"
        ],
        [
            "induction H; auto.",
            "VernacExtend",
            "90cc3845c5168577531b5e1147599d755edab1c2"
        ],
        [
            "induction H; auto.",
            "VernacExtend",
            "90cc3845c5168577531b5e1147599d755edab1c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closedPA : forall v : nat, ~ In_freeVarSys LNT v PA.",
            "VernacStartTheoremProof",
            "abdf38605557b98c7a4d5893079c262653bd1ec0"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "unfold In_freeVarSys in H.",
            "VernacExtend",
            "bbb5a97381c9bee37ae4371e1199b1f49fad4c8b"
        ],
        [
            "induction H as (x, H).",
            "VernacExtend",
            "d232074075f4e7274913cc4565e332b8e4fccd19"
        ],
        [
            "elim closedPA1 with v x; tauto.",
            "VernacExtend",
            "7902f4f57f365e90e359a1c276af00329c022beb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pa1 : forall a : Term, SysPrf PA (notH (equal (Succ a) Zero)).",
            "VernacStartTheoremProof",
            "67d13014c726eb2f15e6977ee492c56440134116"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (notH (equal (Succ a) Zero)) with (substituteFormula LNT (notH (equal (Succ (var 0)) Zero)) 0 a).",
            "VernacExtend",
            "ebdecb56d587454e50e7a2da6c21a54414bea631"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pa2 : forall a b : Term, SysPrf PA (impH (equal (Succ a) (Succ b)) (equal a b)).",
            "VernacStartTheoremProof",
            "c5ac81a3304050495e38b52c4ff8f385ef015c4f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (impH (equal (Succ a) (Succ b)) (equal a b)) with (subAllFormula LNT (impH (equal (Succ (var 0)) (Succ (var 1))) (equal (var 0) (var 1))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "4cd85a3dee63b382555e5b062aeb91c16c301682"
        ],
        [
            "apply (subAllCloseFrom LNT).",
            "VernacExtend",
            "f4904380eaf90488c0daa320a2e9749ecbeca013"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pa3 : forall a : Term, SysPrf PA (equal (Plus a Zero) a).",
            "VernacStartTheoremProof",
            "11c6538d4bc717a584dbd9f3750abbc5cadffcad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (equal (Plus a Zero) a) with (substituteFormula LNT (equal (Plus (var 0) Zero) (var 0)) 0 a).",
            "VernacExtend",
            "8c7c23ec62647c12c1b582a9f58b62ad29a10b08"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pa4 : forall a b : Term, SysPrf PA (equal (Plus a (Succ b)) (Succ (Plus a b))).",
            "VernacStartTheoremProof",
            "9d5fa12c6b372db5626f2fb3e2864c94c7a3b372"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (equal (Plus a (Succ b)) (Succ (Plus a b))) with (subAllFormula LNT (equal (Plus (var 0) (Succ (var 1))) (Succ (Plus (var 0) (var 1)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "a89ec54ba92cb700cb73a5368e228d7e87c9cff7"
        ],
        [
            "apply (subAllCloseFrom LNT).",
            "VernacExtend",
            "f4904380eaf90488c0daa320a2e9749ecbeca013"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pa5 : forall a : Term, SysPrf PA (equal (Times a Zero) Zero).",
            "VernacStartTheoremProof",
            "92d8a8438c23e98988314a93784925e4f87627a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (equal (Times a Zero) Zero) with (substituteFormula LNT (equal (Times (var 0) Zero) Zero) 0 a).",
            "VernacExtend",
            "5d9ceb554c6ab79301995fe501551a8924a3e30a"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pa6 : forall a b : Term, SysPrf PA (equal (Times a (Succ b)) (Plus (Times a b) a)).",
            "VernacStartTheoremProof",
            "eee19b32baa69b61a9dde2a66cbdffed4b069e6c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (equal (Times a (Succ b)) (Plus (Times a b) a)) with (subAllFormula LNT (equal (Times (var 0) (Succ (var 1))) (Plus (Times (var 0) (var 1)) (var 0))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "1e392fec195fdc3ec299d56557743c3f2e6d91e0"
        ],
        [
            "apply (subAllCloseFrom LNT).",
            "VernacExtend",
            "f4904380eaf90488c0daa320a2e9749ecbeca013"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma induct : forall (f : Formula) (v : nat), SysPrf PA (substituteFormula LNT f v Zero) -> SysPrf PA (forallH v (impH f (substituteFormula LNT f v (Succ (var v))))) -> SysPrf PA (forallH v f).",
            "VernacStartTheoremProof",
            "f6fc85208f837ea3fb21d0a0e38e6b4af7a8258f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply impE.",
            "VernacExtend",
            "adc0e8b3e4d04a89a00c60673ed002e1f9a888ae"
        ],
        [
            "eapply impE.",
            "VernacExtend",
            "adc0e8b3e4d04a89a00c60673ed002e1f9a888ae"
        ],
        [
            "apply (openClosed LNT).",
            "VernacExtend",
            "428e22d03b2d1a6a23544d3b64e7e150ecf35f9d"
        ],
        [
            "apply Axm.",
            "VernacExtend",
            "af2ec6155fc5beb193f4b762e2011d28230b650c"
        ],
        [
            "repeat left.",
            "VernacExtend",
            "8333641ba474c0709fecd958326d1fcf57369a5d"
        ],
        [
            "unfold InductionSchema in |- *.",
            "VernacExtend",
            "1a3d5a3d865626779fc6b09480eec55fbf8e8f7c"
        ],
        [
            "unfold In in |- *.",
            "VernacExtend",
            "d7a2e438ac145b96769372b3253da28246b60614"
        ],
        [
            "unfold PA7 in |- *.",
            "VernacExtend",
            "51224b7f19a3030f2a6a554ebe5d562a754c4781"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "exists v.",
            "VernacExtend",
            "07e9a3324bfa0e7b5dc708d0101cf063e8084497"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PA.",
            "VernacEndSegment",
            "0a6d3fb9cbd4fb732ca1a8935db3a4cfba9d151c"
        ]
    ],
    "proofs": [
        {
            "name": "PAdec",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold PA in |- *.",
                        "VernacExtend",
                        "77b42df8c8b5e0727e4aafeea94bc55af7452a05"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec x PA6).",
                        "VernacExtend",
                        "47bf20ffc88bcd9d642b98e70b8c503d3e977c55"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec x PA5).",
                        "VernacExtend",
                        "d4b3ae38dd4ec67a0aa39d7ce057cbd24e1c19b2"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "left; right.",
                        "VernacExtend",
                        "3147bd2a87ed0c94ae0497db6dfd508659e14888"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec x PA4).",
                        "VernacExtend",
                        "1c5bca30d61e6d98d86c8743a20298c23e3d85ed"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "do 2 left; right.",
                        "VernacExtend",
                        "b20b43ed1a64b43c359c65f8d6a5e854ceca36aa"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec x PA3).",
                        "VernacExtend",
                        "ab0af772cd4b37b79f540366e7af60208b4d3eae"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "do 3 left; right.",
                        "VernacExtend",
                        "4fc0a4c44c033be86e7f30e997c4ff252cd2b8dd"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec x PA2).",
                        "VernacExtend",
                        "eba265e73cfa5ee3ceed89a49a0042f2d0ed4f93"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "do 4 left; right.",
                        "VernacExtend",
                        "75b455effa5e8d0dbd21c2c3ada8cb75ed11d898"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec x PA1).",
                        "VernacExtend",
                        "f4f4b9e48a9a63c85dbfddf6ac511c3b70dc90a8"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "do 5 left; right.",
                        "VernacExtend",
                        "bd2c5287dc16de733aba1afb7826d2ef9f9f6f61"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "cut (In Formula InductionSchema x \\/ ~ In Formula InductionSchema x).",
                        "VernacExtend",
                        "0f8bebf01b34449c31b3c13f3515937c882e7263"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as [H| H].",
                        "VernacExtend",
                        "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "do 6 left.",
                        "VernacExtend",
                        "0335fa2fb31be3fc2ee68313af8c66623e222f7a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "repeat tauto || induction H0.",
                        "VernacExtend",
                        "70f98ada89b9ec0c4f5c2b78cb6c97bcedcae76d"
                    ]
                },
                {
                    "command": [
                        "clear b b0 b1 b2 b3 b4.",
                        "VernacExtend",
                        "2692cfb07a78f0af207f83a62367f2ab3a684709"
                    ]
                },
                {
                    "command": [
                        "assert (forall y : Formula, (exists f : Formula, (exists v : nat, impH (substituteFormula LNT f v Zero) (impH (forallH v (impH f (substituteFormula LNT f v (Succ (var v))))) (forallH v f)) = y)) \\/ ~ (exists f : Formula, (exists v : nat, impH (substituteFormula LNT f v Zero) (impH (forallH v (impH f (substituteFormula LNT f v (Succ (var v))))) (forallH v f)) = y))).",
                        "VernacExtend",
                        "4d32e6c51fddad30574a8b69fbf9366fa422a597"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct y as [t t0| r t| f f0| f| n f]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
                        "VernacExtend",
                        "4050451dd1c54c95536c4b08c520d57463a9021f"
                    ]
                },
                {
                    "command": [
                        "destruct f0 as [t t0| r t| f0 f1| f0| n f0]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
                        "VernacExtend",
                        "290052b64a3673f16f160586c93cc5211252f936"
                    ]
                },
                {
                    "command": [
                        "destruct f0 as [t t0| r t| f0 f2| f0| n f0]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
                        "VernacExtend",
                        "5fe3e6b0a7188a41382279e79f0e27dd27bb5c0f"
                    ]
                },
                {
                    "command": [
                        "destruct f1 as [t t0| r t| f1 f2| f1| n0 f1]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
                        "VernacExtend",
                        "056f1f81fc969128986a1cea5978ba1ee4f50e04"
                    ]
                },
                {
                    "command": [
                        "do 4 fold impH in |- *.",
                        "VernacExtend",
                        "059f47338a25fae153158207e59d384e7da6475f"
                    ]
                },
                {
                    "command": [
                        "do 4 fold forallH in |- *.",
                        "VernacExtend",
                        "0f4cf96f7bb7cd5a0ea95c82406b2e9af14048af"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec (substituteFormula LNT f1 n0 Zero) f).",
                        "VernacExtend",
                        "f4e15130c1992b53f3544f4eafac2a1743f58bec"
                    ]
                },
                {
                    "command": [
                        "rewrite <- a.",
                        "VernacExtend",
                        "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
                    ]
                },
                {
                    "command": [
                        "clear a f.",
                        "VernacExtend",
                        "a7caea366a4a333c84895870c9588fbe93b793b0"
                    ]
                },
                {
                    "command": [
                        "destruct f0 as [t t0| r t| f f0| f| n1 f]; try (right; unfold not in |- *; intros; decompose record H; discriminate H1).",
                        "VernacExtend",
                        "b0b5ea651932eb5bbbe0987799bc71d41ecc90b1"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec f1 f).",
                        "VernacExtend",
                        "ae0ac6cef61bc53784bea77070995be8b7e7f608"
                    ]
                },
                {
                    "command": [
                        "rewrite <- a.",
                        "VernacExtend",
                        "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
                    ]
                },
                {
                    "command": [
                        "clear a f.",
                        "VernacExtend",
                        "a7caea366a4a333c84895870c9588fbe93b793b0"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec (substituteFormula LNT f1 n0 (Succ (var n0))) f0).",
                        "VernacExtend",
                        "8cb52482ba883e40aaa9c2798756fb958aef4fd7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- a.",
                        "VernacExtend",
                        "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
                    ]
                },
                {
                    "command": [
                        "clear a f0.",
                        "VernacExtend",
                        "39f3b2643dd609463b3f48344d1cb7c77140ee24"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n n0).",
                        "VernacExtend",
                        "01b6be4c2892cf9f70e0db461abb99bbbdbd17cf"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists f1.",
                        "VernacExtend",
                        "3d301be0c8a5794eabdf8e245a837fa5da56341b"
                    ]
                },
                {
                    "command": [
                        "exists n0.",
                        "VernacExtend",
                        "4a157d74b622bc162db1c65030947db5e98084b6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "right; unfold not in |- *; intros; apply b; decompose record H.",
                        "VernacExtend",
                        "c870689a3771b6f73ff6b87a18638ba980d05a75"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; unfold not in |- *; intros; apply b; decompose record H.",
                        "VernacExtend",
                        "c870689a3771b6f73ff6b87a18638ba980d05a75"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; unfold not in |- *; intros; apply b; decompose record H.",
                        "VernacExtend",
                        "c870689a3771b6f73ff6b87a18638ba980d05a75"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right; unfold not in |- *; intros; apply b; decompose record H.",
                        "VernacExtend",
                        "c870689a3771b6f73ff6b87a18638ba980d05a75"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (formula_dec LNT LNT_dec x (close LNT (open x))).",
                        "VernacExtend",
                        "3a8105ad0ab29cbce2d3a78584d37a8503c08fd5"
                    ]
                },
                {
                    "command": [
                        "induction (H (open x)).",
                        "VernacExtend",
                        "4ccda90c91c78db30edd8fb1c64f3b9f63a00bc7"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "unfold In, InductionSchema, PA7 in |- *.",
                        "VernacExtend",
                        "ad960ccc993aa86e4c865de1300724e6a1013447"
                    ]
                },
                {
                    "command": [
                        "decompose record H0.",
                        "VernacExtend",
                        "a6c0c8c7a5a9605ed0d434c62f68b436bce3159c"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "exists x1.",
                        "VernacExtend",
                        "41149f92e5f2a0109418d3e02971541f67fbd3df"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros; apply H0.",
                        "VernacExtend",
                        "c7e62175021595bd7035587cbdb2c509e17a3a0c"
                    ]
                },
                {
                    "command": [
                        "unfold In, InductionSchema, PA7 in H1.",
                        "VernacExtend",
                        "5d96056ffb5dd0c53199ab9cb5689299b2c23420"
                    ]
                },
                {
                    "command": [
                        "decompose record H1.",
                        "VernacExtend",
                        "fc89bc5e30950f44e0dd70feb01cfe1cc8129126"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "exists x1.",
                        "VernacExtend",
                        "41149f92e5f2a0109418d3e02971541f67fbd3df"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "unfold close in |- *.",
                        "VernacExtend",
                        "492307f3dc9b9cf0bc01d32091a1ae69725495f5"
                    ]
                },
                {
                    "command": [
                        "induction (ListExt.no_dup nat eq_nat_dec (freeVarFormula LNT (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))))).",
                        "VernacExtend",
                        "9f9667d822863533ad12527631865772feddbca2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros; apply b.",
                        "VernacExtend",
                        "14c5888382a0bd59bcadb881385a13a48cc99b8d"
                    ]
                },
                {
                    "command": [
                        "unfold In, InductionSchema, PA7 in H0.",
                        "VernacExtend",
                        "59b06d011f00fc263e385d3166cbbcde21d0d756"
                    ]
                },
                {
                    "command": [
                        "decompose record H0.",
                        "VernacExtend",
                        "a6c0c8c7a5a9605ed0d434c62f68b436bce3159c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "replace (open (close LNT (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))))) with (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))).",
                        "VernacExtend",
                        "edd790d90da39a49b01396256dff6e4921338545"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold close in |- *.",
                        "VernacExtend",
                        "492307f3dc9b9cf0bc01d32091a1ae69725495f5"
                    ]
                },
                {
                    "command": [
                        "induction (ListExt.no_dup nat eq_nat_dec (freeVarFormula LNT (impH (substituteFormula LNT x0 x1 Zero) (impH (forallH x1 (impH x0 (substituteFormula LNT x0 x1 (Succ (var x1))))) (forallH x1 x0))))).",
                        "VernacExtend",
                        "9f9667d822863533ad12527631865772feddbca2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closedPA1",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "unfold ClosedSystem in |- *.",
                        "VernacExtend",
                        "b64861ad193e303f5998f4ce049538afc4ae451a"
                    ]
                },
                {
                    "command": [
                        "unfold PA in |- *.",
                        "VernacExtend",
                        "77b42df8c8b5e0727e4aafeea94bc55af7452a05"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as [x H| x H].",
                        "VernacExtend",
                        "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
                    ]
                },
                {
                    "command": [
                        "induction H as [x H| x H].",
                        "VernacExtend",
                        "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
                    ]
                },
                {
                    "command": [
                        "induction H as [x H| x H].",
                        "VernacExtend",
                        "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
                    ]
                },
                {
                    "command": [
                        "induction H as [x H| x H].",
                        "VernacExtend",
                        "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
                    ]
                },
                {
                    "command": [
                        "induction H as [x H| x H].",
                        "VernacExtend",
                        "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
                    ]
                },
                {
                    "command": [
                        "induction H as [x H| x H].",
                        "VernacExtend",
                        "082cf019c7af0222a51bdc8ec48647c54c5e2c4e"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, H).",
                        "VernacExtend",
                        "e46a6f07411e55ef5ba483e7d28382fdafbb42ea"
                    ]
                },
                {
                    "command": [
                        "induction H as (x1, H).",
                        "VernacExtend",
                        "462f29bebd9f721ffa25b9bd7b5c953a8d4f98ad"
                    ]
                },
                {
                    "command": [
                        "unfold PA7 in H.",
                        "VernacExtend",
                        "a26e449bc765633a9312da3b3faf69698e6df3a5"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply freeVarClosed.",
                        "VernacExtend",
                        "aa9ce97d9f8c0aab82607e68f51ffedbbca78a8c"
                    ]
                },
                {
                    "command": [
                        "induction H; auto.",
                        "VernacExtend",
                        "90cc3845c5168577531b5e1147599d755edab1c2"
                    ]
                },
                {
                    "command": [
                        "induction H; auto.",
                        "VernacExtend",
                        "90cc3845c5168577531b5e1147599d755edab1c2"
                    ]
                },
                {
                    "command": [
                        "induction H; auto.",
                        "VernacExtend",
                        "90cc3845c5168577531b5e1147599d755edab1c2"
                    ]
                },
                {
                    "command": [
                        "induction H; auto.",
                        "VernacExtend",
                        "90cc3845c5168577531b5e1147599d755edab1c2"
                    ]
                },
                {
                    "command": [
                        "induction H; auto.",
                        "VernacExtend",
                        "90cc3845c5168577531b5e1147599d755edab1c2"
                    ]
                },
                {
                    "command": [
                        "induction H; auto.",
                        "VernacExtend",
                        "90cc3845c5168577531b5e1147599d755edab1c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closedPA",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "unfold In_freeVarSys in H.",
                        "VernacExtend",
                        "bbb5a97381c9bee37ae4371e1199b1f49fad4c8b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, H).",
                        "VernacExtend",
                        "d232074075f4e7274913cc4565e332b8e4fccd19"
                    ]
                },
                {
                    "command": [
                        "elim closedPA1 with v x; tauto.",
                        "VernacExtend",
                        "7902f4f57f365e90e359a1c276af00329c022beb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa1",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (notH (equal (Succ a) Zero)) with (substituteFormula LNT (notH (equal (Succ (var 0)) Zero)) 0 a).",
                        "VernacExtend",
                        "ebdecb56d587454e50e7a2da6c21a54414bea631"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa2",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (impH (equal (Succ a) (Succ b)) (equal a b)) with (subAllFormula LNT (impH (equal (Succ (var 0)) (Succ (var 1))) (equal (var 0) (var 1))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "4cd85a3dee63b382555e5b062aeb91c16c301682"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNT).",
                        "VernacExtend",
                        "f4904380eaf90488c0daa320a2e9749ecbeca013"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa3",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Plus a Zero) a) with (substituteFormula LNT (equal (Plus (var 0) Zero) (var 0)) 0 a).",
                        "VernacExtend",
                        "8c7c23ec62647c12c1b582a9f58b62ad29a10b08"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa4",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Plus a (Succ b)) (Succ (Plus a b))) with (subAllFormula LNT (equal (Plus (var 0) (Succ (var 1))) (Succ (Plus (var 0) (var 1)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "a89ec54ba92cb700cb73a5368e228d7e87c9cff7"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNT).",
                        "VernacExtend",
                        "f4904380eaf90488c0daa320a2e9749ecbeca013"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa5",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Times a Zero) Zero) with (substituteFormula LNT (equal (Times (var 0) Zero) Zero) 0 a).",
                        "VernacExtend",
                        "5d9ceb554c6ab79301995fe501551a8924a3e30a"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pa6",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Times a (Succ b)) (Plus (Times a b) a)) with (subAllFormula LNT (equal (Times (var 0) (Succ (var 1))) (Plus (Times (var 0) (var 1)) (var 0))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "1e392fec195fdc3ec299d56557743c3f2e6d91e0"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNT).",
                        "VernacExtend",
                        "f4904380eaf90488c0daa320a2e9749ecbeca013"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}