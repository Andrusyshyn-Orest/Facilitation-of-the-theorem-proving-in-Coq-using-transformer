{
    "filename": "folLogic2.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import ListExt.",
            "VernacRequire",
            "8c4c029b2c43ab5886e4af5e6402bea050085fed"
        ],
        [
            "Require Import folProp.",
            "VernacRequire",
            "9a8c9e707f6075129a70023b069f5369c9a9b295"
        ],
        [
            "Require Import folProof.",
            "VernacRequire",
            "a0193d39f532e35a330dca71bfab163ef1b5dd49"
        ],
        [
            "Require Export folLogic.",
            "VernacRequire",
            "ff0bfa8e4b81dbc578201e27cbc72b947074f546"
        ],
        [
            "Require Import subProp.",
            "VernacRequire",
            "958f8351edff1532d30f0dc5037e19d46aa66886"
        ],
        [
            "Require Import folReplace.",
            "VernacRequire",
            "4d2302c9e704187836912b1c7eb0c8d836a6d938"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Section More_Logic_Rules.",
            "VernacBeginSection",
            "2dd171c65e81721d27d35550581e32a39554d212"
        ],
        [
            "Variable L : Language.",
            "VernacAssumption",
            "96b36a9b874de21fe37f18071cb929f4dd758042"
        ],
        [
            "Let Formula := Formula L.",
            "VernacDefinition",
            "3d32ab58ebf838c2a87fdc2e6124bfb77b6c785b"
        ],
        [
            "Let Formulas := Formulas L.",
            "VernacDefinition",
            "3e58c6132e0d63871e6929fdf8514df1ca805073"
        ],
        [
            "Let System := System L.",
            "VernacDefinition",
            "cca6eba541a212b17367017275b463c5608aa66d"
        ],
        [
            "Let Term := Term L.",
            "VernacDefinition",
            "38e1762c57b9701000a89090666997db5d597a34"
        ],
        [
            "Let Terms := Terms L.",
            "VernacDefinition",
            "ac274971655c7d87e7a366522fa4f11f94117e84"
        ],
        [
            "Let var := var L.",
            "VernacDefinition",
            "387b134d06ce79979638575c6631443c7143b913"
        ],
        [
            "Let apply := apply L.",
            "VernacDefinition",
            "171f7b3946ad56564d4a09c4656739ed07770a44"
        ],
        [
            "Let equal := equal L.",
            "VernacDefinition",
            "a97cb35845ad0374b8596fd6d66f5c04065714a3"
        ],
        [
            "Let atomic := atomic L.",
            "VernacDefinition",
            "7638f14f126e2c8e95075078253a597eea7fd9ac"
        ],
        [
            "Let impH := impH L.",
            "VernacDefinition",
            "b3d855010528c91b0d1d6c2d64740a3e6e7417a6"
        ],
        [
            "Let notH := notH L.",
            "VernacDefinition",
            "096b324518e16c165cd803fe11de91b995393f24"
        ],
        [
            "Let forallH := forallH L.",
            "VernacDefinition",
            "eaf4bad969f5571f26e0bbda77b3d70e626f3102"
        ],
        [
            "Let orH := orH L.",
            "VernacDefinition",
            "0ac8832e88ec1801dd7f8e764071579c4014e425"
        ],
        [
            "Let andH := andH L.",
            "VernacDefinition",
            "4daa82892653c0883a5d6ebec876be8ae9f5ec12"
        ],
        [
            "Let existH := existH L.",
            "VernacDefinition",
            "0ba7f517f2c1b7f1a555803e43ae56c5f61ebcae"
        ],
        [
            "Let iffH := iffH L.",
            "VernacDefinition",
            "c97762ff458ff51e91985121c0ae88a85a82e865"
        ],
        [
            "Let ifThenElseH := ifThenElseH L.",
            "VernacDefinition",
            "34c02609686a38b645af860458ab18a92957ea25"
        ],
        [
            "Let Prf := Prf L.",
            "VernacDefinition",
            "d67c53d8c574b544ea8a06853dee07e5d9b2b128"
        ],
        [
            "Let SysPrf := SysPrf L.",
            "VernacDefinition",
            "af3eb4e9887a702b1ec42772618df5c6c558b3fc"
        ],
        [
            "Lemma rebindForall : forall (T : System) (a b : nat) (f : Formula), ~ In b (freeVarFormula L (forallH a f)) -> SysPrf T (iffH (forallH a f) (forallH b (substituteFormula L f a (var b)))).",
            "VernacStartTheoremProof",
            "6f555ac4b93c2d9ab3351e701cb4e96eda28c7ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply (sysExtend L) with (Empty_set Formula).",
            "VernacExtend",
            "ed1db40265c5e6fe9c1414e577e2a435e2bd48da"
        ],
        [
            "unfold Included in |- *.",
            "VernacExtend",
            "c51ce0cf8e35f07a67db2a482d290f743d798a70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "apply (iffI L).",
            "VernacExtend",
            "56f3de58f28fb026a01972ffdcd61bc2ac2a2442"
        ],
        [
            "apply (impI L).",
            "VernacExtend",
            "c0f63edbf211d15133512013542a70014346b0ff"
        ],
        [
            "apply (forallI L).",
            "VernacExtend",
            "487681ccd3592e1b9285c10614871c9d351561ec"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction H0 as (x, H0); induction H0 as (H0, H1).",
            "VernacExtend",
            "e83b9e0468f1c35552c4edbd772aebe808ae31dc"
        ],
        [
            "induction H1 as [x H1| x H1]; [ induction H1 | induction H1 ].",
            "VernacExtend",
            "05c4bb2388ba5bf84daaca1b3d49324c5a7113f7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply (impI L).",
            "VernacExtend",
            "c0f63edbf211d15133512013542a70014346b0ff"
        ],
        [
            "apply (forallI L).",
            "VernacExtend",
            "487681ccd3592e1b9285c10614871c9d351561ec"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction H0 as (x, H0); induction H0 as (H0, H1).",
            "VernacExtend",
            "e83b9e0468f1c35552c4edbd772aebe808ae31dc"
        ],
        [
            "induction H1 as [x H1| x H1]; [ induction H1 | induction H1 ].",
            "VernacExtend",
            "05c4bb2388ba5bf84daaca1b3d49324c5a7113f7"
        ],
        [
            "assert (In a (freeVarFormula L (substituteFormula L f a (var b)))).",
            "VernacExtend",
            "d3abb6de430ed79999c83fa51e59e840c93ad505"
        ],
        [
            "eapply In_list_remove1.",
            "VernacExtend",
            "b6b28153aa75f2c6a57f8178f189dba7003cf48c"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "induction (freeVarSubFormula3 _ _ _ _ _ H1).",
            "VernacExtend",
            "89fa6640b4e011099c2b2a9023c5875fe1c4549e"
        ],
        [
            "elim (In_list_remove2 _ _ _ _ _ H2).",
            "VernacExtend",
            "0045562f7319477d93b898857c8a037d9dcfc9a8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim (In_list_remove2 _ _ _ _ _ H0).",
            "VernacExtend",
            "40e14281b0991cedaf2b2947c1eb978f9166fff1"
        ],
        [
            "induction H2 as [H2| H2].",
            "VernacExtend",
            "2237c6da2b81b951afe769bc727b63b267d6e7b3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim H2.",
            "VernacExtend",
            "b5361db8e79787430270ea77170dc29bbb9de7b4"
        ],
        [
            "set (A1 := forallH b (substituteFormula L f a (var b))) in *.",
            "VernacExtend",
            "f91f958eea0fa580ab5267443633f855581b1ad3"
        ],
        [
            "rewrite <- (subFormulaId L f a).",
            "VernacExtend",
            "ea66c462bdb97f8cd3a22a7730bc99df771b0ec9"
        ],
        [
            "apply (impE L) with (substituteFormula L (substituteFormula L f a (var b)) b (fol.var L a)).",
            "VernacExtend",
            "1827162de3c317c811c18fec16909de79c26a208"
        ],
        [
            "apply (iffE1 L).",
            "VernacExtend",
            "75977618b7b19447e58c2c17a57934cad7c8975e"
        ],
        [
            "apply (subFormulaTrans L).",
            "VernacExtend",
            "ad398c126b66d5fb8c648791ba180fe5d939008c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rebindExist : forall (T : System) (a b : nat) (f : Formula), ~ In b (freeVarFormula L (existH a f)) -> SysPrf T (iffH (existH a f) (existH b (substituteFormula L f a (var b)))).",
            "VernacStartTheoremProof",
            "2a45de1cf72e8010df9b681e9eae215380b0e8fe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold existH in |- *.",
            "VernacExtend",
            "71aea61084e52ab88e7ab1f0b1b9e564b2492d27"
        ],
        [
            "unfold fol.existH in |- *.",
            "VernacExtend",
            "642af1478b75fc11ee0752000fe9724d52f1db15"
        ],
        [
            "apply (reduceNot L).",
            "VernacExtend",
            "b285b33242117b0e138c16a348891cf991528f1b"
        ],
        [
            "eapply (iffTrans L).",
            "VernacExtend",
            "d07ece7d0b29c193b251d72dc36ee0a1af13ee09"
        ],
        [
            "apply (rebindForall T a b (notH f)).",
            "VernacExtend",
            "576a1127a9ae38fc0f78c462eddf419eeb938d88"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite (subFormulaNot L).",
            "VernacExtend",
            "6044bf595a9c920ef2f9076b8b15f543796dd065"
        ],
        [
            "apply (iffRefl L).",
            "VernacExtend",
            "a3d318ecb0e1244329572f9a8475be4a4b5c6d20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subSubTerm : forall (t : Term) (v1 v2 : nat) (s1 s2 : Term), v1 <> v2 -> ~ In v1 (freeVarTerm L s2) -> substituteTerm L (substituteTerm L t v1 s1) v2 s2 = substituteTerm L (substituteTerm L t v2 s2) v1 (substituteTerm L s1 v2 s2).",
            "VernacStartTheoremProof",
            "04d08d991cc04a631a01409ed36258a070f1c525"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim t using Term_Terms_ind with (P0 := fun (n : nat) (ts : fol.Terms L n) => substituteTerms L n (substituteTerms L n ts v1 s1) v2 s2 = substituteTerms L n (substituteTerms L n ts v2 s2) v1 (substituteTerm L s1 v2 s2)); simpl in |- *; intros.",
            "VernacExtend",
            "3c0302882cd72771c1c4389581e061de352247f7"
        ],
        [
            "induction (eq_nat_dec v1 n).",
            "VernacExtend",
            "1f1e187950bca29ca9915e0f7274c70930293e7d"
        ],
        [
            "induction (eq_nat_dec v2 n).",
            "VernacExtend",
            "cedb747de038a8a405d19e3f520cf4c76fbd15a1"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "transitivity n; auto.",
            "VernacExtend",
            "6b6eec57df14c3715dba6f2772571fa8c84f1527"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (eq_nat_dec v1 n).",
            "VernacExtend",
            "1f1e187950bca29ca9915e0f7274c70930293e7d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim b0.",
            "VernacExtend",
            "4506652c796867e8c9be690f8925bec68461304f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (eq_nat_dec v2 n).",
            "VernacExtend",
            "cedb747de038a8a405d19e3f520cf4c76fbd15a1"
        ],
        [
            "rewrite subTermNil.",
            "VernacExtend",
            "680ef84468353939d1269241c3bd5566fba803de"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (eq_nat_dec v1 n).",
            "VernacExtend",
            "1f1e187950bca29ca9915e0f7274c70930293e7d"
        ],
        [
            "elim b; auto.",
            "VernacExtend",
            "4e727fcd59e1474a52ec73620188fd67d9ebc23d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subSubTerms : forall (n : nat) (ts : Terms n) (v1 v2 : nat) (s1 s2 : Term), v1 <> v2 -> ~ In v1 (freeVarTerm L s2) -> substituteTerms L n (substituteTerms L n ts v1 s1) v2 s2 = substituteTerms L n (substituteTerms L n ts v2 s2) v1 (substituteTerm L s1 v2 s2).",
            "VernacStartTheoremProof",
            "171279c679008b2d303aee687424e576c2d54954"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction ts as [| n t ts Hrects].",
            "VernacExtend",
            "4a72ca30982cf76b6ad63620c27c0db203f25a01"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrects.",
            "VernacExtend",
            "8222d3838095a7731870da03c025d94cecf3f539"
        ],
        [
            "rewrite subSubTerm.",
            "VernacExtend",
            "387f55d0a12c30e6bdc6527192c4e231bff76aef"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subSubFormula : forall (f : Formula) (v1 v2 : nat) (s1 s2 : Term), v1 <> v2 -> ~ In v1 (freeVarTerm L s2) -> forall T : System, SysPrf T (iffH (substituteFormula L (substituteFormula L f v1 s1) v2 s2) (substituteFormula L (substituteFormula L f v2 s2) v1 (substituteTerm L s1 v2 s2))).",
            "VernacStartTheoremProof",
            "3cdfb57c418e552486bf6ea7631276a6dfe6cb53"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (sysExtend L) with (Empty_set Formula).",
            "VernacExtend",
            "1d1f7eacd522f538ab3a9663f04ed85a8b4b0012"
        ],
        [
            "unfold Included in |- *.",
            "VernacExtend",
            "c51ce0cf8e35f07a67db2a482d290f743d798a70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "elim f using Formula_depth_ind2; intros.",
            "VernacExtend",
            "ef3816c1f9b4719fec3cf1be86da5a09e68bb717"
        ],
        [
            "repeat rewrite (subFormulaEqual L).",
            "VernacExtend",
            "cbde6a7d5f5a0f047fb40c37521db50988909b46"
        ],
        [
            "rewrite subSubTerm; auto.",
            "VernacExtend",
            "c1eabc0576e1c907041371ce9a67eaf2566f11d1"
        ],
        [
            "rewrite (subSubTerm t0); auto.",
            "VernacExtend",
            "5f214c60f6adeaf1186e9fcbd8a9011f6cbfeeea"
        ],
        [
            "apply (iffRefl L).",
            "VernacExtend",
            "a3d318ecb0e1244329572f9a8475be4a4b5c6d20"
        ],
        [
            "repeat rewrite (subFormulaRelation L).",
            "VernacExtend",
            "ceeb8a87c64270f2265cb706fd9cf2ac65e0b869"
        ],
        [
            "rewrite subSubTerms; auto.",
            "VernacExtend",
            "5c89f2dad4dd2cbff886e26cf6b5de757b866ceb"
        ],
        [
            "apply (iffRefl L).",
            "VernacExtend",
            "a3d318ecb0e1244329572f9a8475be4a4b5c6d20"
        ],
        [
            "repeat rewrite (subFormulaImp L).",
            "VernacExtend",
            "1255f16b5fa3b2edb1b6036bc1f5eeeb5bf30e4c"
        ],
        [
            "apply (reduceImp L); auto.",
            "VernacExtend",
            "139cf817e7722d11157e2aec1981078771bca32e"
        ],
        [
            "repeat rewrite (subFormulaNot L).",
            "VernacExtend",
            "253a2a02b0de0c69a4f2bb26e7e31660468679e6"
        ],
        [
            "apply (reduceNot L); auto.",
            "VernacExtend",
            "41170dfb9e64972997b71ce594ec43f65f57c7ce"
        ],
        [
            "set (v' := newVar (v1 :: v2 :: freeVarFormula L (fol.forallH L v a) ++ freeVarTerm L s1 ++ freeVarTerm L s2)) in *.",
            "VernacExtend",
            "72991b768f5aba046c30093479938fbc6d7ba5b3"
        ],
        [
            "assert (v' <> v1).",
            "VernacExtend",
            "42b5f7f91e08f4a355dfd491499b833256616127"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (newVar1 (v1 :: v2 :: freeVarFormula L (fol.forallH L v a) ++ freeVarTerm L s1 ++ freeVarTerm L s2)).",
            "VernacExtend",
            "18bd47bb4a3fae1e78495ab686f307e190c780c2"
        ],
        [
            "fold v' in |- *.",
            "VernacExtend",
            "bc59700716a92aeb7b442b0b752a154996f22c15"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (v' <> v2).",
            "VernacExtend",
            "44c65412b1a1079b8ccc4c36743bf2ae551e933e"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (newVar1 (v1 :: v2 :: freeVarFormula L (fol.forallH L v a) ++ freeVarTerm L s1 ++ freeVarTerm L s2)).",
            "VernacExtend",
            "18bd47bb4a3fae1e78495ab686f307e190c780c2"
        ],
        [
            "fold v' in |- *.",
            "VernacExtend",
            "bc59700716a92aeb7b442b0b752a154996f22c15"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (~ In v' (freeVarFormula L (fol.forallH L v a))).",
            "VernacExtend",
            "cde880917858a5ddee099f4beac44a481a662104"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (newVar1 (v1 :: v2 :: freeVarFormula L (fol.forallH L v a) ++ freeVarTerm L s1 ++ freeVarTerm L s2)).",
            "VernacExtend",
            "18bd47bb4a3fae1e78495ab686f307e190c780c2"
        ],
        [
            "fold v' in |- *.",
            "VernacExtend",
            "bc59700716a92aeb7b442b0b752a154996f22c15"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "assert (~ In v' (freeVarTerm L s1)).",
            "VernacExtend",
            "1798b6a8362a45842ad52c4720e246fc250963f5"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (newVar1 (v1 :: v2 :: freeVarFormula L (fol.forallH L v a) ++ freeVarTerm L s1 ++ freeVarTerm L s2)).",
            "VernacExtend",
            "18bd47bb4a3fae1e78495ab686f307e190c780c2"
        ],
        [
            "fold v' in |- *.",
            "VernacExtend",
            "bc59700716a92aeb7b442b0b752a154996f22c15"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat right.",
            "VernacExtend",
            "0f53208403a49698156a837fdeea29441663e400"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "assert (~ In v' (freeVarTerm L s2)).",
            "VernacExtend",
            "5e4e7e01d498266150b9ae064b551e160fd6a451"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (newVar1 (v1 :: v2 :: freeVarFormula L (fol.forallH L v a) ++ freeVarTerm L s1 ++ freeVarTerm L s2)).",
            "VernacExtend",
            "18bd47bb4a3fae1e78495ab686f307e190c780c2"
        ],
        [
            "fold v' in |- *.",
            "VernacExtend",
            "bc59700716a92aeb7b442b0b752a154996f22c15"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat right.",
            "VernacExtend",
            "0f53208403a49698156a837fdeea29441663e400"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "apply impE with (iffH (substituteFormula L (substituteFormula L (fol.forallH L v' (substituteFormula L a v (var v'))) v1 s1) v2 s2) (substituteFormula L (substituteFormula L (fol.forallH L v' (substituteFormula L a v (var v'))) v2 s2) v1 (substituteTerm L s1 v2 s2))).",
            "VernacExtend",
            "9962896c391a2732eb5c30ca9553663e21b8f4d3"
        ],
        [
            "apply (iffE2 L).",
            "VernacExtend",
            "62c7e41dbf87987d31968d8436e819e1607cfc19"
        ],
        [
            "assert (folProof.SysPrf L (Empty_set Formula) (iffH (fol.forallH L v a) (fol.forallH L v' (substituteFormula L a v (var v'))))).",
            "VernacExtend",
            "b885b14df94babdae1416bb5922fb494b0f92cf9"
        ],
        [
            "apply rebindForall.",
            "VernacExtend",
            "27ade82d677f67cab6898f70e24c8d7065c6d3bc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "repeat first [ apply (reduceIff L) | apply (reduceSub L) | apply (notInFreeVarSys L) ]; auto.",
            "VernacExtend",
            "7dd92fede851e3177777e0be9a3ba3c8f7c2be1a"
        ],
        [
            "assert (forall (f : Formula) (x v : nat) (s : Term), x <> v -> ~ In x (freeVarTerm L s) -> substituteFormula L (forallH x f) v s = forallH x (substituteFormula L f v s)).",
            "VernacExtend",
            "7cd1e8a12e314c39766bf6e59cd5016e94a8cd1a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (subFormulaForall L).",
            "VernacExtend",
            "3a05e761e8311376e97dec92a92ddbea9a745577"
        ],
        [
            "induction (eq_nat_dec x v0).",
            "VernacExtend",
            "141623f64e6075730713f59435fb6d82acdaa2bf"
        ],
        [
            "elim H7; auto.",
            "VernacExtend",
            "0fa3a00794d6c2aa141e350e86eae00386e4fd93"
        ],
        [
            "induction (In_dec eq_nat_dec x (freeVarTerm L s)).",
            "VernacExtend",
            "7550ad406ecebaa2085ca757c5881f39957fec9c"
        ],
        [
            "elim H8; auto.",
            "VernacExtend",
            "7db1d31ee308e578300e90f57e1a136d28c6b2cd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "repeat rewrite H7; auto.",
            "VernacExtend",
            "c22e39f72ab5410b60247c8fea7b2fff4291dec2"
        ],
        [
            "apply (reduceForall L).",
            "VernacExtend",
            "b32c67a8c7442e067593e61ecb27e50cd9f0947a"
        ],
        [
            "apply (notInFreeVarSys L).",
            "VernacExtend",
            "24fc11b419ff249e8e75aabea1c62815181ad035"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply eqDepth with a.",
            "VernacExtend",
            "27a5cd5f509616fc6506f21373b404e3c389ed59"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply subFormulaDepth.",
            "VernacExtend",
            "4984b75331d878c943aa318444e72d1607ce5388"
        ],
        [
            "apply depthForall.",
            "VernacExtend",
            "607aa2f5fa7a80d3212312ca8f650205d3d587b2"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction (freeVarSubTerm3 _ _ _ _ _ H8).",
            "VernacExtend",
            "9399025959c36edce31733f0d11c078d59e5e324"
        ],
        [
            "elim H5.",
            "VernacExtend",
            "d649d41a7a1aea4dafe45e4b1d582e7e7df0a9a2"
        ],
        [
            "eapply In_list_remove1.",
            "VernacExtend",
            "b6b28153aa75f2c6a57f8178f189dba7003cf48c"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End More_Logic_Rules.",
            "VernacEndSegment",
            "9061c5b9d3ebcf8c92a53e2300985e37eded1b88"
        ]
    ],
    "proofs": [
        {
            "name": "subSubTerm",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim t using Term_Terms_ind with (P0 := fun (n : nat) (ts : fol.Terms L n) => substituteTerms L n (substituteTerms L n ts v1 s1) v2 s2 = substituteTerms L n (substituteTerms L n ts v2 s2) v1 (substituteTerm L s1 v2 s2)); simpl in |- *; intros.",
                        "VernacExtend",
                        "3c0302882cd72771c1c4389581e061de352247f7"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v1 n).",
                        "VernacExtend",
                        "1f1e187950bca29ca9915e0f7274c70930293e7d"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v2 n).",
                        "VernacExtend",
                        "cedb747de038a8a405d19e3f520cf4c76fbd15a1"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "transitivity n; auto.",
                        "VernacExtend",
                        "6b6eec57df14c3715dba6f2772571fa8c84f1527"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v1 n).",
                        "VernacExtend",
                        "1f1e187950bca29ca9915e0f7274c70930293e7d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim b0.",
                        "VernacExtend",
                        "4506652c796867e8c9be690f8925bec68461304f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v2 n).",
                        "VernacExtend",
                        "cedb747de038a8a405d19e3f520cf4c76fbd15a1"
                    ]
                },
                {
                    "command": [
                        "rewrite subTermNil.",
                        "VernacExtend",
                        "680ef84468353939d1269241c3bd5566fba803de"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v1 n).",
                        "VernacExtend",
                        "1f1e187950bca29ca9915e0f7274c70930293e7d"
                    ]
                },
                {
                    "command": [
                        "elim b; auto.",
                        "VernacExtend",
                        "4e727fcd59e1474a52ec73620188fd67d9ebc23d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subSubTerms",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction ts as [| n t ts Hrects].",
                        "VernacExtend",
                        "4a72ca30982cf76b6ad63620c27c0db203f25a01"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrects.",
                        "VernacExtend",
                        "8222d3838095a7731870da03c025d94cecf3f539"
                    ]
                },
                {
                    "command": [
                        "rewrite subSubTerm.",
                        "VernacExtend",
                        "387f55d0a12c30e6bdc6527192c4e231bff76aef"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}