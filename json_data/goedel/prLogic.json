{
    "filename": "prLogic.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import primRec.",
            "VernacRequire",
            "75a83dde535ddae28126e82cc7ff15f05b8e505b"
        ],
        [
            "Require Import code.",
            "VernacRequire",
            "2d8bc6295195cee8bb6ef6c570d4e03c177e5352"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import cPair.",
            "VernacRequire",
            "245e4bc1e0b715e3965e2d304aa9ad9f5eb93662"
        ],
        [
            "Lemma codeForallIsPR : isPR 2 (fun a b : nat => cPair 3 (cPair a b)).",
            "VernacStartTheoremProof",
            "42f7ceccad86022b1cdd82b114045eb3cf58e4d1"
        ],
        [
            "apply compose2_2IsPR with (f := fun a b : nat => 3).",
            "VernacExtend",
            "64d862f61be8400ed83083a582864712f46b40b9"
        ],
        [
            "apply filter10IsPR with (g := fun _ : nat => 3).",
            "VernacExtend",
            "b8866c9d2d4c9b7c87a202c7da2657b3780e4961"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeNotIsPR : isPR 1 codeNot.",
            "VernacStartTheoremProof",
            "e85a2ebccff6da21b3223832af28287a2e6c8f49"
        ],
        [
            "unfold codeNot in |- *.",
            "VernacExtend",
            "7563f9657e0d62f83547252f532d1c5c3be51f3c"
        ],
        [
            "apply compose1_2IsPR with (f := fun a : nat => 2) (f' := fun a : nat => a).",
            "VernacExtend",
            "caaa7de9581e5d4985fb9d71a47b72b8488b776e"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeImpIsPR : isPR 2 codeImp.",
            "VernacStartTheoremProof",
            "c5745cdefb3f21f533c30bc3afb51f7161cca4fc"
        ],
        [
            "unfold codeImp in |- *.",
            "VernacExtend",
            "dd23bf6bdc1f3ba815ee174513e516355daf93c0"
        ],
        [
            "apply compose2_2IsPR with (f := fun a b : nat => 1).",
            "VernacExtend",
            "d190e8e8adccff2c16c06bd1fa3461f46fd83e9f"
        ],
        [
            "apply filter10IsPR with (g := fun _ : nat => 1).",
            "VernacExtend",
            "b23baeb83b401cb3543a338ae23a5f8c3e580492"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "codeForallIsPR",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "apply compose2_2IsPR with (f := fun a b : nat => 3).",
                        "VernacExtend",
                        "64d862f61be8400ed83083a582864712f46b40b9"
                    ]
                },
                {
                    "command": [
                        "apply filter10IsPR with (g := fun _ : nat => 3).",
                        "VernacExtend",
                        "b8866c9d2d4c9b7c87a202c7da2657b3780e4961"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeNotIsPR",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "unfold codeNot in |- *.",
                        "VernacExtend",
                        "7563f9657e0d62f83547252f532d1c5c3be51f3c"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (f := fun a : nat => 2) (f' := fun a : nat => a).",
                        "VernacExtend",
                        "caaa7de9581e5d4985fb9d71a47b72b8488b776e"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeImpIsPR",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "unfold codeImp in |- *.",
                        "VernacExtend",
                        "dd23bf6bdc1f3ba815ee174513e516355daf93c0"
                    ]
                },
                {
                    "command": [
                        "apply compose2_2IsPR with (f := fun a b : nat => 1).",
                        "VernacExtend",
                        "d190e8e8adccff2c16c06bd1fa3461f46fd83e9f"
                    ]
                },
                {
                    "command": [
                        "apply filter10IsPR with (g := fun _ : nat => 1).",
                        "VernacExtend",
                        "b23baeb83b401cb3543a338ae23a5f8c3e580492"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}