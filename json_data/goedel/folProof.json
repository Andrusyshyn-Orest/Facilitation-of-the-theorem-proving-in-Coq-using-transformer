{
    "filename": "folProof.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Export fol.",
            "VernacRequire",
            "e89223fbad53b2c4558341a3ca405836853d4b4b"
        ],
        [
            "Require Import folProp.",
            "VernacRequire",
            "9a8c9e707f6075129a70023b069f5369c9a9b295"
        ],
        [
            "Section ProofH.",
            "VernacBeginSection",
            "5e2fd6de64fcac57848367304f347a0afb896e99"
        ],
        [
            "Variable L : Language.",
            "VernacAssumption",
            "96b36a9b874de21fe37f18071cb929f4dd758042"
        ],
        [
            "Let Formula := Formula L.",
            "VernacDefinition",
            "3d32ab58ebf838c2a87fdc2e6124bfb77b6c785b"
        ],
        [
            "Let Formulas := Formulas L.",
            "VernacDefinition",
            "3e58c6132e0d63871e6929fdf8514df1ca805073"
        ],
        [
            "Let System := System L.",
            "VernacDefinition",
            "cca6eba541a212b17367017275b463c5608aa66d"
        ],
        [
            "Let Term := Term L.",
            "VernacDefinition",
            "38e1762c57b9701000a89090666997db5d597a34"
        ],
        [
            "Let Terms := Terms L.",
            "VernacDefinition",
            "ac274971655c7d87e7a366522fa4f11f94117e84"
        ],
        [
            "Let var := var L.",
            "VernacDefinition",
            "387b134d06ce79979638575c6631443c7143b913"
        ],
        [
            "Let apply := apply L.",
            "VernacDefinition",
            "171f7b3946ad56564d4a09c4656739ed07770a44"
        ],
        [
            "Let equal := equal L.",
            "VernacDefinition",
            "a97cb35845ad0374b8596fd6d66f5c04065714a3"
        ],
        [
            "Let atomic := atomic L.",
            "VernacDefinition",
            "7638f14f126e2c8e95075078253a597eea7fd9ac"
        ],
        [
            "Let impH := impH L.",
            "VernacDefinition",
            "b3d855010528c91b0d1d6c2d64740a3e6e7417a6"
        ],
        [
            "Let notH := notH L.",
            "VernacDefinition",
            "096b324518e16c165cd803fe11de91b995393f24"
        ],
        [
            "Let iffH := iffH L.",
            "VernacDefinition",
            "c97762ff458ff51e91985121c0ae88a85a82e865"
        ],
        [
            "Let forallH := forallH L.",
            "VernacDefinition",
            "eaf4bad969f5571f26e0bbda77b3d70e626f3102"
        ],
        [
            "Definition nVars (n : nat) : Terms n * Terms n.",
            "VernacDefinition",
            "ebc3925f53073cd247c3e9f2377029f08704dc6a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact (Tnil L).",
            "VernacExtend",
            "b66ac1631df9c5efe523eb2be595923de5575da7"
        ],
        [
            "exact (Tnil L).",
            "VernacExtend",
            "b66ac1631df9c5efe523eb2be595923de5575da7"
        ],
        [
            "induction Hrecn as (a, b).",
            "VernacExtend",
            "b4003bc9e20b51abb5d2d8d7b118f4a2e617baea"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact (var (n + n)).",
            "VernacExtend",
            "b8960d3da73b011c739381979642b5020890e4ca"
        ],
        [
            "exact a.",
            "VernacExtend",
            "22ff3beb9eb73525898c3fe8426139b9069c03e7"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact (var (S (n + n))).",
            "VernacExtend",
            "114c2a02b5b05ab201f5fb1016626384517eefdd"
        ],
        [
            "exact b.",
            "VernacExtend",
            "cd8b8a1426e763e9b929d0b1b000957dbde080cc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition AxmEq4 (R : Relations L) : Formula.",
            "VernacDefinition",
            "6d35b41780d63bfb6114a65439243d29d38da30b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall (f : Formula) (n : nat), Formula).",
            "VernacExtend",
            "e629feeb19b667133c0c6aadacb235a04426bbfe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "exact f.",
            "VernacExtend",
            "98a753342743704f2b7fafdf74e55f2f2ae53883"
        ],
        [
            "exact (impH (equal (var (n + n)) (var (S (n + n)))) Hrecn).",
            "VernacExtend",
            "e9c9433dd2a7dbdf0fc8e786a61f5564eaca2bc7"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "induction (nVars (arity L (inl _ R))).",
            "VernacExtend",
            "5cfaf8da8f994231044fc69487918616e87b5fc0"
        ],
        [
            "apply (iffH (atomic R a) (atomic R b)).",
            "VernacExtend",
            "9f273af54bead2ac9a588341e7788cb9d8220ca6"
        ],
        [
            "apply (arity L (inl _ R)).",
            "VernacExtend",
            "ce05fccff3b7bf1acae92724bbc2a5aae7b39970"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition AxmEq5 (f : Functions L) : Formula.",
            "VernacDefinition",
            "96e5b400383f270ebff9d2b1175697caf94ea582"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall (f : Formula) (n : nat), Formula).",
            "VernacExtend",
            "e629feeb19b667133c0c6aadacb235a04426bbfe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "exact f0.",
            "VernacExtend",
            "52ba5fb8bce1a30186c98158c708adf4b92a007a"
        ],
        [
            "exact (impH (equal (var (n + n)) (var (S (n + n)))) Hrecn).",
            "VernacExtend",
            "e9c9433dd2a7dbdf0fc8e786a61f5564eaca2bc7"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "induction (nVars (arity L (inr _ f))).",
            "VernacExtend",
            "49a6d965c493bcdd8af959f35d80f7ef0e4ef20b"
        ],
        [
            "apply (equal (apply f a) (apply f b)).",
            "VernacExtend",
            "647c42e6af6c8fc3e7bc96faf8acb53ce7a6a41d"
        ],
        [
            "apply (arity L (inr _ f)).",
            "VernacExtend",
            "afd38a7088c06aa0e5dc2d00ec84761e62e05a94"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Inductive Prf : Formulas -> Formula -> Set := | AXM : forall A : Formula, Prf (A :: nil) A | MP : forall (Axm1 Axm2 : Formulas) (A B : Formula), Prf Axm1 (impH A B) -> Prf Axm2 A -> Prf (Axm1 ++ Axm2) B | GEN : forall (Axm : Formulas) (A : Formula) (v : nat), ~ In v (freeVarListFormula L Axm) -> Prf Axm A -> Prf Axm (forallH v A) | IMP1 : forall A B : Formula, Prf nil (impH A (impH B A)) | IMP2 : forall A B C : Formula, Prf nil (impH (impH A (impH B C)) (impH (impH A B) (impH A C))) | CP : forall A B : Formula, Prf nil (impH (impH (notH A) (notH B)) (impH B A)) | FA1 : forall (A : Formula) (v : nat) (t : Term), Prf nil (impH (forallH v A) (substituteFormula L A v t)) | FA2 : forall (A : Formula) (v : nat), ~ In v (freeVarFormula L A) -> Prf nil (impH A (forallH v A)) | FA3 : forall (A B : Formula) (v : nat), Prf nil (impH (forallH v (impH A B)) (impH (forallH v A) (forallH v B))) | EQ1 : Prf nil (equal (var 0) (var 0)) | EQ2 : Prf nil (impH (equal (var 0) (var 1)) (equal (var 1) (var 0))) | EQ3 : Prf nil (impH (equal (var 0) (var 1)) (impH (equal (var 1) (var 2)) (equal (var 0) (var 2)))) | EQ4 : forall R : Relations L, Prf nil (AxmEq4 R) | EQ5 : forall f : Functions L, Prf nil (AxmEq5 f).",
            "VernacInductive",
            "bd55eab1cc13add1a4c3d70aa81bbf45e441cd34"
        ],
        [
            "Definition SysPrf (T : System) (f : Formula) := exists Axm : Formulas, (exists prf : Prf Axm f, (forall g : Formula, In g Axm -> mem _ T g)).",
            "VernacDefinition",
            "26d46043733a9f83660d5b8e0684a27bf25c3428"
        ],
        [
            "Definition Inconsistent (T : System) := forall f : Formula, SysPrf T f.",
            "VernacDefinition",
            "c6d66d172faa57584c2f89ba968ad014fcfea652"
        ],
        [
            "Definition Consistent (T : System) := exists f : Formula, ~ SysPrf T f.",
            "VernacDefinition",
            "51a1d693cabe298bfa63e00901bda6c52b93b4a5"
        ],
        [
            "End ProofH.",
            "VernacEndSegment",
            "abd4b5e601e97e6a2f1ab37e9a0bd42d0d867f36"
        ]
    ],
    "proofs": [
        {
            "name": "nVars",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact (Tnil L).",
                        "VernacExtend",
                        "b66ac1631df9c5efe523eb2be595923de5575da7"
                    ]
                },
                {
                    "command": [
                        "exact (Tnil L).",
                        "VernacExtend",
                        "b66ac1631df9c5efe523eb2be595923de5575da7"
                    ]
                },
                {
                    "command": [
                        "induction Hrecn as (a, b).",
                        "VernacExtend",
                        "b4003bc9e20b51abb5d2d8d7b118f4a2e617baea"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact (var (n + n)).",
                        "VernacExtend",
                        "b8960d3da73b011c739381979642b5020890e4ca"
                    ]
                },
                {
                    "command": [
                        "exact a.",
                        "VernacExtend",
                        "22ff3beb9eb73525898c3fe8426139b9069c03e7"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact (var (S (n + n))).",
                        "VernacExtend",
                        "114c2a02b5b05ab201f5fb1016626384517eefdd"
                    ]
                },
                {
                    "command": [
                        "exact b.",
                        "VernacExtend",
                        "cd8b8a1426e763e9b929d0b1b000957dbde080cc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "AxmEq4",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall (f : Formula) (n : nat), Formula).",
                        "VernacExtend",
                        "e629feeb19b667133c0c6aadacb235a04426bbfe"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "exact f.",
                        "VernacExtend",
                        "98a753342743704f2b7fafdf74e55f2f2ae53883"
                    ]
                },
                {
                    "command": [
                        "exact (impH (equal (var (n + n)) (var (S (n + n)))) Hrecn).",
                        "VernacExtend",
                        "e9c9433dd2a7dbdf0fc8e786a61f5564eaca2bc7"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "induction (nVars (arity L (inl _ R))).",
                        "VernacExtend",
                        "5cfaf8da8f994231044fc69487918616e87b5fc0"
                    ]
                },
                {
                    "command": [
                        "apply (iffH (atomic R a) (atomic R b)).",
                        "VernacExtend",
                        "9f273af54bead2ac9a588341e7788cb9d8220ca6"
                    ]
                },
                {
                    "command": [
                        "apply (arity L (inl _ R)).",
                        "VernacExtend",
                        "ce05fccff3b7bf1acae92724bbc2a5aae7b39970"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "AxmEq5",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (forall (f : Formula) (n : nat), Formula).",
                        "VernacExtend",
                        "e629feeb19b667133c0c6aadacb235a04426bbfe"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "exact f0.",
                        "VernacExtend",
                        "52ba5fb8bce1a30186c98158c708adf4b92a007a"
                    ]
                },
                {
                    "command": [
                        "exact (impH (equal (var (n + n)) (var (S (n + n)))) Hrecn).",
                        "VernacExtend",
                        "e9c9433dd2a7dbdf0fc8e786a61f5564eaca2bc7"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "induction (nVars (arity L (inr _ f))).",
                        "VernacExtend",
                        "49a6d965c493bcdd8af959f35d80f7ef0e4ef20b"
                    ]
                },
                {
                    "command": [
                        "apply (equal (apply f a) (apply f b)).",
                        "VernacExtend",
                        "647c42e6af6c8fc3e7bc96faf8acb53ce7a6a41d"
                    ]
                },
                {
                    "command": [
                        "apply (arity L (inr _ f)).",
                        "VernacExtend",
                        "afd38a7088c06aa0e5dc2d00ec84761e62e05a94"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}