{
    "filename": "NNtheory.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import folLogic3.",
            "VernacRequire",
            "5313da917cbd8284650f06a63d4e78e11cf70419"
        ],
        [
            "Require Import folProp.",
            "VernacRequire",
            "9a8c9e707f6075129a70023b069f5369c9a9b295"
        ],
        [
            "Require Import subProp.",
            "VernacRequire",
            "958f8351edff1532d30f0dc5037e19d46aa66886"
        ],
        [
            "Require Export NN.",
            "VernacRequire",
            "2f3f6af17bb8acde99644c438db185d41fe2f355"
        ],
        [
            "Lemma natNE : forall a b : nat, a <> b -> SysPrf NN (notH (equal (natToTerm a) (natToTerm b))).",
            "VernacStartTheoremProof",
            "f310ec7121ed935f8447f277e129f5e6198ec97e"
        ],
        [
            "assert (forall a b : nat, a < b -> SysPrf NN (notH (equal (natToTerm a) (natToTerm b)))).",
            "VernacExtend",
            "878141c47249874ebfce241559491e4aaecf75c5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction a as [| a Hreca]; intros.",
            "VernacExtend",
            "bdf96570fd0a436206970218ab04c96801c2ff0b"
        ],
        [
            "destruct b as [| n].",
            "VernacExtend",
            "6e19e5e0107e7679a54b8b8a684909e3609f0f56"
        ],
        [
            "elim (lt_n_O _ H).",
            "VernacExtend",
            "b93451b1a30fa3f24613ad7b0441907b3427a80f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply impE with (notH (equal (Succ (natToTerm n)) Zero)).",
            "VernacExtend",
            "5ad32035fbb449815d72d9033702cfd6b7671391"
        ],
        [
            "apply cp2.",
            "VernacExtend",
            "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply eqSym.",
            "VernacExtend",
            "c72146c5c38717d561dda616c25a51523114224c"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply nn1.",
            "VernacExtend",
            "c903514c0a1c26bc95236b52616257c3109264ed"
        ],
        [
            "destruct b as [| n].",
            "VernacExtend",
            "6e19e5e0107e7679a54b8b8a684909e3609f0f56"
        ],
        [
            "elim (lt_n_O _ H).",
            "VernacExtend",
            "b93451b1a30fa3f24613ad7b0441907b3427a80f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply impE with (notH (equal (natToTerm a) (natToTerm n))).",
            "VernacExtend",
            "5176f50979eee51f1c87aef1ebd4b6df907a3758"
        ],
        [
            "apply cp2.",
            "VernacExtend",
            "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
        ],
        [
            "apply nn2.",
            "VernacExtend",
            "cc381a83ced1dddb0b44ee921f011a9bbc099103"
        ],
        [
            "apply Hreca.",
            "VernacExtend",
            "6fc9468528c6f36692617e8183c9aa731135bf44"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (nat_total_order _ _ H0).",
            "VernacExtend",
            "2b772f61899bb5f02351387798c1701c8cf0ca50"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply impE with (notH (equal (natToTerm b) (natToTerm a))).",
            "VernacExtend",
            "c3c9a62f61fff60ae9e053da2e21879e85685b3e"
        ],
        [
            "apply cp2.",
            "VernacExtend",
            "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply eqSym.",
            "VernacExtend",
            "c72146c5c38717d561dda616c25a51523114224c"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natLE : forall a b : nat, b <= a -> SysPrf NN (notH (LT (natToTerm a) (natToTerm b))).",
            "VernacStartTheoremProof",
            "25746b9d721b1cae81ede799bc96269b8912904d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction b as [| b Hrecb].",
            "VernacExtend",
            "fec7634b02a794607b0227223842e0197019a2f0"
        ],
        [
            "apply nn7.",
            "VernacExtend",
            "359606b460bc7f2449a0248196cdbcbe2a938a92"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply impE with (notH (orH (LT (natToTerm a) (natToTerm b)) (equal (natToTerm a) (natToTerm b)))).",
            "VernacExtend",
            "b42b213245763a08f7754a3ddd1b750ee6f1db0a"
        ],
        [
            "apply cp2.",
            "VernacExtend",
            "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
        ],
        [
            "apply nn8.",
            "VernacExtend",
            "2d2abfdc832d89ccb4c4bb8a00b871d2d428c9b5"
        ],
        [
            "apply nOr.",
            "VernacExtend",
            "92c183131733af2e45678c033993d5b5d3167470"
        ],
        [
            "apply andI.",
            "VernacExtend",
            "f9d3279a8b72d3210f5050fba9800fa4bb631a97"
        ],
        [
            "apply Hrecb.",
            "VernacExtend",
            "80670c41dde2e82ba232122d512977ca4333ade0"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "apply le_S.",
            "VernacExtend",
            "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply natNE.",
            "VernacExtend",
            "c9f1ef680220c9ab1f5c7f987ee94ba4bca619d1"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "apply (le_not_lt _ _ H).",
            "VernacExtend",
            "0d75ceda0a4472d4f0b23846e5984c3a8a45cad6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natLT : forall a b : nat, a < b -> SysPrf NN (LT (natToTerm a) (natToTerm b)).",
            "VernacStartTheoremProof",
            "973d02847e04cdadfa812b6c0e62347aae6528e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply orE.",
            "VernacExtend",
            "0d3a571a595044d4ba6628c14d3b593711104f10"
        ],
        [
            "apply nn9 with (a := natToTerm b) (b := natToTerm a).",
            "VernacExtend",
            "e4b0ac861f07776b0e094bb16c2618c6bcb31ec7"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply contradiction with (LT (natToTerm b) (natToTerm a)).",
            "VernacExtend",
            "633b7fb86055ba00876a38a7bf3eb10fdc9cffd6"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply natLE.",
            "VernacExtend",
            "baa43dea69b02d42a8c2f31aff1490816b1b2b37"
        ],
        [
            "apply lt_le_weak.",
            "VernacExtend",
            "d7437f5b1907802e4133984009174fdcf6e7411b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply orSys.",
            "VernacExtend",
            "c25bda4a2012ba31fecfcec5d73d50f7f983e806"
        ],
        [
            "apply contradiction with (equal (natToTerm b) (natToTerm a)).",
            "VernacExtend",
            "e807fb7ef9d2866a7db8a7888c64b2c8ae31208d"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply natNE.",
            "VernacExtend",
            "c9f1ef680220c9ab1f5c7f987ee94ba4bca619d1"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "apply (le_not_lt _ _ H).",
            "VernacExtend",
            "0d75ceda0a4472d4f0b23846e5984c3a8a45cad6"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natPlus : forall a b : nat, SysPrf NN (equal (Plus (natToTerm a) (natToTerm b)) (natToTerm (a + b))).",
            "VernacStartTheoremProof",
            "662652036fec666d8b51db622903397bf29da813"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction b as [| b Hrecb].",
            "VernacExtend",
            "fec7634b02a794607b0227223842e0197019a2f0"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply nn3.",
            "VernacExtend",
            "7c8d0bef7833a700b3a1cb6a3351518dded590ad"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply eqTrans with (Succ (Plus (natToTerm a) (natToTerm b))).",
            "VernacExtend",
            "2af1c23b09e40ea826546eb825ffe26aebf80dff"
        ],
        [
            "apply nn4.",
            "VernacExtend",
            "379fe18be87ba94318c6f4e919061fa3fe6d6d10"
        ],
        [
            "apply eqSucc.",
            "VernacExtend",
            "386fe73312b635c8f04886fc66752d3176eff048"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply Hrecb.",
            "VernacExtend",
            "80670c41dde2e82ba232122d512977ca4333ade0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma natTimes : forall a b : nat, SysPrf NN (equal (Times (natToTerm a) (natToTerm b)) (natToTerm (a * b))).",
            "VernacStartTheoremProof",
            "889799498af8186e741f5a2336e778430ed1cf04"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction b as [| b Hrecb].",
            "VernacExtend",
            "fec7634b02a794607b0227223842e0197019a2f0"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply nn5.",
            "VernacExtend",
            "1e76e93412148308b1380bdc1e7599e72ad71a16"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "eapply eqTrans.",
            "VernacExtend",
            "354c90ef14368b031d4f0f28d9c0094acf8a9322"
        ],
        [
            "apply nn6.",
            "VernacExtend",
            "43e55d6f8a7fc0680f9fbadb1f8c006608e0a87a"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply eqTrans with (Plus (natToTerm (b * a)) (natToTerm a)).",
            "VernacExtend",
            "d993ff224559f0600b67c0facc8a9cb49df5b325"
        ],
        [
            "apply eqPlus.",
            "VernacExtend",
            "4ee2547957623dcc6eb6dc9be69e5acce6b2a0a3"
        ],
        [
            "rewrite mult_comm.",
            "VernacExtend",
            "1618bf07e1d67d2e2ac34824fd6979892b5cec8f"
        ],
        [
            "apply Hrecb.",
            "VernacExtend",
            "80670c41dde2e82ba232122d512977ca4333ade0"
        ],
        [
            "apply eqRefl.",
            "VernacExtend",
            "3ad8e37f8390813c8bd02eb3ffc8248edee78d95"
        ],
        [
            "apply natPlus.",
            "VernacExtend",
            "f9bdc826ae12a976674ab9e9b3c0add92dde66b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma boundedLT : forall (m : nat) (a : Formula) (x : nat), (forall n : nat, n < m -> SysPrf NN (substituteFormula LNN a x (natToTerm n))) -> SysPrf NN (impH (LT (var x) (natToTerm m)) a).",
            "VernacStartTheoremProof",
            "f0a4011352a2321bf1313686a354b8d1173beea5"
        ],
        [
            "simple induction m; intros.",
            "VernacExtend",
            "b1272e4f0d08d58047b1cee9226adc95a39ad7b7"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply contradiction with (LT (var x) (natToTerm 0)).",
            "VernacExtend",
            "de024375f1c17d4feb20aa7c11856725febc6b12"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply nn7.",
            "VernacExtend",
            "359606b460bc7f2449a0248196cdbcbe2a938a92"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "eapply orE.",
            "VernacExtend",
            "0d3a571a595044d4ba6628c14d3b593711104f10"
        ],
        [
            "apply impE with (LT (var x) (natToTerm (S n))).",
            "VernacExtend",
            "717e4be553319383e41dc1ccde078cc931896759"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply nn8.",
            "VernacExtend",
            "2d2abfdc832d89ccb4c4bb8a00b871d2d428c9b5"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply lt_S.",
            "VernacExtend",
            "47477bda68b8f0c94efef6095ed80a97ae3f2827"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "rewrite <- (subFormulaId LNN a x).",
            "VernacExtend",
            "b3be88d57900c9cbdd090f6dfab992de78716b15"
        ],
        [
            "apply impE with (substituteFormula LNN a x (natToTerm n)).",
            "VernacExtend",
            "62b5e323d019d560df556725d93e93d77966a265"
        ],
        [
            "apply (subWithEquals LNN).",
            "VernacExtend",
            "5f53b7a36bc2461829d2e71be83a076e924542e7"
        ],
        [
            "apply eqSym.",
            "VernacExtend",
            "c72146c5c38717d561dda616c25a51523114224c"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nnPlusNotNeeded : forall n : nat, SysPrf NN (impH (orH (LT (var 1) (natToTerm n)) (equal (var 1) (natToTerm n))) (LT (var 1) (Succ (natToTerm n)))).",
            "VernacStartTheoremProof",
            "02bc6a7fdcb1c9ae19fadafc28589f3322c2e5d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply orSys.",
            "VernacExtend",
            "c25bda4a2012ba31fecfcec5d73d50f7f983e806"
        ],
        [
            "apply contradiction with (LT (var 1) Zero).",
            "VernacExtend",
            "1a592c756dc1f106c73dfbb2a775d4c90ddce444"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply nn7.",
            "VernacExtend",
            "359606b460bc7f2449a0248196cdbcbe2a938a92"
        ],
        [
            "rewrite <- (subFormulaId LNN (LT (var 1) (Succ Zero)) 1).",
            "VernacExtend",
            "61655ef5185020763972219eb4c9914188c9ad76"
        ],
        [
            "apply impE with (substituteFormula LNN (LT (var 1) (Succ Zero)) 1 Zero).",
            "VernacExtend",
            "ad98460712ef5a054e4c84a857a31ae6a5456faa"
        ],
        [
            "apply (subWithEquals LNN).",
            "VernacExtend",
            "5f53b7a36bc2461829d2e71be83a076e924542e7"
        ],
        [
            "apply eqSym.",
            "VernacExtend",
            "c72146c5c38717d561dda616c25a51523114224c"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "replace (substituteFormula LNN (LT (var 1) (Succ Zero)) 1 Zero) with (LT (natToTerm 0) (natToTerm 1)).",
            "VernacExtend",
            "b2a47e7ffdf01610304ee06b452c8ec995056055"
        ],
        [
            "apply natLT.",
            "VernacExtend",
            "3fff59a53090692fc70a598a3ac6beae43b54f26"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold LT in |- *.",
            "VernacExtend",
            "a2b52089d355403e644427049555930e9c264ec8"
        ],
        [
            "rewrite (subFormulaRelation LNN).",
            "VernacExtend",
            "99523d62f00e54bec3893f970e77d61eda76a86b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply orSys.",
            "VernacExtend",
            "c25bda4a2012ba31fecfcec5d73d50f7f983e806"
        ],
        [
            "apply impE with (orH (LT (var 1) (natToTerm n)) (equal (var 1) (natToTerm n))).",
            "VernacExtend",
            "d8da5bc9af4b9c4133aafc69e5900103e4c8977d"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply impTrans with (LT (var 1) (natToTerm (S n))).",
            "VernacExtend",
            "ff518e567972132ee5082d43ede71890f23f1450"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply boundedLT.",
            "VernacExtend",
            "dbd7fee1cf2925123251278107e8f9398986436b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (substituteFormula LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1 (natToTerm n0)) with (LT (natToTerm n0) (natToTerm (S (S n)))).",
            "VernacExtend",
            "b26733ec9a568f29c2ca6ef23cf799adfb1e6195"
        ],
        [
            "apply natLT.",
            "VernacExtend",
            "3fff59a53090692fc70a598a3ac6beae43b54f26"
        ],
        [
            "apply lt_S.",
            "VernacExtend",
            "47477bda68b8f0c94efef6095ed80a97ae3f2827"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold LT in |- *.",
            "VernacExtend",
            "a2b52089d355403e644427049555930e9c264ec8"
        ],
        [
            "rewrite (subFormulaRelation LNN).",
            "VernacExtend",
            "99523d62f00e54bec3893f970e77d61eda76a86b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subTermNil LNN).",
            "VernacExtend",
            "9cd10b12ed1955cf55a88e8a312e5a55a395842e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply closedNatToTerm.",
            "VernacExtend",
            "ab6879b4c24fe4725b9b521be10558ba4b21bb8e"
        ],
        [
            "apply impE with (LT (var 1) (Succ (natToTerm n))).",
            "VernacExtend",
            "75ecfa6a718d88d56a69b6c240d0a0d75e901bd1"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply nn8.",
            "VernacExtend",
            "2d2abfdc832d89ccb4c4bb8a00b871d2d428c9b5"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "rewrite <- (subFormulaId LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1).",
            "VernacExtend",
            "4b7fab02e65d4ba9c344795f58d8381c31747191"
        ],
        [
            "apply impE with (substituteFormula LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1 (Succ (natToTerm n))).",
            "VernacExtend",
            "f9fe792de56655917db9f5b92701ab166c5c162f"
        ],
        [
            "apply (subWithEquals LNN).",
            "VernacExtend",
            "5f53b7a36bc2461829d2e71be83a076e924542e7"
        ],
        [
            "apply eqSym.",
            "VernacExtend",
            "c72146c5c38717d561dda616c25a51523114224c"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "replace (substituteFormula LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1 (Succ (natToTerm n))) with (LT (natToTerm (S n)) (natToTerm (S (S n)))).",
            "VernacExtend",
            "cfdb29615367ac45cb20212501902c428c5e95bc"
        ],
        [
            "apply natLT.",
            "VernacExtend",
            "3fff59a53090692fc70a598a3ac6beae43b54f26"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "unfold LT in |- *.",
            "VernacExtend",
            "a2b52089d355403e644427049555930e9c264ec8"
        ],
        [
            "rewrite (subFormulaRelation LNN).",
            "VernacExtend",
            "99523d62f00e54bec3893f970e77d61eda76a86b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (subTermNil LNN).",
            "VernacExtend",
            "9cd10b12ed1955cf55a88e8a312e5a55a395842e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply closedNatToTerm.",
            "VernacExtend",
            "ab6879b4c24fe4725b9b521be10558ba4b21bb8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "natNE",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "assert (forall a b : nat, a < b -> SysPrf NN (notH (equal (natToTerm a) (natToTerm b)))).",
                        "VernacExtend",
                        "878141c47249874ebfce241559491e4aaecf75c5"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction a as [| a Hreca]; intros.",
                        "VernacExtend",
                        "bdf96570fd0a436206970218ab04c96801c2ff0b"
                    ]
                },
                {
                    "command": [
                        "destruct b as [| n].",
                        "VernacExtend",
                        "6e19e5e0107e7679a54b8b8a684909e3609f0f56"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ H).",
                        "VernacExtend",
                        "b93451b1a30fa3f24613ad7b0441907b3427a80f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply impE with (notH (equal (Succ (natToTerm n)) Zero)).",
                        "VernacExtend",
                        "5ad32035fbb449815d72d9033702cfd6b7671391"
                    ]
                },
                {
                    "command": [
                        "apply cp2.",
                        "VernacExtend",
                        "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
                    ]
                },
                {
                    "command": [
                        "apply impI.",
                        "VernacExtend",
                        "60955e24356265eb0e9ef6255e08bbd113551585"
                    ]
                },
                {
                    "command": [
                        "apply eqSym.",
                        "VernacExtend",
                        "c72146c5c38717d561dda616c25a51523114224c"
                    ]
                },
                {
                    "command": [
                        "apply Axm; right; constructor.",
                        "VernacExtend",
                        "fafb5c153ffd727407f5c87d3444711b114dac59"
                    ]
                },
                {
                    "command": [
                        "apply nn1.",
                        "VernacExtend",
                        "c903514c0a1c26bc95236b52616257c3109264ed"
                    ]
                },
                {
                    "command": [
                        "destruct b as [| n].",
                        "VernacExtend",
                        "6e19e5e0107e7679a54b8b8a684909e3609f0f56"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ H).",
                        "VernacExtend",
                        "b93451b1a30fa3f24613ad7b0441907b3427a80f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply impE with (notH (equal (natToTerm a) (natToTerm n))).",
                        "VernacExtend",
                        "5176f50979eee51f1c87aef1ebd4b6df907a3758"
                    ]
                },
                {
                    "command": [
                        "apply cp2.",
                        "VernacExtend",
                        "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
                    ]
                },
                {
                    "command": [
                        "apply nn2.",
                        "VernacExtend",
                        "cc381a83ced1dddb0b44ee921f011a9bbc099103"
                    ]
                },
                {
                    "command": [
                        "apply Hreca.",
                        "VernacExtend",
                        "6fc9468528c6f36692617e8183c9aa731135bf44"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n.",
                        "VernacExtend",
                        "0207638f6e9dea4c2a8a3945f23446b376d8318e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (nat_total_order _ _ H0).",
                        "VernacExtend",
                        "2b772f61899bb5f02351387798c1701c8cf0ca50"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply impE with (notH (equal (natToTerm b) (natToTerm a))).",
                        "VernacExtend",
                        "c3c9a62f61fff60ae9e053da2e21879e85685b3e"
                    ]
                },
                {
                    "command": [
                        "apply cp2.",
                        "VernacExtend",
                        "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
                    ]
                },
                {
                    "command": [
                        "apply impI.",
                        "VernacExtend",
                        "60955e24356265eb0e9ef6255e08bbd113551585"
                    ]
                },
                {
                    "command": [
                        "apply eqSym.",
                        "VernacExtend",
                        "c72146c5c38717d561dda616c25a51523114224c"
                    ]
                },
                {
                    "command": [
                        "apply Axm; right; constructor.",
                        "VernacExtend",
                        "fafb5c153ffd727407f5c87d3444711b114dac59"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natLE",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction b as [| b Hrecb].",
                        "VernacExtend",
                        "fec7634b02a794607b0227223842e0197019a2f0"
                    ]
                },
                {
                    "command": [
                        "apply nn7.",
                        "VernacExtend",
                        "359606b460bc7f2449a0248196cdbcbe2a938a92"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply impE with (notH (orH (LT (natToTerm a) (natToTerm b)) (equal (natToTerm a) (natToTerm b)))).",
                        "VernacExtend",
                        "b42b213245763a08f7754a3ddd1b750ee6f1db0a"
                    ]
                },
                {
                    "command": [
                        "apply cp2.",
                        "VernacExtend",
                        "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
                    ]
                },
                {
                    "command": [
                        "apply nn8.",
                        "VernacExtend",
                        "2d2abfdc832d89ccb4c4bb8a00b871d2d428c9b5"
                    ]
                },
                {
                    "command": [
                        "apply nOr.",
                        "VernacExtend",
                        "92c183131733af2e45678c033993d5b5d3167470"
                    ]
                },
                {
                    "command": [
                        "apply andI.",
                        "VernacExtend",
                        "f9d3279a8b72d3210f5050fba9800fa4bb631a97"
                    ]
                },
                {
                    "command": [
                        "apply Hrecb.",
                        "VernacExtend",
                        "80670c41dde2e82ba232122d512977ca4333ade0"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "apply le_S.",
                        "VernacExtend",
                        "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply natNE.",
                        "VernacExtend",
                        "c9f1ef680220c9ab1f5c7f987ee94ba4bca619d1"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "apply (le_not_lt _ _ H).",
                        "VernacExtend",
                        "0d75ceda0a4472d4f0b23846e5984c3a8a45cad6"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "natPlus",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction b as [| b Hrecb].",
                        "VernacExtend",
                        "fec7634b02a794607b0227223842e0197019a2f0"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply nn3.",
                        "VernacExtend",
                        "7c8d0bef7833a700b3a1cb6a3351518dded590ad"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply eqTrans with (Succ (Plus (natToTerm a) (natToTerm b))).",
                        "VernacExtend",
                        "2af1c23b09e40ea826546eb825ffe26aebf80dff"
                    ]
                },
                {
                    "command": [
                        "apply nn4.",
                        "VernacExtend",
                        "379fe18be87ba94318c6f4e919061fa3fe6d6d10"
                    ]
                },
                {
                    "command": [
                        "apply eqSucc.",
                        "VernacExtend",
                        "386fe73312b635c8f04886fc66752d3176eff048"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "apply Hrecb.",
                        "VernacExtend",
                        "80670c41dde2e82ba232122d512977ca4333ade0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nnPlusNotNeeded",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply impI.",
                        "VernacExtend",
                        "60955e24356265eb0e9ef6255e08bbd113551585"
                    ]
                },
                {
                    "command": [
                        "apply orSys.",
                        "VernacExtend",
                        "c25bda4a2012ba31fecfcec5d73d50f7f983e806"
                    ]
                },
                {
                    "command": [
                        "apply contradiction with (LT (var 1) Zero).",
                        "VernacExtend",
                        "1a592c756dc1f106c73dfbb2a775d4c90ddce444"
                    ]
                },
                {
                    "command": [
                        "apply Axm; right; constructor.",
                        "VernacExtend",
                        "fafb5c153ffd727407f5c87d3444711b114dac59"
                    ]
                },
                {
                    "command": [
                        "apply sysWeaken.",
                        "VernacExtend",
                        "6184cd0fa2a41223f187033e88e17cf0d86b61db"
                    ]
                },
                {
                    "command": [
                        "apply nn7.",
                        "VernacExtend",
                        "359606b460bc7f2449a0248196cdbcbe2a938a92"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (subFormulaId LNN (LT (var 1) (Succ Zero)) 1).",
                        "VernacExtend",
                        "61655ef5185020763972219eb4c9914188c9ad76"
                    ]
                },
                {
                    "command": [
                        "apply impE with (substituteFormula LNN (LT (var 1) (Succ Zero)) 1 Zero).",
                        "VernacExtend",
                        "ad98460712ef5a054e4c84a857a31ae6a5456faa"
                    ]
                },
                {
                    "command": [
                        "apply (subWithEquals LNN).",
                        "VernacExtend",
                        "5f53b7a36bc2461829d2e71be83a076e924542e7"
                    ]
                },
                {
                    "command": [
                        "apply eqSym.",
                        "VernacExtend",
                        "c72146c5c38717d561dda616c25a51523114224c"
                    ]
                },
                {
                    "command": [
                        "apply Axm; right; constructor.",
                        "VernacExtend",
                        "fafb5c153ffd727407f5c87d3444711b114dac59"
                    ]
                },
                {
                    "command": [
                        "apply sysWeaken.",
                        "VernacExtend",
                        "6184cd0fa2a41223f187033e88e17cf0d86b61db"
                    ]
                },
                {
                    "command": [
                        "replace (substituteFormula LNN (LT (var 1) (Succ Zero)) 1 Zero) with (LT (natToTerm 0) (natToTerm 1)).",
                        "VernacExtend",
                        "b2a47e7ffdf01610304ee06b452c8ec995056055"
                    ]
                },
                {
                    "command": [
                        "apply natLT.",
                        "VernacExtend",
                        "3fff59a53090692fc70a598a3ac6beae43b54f26"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold LT in |- *.",
                        "VernacExtend",
                        "a2b52089d355403e644427049555930e9c264ec8"
                    ]
                },
                {
                    "command": [
                        "rewrite (subFormulaRelation LNN).",
                        "VernacExtend",
                        "99523d62f00e54bec3893f970e77d61eda76a86b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply impI.",
                        "VernacExtend",
                        "60955e24356265eb0e9ef6255e08bbd113551585"
                    ]
                },
                {
                    "command": [
                        "apply orSys.",
                        "VernacExtend",
                        "c25bda4a2012ba31fecfcec5d73d50f7f983e806"
                    ]
                },
                {
                    "command": [
                        "apply impE with (orH (LT (var 1) (natToTerm n)) (equal (var 1) (natToTerm n))).",
                        "VernacExtend",
                        "d8da5bc9af4b9c4133aafc69e5900103e4c8977d"
                    ]
                },
                {
                    "command": [
                        "apply sysWeaken.",
                        "VernacExtend",
                        "6184cd0fa2a41223f187033e88e17cf0d86b61db"
                    ]
                },
                {
                    "command": [
                        "apply impTrans with (LT (var 1) (natToTerm (S n))).",
                        "VernacExtend",
                        "ff518e567972132ee5082d43ede71890f23f1450"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "apply boundedLT.",
                        "VernacExtend",
                        "dbd7fee1cf2925123251278107e8f9398986436b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (substituteFormula LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1 (natToTerm n0)) with (LT (natToTerm n0) (natToTerm (S (S n)))).",
                        "VernacExtend",
                        "b26733ec9a568f29c2ca6ef23cf799adfb1e6195"
                    ]
                },
                {
                    "command": [
                        "apply natLT.",
                        "VernacExtend",
                        "3fff59a53090692fc70a598a3ac6beae43b54f26"
                    ]
                },
                {
                    "command": [
                        "apply lt_S.",
                        "VernacExtend",
                        "47477bda68b8f0c94efef6095ed80a97ae3f2827"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold LT in |- *.",
                        "VernacExtend",
                        "a2b52089d355403e644427049555930e9c264ec8"
                    ]
                },
                {
                    "command": [
                        "rewrite (subFormulaRelation LNN).",
                        "VernacExtend",
                        "99523d62f00e54bec3893f970e77d61eda76a86b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subTermNil LNN).",
                        "VernacExtend",
                        "9cd10b12ed1955cf55a88e8a312e5a55a395842e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply closedNatToTerm.",
                        "VernacExtend",
                        "ab6879b4c24fe4725b9b521be10558ba4b21bb8e"
                    ]
                },
                {
                    "command": [
                        "apply impE with (LT (var 1) (Succ (natToTerm n))).",
                        "VernacExtend",
                        "75ecfa6a718d88d56a69b6c240d0a0d75e901bd1"
                    ]
                },
                {
                    "command": [
                        "apply sysWeaken.",
                        "VernacExtend",
                        "6184cd0fa2a41223f187033e88e17cf0d86b61db"
                    ]
                },
                {
                    "command": [
                        "apply nn8.",
                        "VernacExtend",
                        "2d2abfdc832d89ccb4c4bb8a00b871d2d428c9b5"
                    ]
                },
                {
                    "command": [
                        "apply Axm; right; constructor.",
                        "VernacExtend",
                        "fafb5c153ffd727407f5c87d3444711b114dac59"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (subFormulaId LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1).",
                        "VernacExtend",
                        "4b7fab02e65d4ba9c344795f58d8381c31747191"
                    ]
                },
                {
                    "command": [
                        "apply impE with (substituteFormula LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1 (Succ (natToTerm n))).",
                        "VernacExtend",
                        "f9fe792de56655917db9f5b92701ab166c5c162f"
                    ]
                },
                {
                    "command": [
                        "apply (subWithEquals LNN).",
                        "VernacExtend",
                        "5f53b7a36bc2461829d2e71be83a076e924542e7"
                    ]
                },
                {
                    "command": [
                        "apply eqSym.",
                        "VernacExtend",
                        "c72146c5c38717d561dda616c25a51523114224c"
                    ]
                },
                {
                    "command": [
                        "apply Axm; right; constructor.",
                        "VernacExtend",
                        "fafb5c153ffd727407f5c87d3444711b114dac59"
                    ]
                },
                {
                    "command": [
                        "apply sysWeaken.",
                        "VernacExtend",
                        "6184cd0fa2a41223f187033e88e17cf0d86b61db"
                    ]
                },
                {
                    "command": [
                        "replace (substituteFormula LNN (LT (var 1) (Succ (Succ (natToTerm n)))) 1 (Succ (natToTerm n))) with (LT (natToTerm (S n)) (natToTerm (S (S n)))).",
                        "VernacExtend",
                        "cfdb29615367ac45cb20212501902c428c5e95bc"
                    ]
                },
                {
                    "command": [
                        "apply natLT.",
                        "VernacExtend",
                        "3fff59a53090692fc70a598a3ac6beae43b54f26"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "unfold LT in |- *.",
                        "VernacExtend",
                        "a2b52089d355403e644427049555930e9c264ec8"
                    ]
                },
                {
                    "command": [
                        "rewrite (subFormulaRelation LNN).",
                        "VernacExtend",
                        "99523d62f00e54bec3893f970e77d61eda76a86b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (subTermNil LNN).",
                        "VernacExtend",
                        "9cd10b12ed1955cf55a88e8a312e5a55a395842e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply closedNatToTerm.",
                        "VernacExtend",
                        "ab6879b4c24fe4725b9b521be10558ba4b21bb8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}