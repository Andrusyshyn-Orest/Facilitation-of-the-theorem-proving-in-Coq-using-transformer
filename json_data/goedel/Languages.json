{
    "filename": "Languages.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import fol.",
            "VernacRequire",
            "4368ac542f107c78f52f38cd5ea87c64155e7889"
        ],
        [
            "Require Import primRec.",
            "VernacRequire",
            "75a83dde535ddae28126e82cc7ff15f05b8e505b"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Inductive LNTFunction : Set := | Plus : LNTFunction | Times : LNTFunction | Succ : LNTFunction | Zero : LNTFunction.",
            "VernacInductive",
            "6d2defb59d37fecaf62c85074612c7c81305f6d0"
        ],
        [
            "Inductive LNNRelation : Set := LT : LNNRelation.",
            "VernacInductive",
            "dc757a776ac6b1e177985aead40ceb0d8c01f0de"
        ],
        [
            "Definition LNTFunctionArity (x : LNTFunction) : nat := match x with | Plus => 2 | Times => 2 | Succ => 1 | Zero => 0 end.",
            "VernacDefinition",
            "6730db66c76f29f1c14317e086d836d2133c81a4"
        ],
        [
            "Definition LNTArity (x : Empty_set + LNTFunction) : nat := match x return nat with | inl bot => Empty_set_rec (fun _ => nat) bot | inr y => LNTFunctionArity y end.",
            "VernacDefinition",
            "65fcfbb8e1483d3dcbbd7d82c0f503e216336c16"
        ],
        [
            "Definition LNNArity (x : LNNRelation + LNTFunction) : nat := match x return nat with | inl y => match y with | LT => 2 end | inr y => LNTFunctionArity y end.",
            "VernacDefinition",
            "13a3f403c943d103aa77c1e94ba0cb00b4488be3"
        ],
        [
            "Definition LNT : Language := language Empty_set LNTFunction LNTArity.",
            "VernacDefinition",
            "09b119278f6f0d77e079a2f0a5ab3a41ef424a91"
        ],
        [
            "Definition LNN : Language := language LNNRelation LNTFunction LNNArity.",
            "VernacDefinition",
            "fa7e02ca23838ad7e9e7e190e6c46c987b9d1e40"
        ],
        [
            "Definition codeLNTFunction (f : LNTFunction) : nat := match f with | Plus => 0 | Times => 1 | Succ => 2 | Zero => 3 end.",
            "VernacDefinition",
            "ab92287a3afd909d23457e5b5a8cfb74b3df639b"
        ],
        [
            "Definition codeLNTRelation (R : Empty_set) : nat := match R return nat with end.",
            "VernacDefinition",
            "49c472bc95bb1fc9df71f43a0199a68bb55211d9"
        ],
        [
            "Definition codeLNNRelation (R : LNNRelation) : nat := 0.",
            "VernacDefinition",
            "5fac1292296367d2f30da5c00938a4440e052a39"
        ],
        [
            "Lemma codeLNTFunctionInj : forall f g : LNTFunction, codeLNTFunction f = codeLNTFunction g -> f = g.",
            "VernacStartTheoremProof",
            "1a92cc28800aa1b3361e0ce1ca8b5e8bad5b8727"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct f; destruct g; reflexivity || discriminate H.",
            "VernacExtend",
            "216a981dff12a4fe304dfe9b48b28b13872a1598"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeLNTRelationInj : forall R S : Empty_set, codeLNTRelation R = codeLNTRelation S -> R = S.",
            "VernacStartTheoremProof",
            "f332f244391a34f0c10fb53285122cb9ffbd010c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct R; destruct S; reflexivity || discriminate H.",
            "VernacExtend",
            "b08b3655ee0da2c5e354215e5696b052c89d2b2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeLNNRelationInj : forall R S : LNNRelation, codeLNNRelation R = codeLNNRelation S -> R = S.",
            "VernacStartTheoremProof",
            "40086f0143d6bbade705b73bfac8a426e665674d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct R; destruct S; reflexivity || discriminate H.",
            "VernacExtend",
            "b08b3655ee0da2c5e354215e5696b052c89d2b2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition codeArityLNNR (r : nat) := switchPR r 0 3.",
            "VernacDefinition",
            "85dddbc5b488d88fcf6ce3493677da49bc45ce4b"
        ],
        [
            "Lemma codeArityLNNRIsPR : isPR 1 codeArityLNNR.",
            "VernacStartTheoremProof",
            "d2a29c673309f3937361fb436e673ff47ec38c89"
        ],
        [
            "unfold codeArityLNNR in |- *.",
            "VernacExtend",
            "3a1b88006f43cc59527600d61ebfaa0272956da5"
        ],
        [
            "apply compose1_3IsPR with (f1 := fun r : nat => r) (f2 := fun r : nat => 0) (f3 := fun r : nat => 3).",
            "VernacExtend",
            "9473ee8a4ae2d0a26b9b932a7f95dd05ffc5b1fe"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply switchIsPR.",
            "VernacExtend",
            "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNNRIsCorrect1 : forall r : Relations LNN, codeArityLNNR (codeLNNRelation r) = S (arity LNN (inl _ r)).",
            "VernacStartTheoremProof",
            "9def06f93b53f6280628c3d6caba4d1f1e45c5a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction r.",
            "VernacExtend",
            "999f2bb03aa1252fae0e3f57952a36d7753745d8"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNNRIsCorrect2 : forall n : nat, codeArityLNNR n <> 0 -> exists r : Relations LNN, codeLNNRelation r = n.",
            "VernacStartTheoremProof",
            "c71005b565298280e6cdc09c5646c4f8e410b294"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "exists LT.",
            "VernacExtend",
            "1a7f7662d5e44ab39218b3d35dce19c4a754d3f1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition codeArityLNTR (r : nat) := 0.",
            "VernacDefinition",
            "64eefdb691d5fe31699fd2609c3be4d705bf0a98"
        ],
        [
            "Lemma codeArityLNTRIsPR : isPR 1 codeArityLNTR.",
            "VernacStartTheoremProof",
            "f50d3a3233577c669f2e4c1ff1195a0d8a4e32bf"
        ],
        [
            "unfold codeArityLNTR in |- *.",
            "VernacExtend",
            "f7e045df05f8da35b3a825093a06f0bb0b5a89f6"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNTRIsCorrect1 : forall r : Relations LNT, codeArityLNTR (codeLNTRelation r) = S (arity LNT (inl _ r)).",
            "VernacStartTheoremProof",
            "22bf5e7d22c2cbdbc8f9ef88086fa240d38e48dc"
        ],
        [
            "simple induction r.",
            "VernacExtend",
            "63d5d090452f11db792ed7fda8819e1deada13d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNTRIsCorrect2 : forall n : nat, codeArityLNTR n <> 0 -> exists r : Relations LNT, codeLNTRelation r = n.",
            "VernacStartTheoremProof",
            "1e3f6ab13369aa9d0c7ed9b7709d7250dd62707e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition codeArityLNTF (f : nat) := switchPR f (switchPR (pred f) (switchPR (pred (pred f)) (switchPR (pred (pred (pred f))) 0 1) 2) 3) 3.",
            "VernacDefinition",
            "c45f537d6f5733839b17119b77a1bf9ff07bbd3c"
        ],
        [
            "Lemma codeArityLNTFIsPR : isPR 1 codeArityLNTF.",
            "VernacStartTheoremProof",
            "180a542eee4b4aa2ad69ed02bee34f5ca2facf1a"
        ],
        [
            "set (f := list_rec (fun _ => nat -> nat -> nat) (fun _ _ : nat => 0) (fun (a : nat) (l : list nat) (rec : nat -> nat -> nat) (n f : nat) => switchPR (iterate pred n f) (rec (S n) f) a)) in *.",
            "VernacExtend",
            "6352cb18a7198468b39995d088d30ae55a923648"
        ],
        [
            "assert (forall (l : list nat) (n : nat), isPR 1 (f l n)).",
            "VernacExtend",
            "13508f71194b2a56bf0f16c723d083265cda820f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction l as [| a l Hrecl]; intros.",
            "VernacExtend",
            "91e914b997c0f50239ab270fcafc1d006c90d5f4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply compose1_3IsPR with (f1 := fun f0 : nat => iterate pred n f0) (f2 := fun f0 : nat => f l (S n) f0) (f3 := fun f0 : nat => a).",
            "VernacExtend",
            "0a815e53e5135f42c100d3bead366fe45938a1e6"
        ],
        [
            "apply iterateIsPR with (g := pred) (n := n).",
            "VernacExtend",
            "1558294945b2e306bbb498187eeea45113840a10"
        ],
        [
            "apply predIsPR.",
            "VernacExtend",
            "997e71cc9af65178f66c42c7c23c11ad0d929df2"
        ],
        [
            "apply Hrecl with (n := S n).",
            "VernacExtend",
            "d182fc6321c22b09bc83097aa8fe085da083889e"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply switchIsPR.",
            "VernacExtend",
            "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
        ],
        [
            "apply (H (3 :: 3 :: 2 :: 1 :: nil) 0).",
            "VernacExtend",
            "e4d953e9f9d5b93c8bd981d9f18d969d830c5861"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNTFIsCorrect1 : forall f : Functions LNT, codeArityLNTF (codeLNTFunction f) = S (arity LNT (inr _ f)).",
            "VernacStartTheoremProof",
            "abdb1bac8c97f1d5d43a4e9f2a441e0916ebdaa5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction f; reflexivity.",
            "VernacExtend",
            "4ea21d362d61a2115ccdcb960790103cccdad842"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNNFIsCorrect1 : forall f : Functions LNN, codeArityLNTF (codeLNTFunction f) = S (arity LNN (inr _ f)).",
            "VernacStartTheoremProof",
            "7cf890dff8f3c600609b92aab7d9629dcdde8584"
        ],
        [
            "apply codeArityLNTFIsCorrect1.",
            "VernacExtend",
            "229d01afec6c03e45deb286ba9939101424046a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNTFIsCorrect2 : forall n : nat, codeArityLNTF n <> 0 -> exists f : Functions LNT, codeLNTFunction f = n.",
            "VernacStartTheoremProof",
            "a411d49879e86e3cec57472a56414b7fe046f641"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "exists Plus.",
            "VernacExtend",
            "028d3eb6954e37a055c90b01b163d370df874013"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "exists Times.",
            "VernacExtend",
            "faecd5164977dcb72fd8a1f80ae847061325b377"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "exists Succ.",
            "VernacExtend",
            "bb40f76f04e39cef3e66e25de0369ba54890dcf9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "exists Zero.",
            "VernacExtend",
            "fca59d537878b15d995b4ebefa5bae9518b17374"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeArityLNNFIsCorrect2 : forall n : nat, codeArityLNTF n <> 0 -> exists f : Functions LNN, codeLNTFunction f = n.",
            "VernacStartTheoremProof",
            "758829b3396d787f248982eb71038fa8982e8761"
        ],
        [
            "apply codeArityLNTFIsCorrect2.",
            "VernacExtend",
            "91ed1e011e47b5a61ac46d4a8ca4de441c7da518"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "codeLNTFunctionInj",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct f; destruct g; reflexivity || discriminate H.",
                        "VernacExtend",
                        "216a981dff12a4fe304dfe9b48b28b13872a1598"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeLNTRelationInj",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct R; destruct S; reflexivity || discriminate H.",
                        "VernacExtend",
                        "b08b3655ee0da2c5e354215e5696b052c89d2b2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeLNNRelationInj",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct R; destruct S; reflexivity || discriminate H.",
                        "VernacExtend",
                        "b08b3655ee0da2c5e354215e5696b052c89d2b2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNNRIsPR",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold codeArityLNNR in |- *.",
                        "VernacExtend",
                        "3a1b88006f43cc59527600d61ebfaa0272956da5"
                    ]
                },
                {
                    "command": [
                        "apply compose1_3IsPR with (f1 := fun r : nat => r) (f2 := fun r : nat => 0) (f3 := fun r : nat => 3).",
                        "VernacExtend",
                        "9473ee8a4ae2d0a26b9b932a7f95dd05ffc5b1fe"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply switchIsPR.",
                        "VernacExtend",
                        "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNNRIsCorrect1",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction r.",
                        "VernacExtend",
                        "999f2bb03aa1252fae0e3f57952a36d7753745d8"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNNRIsCorrect2",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "exists LT.",
                        "VernacExtend",
                        "1a7f7662d5e44ab39218b3d35dce19c4a754d3f1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNTRIsPR",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold codeArityLNTR in |- *.",
                        "VernacExtend",
                        "f7e045df05f8da35b3a825093a06f0bb0b5a89f6"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNTRIsCorrect1",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "simple induction r.",
                        "VernacExtend",
                        "63d5d090452f11db792ed7fda8819e1deada13d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNTRIsCorrect2",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNTFIsPR",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "set (f := list_rec (fun _ => nat -> nat -> nat) (fun _ _ : nat => 0) (fun (a : nat) (l : list nat) (rec : nat -> nat -> nat) (n f : nat) => switchPR (iterate pred n f) (rec (S n) f) a)) in *.",
                        "VernacExtend",
                        "6352cb18a7198468b39995d088d30ae55a923648"
                    ]
                },
                {
                    "command": [
                        "assert (forall (l : list nat) (n : nat), isPR 1 (f l n)).",
                        "VernacExtend",
                        "13508f71194b2a56bf0f16c723d083265cda820f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction l as [| a l Hrecl]; intros.",
                        "VernacExtend",
                        "91e914b997c0f50239ab270fcafc1d006c90d5f4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply compose1_3IsPR with (f1 := fun f0 : nat => iterate pred n f0) (f2 := fun f0 : nat => f l (S n) f0) (f3 := fun f0 : nat => a).",
                        "VernacExtend",
                        "0a815e53e5135f42c100d3bead366fe45938a1e6"
                    ]
                },
                {
                    "command": [
                        "apply iterateIsPR with (g := pred) (n := n).",
                        "VernacExtend",
                        "1558294945b2e306bbb498187eeea45113840a10"
                    ]
                },
                {
                    "command": [
                        "apply predIsPR.",
                        "VernacExtend",
                        "997e71cc9af65178f66c42c7c23c11ad0d929df2"
                    ]
                },
                {
                    "command": [
                        "apply Hrecl with (n := S n).",
                        "VernacExtend",
                        "d182fc6321c22b09bc83097aa8fe085da083889e"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply switchIsPR.",
                        "VernacExtend",
                        "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
                    ]
                },
                {
                    "command": [
                        "apply (H (3 :: 3 :: 2 :: 1 :: nil) 0).",
                        "VernacExtend",
                        "e4d953e9f9d5b93c8bd981d9f18d969d830c5861"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNTFIsCorrect1",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction f; reflexivity.",
                        "VernacExtend",
                        "4ea21d362d61a2115ccdcb960790103cccdad842"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNNFIsCorrect1",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "apply codeArityLNTFIsCorrect1.",
                        "VernacExtend",
                        "229d01afec6c03e45deb286ba9939101424046a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNTFIsCorrect2",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "exists Plus.",
                        "VernacExtend",
                        "028d3eb6954e37a055c90b01b163d370df874013"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "exists Times.",
                        "VernacExtend",
                        "faecd5164977dcb72fd8a1f80ae847061325b377"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "exists Succ.",
                        "VernacExtend",
                        "bb40f76f04e39cef3e66e25de0369ba54890dcf9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "exists Zero.",
                        "VernacExtend",
                        "fca59d537878b15d995b4ebefa5bae9518b17374"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeArityLNNFIsCorrect2",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "apply codeArityLNTFIsCorrect2.",
                        "VernacExtend",
                        "91ed1e011e47b5a61ac46d4a8ca4de441c7da518"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}