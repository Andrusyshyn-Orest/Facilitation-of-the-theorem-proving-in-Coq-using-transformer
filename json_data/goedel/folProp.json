{
    "filename": "folProp.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import ListExt.",
            "VernacRequire",
            "8c4c029b2c43ab5886e4af5e6402bea050085fed"
        ],
        [
            "Require Import Peano_dec.",
            "VernacRequire",
            "5f49ca778918c88f400242f11d696ec23079b44f"
        ],
        [
            "Require Export fol.",
            "VernacRequire",
            "e89223fbad53b2c4558341a3ca405836853d4b4b"
        ],
        [
            "Section Fol_Properties.",
            "VernacBeginSection",
            "e18fd70fce068aa33f701efd18be533cd8218226"
        ],
        [
            "Variable L : Language.",
            "VernacAssumption",
            "96b36a9b874de21fe37f18071cb929f4dd758042"
        ],
        [
            "Notation Formula := (Formula L) (only parsing).",
            "VernacSyntacticDefinition",
            "471bd9661dee834dd3a938dc8d25f202e3ea0ef7"
        ],
        [
            "Notation Formulas := (Formulas L) (only parsing).",
            "VernacSyntacticDefinition",
            "de95633f8b713fee6c85755a94f6cd7043ddf548"
        ],
        [
            "Notation System := (System L) (only parsing).",
            "VernacSyntacticDefinition",
            "cfcc28f87eb5db94c5651817293656669277347a"
        ],
        [
            "Notation Term := (Term L) (only parsing).",
            "VernacSyntacticDefinition",
            "5f0fb5a244234a33c0c912a47f8f1dca682ec9af"
        ],
        [
            "Notation Terms := (Terms L) (only parsing).",
            "VernacSyntacticDefinition",
            "d138230956d4d3ffcb96f9a2fdfaebb49cb05e15"
        ],
        [
            "Let var := var L.",
            "VernacDefinition",
            "387b134d06ce79979638575c6631443c7143b913"
        ],
        [
            "Let apply := apply L.",
            "VernacDefinition",
            "171f7b3946ad56564d4a09c4656739ed07770a44"
        ],
        [
            "Let equal := equal L.",
            "VernacDefinition",
            "a97cb35845ad0374b8596fd6d66f5c04065714a3"
        ],
        [
            "Let atomic := atomic L.",
            "VernacDefinition",
            "7638f14f126e2c8e95075078253a597eea7fd9ac"
        ],
        [
            "Let impH := impH L.",
            "VernacDefinition",
            "b3d855010528c91b0d1d6c2d64740a3e6e7417a6"
        ],
        [
            "Let notH := notH L.",
            "VernacDefinition",
            "096b324518e16c165cd803fe11de91b995393f24"
        ],
        [
            "Let forallH := forallH L.",
            "VernacDefinition",
            "eaf4bad969f5571f26e0bbda77b3d70e626f3102"
        ],
        [
            "Let lt_depth := lt_depth L.",
            "VernacDefinition",
            "26fe21ee634c0feeafb48ed5ba2ecf6c44ce55df"
        ],
        [
            "Section Free_Variables.",
            "VernacBeginSection",
            "ba571064734ce2a95e000e8c59106ce9fa40a8e0"
        ],
        [
            "Fixpoint freeVarTerm (s : fol.Term L) : list nat := match s with | fol.var v => v :: nil | fol.apply f ts => freeVarTerms (arity L (inr _ f)) ts end with freeVarTerms (n : nat) (ss : fol.Terms L n) {struct ss} : list nat := match ss with | Tnil => nil (A:=nat) | Tcons m t ts => freeVarTerm t ++ freeVarTerms m ts end.",
            "VernacFixpoint",
            "5589a55fe671b4db86bf823bc0537570fac1ef7d"
        ],
        [
            "Lemma freeVarTermApply : forall (f : Functions L) (ts : fol.Terms L _), freeVarTerm (apply f ts) = freeVarTerms _ ts.",
            "VernacStartTheoremProof",
            "48fcf447c118fc9bf18f8d5ee456106e8ace0524"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint freeVarFormula (A : fol.Formula L) : list nat := match A with | fol.equal t s => freeVarTerm t ++ freeVarTerm s | fol.atomic r ts => freeVarTerms _ ts | fol.impH A B => freeVarFormula A ++ freeVarFormula B | fol.notH A => freeVarFormula A | fol.forallH v A => list_remove _ eq_nat_dec v (freeVarFormula A) end.",
            "VernacFixpoint",
            "7b37d77cd0f61571e65d4d34b3cdb7f3f7f580f3"
        ],
        [
            "Definition ClosedSystem (T : fol.System L) := forall (v : nat) (f : fol.Formula L), mem _ T f -> ~ In v (freeVarFormula f).",
            "VernacDefinition",
            "bb431654e2fdafa7c53936bcdea967b97c499fb2"
        ],
        [
            "Definition closeList (l : list nat) (x : fol.Formula L) : fol.Formula L := list_rec (fun _ => fol.Formula L) x (fun (a : nat) _ (rec : fol.Formula L) => forallH a rec) l.",
            "VernacDefinition",
            "57f5c6bd681bc6d01f9c127f9ed9d5f133643ec0"
        ],
        [
            "Definition close (x : fol.Formula L) : fol.Formula L := closeList (no_dup _ eq_nat_dec (freeVarFormula x)) x.",
            "VernacDefinition",
            "23e0f3a40169321ea67122c42f2abbc7b5694223"
        ],
        [
            "Lemma freeVarClosedList1 : forall (l : list nat) (v : nat) (x : fol.Formula L), In v l -> ~ In v (freeVarFormula (closeList l x)).",
            "VernacStartTheoremProof",
            "d1c6675ce318ed53e3b234e645a9ebbd34540553"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction l as [| a l Hrecl].",
            "VernacExtend",
            "fd09d6abd5c50f5308a8699ed52e53f02987fb3d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as [H| H].",
            "VernacExtend",
            "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (In_list_remove2 _ _ _ _ _ H0).",
            "VernacExtend",
            "40e14281b0991cedaf2b2947c1eb978f9166fff1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (In v (freeVarFormula (list_rec (fun _ => fol.Formula L) x (fun (a : nat) (_ : list nat) (rec : fol.Formula L) => forallH a rec) l))).",
            "VernacExtend",
            "ed8966e23c66b377fe55ec0fce319875b9956c82"
        ],
        [
            "eapply In_list_remove1.",
            "VernacExtend",
            "b6b28153aa75f2c6a57f8178f189dba7003cf48c"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply (Hrecl _ _ H H1).",
            "VernacExtend",
            "af367c62ad62154c4ab0bcde736fe760cd253ed2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeVarClosedList2 : forall (l : list nat) (v : nat) (x : fol.Formula L), In v (freeVarFormula (closeList l x)) -> In v (freeVarFormula x).",
            "VernacStartTheoremProof",
            "2ca904fc6533761d479538eb222b921a07985a61"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction l as [| a l Hrecl].",
            "VernacExtend",
            "fd09d6abd5c50f5308a8699ed52e53f02987fb3d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecl.",
            "VernacExtend",
            "8bd42cb52486995858aeeeb0e7730132f95e798f"
        ],
        [
            "eapply In_list_remove1.",
            "VernacExtend",
            "b6b28153aa75f2c6a57f8178f189dba7003cf48c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma freeVarClosed : forall (x : fol.Formula L) (v : nat), ~ In v (freeVarFormula (close x)).",
            "VernacStartTheoremProof",
            "95825851434a8d6a5ba36564c4766890ac9f888f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold close in |- *.",
            "VernacExtend",
            "492307f3dc9b9cf0bc01d32091a1ae69725495f5"
        ],
        [
            "induction (In_dec eq_nat_dec v (no_dup _ eq_nat_dec (freeVarFormula x))).",
            "VernacExtend",
            "90369cf6f80d4f53f8d00e6053eef35f9ac7a4ab"
        ],
        [
            "apply freeVarClosedList1.",
            "VernacExtend",
            "6a537b9443987df6c3886cd1e2bbed1d3a1524f9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "apply no_dup1.",
            "VernacExtend",
            "71ffb1f65abe8017747121d682bcf7ab72b55ca1"
        ],
        [
            "eapply freeVarClosedList2.",
            "VernacExtend",
            "17adc534afa589773de11f8049d1b154c281f3b4"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint freeVarListFormula (l : fol.Formulas L) : list nat := match l with | nil => nil (A:=nat) | f :: l => freeVarFormula f ++ freeVarListFormula l end.",
            "VernacFixpoint",
            "34957fa2bd3a1e745148984a5f885d0027b133a4"
        ],
        [
            "Lemma freeVarListFormulaApp : forall a b : fol.Formulas L, freeVarListFormula (a ++ b) = freeVarListFormula a ++ freeVarListFormula b.",
            "VernacStartTheoremProof",
            "15aafb303890d2e25b9916cec4ae34b2d2f9bffc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction a as [| a a0 Hreca].",
            "VernacExtend",
            "46342ac3977886b535350fbefba93b4d685c5e28"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hreca.",
            "VernacExtend",
            "e36eee3264b3a9d64e1287fc1ce5a10dddf2f009"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_freeVarListFormula : forall (v : nat) (f : fol.Formula L) (F : fol.Formulas L), In v (freeVarFormula f) -> In f F -> In v (freeVarListFormula F).",
            "VernacStartTheoremProof",
            "0047a41e4a8f0826bd8e6bea0f134f44c7ae9864"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction F as [| a F HrecF].",
            "VernacExtend",
            "c4ee506f7a1e46795b1367bfcff63a625b2e6bd0"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_freeVarListFormulaE : forall (v : nat) (F : fol.Formulas L), In v (freeVarListFormula F) -> exists f : fol.Formula L, In v (freeVarFormula f) /\\ In f F.",
            "VernacStartTheoremProof",
            "478544b9f58f7e80019b5ba3229cdc8f606b44cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction F as [| a F HrecF].",
            "VernacExtend",
            "c4ee506f7a1e46795b1367bfcff63a625b2e6bd0"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "induction (in_app_or _ _ _ H).",
            "VernacExtend",
            "acf73ae8a5b539424453278277bcc3b62da459d6"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "induction (HrecF H0).",
            "VernacExtend",
            "6e0fdb204ec86824ebf6ab36e59c593a45285b28"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition In_freeVarSys (v : nat) (T : fol.System L) := exists f : fol.Formula L, In v (freeVarFormula f) /\\ mem _ T f.",
            "VernacDefinition",
            "f42db5229ea8fc8faf941aa31d670e396e44458f"
        ],
        [
            "Lemma notInFreeVarSys : forall x, ~ In_freeVarSys x (Ensembles.Empty_set (fol.Formula L)).",
            "VernacStartTheoremProof",
            "b358a1a55fa4cac02c281814b587e862625b6fe5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold In_freeVarSys in |- *.",
            "VernacExtend",
            "085ee793a55be28c5edd5d33bdf7e9f4aac33eb2"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction H as (x0, (H, H0)).",
            "VernacExtend",
            "48ce382e7f5acc1abb8c3dd20e1385ea8c103101"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Free_Variables.",
            "VernacEndSegment",
            "f53f508ad751ba0a398672cf3677d4259d4abce6"
        ],
        [
            "Section Substitution.",
            "VernacBeginSection",
            "b7d6fa10634785670e99033cf5b4f8efcd9c0673"
        ],
        [
            "Fixpoint substituteTerm (s : fol.Term L) (x : nat) (t : fol.Term L) {struct s} : fol.Term L := match s with | fol.var v => match eq_nat_dec x v with | left _ => t | right _ => var v end | fol.apply f ts => apply f (substituteTerms _ ts x t) end with substituteTerms (n : nat) (ss : fol.Terms L n) (x : nat) (t : fol.Term L) {struct ss} : fol.Terms L n := match ss in (fol.Terms _ n0) return (fol.Terms L n0) with | Tnil => Tnil L | Tcons m s ts => Tcons L m (substituteTerm s x t) (substituteTerms m ts x t) end.",
            "VernacFixpoint",
            "a8f0071807fb14ead40a6c7f9375cc3269fddeb8"
        ],
        [
            "Lemma subTermVar1 : forall (v : nat) (s : fol.Term L), substituteTerm (var v) v s = s.",
            "VernacStartTheoremProof",
            "1f07331422e9dd17397bf535da61c485b5a90366"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "unfold substituteTerm in |- *.",
            "VernacExtend",
            "40402c0525c1ef39921f9fc2caf6a435b21b6975"
        ],
        [
            "induction (eq_nat_dec v v).",
            "VernacExtend",
            "f840437931cca01d167eed5a45843a547cef6a13"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subTermVar2 : forall (v x : nat) (s : fol.Term L), v <> x -> substituteTerm (var x) v s = var x.",
            "VernacStartTheoremProof",
            "a2fa6fdc490312f84ac2d9aedfd68e815a5d1099"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold var in |- *.",
            "VernacExtend",
            "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
        ],
        [
            "unfold substituteTerm in |- *.",
            "VernacExtend",
            "40402c0525c1ef39921f9fc2caf6a435b21b6975"
        ],
        [
            "induction (eq_nat_dec v x).",
            "VernacExtend",
            "5343d0b985745ad784310fa496214d3193ee0abe"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subTermFunction : forall (f : Functions L) (ts : fol.Terms L (arity L (inr _ f))) (v : nat) (s : fol.Term L), substituteTerm (apply f ts) v s = apply f (substituteTerms _ ts v s).",
            "VernacStartTheoremProof",
            "f0a5dcc593d0508961ebde49e41b44a285d0340c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition newVar (l : list nat) : nat := fold_right max 0 (map S l).",
            "VernacDefinition",
            "9de88b395406ef7d5703ca2c943acbc88945945d"
        ],
        [
            "Lemma newVar2 : forall (l : list nat) (n : nat), In n l -> n < newVar l.",
            "VernacStartTheoremProof",
            "4a070f845029ed7768a3732d1a51468a803e07c7"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction l as [| a l Hrecl].",
            "VernacExtend",
            "fd09d6abd5c50f5308a8699ed52e53f02987fb3d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as [H| H].",
            "VernacExtend",
            "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "unfold newVar in |- *.",
            "VernacExtend",
            "c486317fd58c9037ee356136d4134f0ef7dd0dd9"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (fold_right max 0 (map S l)).",
            "VernacExtend",
            "122db866b541329310b863b244b2b47fec3d890a"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply le_max_l.",
            "VernacExtend",
            "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
        ],
        [
            "unfold newVar in |- *.",
            "VernacExtend",
            "c486317fd58c9037ee356136d4134f0ef7dd0dd9"
        ],
        [
            "unfold newVar in Hrecl.",
            "VernacExtend",
            "611eeec975adf0d5bc3c662d8470887106dab4f6"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (fold_right max 0 (map S l) = 0 \\/ (exists n : nat, fold_right max 0 (map S l) = S n)).",
            "VernacExtend",
            "120071f6fb9788dae7d340b62a6641a77f88eef5"
        ],
        [
            "induction (fold_right max 0 (map S l)).",
            "VernacExtend",
            "122db866b541329310b863b244b2b47fec3d890a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists n0.",
            "VernacExtend",
            "4a157d74b622bc162db1c65030947db5e98084b6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H0 in Hrecl.",
            "VernacExtend",
            "a0cde1e2950068fbaf4e811a90a874c8a86b03ea"
        ],
        [
            "elim (lt_n_O n).",
            "VernacExtend",
            "7d8091b172448ae87283d5f973715d3720dc0bcb"
        ],
        [
            "apply Hrecl.",
            "VernacExtend",
            "8bd42cb52486995858aeeeb0e7730132f95e798f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H0 as (x, H0).",
            "VernacExtend",
            "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H0 in Hrecl.",
            "VernacExtend",
            "a0cde1e2950068fbaf4e811a90a874c8a86b03ea"
        ],
        [
            "apply lt_le_trans with (S x).",
            "VernacExtend",
            "a80de0d028ccc57d2ff54d25541c8c90bde53522"
        ],
        [
            "apply Hrecl.",
            "VernacExtend",
            "8bd42cb52486995858aeeeb0e7730132f95e798f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_max_r.",
            "VernacExtend",
            "2770eee6606c65af90cd62218f564fa7b6592164"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma newVar1 : forall l : list nat, ~ In (newVar l) l.",
            "VernacStartTheoremProof",
            "e8c022b1470d8c2e3f5e4ebe89a5e2167047e263"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (lt_irrefl (newVar l)).",
            "VernacExtend",
            "fe4d2b30a69ac665ba518e9a66b10899a6f43edb"
        ],
        [
            "apply newVar2.",
            "VernacExtend",
            "c27168de27da39d03695d542dd120db4bb594e99"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition substituteFormulaImp (f : fol.Formula L) (frec : nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L f}) (g : fol.Formula L) (grec : nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L g}) (p : nat * fol.Term L) : {y : fol.Formula L | depth L y = depth L (impH f g)} := match frec p with | exist f' prf1 => match grec p with | exist g' prf2 => exist (fun y : fol.Formula L => depth L y = S (max (depth L f) (depth L g))) (impH f' g') (eq_ind_r (fun n : nat => S (max n (depth L g')) = S (max (depth L f) (depth L g))) (eq_ind_r (fun n : nat => S (max (depth L f) n) = S (max (depth L f) (depth L g))) (refl_equal (S (max (depth L f) (depth L g)))) prf2) prf1) end end.",
            "VernacDefinition",
            "2fd2a9cfa46de0c9db06f75e956ce5977f00df6c"
        ],
        [
            "Remark substituteFormulaImpNice : forall (f g : fol.Formula L) (z1 z2 : nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L f}), (forall q : nat * fol.Term L, z1 q = z2 q) -> forall z3 z4 : nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L g}, (forall q : nat * fol.Term L, z3 q = z4 q) -> forall q : nat * fol.Term L, substituteFormulaImp f z1 g z3 q = substituteFormulaImp f z2 g z4 q.",
            "VernacStartTheoremProof",
            "e4a631377dbf8e57886deb21bd333cc8f954a2d2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold substituteFormulaImp in |- *.",
            "VernacExtend",
            "80047ed2f63b499bb049cb8e2581a707a2c90e00"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition substituteFormulaNot (f : fol.Formula L) (frec : nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L f}) (p : nat * fol.Term L) : {y : fol.Formula L | depth L y = depth L (notH f)} := match frec p with | exist f' prf1 => exist (fun y : fol.Formula L => depth L y = S (depth L f)) (notH f') (eq_ind_r (fun n : nat => S n = S (depth L f)) (refl_equal (S (depth L f))) prf1) end.",
            "VernacDefinition",
            "c678eecd50f85fc90e4cec9f4c7384ce9c389600"
        ],
        [
            "Remark substituteFormulaNotNice : forall (f : fol.Formula L) (z1 z2 : nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L f}), (forall q : nat * fol.Term L, z1 q = z2 q) -> forall q : nat * fol.Term L, substituteFormulaNot f z1 q = substituteFormulaNot f z2 q.",
            "VernacStartTheoremProof",
            "29331ed37fe22d2c6fb50708da073cb3bae56f1e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold substituteFormulaNot in |- *.",
            "VernacExtend",
            "dd9d87dc4e697ea437bc77e757483cc4bcb196d7"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition substituteFormulaForall (n : nat) (f : fol.Formula L) (frec : forall b : fol.Formula L, lt_depth b (forallH n f) -> nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L b}) (p : nat * fol.Term L) : {y : fol.Formula L | depth L y = depth L (forallH n f)} := match p with | (v, s) => match eq_nat_dec n v with | left _ => exist (fun y : fol.Formula L => depth L y = S (depth L f)) (forallH n f) (refl_equal (depth L (forallH n f))) | right _ => match In_dec eq_nat_dec n (freeVarTerm s) with | left _ => let nv := newVar (v :: freeVarTerm s ++ freeVarFormula f) in match frec f (depthForall L f n) (n, var nv) with | exist f' prf1 => match frec f' (eqDepth L f' f (forallH n f) (sym_eq prf1) (depthForall L f n)) p with | exist f'' prf2 => exist (fun y : fol.Formula L => depth L y = S (depth L f)) (forallH nv f'') (eq_ind_r (fun n : nat => S n = S (depth L f)) (refl_equal (S (depth L f))) (trans_eq prf2 prf1)) end end | right _ => match frec f (depthForall L f n) p with | exist f' prf1 => exist (fun y : fol.Formula L => depth L y = S (depth L f)) (forallH n f') (eq_ind_r (fun n : nat => S n = S (depth L f)) (refl_equal (S (depth L f))) prf1) end end end end.",
            "VernacDefinition",
            "912b6619814fd1e411785bd810ff44ea94bf7493"
        ],
        [
            "Remark substituteFormulaForallNice : forall (v : nat) (a : fol.Formula L) (z1 z2 : forall b : fol.Formula L, lt_depth b (forallH v a) -> nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L b}), (forall (b : fol.Formula L) (q : lt_depth b (forallH v a)) (r : nat * fol.Term L), z1 b q r = z2 b q r) -> forall q : nat * fol.Term L, substituteFormulaForall v a z1 q = substituteFormulaForall v a z2 q.",
            "VernacStartTheoremProof",
            "488aa78394ae6f5f92f592763bc46623cdd27863"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold substituteFormulaForall in |- *.",
            "VernacExtend",
            "c48a1ed969dcd83f2f2a1a6de2a863e86ce9d6f9"
        ],
        [
            "induction q as (a0, b).",
            "VernacExtend",
            "d1b9b32dc6a60fe1069a51780e06a2afbfded87d"
        ],
        [
            "induction (eq_nat_dec v a0); simpl in |- *.",
            "VernacExtend",
            "b734757321593a765183fff5b0e95e8b7a73bb6d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "induction (In_dec eq_nat_dec v (freeVarTerm b)); simpl in |- *.",
            "VernacExtend",
            "0202a92de2eeeace74bdd2718dd679dcef433adc"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "induction (z2 a (depthForall L a v) (v, var (newVar (a0 :: freeVarTerm b ++ freeVarFormula a)))).",
            "VernacExtend",
            "86eb613cb0d9d9d281311215d3811c20dd135153"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition substituteFormulaHelp (f : fol.Formula L) (v : nat) (s : fol.Term L) : {y : fol.Formula L | depth L y = depth L f}.",
            "VernacDefinition",
            "0a89ceee89925a47209b9d5b52e531ec92a92f29"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (Formula_depth_rec2 L (fun f : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L f})).",
            "VernacExtend",
            "e06eb711ee883beafdeccaf0eedea2d43bc4f360"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (a, b).",
            "VernacExtend",
            "a38b751804066ee5c9ffd544b070adbe2e414a1a"
        ],
        [
            "exists (equal (substituteTerm t a b) (substituteTerm t0 a b)).",
            "VernacExtend",
            "0b65a8e051efd5c56d05c7c5b94c80402f18e8a4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (a, b).",
            "VernacExtend",
            "a38b751804066ee5c9ffd544b070adbe2e414a1a"
        ],
        [
            "exists (atomic r (substituteTerms _ t a b)).",
            "VernacExtend",
            "e8802ef3c7a9a0befdcd1bfb7e89bb4ed5af5299"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exact substituteFormulaImp.",
            "VernacExtend",
            "11d12076007bf0e094509a9ccfd3da5f5db2379d"
        ],
        [
            "exact substituteFormulaNot.",
            "VernacExtend",
            "f41605f2c57d055096c4548e95eaf775b42114b6"
        ],
        [
            "exact substituteFormulaForall.",
            "VernacExtend",
            "483fe8d8685e876a172aac63509789cfc159027c"
        ],
        [
            "exact (v, s).",
            "VernacExtend",
            "8c069dd39ffcc69290d1d3f2c283d86103a27ec7"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition substituteFormula (f : fol.Formula L) (v : nat) (s : fol.Term L) : fol.Formula L := proj1_sig (substituteFormulaHelp f v s).",
            "VernacDefinition",
            "4d7a0cede07f64b3d7522735e77cdc481b11f88a"
        ],
        [
            "Lemma subFormulaEqual : forall (t1 t2 : fol.Term L) (v : nat) (s : fol.Term L), substituteFormula (equal t1 t2) v s = equal (substituteTerm t1 v s) (substituteTerm t2 v s).",
            "VernacStartTheoremProof",
            "b8fa6bcca7e76247ce84ebeb395a9a9db2f44490"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaRelation : forall (r : Relations L) (ts : fol.Terms L (arity L (inl _ r))) (v : nat) (s : fol.Term L), substituteFormula (atomic r ts) v s = atomic r (substituteTerms (arity L (inl _ r)) ts v s).",
            "VernacStartTheoremProof",
            "36b1770a9d3a8ece46166608271a974675149cf3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaImp : forall (f1 f2 : fol.Formula L) (v : nat) (s : fol.Term L), substituteFormula (impH f1 f2) v s = impH (substituteFormula f1 v s) (substituteFormula f2 v s).",
            "VernacStartTheoremProof",
            "dfd4c703a60f44088833fec6321cebcb81a8e944"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold substituteFormula in |- *.",
            "VernacExtend",
            "42ba3d6eb0fb0be6329f535f50115c5a3ddc5e7e"
        ],
        [
            "unfold substituteFormulaHelp in |- *.",
            "VernacExtend",
            "5f1095b77def24984f4d5a2f3daa53269c5556a9"
        ],
        [
            "rewrite (Formula_depth_rec2_imp L) with (Q := fun _ : fol.Formula L => (nat * fol.Term L)%type) (P := fun x : fol.Formula L => {y : fol.Formula L | depth L y = depth L x}).",
            "VernacExtend",
            "25b7a2a9d441cc653fc90bc742dfe39d5e4dd91b"
        ],
        [
            "unfold substituteFormulaImp at 1 in |- *.",
            "VernacExtend",
            "eb6765fb21c1c68343a11a6f9a141ec4fc335a7f"
        ],
        [
            "induction (Formula_depth_rec2 L (fun x : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.equal L t t0)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.equal L t t0)) (equal (substituteTerm t a b) (substituteTerm t0 a b)) (refl_equal (depth L (fol.equal L t t0)))) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.atomic L r t)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.atomic L r t)) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b)) (refl_equal (depth L (fol.atomic L r t)))) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f1 (v, s)).",
            "VernacExtend",
            "9f0949a2ffcd2f6854a13ccc418ca706c086b90f"
        ],
        [
            "induction (Formula_depth_rec2 L (fun x0 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x0}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.equal L t t0)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.equal L t t0)) (equal (substituteTerm t a b) (substituteTerm t0 a b)) (refl_equal (depth L (fol.equal L t t0)))) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.atomic L r t)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.atomic L r t)) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b)) (refl_equal (depth L (fol.atomic L r t)))) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f2 (v, s)).",
            "VernacExtend",
            "d108c636870332b8ffabc0f9aa2ae6bec8c270b8"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply substituteFormulaImpNice.",
            "VernacExtend",
            "83dd7afc51195ad76b145a1f075d8a6560467a5a"
        ],
        [
            "apply substituteFormulaNotNice.",
            "VernacExtend",
            "c8d19366cfd9b708e4cf1d97c15ed1ae2d0337cf"
        ],
        [
            "apply substituteFormulaForallNice.",
            "VernacExtend",
            "182d5e4071aaf651a16b9444142a76addb9671ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaNot : forall (f : fol.Formula L) (v : nat) (s : fol.Term L), substituteFormula (notH f) v s = notH (substituteFormula f v s).",
            "VernacStartTheoremProof",
            "88a335846a22a50cb03e0d182b7d668e4879052d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold substituteFormula in |- *.",
            "VernacExtend",
            "42ba3d6eb0fb0be6329f535f50115c5a3ddc5e7e"
        ],
        [
            "unfold substituteFormulaHelp in |- *.",
            "VernacExtend",
            "5f1095b77def24984f4d5a2f3daa53269c5556a9"
        ],
        [
            "rewrite (Formula_depth_rec2_not L) with (Q := fun _ : fol.Formula L => (nat * fol.Term L)%type) (P := fun x : fol.Formula L => {y : fol.Formula L | depth L y = depth L x}).",
            "VernacExtend",
            "ba907addad230aa0d69cf759162339a31fed611f"
        ],
        [
            "unfold substituteFormulaNot at 1 in |- *.",
            "VernacExtend",
            "d5c3af1f189387d7d0098b6798b6e50a144779f4"
        ],
        [
            "induction (Formula_depth_rec2 L (fun x : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.equal L t t0)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.equal L t t0)) (equal (substituteTerm t a b) (substituteTerm t0 a b)) (refl_equal (depth L (fol.equal L t t0)))) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.atomic L r t)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.atomic L r t)) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b)) (refl_equal (depth L (fol.atomic L r t)))) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f (v, s)).",
            "VernacExtend",
            "d4448b58e9053a67615233805adcd5dd97af3fec"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply substituteFormulaImpNice.",
            "VernacExtend",
            "83dd7afc51195ad76b145a1f075d8a6560467a5a"
        ],
        [
            "apply substituteFormulaNotNice.",
            "VernacExtend",
            "c8d19366cfd9b708e4cf1d97c15ed1ae2d0337cf"
        ],
        [
            "apply substituteFormulaForallNice.",
            "VernacExtend",
            "182d5e4071aaf651a16b9444142a76addb9671ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaForall : forall (f : fol.Formula L) (x v : nat) (s : fol.Term L), let nv := newVar (v :: freeVarTerm s ++ freeVarFormula f) in substituteFormula (forallH x f) v s = match eq_nat_dec x v with | left _ => forallH x f | right _ => match In_dec eq_nat_dec x (freeVarTerm s) with | right _ => forallH x (substituteFormula f v s) | left _ => forallH nv (substituteFormula (substituteFormula f x (var nv)) v s) end end.",
            "VernacStartTheoremProof",
            "5fb26554d45de6ec9f7dfa2001d64c25389749a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold substituteFormula at 1 in |- *.",
            "VernacExtend",
            "f849818c572e053aa46c0ccbe559c7a2bbd15f60"
        ],
        [
            "unfold substituteFormulaHelp in |- *.",
            "VernacExtend",
            "5f1095b77def24984f4d5a2f3daa53269c5556a9"
        ],
        [
            "rewrite (Formula_depth_rec2_forall L) with (Q := fun _ : fol.Formula L => (nat * fol.Term L)%type) (P := fun x : fol.Formula L => {y : fol.Formula L | depth L y = depth L x}).",
            "VernacExtend",
            "b14ca29e90058346232760ba8c96b606960aa12d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (eq_nat_dec x v); simpl in |- *.",
            "VernacExtend",
            "d3e7c596bc01c2a9084645ba85802d337bb65c91"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "induction (In_dec eq_nat_dec x (freeVarTerm s)); simpl in |- *.",
            "VernacExtend",
            "6b70e4d8a3c68eaed4a79b8ea7b7b5fe306a9cee"
        ],
        [
            "fold nv in |- *.",
            "VernacExtend",
            "2c4ba9d3549005f01551be73ab81d61f1191a29f"
        ],
        [
            "unfold substituteFormula at 2 in |- *; unfold substituteFormulaHelp in |- *; simpl in |- *.",
            "VernacExtend",
            "8b9fd7bdedcbcbc5fc91f2b91237ea35bbff9bee"
        ],
        [
            "induction (Formula_depth_rec2 L (fun x0 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x0}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (equal (substituteTerm t a0 b0) (substituteTerm t0 a0 b0)) (refl_equal 0)) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a0 b0)) (refl_equal 0)) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f (x, var nv)).",
            "VernacExtend",
            "389a410bc978fc641cd6dae25bb841b44350e867"
        ],
        [
            "unfold substituteFormula in |- *; unfold substituteFormulaHelp in |- *; simpl in |- *.",
            "VernacExtend",
            "2ee80a04e2f054bc2f09bc7b2a79e2eda091246d"
        ],
        [
            "induction (Formula_depth_rec2 L (fun x1 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x1}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (equal (substituteTerm t a0 b0) (substituteTerm t0 a0 b0)) (refl_equal 0)) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a0 b0)) (refl_equal 0)) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall x0 (v, s)).",
            "VernacExtend",
            "60c3c9f6d360e35cb7265480c2ab50f264bfa5ec"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold substituteFormula in |- *; unfold substituteFormulaHelp in |- *; simpl in |- *.",
            "VernacExtend",
            "2ee80a04e2f054bc2f09bc7b2a79e2eda091246d"
        ],
        [
            "induction (Formula_depth_rec2 L (fun x0 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x0}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a : nat) (b1 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (equal (substituteTerm t a b1) (substituteTerm t0 a b1)) (refl_equal 0)) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a : nat) (b1 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b1)) (refl_equal 0)) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f (v, s)).",
            "VernacExtend",
            "73fa01d90412473a80e1939ed116461c040c9b3d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply substituteFormulaImpNice.",
            "VernacExtend",
            "83dd7afc51195ad76b145a1f075d8a6560467a5a"
        ],
        [
            "apply substituteFormulaNotNice.",
            "VernacExtend",
            "c8d19366cfd9b708e4cf1d97c15ed1ae2d0337cf"
        ],
        [
            "apply substituteFormulaForallNice.",
            "VernacExtend",
            "182d5e4071aaf651a16b9444142a76addb9671ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Extensions.",
            "VernacBeginSection",
            "24ee4eb180c35077d5974432bb79adbc00a078d5"
        ],
        [
            "Let orH := orH L.",
            "VernacDefinition",
            "0ac8832e88ec1801dd7f8e764071579c4014e425"
        ],
        [
            "Let andH := andH L.",
            "VernacDefinition",
            "4daa82892653c0883a5d6ebec876be8ae9f5ec12"
        ],
        [
            "Let existH := existH L.",
            "VernacDefinition",
            "0ba7f517f2c1b7f1a555803e43ae56c5f61ebcae"
        ],
        [
            "Let iffH := iffH L.",
            "VernacDefinition",
            "c97762ff458ff51e91985121c0ae88a85a82e865"
        ],
        [
            "Let ifThenElseH := ifThenElseH L.",
            "VernacDefinition",
            "34c02609686a38b645af860458ab18a92957ea25"
        ],
        [
            "Lemma subFormulaOr : forall (f1 f2 : fol.Formula L) (v : nat) (s : fol.Term L), substituteFormula (orH f1 f2) v s = orH (substituteFormula f1 v s) (substituteFormula f2 v s).",
            "VernacStartTheoremProof",
            "6d074bcb72b1ff37cbe2147f3888a5e054dafea4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold orH, fol.orH in |- *.",
            "VernacExtend",
            "df9e284d2941a26a2515a640a891b231d82600ae"
        ],
        [
            "rewrite subFormulaImp.",
            "VernacExtend",
            "2c75a435559ed23842b5fd825fae38ccd105e713"
        ],
        [
            "rewrite subFormulaNot.",
            "VernacExtend",
            "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaAnd : forall (f1 f2 : fol.Formula L) (v : nat) (s : fol.Term L), substituteFormula (andH f1 f2) v s = andH (substituteFormula f1 v s) (substituteFormula f2 v s).",
            "VernacStartTheoremProof",
            "b26b4bc3874b8c69a7cfbada4504f4abb80ca666"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold andH, fol.andH in |- *.",
            "VernacExtend",
            "313bdd70ab4e300fd4e83cb305b6f0dbf3207116"
        ],
        [
            "rewrite subFormulaNot.",
            "VernacExtend",
            "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
        ],
        [
            "rewrite subFormulaOr.",
            "VernacExtend",
            "425d96a7c340c224da5b4a3ecd58274dc567d324"
        ],
        [
            "repeat rewrite subFormulaNot.",
            "VernacExtend",
            "c6506367ffe0b9cf837232775c4016a429b34c95"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaExist : forall (f : fol.Formula L) (x v : nat) (s : fol.Term L), let nv := newVar (v :: freeVarTerm s ++ freeVarFormula f) in substituteFormula (existH x f) v s = match eq_nat_dec x v with | left _ => existH x f | right _ => match In_dec eq_nat_dec x (freeVarTerm s) with | right _ => existH x (substituteFormula f v s) | left _ => existH nv (substituteFormula (substituteFormula f x (var nv)) v s) end end.",
            "VernacStartTheoremProof",
            "78072aea5a2014fcd02ec2004f4d6b25b99f59b8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold existH, fol.existH in |- *.",
            "VernacExtend",
            "19d043640de3bdf525ee126c88f51fddb1407bb4"
        ],
        [
            "rewrite subFormulaNot.",
            "VernacExtend",
            "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
        ],
        [
            "rewrite subFormulaForall.",
            "VernacExtend",
            "1d9413f545c89caa4e9e1ae708766925f4d8d918"
        ],
        [
            "induction (eq_nat_dec x v).",
            "VernacExtend",
            "9e0373efa21a443e505eef82b3db4f018c4b8262"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "induction (In_dec eq_nat_dec x (freeVarTerm s)).",
            "VernacExtend",
            "e63649dd23bc2bf585600c8f3435fbea12d61500"
        ],
        [
            "repeat rewrite subFormulaNot.",
            "VernacExtend",
            "c6506367ffe0b9cf837232775c4016a429b34c95"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite subFormulaNot.",
            "VernacExtend",
            "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaIff : forall (f1 f2 : fol.Formula L) (v : nat) (s : fol.Term L), substituteFormula (iffH f1 f2) v s = iffH (substituteFormula f1 v s) (substituteFormula f2 v s).",
            "VernacStartTheoremProof",
            "838050272f06d7de9a94326dc50aefaf97dd3d22"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold iffH, fol.iffH in |- *.",
            "VernacExtend",
            "7b99614924500d78bb5d7a8df55a24e7a241b409"
        ],
        [
            "rewrite subFormulaAnd.",
            "VernacExtend",
            "ac779a1739e565aacf3fd9113fe4e0640443f552"
        ],
        [
            "repeat rewrite subFormulaImp.",
            "VernacExtend",
            "5b3a9a0515a5128821d235575ccf0d228ea749ac"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaIfThenElse : forall (f1 f2 f3 : fol.Formula L) (v : nat) (s : fol.Term L), substituteFormula (ifThenElseH f1 f2 f3) v s = ifThenElseH (substituteFormula f1 v s) (substituteFormula f2 v s) (substituteFormula f3 v s).",
            "VernacStartTheoremProof",
            "cb07d2f6c6a1ebc4326a0583c1cd7360262f5ad1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ifThenElseH, fol.ifThenElseH in |- *.",
            "VernacExtend",
            "eccf7566fb3dcfd225f86fba14ad9c66070ea960"
        ],
        [
            "rewrite subFormulaAnd.",
            "VernacExtend",
            "ac779a1739e565aacf3fd9113fe4e0640443f552"
        ],
        [
            "repeat rewrite subFormulaImp.",
            "VernacExtend",
            "5b3a9a0515a5128821d235575ccf0d228ea749ac"
        ],
        [
            "rewrite subFormulaNot.",
            "VernacExtend",
            "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Extensions.",
            "VernacEndSegment",
            "bde7191fce32a4a4f0f6d48c1034fb6b22198149"
        ],
        [
            "Lemma subFormulaDepth : forall (f : fol.Formula L) (v : nat) (s : fol.Term L), depth L (substituteFormula f v s) = depth L f.",
            "VernacStartTheoremProof",
            "6b0212b3ec77fdb7153d7d2a7269f9d744f54a16"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold substituteFormula in |- *.",
            "VernacExtend",
            "42ba3d6eb0fb0be6329f535f50115c5a3ddc5e7e"
        ],
        [
            "induction (substituteFormulaHelp f v s).",
            "VernacExtend",
            "b19f188827b7c2317d336569f9af38315380c1ec"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Substitution_Properties.",
            "VernacBeginSection",
            "140904f3c02dbdb283deaa6a9bdd81c2004cdbd2"
        ],
        [
            "Lemma subTermId : forall (t : fol.Term L) (v : nat), substituteTerm t v (var v) = t.",
            "VernacStartTheoremProof",
            "e1888e7aa9853381ee7b902c8661f09cc1e79fe7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim t using Term_Terms_ind with (P0 := fun (n : nat) (ts : fol.Terms L n) => substituteTerms n ts v (var v) = ts).",
            "VernacExtend",
            "11557c906fa0dd3b81cf2c9eae5ff68220106218"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_nat_dec v n).",
            "VernacExtend",
            "d994ef5a36c04385f3538e80d3dfac39342b9270"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subTermsId : forall (n : nat) (ts : fol.Terms L n) (v : nat), substituteTerms n ts v (var v) = ts.",
            "VernacStartTheoremProof",
            "86b63c2b73df991405e9211f9ad8376bf621a9aa"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction ts as [| n t ts Hrects].",
            "VernacExtend",
            "4a72ca30982cf76b6ad63620c27c0db203f25a01"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrects.",
            "VernacExtend",
            "8222d3838095a7731870da03c025d94cecf3f539"
        ],
        [
            "rewrite subTermId.",
            "VernacExtend",
            "33aa67144f922337ae8eb7a32ae9e457bef5ecb4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaId : forall (f : fol.Formula L) (v : nat), substituteFormula f v (var v) = f.",
            "VernacStartTheoremProof",
            "7559c94f06f35626aa22adee4146f4d1d2ce060b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction f as [t t0| r t| f1 Hrecf1 f0 Hrecf0| f Hrecf| n f Hrecf].",
            "VernacExtend",
            "226ec1284c23286e580ea5e04e2dff8e6fe7a632"
        ],
        [
            "rewrite subFormulaEqual.",
            "VernacExtend",
            "a432e90b7163a8eb05e164e5afc5eb156e167fbf"
        ],
        [
            "repeat rewrite subTermId.",
            "VernacExtend",
            "9d44f11ea31799be6f89a464765cf8b8c3ecf0b6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite subFormulaRelation.",
            "VernacExtend",
            "c74d64c9d04371dc00d30c501b148b3d7276f169"
        ],
        [
            "rewrite subTermsId.",
            "VernacExtend",
            "c1bc16b7d94738a48ab92f26ddfd7212d5f27af7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite subFormulaImp.",
            "VernacExtend",
            "2c75a435559ed23842b5fd825fae38ccd105e713"
        ],
        [
            "rewrite Hrecf1.",
            "VernacExtend",
            "74cdb3b5f159d2dd9ac51c0d29d0b8653642f991"
        ],
        [
            "rewrite Hrecf0.",
            "VernacExtend",
            "a606db4ccdb77e2756c8fd28d9bd0a3d6939f0b8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite subFormulaNot.",
            "VernacExtend",
            "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
        ],
        [
            "rewrite Hrecf.",
            "VernacExtend",
            "99d5d51792eb9ed1121d521ca0a9b881596296e5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite subFormulaForall.",
            "VernacExtend",
            "1d9413f545c89caa4e9e1ae708766925f4d8d918"
        ],
        [
            "induction (eq_nat_dec n v).",
            "VernacExtend",
            "6a02ca712c42c38dd12b4c559f1af3eb706d00a1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "induction (In_dec eq_nat_dec n (freeVarTerm (var v))).",
            "VernacExtend",
            "0e13811a110f6460d0522a592c20b1573a008776"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "simpl in a.",
            "VernacExtend",
            "58be579b520de350ddccdb644f51b35e86a87b4c"
        ],
        [
            "induction a as [H| H].",
            "VernacExtend",
            "cb30e64d8d178ba247f84728ed3be9cdd8fee641"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "rewrite Hrecf.",
            "VernacExtend",
            "99d5d51792eb9ed1121d521ca0a9b881596296e5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subFormulaForall2 : forall (f : fol.Formula L) (x v : nat) (s : fol.Term L), exists nv : nat, ~ In nv (freeVarTerm s) /\\ nv <> v /\\ ~ In nv (list_remove _ eq_nat_dec x (freeVarFormula f)) /\\ substituteFormula (forallH x f) v s = match eq_nat_dec x v with | left _ => forallH x f | right _ => forallH nv (substituteFormula (substituteFormula f x (var nv)) v s) end.",
            "VernacStartTheoremProof",
            "970c585fd1fab64e5017a2b8eadf9b6cbd5d023a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite subFormulaForall.",
            "VernacExtend",
            "1d9413f545c89caa4e9e1ae708766925f4d8d918"
        ],
        [
            "induction (eq_nat_dec x v).",
            "VernacExtend",
            "9e0373efa21a443e505eef82b3db4f018c4b8262"
        ],
        [
            "set (A1 := v :: freeVarTerm s ++ list_remove nat eq_nat_dec x (freeVarFormula f)) in *.",
            "VernacExtend",
            "143b7e706110b41d9f37478ff001f9f8da6e5f59"
        ],
        [
            "exists (newVar A1).",
            "VernacExtend",
            "a3450ac5442852b224eef9a80ca1b18e0459616a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "unfold A1 in |- *.",
            "VernacExtend",
            "dcb2f070fd1684166e99303b8cc7fa0ea21077d0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (In_dec eq_nat_dec x (freeVarTerm s)).",
            "VernacExtend",
            "e63649dd23bc2bf585600c8f3435fbea12d61500"
        ],
        [
            "set (A1 := v :: freeVarTerm s ++ freeVarFormula f) in *.",
            "VernacExtend",
            "e797200d03954d4a008e4c0adb41c1868d8ef94e"
        ],
        [
            "exists (newVar A1).",
            "VernacExtend",
            "a3450ac5442852b224eef9a80ca1b18e0459616a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply In_list_remove1.",
            "VernacExtend",
            "b6b28153aa75f2c6a57f8178f189dba7003cf48c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "eapply (In_list_remove2 _ _ _ _ _ H).",
            "VernacExtend",
            "c8f14f2c6831ad5bf45f90a4ca360c3888c280d1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite subFormulaId.",
            "VernacExtend",
            "fce2f90b15ca4c05be053f093f300faa6a47027c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let existH := existH L.",
            "VernacDefinition",
            "0ba7f517f2c1b7f1a555803e43ae56c5f61ebcae"
        ],
        [
            "Lemma subFormulaExist2 : forall (f : fol.Formula L) (x v : nat) (s : fol.Term L), exists nv : nat, ~ In nv (freeVarTerm s) /\\ nv <> v /\\ ~ In nv (list_remove _ eq_nat_dec x (freeVarFormula f)) /\\ substituteFormula (existH x f) v s = match eq_nat_dec x v with | left _ => existH x f | right _ => existH nv (substituteFormula (substituteFormula f x (var nv)) v s) end.",
            "VernacStartTheoremProof",
            "7b88323fefc314a48ab666e638c3f80370b5865f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite subFormulaExist.",
            "VernacExtend",
            "c6a4b0c5600f3c5cf0512e3d1aeec7640303ff13"
        ],
        [
            "induction (eq_nat_dec x v).",
            "VernacExtend",
            "9e0373efa21a443e505eef82b3db4f018c4b8262"
        ],
        [
            "set (A1 := v :: freeVarTerm s ++ list_remove nat eq_nat_dec x (freeVarFormula f)) in *.",
            "VernacExtend",
            "143b7e706110b41d9f37478ff001f9f8da6e5f59"
        ],
        [
            "exists (newVar A1).",
            "VernacExtend",
            "a3450ac5442852b224eef9a80ca1b18e0459616a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "unfold A1 in |- *.",
            "VernacExtend",
            "dcb2f070fd1684166e99303b8cc7fa0ea21077d0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (In_dec eq_nat_dec x (freeVarTerm s)).",
            "VernacExtend",
            "e63649dd23bc2bf585600c8f3435fbea12d61500"
        ],
        [
            "set (A1 := v :: freeVarTerm s ++ freeVarFormula f) in *.",
            "VernacExtend",
            "e797200d03954d4a008e4c0adb41c1868d8ef94e"
        ],
        [
            "exists (newVar A1).",
            "VernacExtend",
            "a3450ac5442852b224eef9a80ca1b18e0459616a"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold not in |- *; intros; elim (newVar1 A1).",
            "VernacExtend",
            "58188082d102bea3414aec69fdbe4bfe36d9c359"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "eapply In_list_remove1.",
            "VernacExtend",
            "b6b28153aa75f2c6a57f8178f189dba7003cf48c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "eapply (In_list_remove2 _ _ _ _ _ H).",
            "VernacExtend",
            "c8f14f2c6831ad5bf45f90a4ca360c3888c280d1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite subFormulaId.",
            "VernacExtend",
            "fce2f90b15ca4c05be053f093f300faa6a47027c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Substitution_Properties.",
            "VernacEndSegment",
            "a8e934993e9da945e59074b0f152594d57b59a9c"
        ],
        [
            "End Substitution.",
            "VernacEndSegment",
            "f9426696e714319e42c6de126b7f0271a0328ad1"
        ],
        [
            "Definition Sentence (f:Formula) := (forall v : nat, ~ In v (freeVarFormula f)).",
            "VernacDefinition",
            "042d4d8a06cf3a8b209483e84262fb44c2bfe232"
        ],
        [
            "End Fol_Properties.",
            "VernacEndSegment",
            "fae4c02287d38bc44830f7d2ff9afa7d9256797a"
        ]
    ],
    "proofs": [
        {
            "name": "freeVarTermApply",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeVarListFormulaApp",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction a as [| a a0 Hreca].",
                        "VernacExtend",
                        "46342ac3977886b535350fbefba93b4d685c5e28"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hreca.",
                        "VernacExtend",
                        "e36eee3264b3a9d64e1287fc1ce5a10dddf2f009"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_freeVarListFormula",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction F as [| a F HrecF].",
                        "VernacExtend",
                        "c4ee506f7a1e46795b1367bfcff63a625b2e6bd0"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_freeVarListFormulaE",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction F as [| a F HrecF].",
                        "VernacExtend",
                        "c4ee506f7a1e46795b1367bfcff63a625b2e6bd0"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "induction (in_app_or _ _ _ H).",
                        "VernacExtend",
                        "acf73ae8a5b539424453278277bcc3b62da459d6"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "induction (HrecF H0).",
                        "VernacExtend",
                        "6e0fdb204ec86824ebf6ab36e59c593a45285b28"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notInFreeVarSys",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold In_freeVarSys in |- *.",
                        "VernacExtend",
                        "085ee793a55be28c5edd5d33bdf7e9f4aac33eb2"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, (H, H0)).",
                        "VernacExtend",
                        "48ce382e7f5acc1abb8c3dd20e1385ea8c103101"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subTermVar1",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteTerm in |- *.",
                        "VernacExtend",
                        "40402c0525c1ef39921f9fc2caf6a435b21b6975"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v v).",
                        "VernacExtend",
                        "f840437931cca01d167eed5a45843a547cef6a13"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subTermVar2",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold var in |- *.",
                        "VernacExtend",
                        "3af092910fe1f40ab18c17aad8e05c6fb6a11d3b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteTerm in |- *.",
                        "VernacExtend",
                        "40402c0525c1ef39921f9fc2caf6a435b21b6975"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v x).",
                        "VernacExtend",
                        "5343d0b985745ad784310fa496214d3193ee0abe"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subTermFunction",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "newVar2",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction l as [| a l Hrecl].",
                        "VernacExtend",
                        "fd09d6abd5c50f5308a8699ed52e53f02987fb3d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as [H| H].",
                        "VernacExtend",
                        "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "unfold newVar in |- *.",
                        "VernacExtend",
                        "c486317fd58c9037ee356136d4134f0ef7dd0dd9"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (fold_right max 0 (map S l)).",
                        "VernacExtend",
                        "122db866b541329310b863b244b2b47fec3d890a"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_n_Sm.",
                        "VernacExtend",
                        "f92329fc5a21d6fff46401efc5d5a45be946b12c"
                    ]
                },
                {
                    "command": [
                        "apply le_max_l.",
                        "VernacExtend",
                        "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
                    ]
                },
                {
                    "command": [
                        "unfold newVar in |- *.",
                        "VernacExtend",
                        "c486317fd58c9037ee356136d4134f0ef7dd0dd9"
                    ]
                },
                {
                    "command": [
                        "unfold newVar in Hrecl.",
                        "VernacExtend",
                        "611eeec975adf0d5bc3c662d8470887106dab4f6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (fold_right max 0 (map S l) = 0 \\/ (exists n : nat, fold_right max 0 (map S l) = S n)).",
                        "VernacExtend",
                        "120071f6fb9788dae7d340b62a6641a77f88eef5"
                    ]
                },
                {
                    "command": [
                        "induction (fold_right max 0 (map S l)).",
                        "VernacExtend",
                        "122db866b541329310b863b244b2b47fec3d890a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists n0.",
                        "VernacExtend",
                        "4a157d74b622bc162db1c65030947db5e98084b6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in Hrecl.",
                        "VernacExtend",
                        "a0cde1e2950068fbaf4e811a90a874c8a86b03ea"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O n).",
                        "VernacExtend",
                        "7d8091b172448ae87283d5f973715d3720dc0bcb"
                    ]
                },
                {
                    "command": [
                        "apply Hrecl.",
                        "VernacExtend",
                        "8bd42cb52486995858aeeeb0e7730132f95e798f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, H0).",
                        "VernacExtend",
                        "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in Hrecl.",
                        "VernacExtend",
                        "a0cde1e2950068fbaf4e811a90a874c8a86b03ea"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S x).",
                        "VernacExtend",
                        "a80de0d028ccc57d2ff54d25541c8c90bde53522"
                    ]
                },
                {
                    "command": [
                        "apply Hrecl.",
                        "VernacExtend",
                        "8bd42cb52486995858aeeeb0e7730132f95e798f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_max_r.",
                        "VernacExtend",
                        "2770eee6606c65af90cd62218f564fa7b6592164"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "newVar1",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl (newVar l)).",
                        "VernacExtend",
                        "fe4d2b30a69ac665ba518e9a66b10899a6f43edb"
                    ]
                },
                {
                    "command": [
                        "apply newVar2.",
                        "VernacExtend",
                        "c27168de27da39d03695d542dd120db4bb594e99"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "substituteFormulaImpNice",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaImp in |- *.",
                        "VernacExtend",
                        "80047ed2f63b499bb049cb8e2581a707a2c90e00"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "substituteFormulaNotNice",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaNot in |- *.",
                        "VernacExtend",
                        "dd9d87dc4e697ea437bc77e757483cc4bcb196d7"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "substituteFormulaForallNice",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaForall in |- *.",
                        "VernacExtend",
                        "c48a1ed969dcd83f2f2a1a6de2a863e86ce9d6f9"
                    ]
                },
                {
                    "command": [
                        "induction q as (a0, b).",
                        "VernacExtend",
                        "d1b9b32dc6a60fe1069a51780e06a2afbfded87d"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v a0); simpl in |- *.",
                        "VernacExtend",
                        "b734757321593a765183fff5b0e95e8b7a73bb6d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "induction (In_dec eq_nat_dec v (freeVarTerm b)); simpl in |- *.",
                        "VernacExtend",
                        "0202a92de2eeeace74bdd2718dd679dcef433adc"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "induction (z2 a (depthForall L a v) (v, var (newVar (a0 :: freeVarTerm b ++ freeVarFormula a)))).",
                        "VernacExtend",
                        "86eb613cb0d9d9d281311215d3811c20dd135153"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "substituteFormulaHelp",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (Formula_depth_rec2 L (fun f : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L f})).",
                        "VernacExtend",
                        "e06eb711ee883beafdeccaf0eedea2d43bc4f360"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (a, b).",
                        "VernacExtend",
                        "a38b751804066ee5c9ffd544b070adbe2e414a1a"
                    ]
                },
                {
                    "command": [
                        "exists (equal (substituteTerm t a b) (substituteTerm t0 a b)).",
                        "VernacExtend",
                        "0b65a8e051efd5c56d05c7c5b94c80402f18e8a4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (a, b).",
                        "VernacExtend",
                        "a38b751804066ee5c9ffd544b070adbe2e414a1a"
                    ]
                },
                {
                    "command": [
                        "exists (atomic r (substituteTerms _ t a b)).",
                        "VernacExtend",
                        "e8802ef3c7a9a0befdcd1bfb7e89bb4ed5af5299"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exact substituteFormulaImp.",
                        "VernacExtend",
                        "11d12076007bf0e094509a9ccfd3da5f5db2379d"
                    ]
                },
                {
                    "command": [
                        "exact substituteFormulaNot.",
                        "VernacExtend",
                        "f41605f2c57d055096c4548e95eaf775b42114b6"
                    ]
                },
                {
                    "command": [
                        "exact substituteFormulaForall.",
                        "VernacExtend",
                        "483fe8d8685e876a172aac63509789cfc159027c"
                    ]
                },
                {
                    "command": [
                        "exact (v, s).",
                        "VernacExtend",
                        "8c069dd39ffcc69290d1d3f2c283d86103a27ec7"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaEqual",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaRelation",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaImp",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormula in |- *.",
                        "VernacExtend",
                        "42ba3d6eb0fb0be6329f535f50115c5a3ddc5e7e"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaHelp in |- *.",
                        "VernacExtend",
                        "5f1095b77def24984f4d5a2f3daa53269c5556a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Formula_depth_rec2_imp L) with (Q := fun _ : fol.Formula L => (nat * fol.Term L)%type) (P := fun x : fol.Formula L => {y : fol.Formula L | depth L y = depth L x}).",
                        "VernacExtend",
                        "25b7a2a9d441cc653fc90bc742dfe39d5e4dd91b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaImp at 1 in |- *.",
                        "VernacExtend",
                        "eb6765fb21c1c68343a11a6f9a141ec4fc335a7f"
                    ]
                },
                {
                    "command": [
                        "induction (Formula_depth_rec2 L (fun x : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.equal L t t0)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.equal L t t0)) (equal (substituteTerm t a b) (substituteTerm t0 a b)) (refl_equal (depth L (fol.equal L t t0)))) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.atomic L r t)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.atomic L r t)) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b)) (refl_equal (depth L (fol.atomic L r t)))) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f1 (v, s)).",
                        "VernacExtend",
                        "9f0949a2ffcd2f6854a13ccc418ca706c086b90f"
                    ]
                },
                {
                    "command": [
                        "induction (Formula_depth_rec2 L (fun x0 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x0}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.equal L t t0)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.equal L t t0)) (equal (substituteTerm t a b) (substituteTerm t0 a b)) (refl_equal (depth L (fol.equal L t t0)))) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.atomic L r t)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.atomic L r t)) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b)) (refl_equal (depth L (fol.atomic L r t)))) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f2 (v, s)).",
                        "VernacExtend",
                        "d108c636870332b8ffabc0f9aa2ae6bec8c270b8"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaImpNice.",
                        "VernacExtend",
                        "83dd7afc51195ad76b145a1f075d8a6560467a5a"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaNotNice.",
                        "VernacExtend",
                        "c8d19366cfd9b708e4cf1d97c15ed1ae2d0337cf"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaForallNice.",
                        "VernacExtend",
                        "182d5e4071aaf651a16b9444142a76addb9671ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaNot",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormula in |- *.",
                        "VernacExtend",
                        "42ba3d6eb0fb0be6329f535f50115c5a3ddc5e7e"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaHelp in |- *.",
                        "VernacExtend",
                        "5f1095b77def24984f4d5a2f3daa53269c5556a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Formula_depth_rec2_not L) with (Q := fun _ : fol.Formula L => (nat * fol.Term L)%type) (P := fun x : fol.Formula L => {y : fol.Formula L | depth L y = depth L x}).",
                        "VernacExtend",
                        "ba907addad230aa0d69cf759162339a31fed611f"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaNot at 1 in |- *.",
                        "VernacExtend",
                        "d5c3af1f189387d7d0098b6798b6e50a144779f4"
                    ]
                },
                {
                    "command": [
                        "induction (Formula_depth_rec2 L (fun x : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.equal L t t0)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.equal L t t0)) (equal (substituteTerm t a b) (substituteTerm t0 a b)) (refl_equal (depth L (fol.equal L t t0)))) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = depth L (fol.atomic L r t)}) (fun (a : nat) (b : fol.Term L) => exist (fun y : fol.Formula L => depth L y = depth L (fol.atomic L r t)) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b)) (refl_equal (depth L (fol.atomic L r t)))) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f (v, s)).",
                        "VernacExtend",
                        "d4448b58e9053a67615233805adcd5dd97af3fec"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaImpNice.",
                        "VernacExtend",
                        "83dd7afc51195ad76b145a1f075d8a6560467a5a"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaNotNice.",
                        "VernacExtend",
                        "c8d19366cfd9b708e4cf1d97c15ed1ae2d0337cf"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaForallNice.",
                        "VernacExtend",
                        "182d5e4071aaf651a16b9444142a76addb9671ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaForall",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormula at 1 in |- *.",
                        "VernacExtend",
                        "f849818c572e053aa46c0ccbe559c7a2bbd15f60"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormulaHelp in |- *.",
                        "VernacExtend",
                        "5f1095b77def24984f4d5a2f3daa53269c5556a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Formula_depth_rec2_forall L) with (Q := fun _ : fol.Formula L => (nat * fol.Term L)%type) (P := fun x : fol.Formula L => {y : fol.Formula L | depth L y = depth L x}).",
                        "VernacExtend",
                        "b14ca29e90058346232760ba8c96b606960aa12d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec x v); simpl in |- *.",
                        "VernacExtend",
                        "d3e7c596bc01c2a9084645ba85802d337bb65c91"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "induction (In_dec eq_nat_dec x (freeVarTerm s)); simpl in |- *.",
                        "VernacExtend",
                        "6b70e4d8a3c68eaed4a79b8ea7b7b5fe306a9cee"
                    ]
                },
                {
                    "command": [
                        "fold nv in |- *.",
                        "VernacExtend",
                        "2c4ba9d3549005f01551be73ab81d61f1191a29f"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormula at 2 in |- *; unfold substituteFormulaHelp in |- *; simpl in |- *.",
                        "VernacExtend",
                        "8b9fd7bdedcbcbc5fc91f2b91237ea35bbff9bee"
                    ]
                },
                {
                    "command": [
                        "induction (Formula_depth_rec2 L (fun x0 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x0}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (equal (substituteTerm t a0 b0) (substituteTerm t0 a0 b0)) (refl_equal 0)) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a0 b0)) (refl_equal 0)) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f (x, var nv)).",
                        "VernacExtend",
                        "389a410bc978fc641cd6dae25bb841b44350e867"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormula in |- *; unfold substituteFormulaHelp in |- *; simpl in |- *.",
                        "VernacExtend",
                        "2ee80a04e2f054bc2f09bc7b2a79e2eda091246d"
                    ]
                },
                {
                    "command": [
                        "induction (Formula_depth_rec2 L (fun x1 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x1}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (equal (substituteTerm t a0 b0) (substituteTerm t0 a0 b0)) (refl_equal 0)) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a0 : nat) (b0 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a0 b0)) (refl_equal 0)) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall x0 (v, s)).",
                        "VernacExtend",
                        "60c3c9f6d360e35cb7265480c2ab50f264bfa5ec"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormula in |- *; unfold substituteFormulaHelp in |- *; simpl in |- *.",
                        "VernacExtend",
                        "2ee80a04e2f054bc2f09bc7b2a79e2eda091246d"
                    ]
                },
                {
                    "command": [
                        "induction (Formula_depth_rec2 L (fun x0 : fol.Formula L => nat * fol.Term L -> {y : fol.Formula L | depth L y = depth L x0}) (fun (t t0 : fol.Term L) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a : nat) (b1 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (equal (substituteTerm t a b1) (substituteTerm t0 a b1)) (refl_equal 0)) H) (fun (r : Relations L) (t : fol.Terms L (arity L (inl (Functions L) r))) (H : nat * fol.Term L) => prod_rec (fun _ : nat * fol.Term L => {y : fol.Formula L | depth L y = 0}) (fun (a : nat) (b1 : fol.Term L) => exist (fun y : fol.Formula L => depth L y = 0) (atomic r (substituteTerms (arity L (inl (Functions L) r)) t a b1)) (refl_equal 0)) H) substituteFormulaImp substituteFormulaNot substituteFormulaForall f (v, s)).",
                        "VernacExtend",
                        "73fa01d90412473a80e1939ed116461c040c9b3d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaImpNice.",
                        "VernacExtend",
                        "83dd7afc51195ad76b145a1f075d8a6560467a5a"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaNotNice.",
                        "VernacExtend",
                        "c8d19366cfd9b708e4cf1d97c15ed1ae2d0337cf"
                    ]
                },
                {
                    "command": [
                        "apply substituteFormulaForallNice.",
                        "VernacExtend",
                        "182d5e4071aaf651a16b9444142a76addb9671ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaOr",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold orH, fol.orH in |- *.",
                        "VernacExtend",
                        "df9e284d2941a26a2515a640a891b231d82600ae"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaImp.",
                        "VernacExtend",
                        "2c75a435559ed23842b5fd825fae38ccd105e713"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaNot.",
                        "VernacExtend",
                        "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaAnd",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold andH, fol.andH in |- *.",
                        "VernacExtend",
                        "313bdd70ab4e300fd4e83cb305b6f0dbf3207116"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaNot.",
                        "VernacExtend",
                        "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaOr.",
                        "VernacExtend",
                        "425d96a7c340c224da5b4a3ecd58274dc567d324"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite subFormulaNot.",
                        "VernacExtend",
                        "c6506367ffe0b9cf837232775c4016a429b34c95"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaExist",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold existH, fol.existH in |- *.",
                        "VernacExtend",
                        "19d043640de3bdf525ee126c88f51fddb1407bb4"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaNot.",
                        "VernacExtend",
                        "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaForall.",
                        "VernacExtend",
                        "1d9413f545c89caa4e9e1ae708766925f4d8d918"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec x v).",
                        "VernacExtend",
                        "9e0373efa21a443e505eef82b3db4f018c4b8262"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "induction (In_dec eq_nat_dec x (freeVarTerm s)).",
                        "VernacExtend",
                        "e63649dd23bc2bf585600c8f3435fbea12d61500"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite subFormulaNot.",
                        "VernacExtend",
                        "c6506367ffe0b9cf837232775c4016a429b34c95"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaNot.",
                        "VernacExtend",
                        "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaIff",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold iffH, fol.iffH in |- *.",
                        "VernacExtend",
                        "7b99614924500d78bb5d7a8df55a24e7a241b409"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaAnd.",
                        "VernacExtend",
                        "ac779a1739e565aacf3fd9113fe4e0640443f552"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite subFormulaImp.",
                        "VernacExtend",
                        "5b3a9a0515a5128821d235575ccf0d228ea749ac"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaIfThenElse",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ifThenElseH, fol.ifThenElseH in |- *.",
                        "VernacExtend",
                        "eccf7566fb3dcfd225f86fba14ad9c66070ea960"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaAnd.",
                        "VernacExtend",
                        "ac779a1739e565aacf3fd9113fe4e0640443f552"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite subFormulaImp.",
                        "VernacExtend",
                        "5b3a9a0515a5128821d235575ccf0d228ea749ac"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaNot.",
                        "VernacExtend",
                        "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaDepth",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold substituteFormula in |- *.",
                        "VernacExtend",
                        "42ba3d6eb0fb0be6329f535f50115c5a3ddc5e7e"
                    ]
                },
                {
                    "command": [
                        "induction (substituteFormulaHelp f v s).",
                        "VernacExtend",
                        "b19f188827b7c2317d336569f9af38315380c1ec"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subTermId",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim t using Term_Terms_ind with (P0 := fun (n : nat) (ts : fol.Terms L n) => substituteTerms n ts v (var v) = ts).",
                        "VernacExtend",
                        "11557c906fa0dd3b81cf2c9eae5ff68220106218"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec v n).",
                        "VernacExtend",
                        "d994ef5a36c04385f3538e80d3dfac39342b9270"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subTermsId",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction ts as [| n t ts Hrects].",
                        "VernacExtend",
                        "4a72ca30982cf76b6ad63620c27c0db203f25a01"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrects.",
                        "VernacExtend",
                        "8222d3838095a7731870da03c025d94cecf3f539"
                    ]
                },
                {
                    "command": [
                        "rewrite subTermId.",
                        "VernacExtend",
                        "33aa67144f922337ae8eb7a32ae9e457bef5ecb4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subFormulaId",
            "line_nb": 380,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction f as [t t0| r t| f1 Hrecf1 f0 Hrecf0| f Hrecf| n f Hrecf].",
                        "VernacExtend",
                        "226ec1284c23286e580ea5e04e2dff8e6fe7a632"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaEqual.",
                        "VernacExtend",
                        "a432e90b7163a8eb05e164e5afc5eb156e167fbf"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite subTermId.",
                        "VernacExtend",
                        "9d44f11ea31799be6f89a464765cf8b8c3ecf0b6"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaRelation.",
                        "VernacExtend",
                        "c74d64c9d04371dc00d30c501b148b3d7276f169"
                    ]
                },
                {
                    "command": [
                        "rewrite subTermsId.",
                        "VernacExtend",
                        "c1bc16b7d94738a48ab92f26ddfd7212d5f27af7"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaImp.",
                        "VernacExtend",
                        "2c75a435559ed23842b5fd825fae38ccd105e713"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecf1.",
                        "VernacExtend",
                        "74cdb3b5f159d2dd9ac51c0d29d0b8653642f991"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecf0.",
                        "VernacExtend",
                        "a606db4ccdb77e2756c8fd28d9bd0a3d6939f0b8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaNot.",
                        "VernacExtend",
                        "a6f9255144fd25636be8277b4d3ac4892af3c5c5"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecf.",
                        "VernacExtend",
                        "99d5d51792eb9ed1121d521ca0a9b881596296e5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite subFormulaForall.",
                        "VernacExtend",
                        "1d9413f545c89caa4e9e1ae708766925f4d8d918"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n v).",
                        "VernacExtend",
                        "6a02ca712c42c38dd12b4c559f1af3eb706d00a1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "induction (In_dec eq_nat_dec n (freeVarTerm (var v))).",
                        "VernacExtend",
                        "0e13811a110f6460d0522a592c20b1573a008776"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "simpl in a.",
                        "VernacExtend",
                        "58be579b520de350ddccdb644f51b35e86a87b4c"
                    ]
                },
                {
                    "command": [
                        "induction a as [H| H].",
                        "VernacExtend",
                        "cb30e64d8d178ba247f84728ed3be9cdd8fee641"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecf.",
                        "VernacExtend",
                        "99d5d51792eb9ed1121d521ca0a9b881596296e5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}