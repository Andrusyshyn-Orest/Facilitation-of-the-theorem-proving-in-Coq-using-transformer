{
    "filename": "codeNatToTerm.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import primRec.",
            "VernacRequire",
            "75a83dde535ddae28126e82cc7ff15f05b8e505b"
        ],
        [
            "Require Import cPair.",
            "VernacRequire",
            "245e4bc1e0b715e3965e2d304aa9ad9f5eb93662"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import code.",
            "VernacRequire",
            "2d8bc6295195cee8bb6ef6c570d4e03c177e5352"
        ],
        [
            "Require Import folProp.",
            "VernacRequire",
            "9a8c9e707f6075129a70023b069f5369c9a9b295"
        ],
        [
            "Require Import folProof.",
            "VernacRequire",
            "a0193d39f532e35a330dca71bfab163ef1b5dd49"
        ],
        [
            "Require Import Languages.",
            "VernacRequire",
            "a5e243593808f803c7cf563bb9f1d082710ceaa0"
        ],
        [
            "Require LNN.",
            "VernacRequire",
            "83d7ad2e04f04cbaea47594c16946c7c82d825e9"
        ],
        [
            "Require LNT.",
            "VernacRequire",
            "e40f03f5edaa2600b325d49c974a997b11ce4e98"
        ],
        [
            "Definition natToTermLNN := LNN.natToTerm.",
            "VernacDefinition",
            "f2659fba76553bb2c2d4b69185446b9ea36da282"
        ],
        [
            "Definition natToTermLNT := LNT.natToTerm.",
            "VernacDefinition",
            "479002f891cfc11bc88968413823982e263f2d06"
        ],
        [
            "Definition codeNatToTerm : nat -> nat := nat_rec (fun _ => nat) (cPair 4 0) (fun _ rec : nat => cPair 3 (S (cPair rec 0))).",
            "VernacDefinition",
            "a4306f718407ee344c1d279f881a47408055394c"
        ],
        [
            "Lemma codeNatToTermCorrectLNN : forall n : nat, codeNatToTerm n = codeTerm LNN codeLNTFunction (natToTermLNN n).",
            "VernacStartTheoremProof",
            "af2a76b1ffe237e7ca855abc73304996ab2b5b87"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecn.",
            "VernacExtend",
            "9f2f9eb25208250dc135a15348250f012f2be502"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeNatToTermCorrectLNT : forall n : nat, codeNatToTerm n = codeTerm LNT codeLNTFunction (natToTermLNT n).",
            "VernacStartTheoremProof",
            "e12a47b4c565e1e2ec7e836c4dd4200c5b5a6d95"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecn.",
            "VernacExtend",
            "9f2f9eb25208250dc135a15348250f012f2be502"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeNatToTermIsPR : isPR 1 codeNatToTerm.",
            "VernacStartTheoremProof",
            "5792dd77017509150fb05e68f9b638a41a9d7291"
        ],
        [
            "unfold codeNatToTerm in |- *.",
            "VernacExtend",
            "b7c5a3b238ee1869074c27910f9debd054c5dfd8"
        ],
        [
            "apply indIsPR with (f := fun _ rec : nat => cPair 3 (S (cPair rec 0))) (g := cPair 4 0).",
            "VernacExtend",
            "aa9bbdbe3149d392b5a26fb8f9666b9beade7876"
        ],
        [
            "apply filter01IsPR with (g := fun rec : nat => cPair 3 (S (cPair rec 0))).",
            "VernacExtend",
            "7ea58c316bfe148a1bf89e5df41159996c93319b"
        ],
        [
            "apply compose1_2IsPR with (f := fun _ : nat => 3) (f' := fun rec : nat => S (cPair rec 0)).",
            "VernacExtend",
            "e9173137e47b0f1f7d09e996f0fea3a37544a536"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply compose1_1IsPR with (f := fun rec : nat => cPair rec 0).",
            "VernacExtend",
            "932112ef7c6bc5102875393487e573ecf11762f1"
        ],
        [
            "apply compose1_2IsPR with (f := fun rec : nat => rec) (f' := fun _ : nat => 0).",
            "VernacExtend",
            "9c1b0f1d03bae1f35e8a912d3a826ecd673e11a0"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "codeNatToTermCorrectLNN",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn.",
                        "VernacExtend",
                        "9f2f9eb25208250dc135a15348250f012f2be502"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeNatToTermCorrectLNT",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn.",
                        "VernacExtend",
                        "9f2f9eb25208250dc135a15348250f012f2be502"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeNatToTermIsPR",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold codeNatToTerm in |- *.",
                        "VernacExtend",
                        "b7c5a3b238ee1869074c27910f9debd054c5dfd8"
                    ]
                },
                {
                    "command": [
                        "apply indIsPR with (f := fun _ rec : nat => cPair 3 (S (cPair rec 0))) (g := cPair 4 0).",
                        "VernacExtend",
                        "aa9bbdbe3149d392b5a26fb8f9666b9beade7876"
                    ]
                },
                {
                    "command": [
                        "apply filter01IsPR with (g := fun rec : nat => cPair 3 (S (cPair rec 0))).",
                        "VernacExtend",
                        "7ea58c316bfe148a1bf89e5df41159996c93319b"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (f := fun _ : nat => 3) (f' := fun rec : nat => S (cPair rec 0)).",
                        "VernacExtend",
                        "e9173137e47b0f1f7d09e996f0fea3a37544a536"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR with (f := fun rec : nat => cPair rec 0).",
                        "VernacExtend",
                        "932112ef7c6bc5102875393487e573ecf11762f1"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (f := fun rec : nat => rec) (f' := fun _ : nat => 0).",
                        "VernacExtend",
                        "9c1b0f1d03bae1f35e8a912d3a826ecd673e11a0"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "apply succIsPR.",
                        "VernacExtend",
                        "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}