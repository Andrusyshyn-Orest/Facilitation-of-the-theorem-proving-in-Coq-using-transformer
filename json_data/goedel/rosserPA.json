{
    "filename": "rosserPA.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import folProp.",
            "VernacRequire",
            "9a8c9e707f6075129a70023b069f5369c9a9b295"
        ],
        [
            "Require Import folProof.",
            "VernacRequire",
            "a0193d39f532e35a330dca71bfab163ef1b5dd49"
        ],
        [
            "Require Import folReplace.",
            "VernacRequire",
            "4d2302c9e704187836912b1c7eb0c8d836a6d938"
        ],
        [
            "Require Import folLogic3.",
            "VernacRequire",
            "5313da917cbd8284650f06a63d4e78e11cf70419"
        ],
        [
            "Require Import subProp.",
            "VernacRequire",
            "958f8351edff1532d30f0dc5037e19d46aa66886"
        ],
        [
            "Require Import ListExt.",
            "VernacRequire",
            "8c4c029b2c43ab5886e4af5e6402bea050085fed"
        ],
        [
            "Require Import NNtheory.",
            "VernacRequire",
            "7d8bee0fda255fc5c2e89e84c624cdb07c0f723d"
        ],
        [
            "Require Import NN2PA.",
            "VernacRequire",
            "3eb7a6911b787d4f54c34218a0722ce372265346"
        ],
        [
            "Require Import fixPoint.",
            "VernacRequire",
            "81001b53f78f30fa31b303df48e39737cf991f77"
        ],
        [
            "Require Import codeSysPrf.",
            "VernacRequire",
            "c875f0cd33c9421a710a46155f450a2ca5b08dbf"
        ],
        [
            "Require Import PAtheory.",
            "VernacRequire",
            "3903516b658cfe33afd01cc13f0d09617462b0f4"
        ],
        [
            "Require Import code.",
            "VernacRequire",
            "2d8bc6295195cee8bb6ef6c570d4e03c177e5352"
        ],
        [
            "Require Import PRrepresentable.",
            "VernacRequire",
            "c23e666a11cea7a903f1270ff6a33ef88330e20e"
        ],
        [
            "Require Import expressible.",
            "VernacRequire",
            "7288ac4451924c4535dae7e4e0e106c648ae3c52"
        ],
        [
            "Require Import checkPrf.",
            "VernacRequire",
            "5a29ee489ac8df5f00052a53f5501424e1e39b98"
        ],
        [
            "Require Import codeNatToTerm.",
            "VernacRequire",
            "495de82b82d858a4b27173a47af3c10d38ff8f56"
        ],
        [
            "Section Rosser's_Incompleteness.",
            "VernacBeginSection",
            "e9ffd3b1208657095ed1ebbd87ca3d684d65880b"
        ],
        [
            "Definition codeFormula := codeFormula LNT codeLNTFunction codeLNTRelation.",
            "VernacDefinition",
            "ce09e6ae93b78e550f661e35e339c3ffb79a8d12"
        ],
        [
            "Variable T : System.",
            "VernacAssumption",
            "61341f859d94b5ad138d74bb056a5fff161c13cc"
        ],
        [
            "Definition T' : fol.System LNN := Union _ NN (fun x : fol.Formula LNN => mem _ T (LNN2LNT_formula x)).",
            "VernacDefinition",
            "bbb591b9d39dbde64f0adf53f25af7a5c6202006"
        ],
        [
            "Lemma extendsNN : Included _ NN T'.",
            "VernacStartTheoremProof",
            "2b9fb400dc8a5941d51adaeb4034860cd7889b5b"
        ],
        [
            "unfold Included in |- *.",
            "VernacExtend",
            "c51ce0cf8e35f07a67db2a482d290f743d798a70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold T' in |- *.",
            "VernacExtend",
            "b353f9e745566aea339f40af708cda35721fce38"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis extendsPA : Included _ PA T.",
            "VernacAssumption",
            "6e6821cb0e42c67a2e5a6c5a58f64f869f430a0e"
        ],
        [
            "Variable repT : Formula.",
            "VernacAssumption",
            "1fc071214564e149cc512a6fcea70a579f01413e"
        ],
        [
            "Variable v0 : nat.",
            "VernacAssumption",
            "ee8e59e21c3303f371fc7265e0c385dce3bc812c"
        ],
        [
            "Hypothesis freeVarRepT : forall v : nat, In v (freeVarFormula LNT repT) -> v = v0.",
            "VernacAssumption",
            "a0157bbdcdff256e257a0e67d6489be7b57fa25c"
        ],
        [
            "Hypothesis expressT1 : forall f : Formula, mem _ T f -> SysPrf T (substituteFormula LNT repT v0 (natToTerm (codeFormula f))).",
            "VernacAssumption",
            "588e67041c31d0b1fbf09ad57297bd0881055e0c"
        ],
        [
            "Hypothesis expressT2 : forall f : Formula, ~ mem _ T f -> SysPrf T (notH (substituteFormula LNT repT v0 (natToTerm (codeFormula f)))).",
            "VernacAssumption",
            "4377e5260383343734a3bc531e61c2a9cec4cfc8"
        ],
        [
            "Lemma freeVarRepT' : forall v : nat, In v (freeVarFormula LNN (LNT2LNN_formula repT)) -> v = v0.",
            "VernacStartTheoremProof",
            "77bdafb8298d47496ec514b8eafe2ef8d2f3a2c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply freeVarRepT.",
            "VernacExtend",
            "d7f927fffc7d72393c628f7a98d5ef3989e6ae70"
        ],
        [
            "rewrite <- (LNT2LNT_formula repT).",
            "VernacExtend",
            "7d1b93459e314639653a0b88fa96129a4ffc4220"
        ],
        [
            "apply LNN2LNT_freeVarFormula2.",
            "VernacExtend",
            "095043a00d6ab83aded88ae8cb1f2cab5bb26e60"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Tprf2T'prf : forall f : Formula, SysPrf T f -> folProof.SysPrf LNN T' (LNT2LNN_formula f).",
            "VernacStartTheoremProof",
            "7a8dfd3ed24d0f4029f25f8a9a0324bf29b41004"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold T' in |- *.",
            "VernacExtend",
            "b353f9e745566aea339f40af708cda35721fce38"
        ],
        [
            "apply (folLogic.sysExtend LNN) with (fun x : fol.Formula LNN => mem (fol.Formula LNT) T (LNN2LNT_formula x)).",
            "VernacExtend",
            "c4fb699aa2adb70a170a4eb4c1490ea7626dcc57"
        ],
        [
            "unfold Included in |- *.",
            "VernacExtend",
            "c51ce0cf8e35f07a67db2a482d290f743d798a70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction H as (x, H); induction H as (x0, H).",
            "VernacExtend",
            "0dd71bc2b57f605f3b0f66d45601920fe1c2d974"
        ],
        [
            "exists (map LNT2LNN_formula x).",
            "VernacExtend",
            "a225b0c96b63bf94f7ee57aab2507c9b9d9ce06d"
        ],
        [
            "induction x0 as [A| Axm1 Axm2 A B x0_1 Hrecx0_1 x0_0 Hrecx0_0| Axm A v n x0 Hrecx0| A B| A B C| A B| A v t| A v n| A B v| | | | R| f]; simpl in |- *.",
            "VernacExtend",
            "161f41bae403f314fb5f3bbc4ac663f2c69570b1"
        ],
        [
            "exists (AXM LNN (LNT2LNN_formula A)).",
            "VernacExtend",
            "b443f1ef95e59cc630c22ffc8505de46f47d238c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold mem in |- *.",
            "VernacExtend",
            "a9d5e92f6f6a1c8fc5ab6101dfec5f848acdb500"
        ],
        [
            "unfold Ensembles.In in |- *.",
            "VernacExtend",
            "14ff23bde5d46e91e9824c5dab0703700558d31f"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite LNT2LNT_formula.",
            "VernacExtend",
            "38298ac7eadc52914802f9137a6caf28b9c871cb"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "assert (forall g : fol.Formula LNT, In g Axm1 -> mem (fol.Formula LNT) T g).",
            "VernacExtend",
            "39e04713751f72694a6215a947be03d545c761a3"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "assert (forall g : fol.Formula LNT, In g Axm2 -> mem (fol.Formula LNT) T g).",
            "VernacExtend",
            "7cc63670a96984cd0fb267b9d25400892371d244"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "induction (Hrecx0_0 H1).",
            "VernacExtend",
            "0e9e83358eb663b631184c3020f06186dcc4e992"
        ],
        [
            "induction (Hrecx0_1 H0).",
            "VernacExtend",
            "e3d3fc6e5089df8e06a1756718cd39fb43977872"
        ],
        [
            "clear Hrecx0_0 Hrecx0_1 H0 H1.",
            "VernacExtend",
            "ff44c7e03336ee85f1fda835413e88f2b0d2ea14"
        ],
        [
            "assert (map LNT2LNN_formula (Axm1 ++ Axm2) = map LNT2LNN_formula Axm1 ++ map LNT2LNN_formula Axm2).",
            "VernacExtend",
            "b91654c8720504c0b1b341554ed4e8d2ce09f4c4"
        ],
        [
            "generalize Axm1 Axm2; intros.",
            "VernacExtend",
            "4b747241af2e7f16114cce504c9f2780992d8746"
        ],
        [
            "induction Axm0 as [| a Axm0 HrecAxm0]; simpl in |- *.",
            "VernacExtend",
            "d0c4d2e5587186acb45876bdd57bd465de0c95ab"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite HrecAxm0.",
            "VernacExtend",
            "ad3ada3a04604cd0b1c61842c070fa502a42bea9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "exists (MP LNN (map LNT2LNN_formula Axm1) (map LNT2LNN_formula Axm2) (LNT2LNN_formula A) (LNT2LNN_formula B) x0 x).",
            "VernacExtend",
            "85fe51a1b1605f01e7f53ce4d7be05c9e1b94036"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (in_app_or _ _ _ H1); auto.",
            "VernacExtend",
            "17857a934a23290e503df3889a65f976f190c6af"
        ],
        [
            "induction (Hrecx0 H).",
            "VernacExtend",
            "2a5764726a606de6d68c9dc0c26bbb22520082a9"
        ],
        [
            "assert (~ In v (freeVarListFormula LNN (map LNT2LNN_formula Axm))).",
            "VernacExtend",
            "607d67b6267efe13b2932ca30a6db5b50c634033"
        ],
        [
            "clear x0 H Hrecx0 x H0.",
            "VernacExtend",
            "78a98510d7d30cba3d3867170a42829d6b68d1f8"
        ],
        [
            "unfold not in |- *; intros; apply n.",
            "VernacExtend",
            "1bb00d990363a9f879030fafd27e43e3f8ed1044"
        ],
        [
            "clear n.",
            "VernacExtend",
            "950078f0511238b7bf11b5533c9ffd133a02ab04"
        ],
        [
            "induction Axm as [| a Axm HrecAxm].",
            "VernacExtend",
            "ff8a6bc02045c62de51eb4063ce772b8891a9028"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply in_or_app.",
            "VernacExtend",
            "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
        ],
        [
            "induction (in_app_or _ _ _ H).",
            "VernacExtend",
            "acf73ae8a5b539424453278277bcc3b62da459d6"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "rewrite <- (LNT2LNT_formula a).",
            "VernacExtend",
            "5aa63f8f4a7f74ac60403d1c7239be12d61f23bc"
        ],
        [
            "apply LNN2LNT_freeVarFormula2.",
            "VernacExtend",
            "095043a00d6ab83aded88ae8cb1f2cab5bb26e60"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (GEN LNN (map LNT2LNN_formula Axm) (LNT2LNN_formula A) v H1 x).",
            "VernacExtend",
            "1e5be8853c71a1991491ebee81ebd7fb661fdc6d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (IMP1 LNN (LNT2LNN_formula A) (LNT2LNN_formula B)).",
            "VernacExtend",
            "a51d8afa2c93b2dbab386c2661f6364f4e5b4b82"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (IMP2 LNN (LNT2LNN_formula A) (LNT2LNN_formula B) (LNT2LNN_formula C)).",
            "VernacExtend",
            "f7cd5e699cd6f0d697a923f937b5e3c249e9094a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (CP LNN (LNT2LNN_formula A) (LNT2LNN_formula B)).",
            "VernacExtend",
            "f73875a485bbdf15af0b8e020e528ee649fb3353"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "rewrite LNT2LNN_subFormula.",
            "VernacExtend",
            "8c1c470cc545a2414ee410234afc60871305c873"
        ],
        [
            "exists (FA1 LNN (LNT2LNN_formula A) v (LNT2LNN_term t)).",
            "VernacExtend",
            "cd4d1d5b52c144541d69daab343eb71f265ccf12"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "rewrite <- LNT2LNN_freeVarFormula in n.",
            "VernacExtend",
            "20da3b24ea4a6d0fa0a75ab7f6cc4814e96f7fea"
        ],
        [
            "exists (FA2 LNN (LNT2LNN_formula A) v n).",
            "VernacExtend",
            "c0e45d1a6265d185ad99c30d2254f9350e48412f"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (FA3 LNN (LNT2LNN_formula A) (LNT2LNN_formula B) v).",
            "VernacExtend",
            "6dfa8e637e0d279b63a0f6b72e8142eee3ba4469"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (EQ1 LNN).",
            "VernacExtend",
            "02ac72b700f0e9027a4618ea4ec32440321cf22c"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (EQ2 LNN).",
            "VernacExtend",
            "d679f0ce33f65962c8524c892a9755ae239ab30b"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (EQ3 LNN).",
            "VernacExtend",
            "117ca316ab6c8e7bdb9cff1cd8c45e577f6147bf"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "induction R.",
            "VernacExtend",
            "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
        ],
        [
            "induction f; simpl in |- *.",
            "VernacExtend",
            "b59a15af4e6ab0d04242e4f2a1f984279750715d"
        ],
        [
            "exists (EQ5 LNN Languages.Plus).",
            "VernacExtend",
            "93b4d6a7f52205830c4cf05284e066d52da9c9ba"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (EQ5 LNN Languages.Times).",
            "VernacExtend",
            "3cf8d227f5badfedaa951f9302f1ce674954a591"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (EQ5 LNN Languages.Succ).",
            "VernacExtend",
            "f00ac3373c67e7a70d3c3a7036c1a4caef34484a"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (EQ5 LNN Languages.Zero).",
            "VernacExtend",
            "de48505b0526537d6c547e473f9833489c213c53"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expressT'1 : forall f : Formula, mem _ T f -> folProof.SysPrf LNN T' (substituteFormula LNN (LNT2LNN_formula repT) v0 (natToTermLNN (codeFormula f))).",
            "VernacStartTheoremProof",
            "93cefd79d9b589ddd4281a89b3d25dbd94497bd3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (LNT2LNN_natToTerm (codeFormula f)).",
            "VernacExtend",
            "ffd4d80c5bd2fa140059ff446dffb845a1a00eb8"
        ],
        [
            "rewrite <- LNT2LNN_subFormula.",
            "VernacExtend",
            "95eeaf34a13b6cfe5cb7de6fac7998d29e9597b2"
        ],
        [
            "apply Tprf2T'prf.",
            "VernacExtend",
            "4c5c7c1f8c7fc32c5d49675708c3f59eceea7a43"
        ],
        [
            "apply expressT1.",
            "VernacExtend",
            "ce539f965089a07fe6fa5c99b85fcde6c6d29bf4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma expressT'2 : forall f : Formula, ~ mem _ T f -> folProof.SysPrf LNN T' (fol.notH LNN (substituteFormula LNN (LNT2LNN_formula repT) v0 (natToTermLNN (codeFormula f)))).",
            "VernacStartTheoremProof",
            "b83853f883bdbd66a8817518b10e1d2c72f2c102"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (LNT2LNN_natToTerm (codeFormula f)).",
            "VernacExtend",
            "ffd4d80c5bd2fa140059ff446dffb845a1a00eb8"
        ],
        [
            "rewrite <- LNT2LNN_subFormula.",
            "VernacExtend",
            "95eeaf34a13b6cfe5cb7de6fac7998d29e9597b2"
        ],
        [
            "replace (fol.notH LNN (LNT2LNN_formula (substituteFormula LNT repT v0 (natToTerm (codeFormula f))))) with (LNT2LNN_formula (notH (substituteFormula LNT repT v0 (natToTerm (codeFormula f))))).",
            "VernacExtend",
            "d9b270660b6537b7c1ac1710945eb3d670a4b139"
        ],
        [
            "apply Tprf2T'prf.",
            "VernacExtend",
            "4c5c7c1f8c7fc32c5d49675708c3f59eceea7a43"
        ],
        [
            "apply expressT2.",
            "VernacExtend",
            "f751b5a6c87d52070e5e1eb1994983e5bc680e76"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition codeSysPrf := codeSysPrf LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTRIsPR (LNT2LNN_formula repT) v0.",
            "VernacDefinition",
            "5d1cc686b79b54d3bb086ae595b36bb848386846"
        ],
        [
            "Definition codeSysPrfCorrect1 := codeSysPrfCorrect1 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTFIsCorrect1 codeArityLNTRIsPR codeArityLNTRIsCorrect1 T' extendsNN T (LNT2LNN_formula repT) v0 freeVarRepT' expressT'1.",
            "VernacDefinition",
            "1bed752156f4fbfbad301c296edac96936bad1d1"
        ],
        [
            "Definition codeSysPrfCorrect2 := codeSysPrfCorrect2 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTFIsCorrect1 codeArityLNTRIsPR codeArityLNTRIsCorrect1 T' extendsNN T (LNT2LNN_formula repT) v0 freeVarRepT' expressT'2.",
            "VernacDefinition",
            "6b846e5175f5f0c0e26625d9f731565061e30ad3"
        ],
        [
            "Definition codeSysPrfCorrect3 := codeSysPrfCorrect3 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTFIsCorrect1 codeArityLNTFIsCorrect2 codeArityLNTRIsPR codeArityLNTRIsCorrect1 codeArityLNTRIsCorrect2 codeLNTFunctionInj codeLNTRelationInj T' extendsNN.",
            "VernacDefinition",
            "73712d5b8817a2d9a408cbb364a6f56808698760"
        ],
        [
            "Definition codePrf := codePrf LNT codeLNTFunction codeLNTRelation.",
            "VernacDefinition",
            "f758a446dc4005f3e98235cf3145b41a81250027"
        ],
        [
            "Definition codeSysPrfNot := codeSysPrfNot LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTRIsPR (LNT2LNN_formula repT) v0.",
            "VernacDefinition",
            "ca90b8653483628c29298df47203fc8898cf410b"
        ],
        [
            "Definition freeVarCodeSysPrfN := freeVarCodeSysPrfN LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTRIsPR (LNT2LNN_formula repT) v0 freeVarRepT'.",
            "VernacDefinition",
            "7b715dd5e4079b17e60736a7d04affd5886de890"
        ],
        [
            "Definition codeSysPrfNCorrect1 := codeSysPrfNCorrect1 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTFIsCorrect1 codeArityLNTRIsPR codeArityLNTRIsCorrect1 T' extendsNN T (LNT2LNN_formula repT) v0 freeVarRepT' expressT'1.",
            "VernacDefinition",
            "8189a437714126ce4ace9e4fc7e1b0f99e03a297"
        ],
        [
            "Definition codeSysPrfNCorrect2 := codeSysPrfNCorrect2 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTFIsCorrect1 codeArityLNTRIsPR codeArityLNTRIsCorrect1 T' extendsNN T (LNT2LNN_formula repT) v0 freeVarRepT' expressT'2.",
            "VernacDefinition",
            "4b68126de2705816c804c740d43a4079502941b8"
        ],
        [
            "Definition codeSysPrfNCorrect3 := codeSysPrfNCorrect3 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTFIsCorrect1 codeArityLNTFIsCorrect2 codeArityLNTRIsPR codeArityLNTRIsCorrect1 codeArityLNTRIsCorrect2 codeLNTFunctionInj codeLNTRelationInj T' extendsNN (LNT2LNN_formula repT) v0 freeVarRepT'.",
            "VernacDefinition",
            "1c9a360ba8874f05e13868d7045772340fe18b68"
        ],
        [
            "Lemma decideAxioms : (forall x : Formula, mem _ T x \\/ ~ mem _ T x) -> forall x : Formulas, (forall g : Formula, In g x -> mem _ T g) \\/ (exists g : Formula, In g x /\\ ~ mem _ T g).",
            "VernacStartTheoremProof",
            "47fc6f4be9117c047ac6769721310d191f8009b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction x as [| a x Hrecx].",
            "VernacExtend",
            "bfc5fe4d63cadd785efcb41a065d8dbf6de188be"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "induction Hrecx as [H0| H0].",
            "VernacExtend",
            "1f9b4f9cc0cb3638f80ee3bf977cf3356fcde053"
        ],
        [
            "induction (H a).",
            "VernacExtend",
            "8761a9a5c2f83fdbd13d1a0d2020f716856230d9"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H2 as [H2| H2].",
            "VernacExtend",
            "2237c6da2b81b951afe769bc727b63b267d6e7b3"
        ],
        [
            "rewrite <- H2.",
            "VernacExtend",
            "c204509e5e85cb1396c425732210ff127ac38a7b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "induction H0 as (x0, H0).",
            "VernacExtend",
            "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "induction H0 as (H0, H1).",
            "VernacExtend",
            "bf205e87bc39521a75ba7f60076f211d70aac7cf"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma searchProof : (forall x : Formula, mem _ T x \\/ ~ mem _ T x) -> forall (a b : Formula) (A : Formulas) (p : Prf LNT A a), (exists B : Formulas, (exists q : Prf LNT B b, codePrf _ _ q < S (codePrf _ _ p) /\\ (forall x : Formula, In x B -> mem _ T x))) \\/ (forall (B : Formulas) (q : Prf LNT B b), codePrf _ _ q < S (codePrf _ _ p) -> exists g : Formula, In g B /\\ ~ mem _ T g).",
            "VernacStartTheoremProof",
            "8d9e5fe5810d830a50f7e08ae921438342a7cdf2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (S (codePrf A a p)).",
            "VernacExtend",
            "aa71cc1a33b661fa19f818cf16654ade46371182"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (lt_n_O _ H0).",
            "VernacExtend",
            "231f0ea2a5259bce18c0d5de01a49b4f7ab8b30e"
        ],
        [
            "induction IHn as [H0| H0].",
            "VernacExtend",
            "adc0e09ed5289444b7a0d13ec9f147d862ac4f23"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "decompose record H0.",
            "VernacExtend",
            "a6c0c8c7a5a9605ed0d434c62f68b436bce3159c"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (eq_nat_dec (checkPrf LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR (codeFormula b) n) 0).",
            "VernacExtend",
            "5707239494e534c098b4c29b4f93a50e60a3b9f1"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (le_lt_or_eq _ _ (lt_n_Sm_le _ _ H1)).",
            "VernacExtend",
            "02e8d326a4aad0174db1faf5ef58e0a4700ffbc2"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "rewrite <- H2 in a0.",
            "VernacExtend",
            "a21d8c136c486287df03f413d1e36797143026ae"
        ],
        [
            "rewrite (checkPrfCorrect1 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsCorrect1 codeArityLNTRIsCorrect1) in a0.",
            "VernacExtend",
            "6989a36bedf32cd0040f53705799fc48db515378"
        ],
        [
            "discriminate a0.",
            "VernacExtend",
            "45f49032b4d4a8ab0596612d31e0fb2d7709728d"
        ],
        [
            "decompose record (checkPrfCorrect2 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsCorrect1 codeArityLNTFIsCorrect2 codeArityLNTRIsCorrect1 codeArityLNTRIsCorrect2 codeLNTFunctionInj codeLNTRelationInj _ _ b0).",
            "VernacExtend",
            "bb70aaf23a879b0fc20510593fbb6ba64dcb4fe0"
        ],
        [
            "assert (x = b).",
            "VernacExtend",
            "df429479b5c8d537265372978709c836eb2fb272"
        ],
        [
            "eapply codeFormulaInj.",
            "VernacExtend",
            "7852cde31d2de1fdfaf1d6936ecd082d0f4ee492"
        ],
        [
            "apply codeLNTFunctionInj.",
            "VernacExtend",
            "ed64377aae3a02a204f9d3d3a3c8aa16a98aeacb"
        ],
        [
            "apply codeLNTRelationInj.",
            "VernacExtend",
            "4623c19f06f773493b216a161ca7fbdc141794c5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "induction (decideAxioms H x0).",
            "VernacExtend",
            "8ef32ac8931c41cb335f9116f011c0685ef8dbd4"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "unfold codePrf in |- *.",
            "VernacExtend",
            "686eea2c3793b37b3048f2862b75e3a360bc7e2d"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (le_lt_or_eq _ _ (lt_n_Sm_le _ _ H5)).",
            "VernacExtend",
            "d53ff505fb9927ff37ae2188afa1a34fb6ebe356"
        ],
        [
            "rewrite <- H1 in H0.",
            "VernacExtend",
            "42d08cd43ac5900fc8cb5b0f113d48246a828cad"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "assert (B = x0).",
            "VernacExtend",
            "d544a919e08941345448fddaf6a2574302e25c6c"
        ],
        [
            "eapply (codePrfInjAxm LNT) with (p := q) (q := x1).",
            "VernacExtend",
            "18bbe156b1743d447092c8f18dfce6541f233300"
        ],
        [
            "apply codeLNTFunctionInj.",
            "VernacExtend",
            "ed64377aae3a02a204f9d3d3a3c8aa16a98aeacb"
        ],
        [
            "apply codeLNTRelationInj.",
            "VernacExtend",
            "4623c19f06f773493b216a161ca7fbdc141794c5"
        ],
        [
            "transitivity n.",
            "VernacExtend",
            "1b896ad3091380a2a5a4e4818dc18af895882b40"
        ],
        [
            "unfold codePrf in H6.",
            "VernacExtend",
            "83f72a920077339d9fc0b4a99ac174eef2770d73"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma T'prf2Tprf : forall f : fol.Formula LNN, folProof.SysPrf LNN T' f -> SysPrf T (LNN2LNT_formula f).",
            "VernacStartTheoremProof",
            "853c4e2dc0047ad22900703d9dd96ae3b22fa824"
        ],
        [
            "assert (freeVarPA : forall x : Formulas, (forall g : fol.Formula LNT, In g x -> mem (fol.Formula LNT) PA g) -> forall v : nat, In v (freeVarListFormula LNT x) -> False).",
            "VernacExtend",
            "1f5cf1bf010ab4a12bccc2fc32713f147126f833"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction x as [| a x Hrecx].",
            "VernacExtend",
            "bfc5fe4d63cadd785efcb41a065d8dbf6de188be"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "induction (in_app_or _ _ _ H0).",
            "VernacExtend",
            "948639aa589e40c1f757e2be96f8ccda75f6eafa"
        ],
        [
            "apply (closedPA v).",
            "VernacExtend",
            "c60a1f165de9168f7436804f659d0e8aed8d462a"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, H); induction H as (x0, H).",
            "VernacExtend",
            "0dd71bc2b57f605f3b0f66d45601920fe1c2d974"
        ],
        [
            "unfold SysPrf, folProof.SysPrf in |- *.",
            "VernacExtend",
            "ca533a7ee7c26b8e1677f4228699bb5a89b3afc7"
        ],
        [
            "assert (exists Axm : fol.Formulas LNT, (forall v : nat, In v (freeVarListFormula _ Axm) -> In v (freeVarListFormula _ x)) /\\ ex (fun _ : Prf LNT Axm (LNN2LNT_formula f) => forall g : fol.Formula LNT, In g Axm -> mem (fol.Formula LNT) T g)).",
            "VernacExtend",
            "d879ab4361f27689740010f4692396e5dfc837f3"
        ],
        [
            "induction x0 as [A| Axm1 Axm2 A B x0_1 Hrecx0_1 x0_0 Hrecx0_0| Axm A v n x0 Hrecx0| A B| A B C| A B| A v t| A v n| A B v| | | | R| f]; simpl in |- *.",
            "VernacExtend",
            "161f41bae403f314fb5f3bbc4ac663f2c69570b1"
        ],
        [
            "assert (mem (fol.Formula LNN) T' A).",
            "VernacExtend",
            "574c8610f175cdfa864e987fb833c787e71c3c5e"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "repeat induction H0.",
            "VernacExtend",
            "c58bfc31105b7edeb17da8a421022530afd5fc1b"
        ],
        [
            "exists (PA1 :: nil).",
            "VernacExtend",
            "3406fc9c642027133fe9ffe88778f25c37d17f7c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (AXM _ PA1).",
            "VernacExtend",
            "5b2580c15d8b5d7ba710322ffaab51de7f024922"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "repeat (right; constructor) || left.",
            "VernacExtend",
            "694c452e8236347b8bbef72521323823496079fb"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "exists (PA2 :: nil).",
            "VernacExtend",
            "3749c92e49d8384f0464fbc68734f4b026f5b4a2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (AXM _ PA2).",
            "VernacExtend",
            "05938aa0531f90f1d89bcf1bade7a439d8377c20"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "repeat (right; constructor) || left.",
            "VernacExtend",
            "694c452e8236347b8bbef72521323823496079fb"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "exists (PA3 :: nil).",
            "VernacExtend",
            "24879ba17cbc8b64fb7074684160f707216bcb3f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (AXM _ PA3).",
            "VernacExtend",
            "2402fded59b8639668f83918ec7eeae05fadc886"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "repeat (right; constructor) || left.",
            "VernacExtend",
            "694c452e8236347b8bbef72521323823496079fb"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "exists (PA4 :: nil).",
            "VernacExtend",
            "608ea0ea02d0d216e1aecd002fd5b9c9b3d0f06a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (AXM _ PA4).",
            "VernacExtend",
            "bc5eb9e4891c1232a9cffa1aaff0542f1f0dc062"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "repeat (right; constructor) || left.",
            "VernacExtend",
            "694c452e8236347b8bbef72521323823496079fb"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "exists (PA5 :: nil).",
            "VernacExtend",
            "46f7a578478c0032e587abaca94c4b2b4fd47273"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (AXM _ PA5).",
            "VernacExtend",
            "6ab08cfa888ff61ef626d630baface728c5a332f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "repeat (right; constructor) || left.",
            "VernacExtend",
            "694c452e8236347b8bbef72521323823496079fb"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "exists (PA6 :: nil).",
            "VernacExtend",
            "b51e246791c65da0c4aa512ad2ee03215d3ebc35"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (AXM _ PA6).",
            "VernacExtend",
            "8fe6af4428b7ed20e2a54ccadf93a7171bfd44a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "induction H0 as [H0| H0].",
            "VernacExtend",
            "752e399e91dad761644d5649d773ebf9cb5570fe"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "repeat (right; constructor) || left.",
            "VernacExtend",
            "694c452e8236347b8bbef72521323823496079fb"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "assert (SysPrf PA (LNN2LNT_formula NN7)).",
            "VernacExtend",
            "894aa0d917d4972307b381136272b9b7af7aecda"
        ],
        [
            "apply NN72PA.",
            "VernacExtend",
            "4cb1b41feddc3022d8ac8b65983c8675b747cde6"
        ],
        [
            "induction H0 as (x, H0); induction H0 as (x0, H0).",
            "VernacExtend",
            "9d3fcf932e985415dbb37de5d3b5c6c5d469f8de"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (freeVarPA x H0 v H1).",
            "VernacExtend",
            "fe6251a3b5c13945bb1f47901c217c9fd22d5e57"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "fold mem.",
            "VernacExtend",
            "f08ed3a85d27e29673b5de460481add243e02eaa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (SysPrf PA (LNN2LNT_formula NN8)).",
            "VernacExtend",
            "bd79c6fd802c57a0b261a8334b1275ed244308c2"
        ],
        [
            "apply NN82PA.",
            "VernacExtend",
            "309ef9df06d0f1bfd328ef2c2fbe79d6d61015b5"
        ],
        [
            "induction H0 as (x, H0); induction H0 as (x0, H0).",
            "VernacExtend",
            "9d3fcf932e985415dbb37de5d3b5c6c5d469f8de"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (freeVarPA x H0 v H1).",
            "VernacExtend",
            "fe6251a3b5c13945bb1f47901c217c9fd22d5e57"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "fold mem.",
            "VernacExtend",
            "f08ed3a85d27e29673b5de460481add243e02eaa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (SysPrf PA (LNN2LNT_formula NN9)).",
            "VernacExtend",
            "585bcef9520c201d15cac8a1c3bbc4b773bb38bc"
        ],
        [
            "apply NN92PA.",
            "VernacExtend",
            "4793d25438e11b9b22c8b571cc83d20c80ce9998"
        ],
        [
            "induction H0 as (x, H0); induction H0 as (x0, H0).",
            "VernacExtend",
            "9d3fcf932e985415dbb37de5d3b5c6c5d469f8de"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (freeVarPA x H0 v H1).",
            "VernacExtend",
            "fe6251a3b5c13945bb1f47901c217c9fd22d5e57"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "fold mem.",
            "VernacExtend",
            "f08ed3a85d27e29673b5de460481add243e02eaa"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (LNN2LNT_formula x :: nil).",
            "VernacExtend",
            "4ba81e248d06a664f1da97e957ec0d309964c2a7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat rewrite <- app_nil_end.",
            "VernacExtend",
            "281bc95ebce4f3f8db931310175dcf6eeb5425ef"
        ],
        [
            "apply (LNN2LNT_freeVarFormula1 x).",
            "VernacExtend",
            "766d19a9ad3f1e4f0432134b5a2ca676a9dc9175"
        ],
        [
            "exists (AXM _ (LNN2LNT_formula x)).",
            "VernacExtend",
            "31b3412c1aa5c17f7e14275c7accc0b8f7f3a168"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H1 as [H1| H1].",
            "VernacExtend",
            "755982f3031394b3076eabcf2040a3fc8f4e3364"
        ],
        [
            "unfold mem in H0.",
            "VernacExtend",
            "f3c1fadaa32ac54492a8f647af50637ef3969852"
        ],
        [
            "unfold Ensembles.In in H0.",
            "VernacExtend",
            "36180c0dc16873a481004ff582b3eb686b57dd34"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "elim H1.",
            "VernacExtend",
            "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
        ],
        [
            "assert (forall g : fol.Formula LNN, In g Axm1 -> mem (fol.Formula LNN) T' g).",
            "VernacExtend",
            "5c66fe4a2aaec9061f067220db021266789ed110"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "assert (forall g : fol.Formula LNN, In g Axm2 -> mem (fol.Formula LNN) T' g).",
            "VernacExtend",
            "6cd66ca445b6b5741b3a1614508852723e3f1889"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "induction (Hrecx0_1 H0).",
            "VernacExtend",
            "e3d3fc6e5089df8e06a1756718cd39fb43977872"
        ],
        [
            "induction (Hrecx0_0 H1).",
            "VernacExtend",
            "0e9e83358eb663b631184c3020f06186dcc4e992"
        ],
        [
            "induction H2 as (H2, H4).",
            "VernacExtend",
            "8585b2702b14cc1c98eae44a5d3ebc963eb0b33a"
        ],
        [
            "induction H3 as (H3, H5).",
            "VernacExtend",
            "15a63e9335f77a9da4f0e9d0fff3ad19fa6e1f25"
        ],
        [
            "induction H4 as (x1, H4).",
            "VernacExtend",
            "5c13b32fdc828ce90f5325bb0b6d0da665b7b1d6"
        ],
        [
            "induction H5 as (x2, H5).",
            "VernacExtend",
            "44d47f03695c1990088dc39268b0ab678fea525b"
        ],
        [
            "clear Hrecx0_1 H0 Hrecx0_0 H1.",
            "VernacExtend",
            "1d9ade6228676c67963a7d75ec342f7449a6c91e"
        ],
        [
            "exists (x ++ x0).",
            "VernacExtend",
            "5b13708635818feb7bb91ff9ca466e9e0681abac"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "repeat rewrite freeVarListFormulaApp.",
            "VernacExtend",
            "1fefeeec0c4e6fd14fcda9d20e01c990d1b7b098"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (in_app_or _ _ _ H0); auto with datatypes.",
            "VernacExtend",
            "6c891e50072a74f3d1587bed06c45625a91b6091"
        ],
        [
            "simpl in x1.",
            "VernacExtend",
            "1eba97c1842c620369cee721c1842a38033a9d04"
        ],
        [
            "exists (MP _ _ _ _ _ x1 x2).",
            "VernacExtend",
            "5e977eda1625d6d1ec3850494d5e6a7a7b2a5c7a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (in_app_or _ _ _ H0); auto.",
            "VernacExtend",
            "340626bce083878e1f5d4f6073ba842e4d36d6ac"
        ],
        [
            "assert (forall g : fol.Formula LNN, In g Axm -> mem (fol.Formula LNN) T' g).",
            "VernacExtend",
            "9e3c314a93ca06aebba1c6e5e731f35cebd3cfe6"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (Hrecx0 H0).",
            "VernacExtend",
            "a7f83f3033855b00f053cc86c8edcbd616b036cb"
        ],
        [
            "clear Hrecx0 H0.",
            "VernacExtend",
            "5d1af69068d9a932c81e9c3a244de7e8d894927c"
        ],
        [
            "induction H1 as (H0, H1).",
            "VernacExtend",
            "05afdee601429a43c7c92f397d917f02e50f0ee0"
        ],
        [
            "induction H1 as (x1, H1).",
            "VernacExtend",
            "f427b9e7b8ef70407cef25b7baaed1da297db186"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (~ In v (freeVarListFormula LNT x)).",
            "VernacExtend",
            "0d59c0fa20f06125681ce3cda984bbce5d579412"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (GEN _ _ _ _ H2 x1).",
            "VernacExtend",
            "77a14e023777a1b8a5da9ef3675a951e32019a3a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (IMP1 _ (LNN2LNT_formula A) (LNN2LNT_formula B)).",
            "VernacExtend",
            "be3ba42e62e7644eb3296e6872cd098b01433db2"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (IMP2 _ (LNN2LNT_formula A) (LNN2LNT_formula B) (LNN2LNT_formula C)).",
            "VernacExtend",
            "b30e36a2cddedef7f2dad5c62363078021bf1e48"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (CP _ (LNN2LNT_formula A) (LNN2LNT_formula B)).",
            "VernacExtend",
            "c38ac59989cc6cbd7d1b6e034f175096ed35dee5"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (SysPrf (Empty_set _) (impH (forallH v (LNN2LNT_formula A)) (LNN2LNT_formula (substituteFormula LNN A v t)))).",
            "VernacExtend",
            "9b997280554578d153d43021cc26251b5c178d64"
        ],
        [
            "apply impTrans with (substituteFormula LNT (LNN2LNT_formula A) v (LNN2LNT_term t)).",
            "VernacExtend",
            "708b37642e3979f3416d146b3c8d141ff497bc3d"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply iffE2.",
            "VernacExtend",
            "634f5292bea916e4459588d212267ab3a9b42941"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "induction H0 as (x, H0).",
            "VernacExtend",
            "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
        ],
        [
            "induction H0 as (x0, H0).",
            "VernacExtend",
            "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
        ],
        [
            "induction x as [| a x Hrecx].",
            "VernacExtend",
            "bfc5fe4d63cadd785efcb41a065d8dbf6de188be"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "assert (mem (fol.Formula LNT) (Empty_set (fol.Formula LNT)) a).",
            "VernacExtend",
            "bbe4d774aae23952dff1ac94c03d24a2e10bdbf3"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "induction H1.",
            "VernacExtend",
            "2e7754b8626e84404f5bc663332beef2a7c01b81"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (~ In v (freeVarFormula LNT (LNN2LNT_formula A))).",
            "VernacExtend",
            "22a5ed44ff12c52904637563d592deb2c3bb0c7d"
        ],
        [
            "unfold not in |- *; intros; apply n.",
            "VernacExtend",
            "1bb00d990363a9f879030fafd27e43e3f8ed1044"
        ],
        [
            "apply LNN2LNT_freeVarFormula1.",
            "VernacExtend",
            "ad31639606d49165b89543678ede68fe6784f76d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists (FA2 _ (LNN2LNT_formula A) v H0).",
            "VernacExtend",
            "437fc9bacd2858f0ce320c13114c627f0d35793c"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (FA3 _ (LNN2LNT_formula A) (LNN2LNT_formula B) v).",
            "VernacExtend",
            "9a3d17132d21628d3e40ab1363a80ffd5b8f1263"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (EQ1 LNT).",
            "VernacExtend",
            "f3a5a5804287b4f3d0ef25ae2bf7734c1a685647"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (EQ2 LNT).",
            "VernacExtend",
            "a7f2cc313bc5542709619e25dbd22a61a6cd17fc"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "exists (nil (A:=Formula)).",
            "VernacExtend",
            "3b38b5e114c133c8be5629e529cc4807867b4594"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (EQ3 LNT).",
            "VernacExtend",
            "9482a5245d578e9c27bc4c366fb9be5596b13d2d"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "assert (SysPrf (Empty_set Formula) (LNN2LNT_formula (AxmEq4 LNN R))).",
            "VernacExtend",
            "71cfc975d80464e390ddd72538e274648ef533df"
        ],
        [
            "apply translateProof with (Empty_set (fol.Formula LNN)).",
            "VernacExtend",
            "88e2ebea3cabee6397b45888fd5607a5e8d96391"
        ],
        [
            "unfold ClosedSystem in |- *.",
            "VernacExtend",
            "b64861ad193e303f5998f4ce049538afc4ae451a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "exists (nil (A:=fol.Formula LNN)).",
            "VernacExtend",
            "d27ecff4ff261d061ec9446699a4cfb55f7baf61"
        ],
        [
            "exists (EQ4 LNN R).",
            "VernacExtend",
            "2044551e2954a9f0237177669c6ea26dfc193211"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "induction H0 as (x, H0).",
            "VernacExtend",
            "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
        ],
        [
            "induction H0 as (x0, H0).",
            "VernacExtend",
            "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (In_freeVarListFormulaE _ _ _ H1).",
            "VernacExtend",
            "3d8a02a358a7bda400c804579b5316b8c85dc4d6"
        ],
        [
            "induction H2 as (H2, H3).",
            "VernacExtend",
            "0d861cb6d88dcee96d00a46e953498c0d889d4f1"
        ],
        [
            "assert (mem (fol.Formula LNT) (Empty_set Formula) x1).",
            "VernacExtend",
            "8829e5de7ad41da33665f7a5d5e886bd7466037e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (mem (fol.Formula LNT) (Empty_set Formula) g).",
            "VernacExtend",
            "454f343fd9e93118cb052dd56a77d721bbae4265"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "assert (SysPrf (Empty_set Formula) (LNN2LNT_formula (AxmEq5 LNN f))).",
            "VernacExtend",
            "c6f9ec430e750793611d2e2dc396b67da33814b9"
        ],
        [
            "apply translateProof with (Empty_set (fol.Formula LNN)).",
            "VernacExtend",
            "88e2ebea3cabee6397b45888fd5607a5e8d96391"
        ],
        [
            "unfold ClosedSystem in |- *.",
            "VernacExtend",
            "b64861ad193e303f5998f4ce049538afc4ae451a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H0.",
            "VernacExtend",
            "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
        ],
        [
            "exists (nil (A:=fol.Formula LNN)).",
            "VernacExtend",
            "d27ecff4ff261d061ec9446699a4cfb55f7baf61"
        ],
        [
            "exists (EQ5 LNN f).",
            "VernacExtend",
            "d167c1c9714c96125820521fc77d1dd74be64fab"
        ],
        [
            "simpl in |- *; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "induction H0 as (x, H0).",
            "VernacExtend",
            "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
        ],
        [
            "induction H0 as (x0, H0).",
            "VernacExtend",
            "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (In_freeVarListFormulaE _ _ _ H1).",
            "VernacExtend",
            "3d8a02a358a7bda400c804579b5316b8c85dc4d6"
        ],
        [
            "induction H2 as (H2, H3).",
            "VernacExtend",
            "0d861cb6d88dcee96d00a46e953498c0d889d4f1"
        ],
        [
            "assert (mem (fol.Formula LNT) (Empty_set Formula) x1).",
            "VernacExtend",
            "8829e5de7ad41da33665f7a5d5e886bd7466037e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H4.",
            "VernacExtend",
            "0794cfb373907d93c39b7ee82cb033b7d935333f"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (mem (fol.Formula LNT) (Empty_set Formula) g).",
            "VernacExtend",
            "454f343fd9e93118cb052dd56a77d721bbae4265"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H2.",
            "VernacExtend",
            "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
        ],
        [
            "induction H0 as (x1, H0).",
            "VernacExtend",
            "d854a0e5d3ecce8f1501fb9b83864fca108dae5f"
        ],
        [
            "induction H0 as (H0, H1).",
            "VernacExtend",
            "bf205e87bc39521a75ba7f60076f211d70aac7cf"
        ],
        [
            "exists x1.",
            "VernacExtend",
            "41149f92e5f2a0109418d3e02971541f67fbd3df"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Rosser'sIncompleteness : (forall x : Formula, mem _ T x \\/ ~ mem _ T x) -> exists f : Formula, (forall v : nat, ~ In v (freeVarFormula LNT f)) /\\ (SysPrf T f \\/ SysPrf T (notH f) -> Inconsistent LNT T).",
            "VernacStartTheoremProof",
            "ef2ecaac5c71b0b0ebd855a9c61d80630d0f7669"
        ],
        [
            "intros decide.",
            "VernacExtend",
            "9e17968a4417cab16dd76cca01443e83e8859ec2"
        ],
        [
            "set (A := fol.forallH LNN 1 (fol.impH LNN codeSysPrf (fol.existH LNN 2 (fol.andH LNN (LT (fol.var LNN 2) (fol.var LNN 1)) (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2)))))) in *.",
            "VernacExtend",
            "54c489a1a7fb82bc55f58356fee1b7207fa5801c"
        ],
        [
            "destruct (FixPointLNT (LNN2LNT_formula A) 0) as [x [H0 H1]].",
            "VernacExtend",
            "0ad380f10efae0d8b415eef476a990ff67049224"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction (H1 v).",
            "VernacExtend",
            "ae17bac54520f8492099e45ad96e27a742784ca4"
        ],
        [
            "assert (In v (list_remove nat eq_nat_dec 0 (freeVarFormula LNT (LNN2LNT_formula A)))).",
            "VernacExtend",
            "1e4a0eaeca77f5894d6d83196e711ee3a7dede8a"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (In v (list_remove nat eq_nat_dec 0 (freeVarFormula LNN A))).",
            "VernacExtend",
            "a0ec881961e873b5fe1a1011da98ea786fc1e40a"
        ],
        [
            "clear H4.",
            "VernacExtend",
            "b63698fbba7b38f68086944744e776a2fb5bc886"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold A in H4.",
            "VernacExtend",
            "55f325612c394abae120bf6675da91627aa66e15"
        ],
        [
            "SimplFreeVar.",
            "VernacExtend",
            "2c638d57ac9770a2d6be38a3c09907ee24fdb74b"
        ],
        [
            "assert (v <= 1).",
            "VernacExtend",
            "1ac4305d5f179ea0d668988b2d3c96881f4b3989"
        ],
        [
            "apply (freeVarCodeSysPrf LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTRIsPR (LNT2LNN_formula repT) v0 freeVarRepT').",
            "VernacExtend",
            "79b821593ba66d9628a816cad24cfe7fdd7e57ca"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "destruct v as [| n].",
            "VernacExtend",
            "6c408d4b6fe4848787af1f3ef6e9f691d27d88f9"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply (le_not_lt (S (S n)) 1).",
            "VernacExtend",
            "676349461954654c6003000902ec034d1f377bff"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "assert (v <= 1).",
            "VernacExtend",
            "1ac4305d5f179ea0d668988b2d3c96881f4b3989"
        ],
        [
            "apply freeVarCodeSysPrfN.",
            "VernacExtend",
            "671d395428833d781bcb25ed271cca497713b060"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct v as [| n].",
            "VernacExtend",
            "6c408d4b6fe4848787af1f3ef6e9f691d27d88f9"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply (le_not_lt (S (S n)) 1).",
            "VernacExtend",
            "676349461954654c6003000902ec034d1f377bff"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "eapply In_list_remove3.",
            "VernacExtend",
            "ac13e52173aa31e0130e4ca035e81563e41d2956"
        ],
        [
            "apply LNN2LNT_freeVarFormula1.",
            "VernacExtend",
            "ad31639606d49165b89543678ede68fe6784f76d"
        ],
        [
            "eapply In_list_remove1.",
            "VernacExtend",
            "b6b28153aa75f2c6a57f8178f189dba7003cf48c"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "eapply In_list_remove2.",
            "VernacExtend",
            "7eb1b8eb89512c806e1e243a61da5303249e789b"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as [H| H].",
            "VernacExtend",
            "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
        ],
        [
            "unfold Inconsistent in |- *.",
            "VernacExtend",
            "0eb00ce7c934ae4c564ebd33a299653286c3d1be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H2 as (x1, H2).",
            "VernacExtend",
            "b5632b3f13581a26924fd7af0ecac9484cd78efb"
        ],
        [
            "induction (searchProof decide _ (notH x) _ x1).",
            "VernacExtend",
            "4778d00d1df1342859e3136bc508635f1cbd55d1"
        ],
        [
            "decompose record H3.",
            "VernacExtend",
            "f60543c714246c1e5864816d8c8da51954e2d9a9"
        ],
        [
            "apply contradiction with x.",
            "VernacExtend",
            "2266ada3188d9d1556a1827a05b9a18c0c28ed99"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "exists x2.",
            "VernacExtend",
            "c66cfc490b972d4e27c8ead94cd5deb052231b69"
        ],
        [
            "exists x3.",
            "VernacExtend",
            "fdf676e105ec13f635c8882c91b4fdae5ec87366"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply contradiction with (existH 2 (andH (LNN2LNT_formula (LT (fol.var LNN 2) (natToTermLNN (codePrf _ _ x1)))) (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 0 (natToTerm (codeFormula x))) 1 (var 2)))).",
            "VernacExtend",
            "37bbfa2cb71df37a2ee271745bbc47d5b8fb6489"
        ],
        [
            "apply impE with (existH 2 (andH (LNN2LNT_formula (LT (fol.var LNN 2) (natToTermLNN (codePrf x0 x x1)))) (substituteFormula LNT (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 0 (natToTerm (codeFormula x))) 1 (var 2)) 1 (natToTerm (codePrf _ _ x1))))).",
            "VernacExtend",
            "da6b64653bb72ad9846af5d5ea49e5594d16cfab"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "apply (reduceExist LNT).",
            "VernacExtend",
            "a99778ac16c51d56238bb23a242d9bd5010d6422"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply (reduceAnd LNT).",
            "VernacExtend",
            "dc5c2878b03ac14220653d73ea7f639c06203c49"
        ],
        [
            "apply iffRefl.",
            "VernacExtend",
            "0aaf4ca531047f5e0ae634b651a4f5c44f055b9b"
        ],
        [
            "apply (subFormulaNil LNT).",
            "VernacExtend",
            "b432d424e1fb2cd3a80340720b9e41362e5ea27f"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction (freeVarSubFormula3 _ _ _ _ _ H4).",
            "VernacExtend",
            "5c8621e56555d16295ceed311519d01e133ca795"
        ],
        [
            "apply (In_list_remove2 _ _ _ _ _ H5).",
            "VernacExtend",
            "382fef7c395ec3f0807a2f86ef1914fccca2abe8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in H5.",
            "VernacExtend",
            "03fbfc7bb6b248b41f6241227db3e5c410547157"
        ],
        [
            "decompose sum H5.",
            "VernacExtend",
            "642b8202beb44aa9663b839e3d14db690b7c3d2b"
        ],
        [
            "discriminate H6.",
            "VernacExtend",
            "7415b937012eb118b755d10a8be2a67e478ec2c8"
        ],
        [
            "replace (LT (fol.var LNN 2) (natToTermLNN (codePrf _ _ x1))) with (substituteFormula LNN (LT (fol.var LNN 2) (fol.var LNN 1)) 1 (natToTermLNN (codePrf _ _ x1))).",
            "VernacExtend",
            "35ae08e2ce3e977173b496d8259f371aa9537811"
        ],
        [
            "apply impE with (existH 2 (andH (substituteFormula LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) 1 (natToTerm (codePrf x0 x x1))) (substituteFormula LNT (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 0 (natToTerm (codeFormula x))) 1 (var 2)) 1 (natToTerm (codePrf x0 x x1))))).",
            "VernacExtend",
            "db36607bef91e986f0758bea8c8d49f29b03dae0"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "apply (reduceExist LNT).",
            "VernacExtend",
            "a99778ac16c51d56238bb23a242d9bd5010d6422"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply (reduceAnd LNT).",
            "VernacExtend",
            "dc5c2878b03ac14220653d73ea7f639c06203c49"
        ],
        [
            "apply iffSym.",
            "VernacExtend",
            "c9f206ff294c572b2e5126df678bc3f37dbf63e4"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply iffRefl.",
            "VernacExtend",
            "0aaf4ca531047f5e0ae634b651a4f5c44f055b9b"
        ],
        [
            "rewrite <- (subFormulaAnd LNT).",
            "VernacExtend",
            "d709292c50216a449fac7316a2ed4397d5818d46"
        ],
        [
            "apply impE with (existH 2 (substituteFormula LNT (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 1 (var 2)) 0 (natToTerm (codeFormula x)))) 1 (natToTerm (codePrf x0 x x1)))).",
            "VernacExtend",
            "786c4f95464a53af8ff0170f2e342eb5acf10183"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "apply (reduceExist LNT).",
            "VernacExtend",
            "a99778ac16c51d56238bb23a242d9bd5010d6422"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply (reduceSub LNT).",
            "VernacExtend",
            "bb1e267350d37a1efb39a14d6e6c591fdebe279b"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply (reduceAnd LNT).",
            "VernacExtend",
            "dc5c2878b03ac14220653d73ea7f639c06203c49"
        ],
        [
            "apply iffRefl.",
            "VernacExtend",
            "0aaf4ca531047f5e0ae634b651a4f5c44f055b9b"
        ],
        [
            "apply (subFormulaExch LNT).",
            "VernacExtend",
            "43d2d64a0e19e13c80db306e13a998190c0f5b16"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "simpl in H4.",
            "VernacExtend",
            "31358c428a532f17f4c3cd16100d65b9f5ba8243"
        ],
        [
            "decompose sum H4.",
            "VernacExtend",
            "8a2ae8580c260915b5527daa320235236324501a"
        ],
        [
            "discriminate H5.",
            "VernacExtend",
            "ef02ca358272dcb45f3c5198898bbd3a72883ea1"
        ],
        [
            "apply closedNatToTerm.",
            "VernacExtend",
            "ab6879b4c24fe4725b9b521be10558ba4b21bb8e"
        ],
        [
            "replace (LT (fol.var LNN 2) (fol.var LNN 1)) with (substituteFormula LNN (LT (fol.var LNN 2) (fol.var LNN 1)) 0 (natToTermLNN (codeFormula x))).",
            "VernacExtend",
            "7c3ebc7d2ce582b1a8046315a7cd98775ee9441c"
        ],
        [
            "apply impE with (existH 2 (substituteFormula LNT (fol.andH LNT (substituteFormula LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) 0 (natToTerm (codeFormula x))) (substituteFormula LNT (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2))) 0 (natToTerm (codeFormula x)))) 1 (natToTerm (codePrf x0 x x1)))).",
            "VernacExtend",
            "ece1688d7da5656695015bea6b90cabb2b6aee30"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "apply (reduceExist LNT).",
            "VernacExtend",
            "a99778ac16c51d56238bb23a242d9bd5010d6422"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply (reduceSub LNT).",
            "VernacExtend",
            "bb1e267350d37a1efb39a14d6e6c591fdebe279b"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply (reduceAnd LNT).",
            "VernacExtend",
            "dc5c2878b03ac14220653d73ea7f639c06203c49"
        ],
        [
            "apply iffSym.",
            "VernacExtend",
            "c9f206ff294c572b2e5126df678bc3f37dbf63e4"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply (reduceSub LNT).",
            "VernacExtend",
            "bb1e267350d37a1efb39a14d6e6c591fdebe279b"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "replace (var 2) with (LNN2LNT_term (fol.var LNN 2)).",
            "VernacExtend",
            "781d4fca1155528c17549ccc6171eda3fb4bdce2"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite <- (subFormulaAnd LNT).",
            "VernacExtend",
            "d709292c50216a449fac7316a2ed4397d5818d46"
        ],
        [
            "replace (existH 2 (substituteFormula LNT (substituteFormula LNT (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2)))) 0 (natToTerm (codeFormula x))) 1 (natToTerm (codePrf x0 x x1)))) with (substituteFormula LNT (existH 2 (substituteFormula LNT (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2)))) 0 (natToTerm (codeFormula x)))) 1 (natToTerm (codePrf x0 x x1))).",
            "VernacExtend",
            "3482dc093db6d3c5f9fc5a8c7a7896c023f18a7e"
        ],
        [
            "replace (existH 2 (substituteFormula LNT (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2)))) 0 (natToTerm (codeFormula x)))) with (substituteFormula LNT (existH 2 (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2))))) 0 (natToTerm (codeFormula x))).",
            "VernacExtend",
            "e398467a3a2bf918a362c59dc3c4c9db530d0556"
        ],
        [
            "apply impE with (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrf) 0 (natToTerm (codeFormula x))) 1 (natToTerm (codePrf _ _ x1))).",
            "VernacExtend",
            "e1de31b033fad168a36b5c02358aad750e50c564"
        ],
        [
            "repeat rewrite <- (subFormulaImp LNT).",
            "VernacExtend",
            "cd3f130ff620f996879fcf0c5f1e8c2f0f3c7426"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "replace (forallH 1 (substituteFormula LNT (fol.impH LNT (LNN2LNT_formula codeSysPrf) (existH 2 (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2)))))) 0 (natToTerm (codeFormula x)))) with (substituteFormula LNT (forallH 1 (fol.impH LNT (LNN2LNT_formula codeSysPrf) (existH 2 (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2))))))) 0 (natToTerm (codeFormula x))).",
            "VernacExtend",
            "930165cb90fb43efe16a9a9f9aa32877d8920c8b"
        ],
        [
            "apply impE with x.",
            "VernacExtend",
            "b14518720fd278ee0de695091c78e9beefb92087"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (subFormulaForall LNT).",
            "VernacExtend",
            "3b1ff3b80273ca14a7ff164616f81f160d181277"
        ],
        [
            "induction (eq_nat_dec 1 0).",
            "VernacExtend",
            "7b4fb4ca71c63df5b0d3aa5a66a5254d0504ed7a"
        ],
        [
            "discriminate a.",
            "VernacExtend",
            "954a0001c22cf537896d0b1ad7e9b20fa8968146"
        ],
        [
            "induction (In_dec eq_nat_dec 1 (freeVarTerm LNT (natToTerm (codeFormula x)))).",
            "VernacExtend",
            "960244a14357c856d246580a42c18568bb14216a"
        ],
        [
            "elim (closedNatToTerm _ _ a).",
            "VernacExtend",
            "4d6e0e1e36db0a4fb3fc3c3159f41a50d5380617"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply impE with (LNN2LNT_formula (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN (codePrf x0 x x1)))).",
            "VernacExtend",
            "ec343f0b2e697390eccb728fe2b185e67f5f2dab"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "eapply iffTrans.",
            "VernacExtend",
            "49b496051d221d802a613f3ce65a6b73c5f80186"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "repeat rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "76dbb0517a41768e9360abf3f89a31a317ab45d8"
        ],
        [
            "apply (reduceSub LNT).",
            "VernacExtend",
            "bb1e267350d37a1efb39a14d6e6c591fdebe279b"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply T'prf2Tprf.",
            "VernacExtend",
            "d20e47b2d0516361f6cbbb39d7b0cf1ce6cd244c"
        ],
        [
            "apply codeSysPrfCorrect1.",
            "VernacExtend",
            "e6ebcfbd79188217abae47dd1e301d9387123bd4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite (subFormulaExist LNT).",
            "VernacExtend",
            "85ec58e3778d0ad9828763082333dee5be4f3e14"
        ],
        [
            "induction (eq_nat_dec 2 0).",
            "VernacExtend",
            "e2eccace7f04685f663aa1661442f4e32e0f3052"
        ],
        [
            "discriminate a.",
            "VernacExtend",
            "954a0001c22cf537896d0b1ad7e9b20fa8968146"
        ],
        [
            "induction (In_dec eq_nat_dec 2 (freeVarTerm LNT (natToTerm (codeFormula x)))).",
            "VernacExtend",
            "ceda730a51dfc84cb84ed15e56f67a0d951f93bf"
        ],
        [
            "elim (closedNatToTerm _ _ a).",
            "VernacExtend",
            "4d6e0e1e36db0a4fb3fc3c3159f41a50d5380617"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite (subFormulaExist LNT).",
            "VernacExtend",
            "85ec58e3778d0ad9828763082333dee5be4f3e14"
        ],
        [
            "induction (eq_nat_dec 2 1).",
            "VernacExtend",
            "94581c882cf63ea0911c6812e5974fca1625113f"
        ],
        [
            "discriminate a.",
            "VernacExtend",
            "954a0001c22cf537896d0b1ad7e9b20fa8968146"
        ],
        [
            "induction (In_dec eq_nat_dec 2 (freeVarTerm LNT (natToTerm (codePrf x0 x x1)))).",
            "VernacExtend",
            "e32067ab10c616978923daa15adce4c7685690bd"
        ],
        [
            "elim (closedNatToTerm _ _ a).",
            "VernacExtend",
            "4d6e0e1e36db0a4fb3fc3c3159f41a50d5380617"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold LT in |- *.",
            "VernacExtend",
            "a2b52089d355403e644427049555930e9c264ec8"
        ],
        [
            "rewrite (subFormulaRelation LNN).",
            "VernacExtend",
            "99523d62f00e54bec3893f970e77d61eda76a86b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold LT in |- *.",
            "VernacExtend",
            "a2b52089d355403e644427049555930e9c264ec8"
        ],
        [
            "rewrite (subFormulaRelation LNN).",
            "VernacExtend",
            "99523d62f00e54bec3893f970e77d61eda76a86b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply nExist.",
            "VernacExtend",
            "f1a9cd4b5182bb75e60395e8ed455cb9152c854f"
        ],
        [
            "set (E := LNN2LNT_formula (nat_rec (fun _ => fol.Formula LNN) (LNT2LNN_formula (equal Zero Zero)) (fun (n : nat) rec => fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n))) rec) (codePrf x0 x x1))) in *.",
            "VernacExtend",
            "5e6e077ee087c92f832b24d2224d46e677d2afc4"
        ],
        [
            "assert (forall x : nat, ~ In x (freeVarFormula LNT E)).",
            "VernacExtend",
            "6809977754bbddbf22ef93a3b4c2a7c23bf7b904"
        ],
        [
            "unfold E in |- *.",
            "VernacExtend",
            "651fae98269e843e7858ceab3ea2e68808f3dd47"
        ],
        [
            "clear H3 E.",
            "VernacExtend",
            "7217fc0419bc2c5d696ce6888fccafa4c23ba276"
        ],
        [
            "induction (codePrf x0 x x1).",
            "VernacExtend",
            "db0732d71d56b1424a2db624392e683e1c29cca5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold nat_rec, nat_rect in |- *.",
            "VernacExtend",
            "a7af695abb8191d2250c1a5f6049283b1551f716"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "set (Q := (fix F (n : nat) : (fun _ : nat => fol.Formula LNN) n := match n with | O => LNT2LNN_formula (equal Zero Zero) | S n0 => (fun (n1 : nat) (rec : fol.Formula LNN) => fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n1))) rec) n0 (F n0) end) n) in *.",
            "VernacExtend",
            "ca660adf2725210da042a6e5e1ec88c9ebbafff9"
        ],
        [
            "assert (In x2 (freeVarFormula LNN (fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n))) Q))).",
            "VernacExtend",
            "b94897adfadabf0a398812babf8a289be82c04b0"
        ],
        [
            "apply LNN2LNT_freeVarFormula1.",
            "VernacExtend",
            "ad31639606d49165b89543678ede68fe6784f76d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "SimplFreeVar.",
            "VernacExtend",
            "2c638d57ac9770a2d6be38a3c09907ee24fdb74b"
        ],
        [
            "apply (le_not_lt x2 1).",
            "VernacExtend",
            "23af9c12a115bf65d466328acc6d39fb32e0961f"
        ],
        [
            "apply freeVarCodeSysPrfN.",
            "VernacExtend",
            "671d395428833d781bcb25ed271cca497713b060"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct x2 as [| n0].",
            "VernacExtend",
            "f7bc0b1caf77ff043f3d4e07874f583b6a1276ac"
        ],
        [
            "elim H6; reflexivity.",
            "VernacExtend",
            "1737cf6ed377a07897711e6e9b31944573951451"
        ],
        [
            "destruct n0.",
            "VernacExtend",
            "907b25c8fbf8f33251f3f0e692baa7be0dc4b830"
        ],
        [
            "elim H5; reflexivity.",
            "VernacExtend",
            "74762402acbcc767c75a6bef6ac448ede07acbf9"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "rewrite <- LNT2LNN_natToTerm in H4.",
            "VernacExtend",
            "3cabeace296df956be0cb9b9753c047efef440d8"
        ],
        [
            "rewrite LNT2LNN_freeVarTerm in H4.",
            "VernacExtend",
            "2e216bb5614df2246362187a5260f0ead1af1133"
        ],
        [
            "apply (closedNatToTerm _ _ H4).",
            "VernacExtend",
            "8bdfcd6c5009e74e42cef5a6e19f35a0385643ca"
        ],
        [
            "rewrite <- LNT2LNN_natToTerm in H4.",
            "VernacExtend",
            "3cabeace296df956be0cb9b9753c047efef440d8"
        ],
        [
            "rewrite LNT2LNN_freeVarTerm in H4.",
            "VernacExtend",
            "2e216bb5614df2246362187a5260f0ead1af1133"
        ],
        [
            "apply (closedNatToTerm _ _ H4).",
            "VernacExtend",
            "8bdfcd6c5009e74e42cef5a6e19f35a0385643ca"
        ],
        [
            "apply (IHn x2).",
            "VernacExtend",
            "2fefa77bc12455fb70440395ec3a8090bcfe02f3"
        ],
        [
            "apply LNN2LNT_freeVarFormula2.",
            "VernacExtend",
            "095043a00d6ab83aded88ae8cb1f2cab5bb26e60"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply impE with E.",
            "VernacExtend",
            "0eef6c4384684774d51be148c5b09eaba8324ff5"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply forallI.",
            "VernacExtend",
            "1ef9f6cd50c84d0027a28c8ee533843601787f0a"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction H5 as (x2, H5).",
            "VernacExtend",
            "44d47f03695c1990088dc39268b0ab678fea525b"
        ],
        [
            "induction H5 as (H5, H6).",
            "VernacExtend",
            "f58f93a8d3138a1ba0831fb681e4492b46c7b34a"
        ],
        [
            "induction H6 as [x2 H6| x2 H6].",
            "VernacExtend",
            "b0f8e7fce116ab318d58b38e88bb5acb2e36e944"
        ],
        [
            "apply (closedPA 2).",
            "VernacExtend",
            "58604f0722743af84ff640597fa22f75cf278480"
        ],
        [
            "exists x2.",
            "VernacExtend",
            "c66cfc490b972d4e27c8ead94cd5deb052231b69"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "apply (H4 2).",
            "VernacExtend",
            "e3088908296b13874e259fcc8a8002d0d72d46a9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply nAnd.",
            "VernacExtend",
            "9431135ebc238f961c6ab741b43bed8fbbdc4b36"
        ],
        [
            "unfold orH, fol.orH in |- *.",
            "VernacExtend",
            "df9e284d2941a26a2515a640a891b231d82600ae"
        ],
        [
            "apply impTrans with (LNN2LNT_formula (LT (fol.var LNN 2) (natToTermLNN (codePrf x0 x x1)))).",
            "VernacExtend",
            "c3b70e58cdd1301dbce18388014434194cb6d0ec"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply nnE.",
            "VernacExtend",
            "ccdc7f0fec4ccf244bdd43dcbed7dd87f89ab32a"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply impE with E.",
            "VernacExtend",
            "0eef6c4384684774d51be148c5b09eaba8324ff5"
        ],
        [
            "apply impE with (LNN2LNT_formula (LT (fol.var LNN 2) (natToTermLNN (codePrf x0 x x1)))).",
            "VernacExtend",
            "8dda2536a91ffaf0ef85924e43ce8d380d42bbe1"
        ],
        [
            "do 2 apply sysWeaken.",
            "VernacExtend",
            "18906563ed22f20f277f018d43b74a85a388c685"
        ],
        [
            "apply PAboundedLT.",
            "VernacExtend",
            "3c0bfb2f6ccb94f6f6e3a7a0e5f6edd70a196aba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (subFormulaImp LNT).",
            "VernacExtend",
            "9c45b0a269c81df73f71e80b9d92541d4e101874"
        ],
        [
            "rewrite (subFormulaNot LNT).",
            "VernacExtend",
            "888a3ea29c684cf44f5dc56a2d59bb084d7e2773"
        ],
        [
            "apply impE with (fol.impH LNT E (fol.notH LNT (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 0 (natToTerm (codeFormula x))) 1 (natToTerm n)))).",
            "VernacExtend",
            "ed3d9c2cb0d191f0cf684ba2286ef34e5c6090c5"
        ],
        [
            "apply iffE2.",
            "VernacExtend",
            "634f5292bea916e4459588d212267ab3a9b42941"
        ],
        [
            "apply (reduceImp LNT).",
            "VernacExtend",
            "ea86639b051907f7d34e235b93cf29d5994b20fd"
        ],
        [
            "apply (subFormulaNil LNT).",
            "VernacExtend",
            "b432d424e1fb2cd3a80340720b9e41362e5ea27f"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply (reduceNot LNT).",
            "VernacExtend",
            "e59eb706f6aabfed8119fed3da1359549a46c798"
        ],
        [
            "apply (subFormulaTrans LNT).",
            "VernacExtend",
            "2c1d20acf5f840b3b75958896235361938838008"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "SimplFreeVar.",
            "VernacExtend",
            "2c638d57ac9770a2d6be38a3c09907ee24fdb74b"
        ],
        [
            "apply (le_not_lt 2 1).",
            "VernacExtend",
            "1e0bcb58b7ee1cf5be033157a3696eb00e62361d"
        ],
        [
            "apply freeVarCodeSysPrfN.",
            "VernacExtend",
            "671d395428833d781bcb25ed271cca497713b060"
        ],
        [
            "apply LNN2LNT_freeVarFormula1.",
            "VernacExtend",
            "ad31639606d49165b89543678ede68fe6784f76d"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "unfold E in |- *.",
            "VernacExtend",
            "651fae98269e843e7858ceab3ea2e68808f3dd47"
        ],
        [
            "clear E H4 H3.",
            "VernacExtend",
            "b312ab08d9e766769b12dcdf6f5a9c239c0a5c39"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "induction (codePrf x0 x x1).",
            "VernacExtend",
            "db0732d71d56b1424a2db624392e683e1c29cca5"
        ],
        [
            "elim (lt_n_O _ H5).",
            "VernacExtend",
            "86531a1feab4406bcd7bd1c9b8c3ffc42e2b516f"
        ],
        [
            "unfold nat_rec, nat_rect in |- *.",
            "VernacExtend",
            "a7af695abb8191d2250c1a5f6049283b1551f716"
        ],
        [
            "set (Q := (fix F (n1 : nat) : (fun _ : nat => fol.Formula LNN) n1 := match n1 with | O => LNT2LNN_formula (equal Zero Zero) | S n2 => (fun (n3 : nat) (rec : fol.Formula LNN) => fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n3))) rec) n2 (F n2) end) n0) in *.",
            "VernacExtend",
            "7520dc8d6fa81b656edde0a114084e61002b776e"
        ],
        [
            "induction (le_lt_or_eq _ _ (lt_n_Sm_le _ _ H5)).",
            "VernacExtend",
            "d53ff505fb9927ff37ae2188afa1a34fb6ebe356"
        ],
        [
            "apply impE with (LNN2LNT_formula Q).",
            "VernacExtend",
            "42509ad8a4a19d3cccbb7d0700a6acc73e9b0b78"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply (IHn0 H3).",
            "VernacExtend",
            "baf93f804ac470fdf547332af345f8978d8b6fd4"
        ],
        [
            "rewrite LNN2LNT_and.",
            "VernacExtend",
            "747c4e6df04d830ab56d1eedd5be03a071dd1c58"
        ],
        [
            "eapply andE2.",
            "VernacExtend",
            "c82ce44debfda7a5cd2fde9cabfd460aebba18a5"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply impE with (LNN2LNT_formula (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n0)))).",
            "VernacExtend",
            "392276821c19ecad7a96ac10b2d6e8d17ba2b06a"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply iffTrans with (notH (LNN2LNT_formula (substituteFormula LNN (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n0)))).",
            "VernacExtend",
            "94fd090e0d750f8e5101199f359464d316ffe04a"
        ],
        [
            "apply iffRefl.",
            "VernacExtend",
            "0aaf4ca531047f5e0ae634b651a4f5c44f055b9b"
        ],
        [
            "apply (reduceNot LNT).",
            "VernacExtend",
            "e59eb706f6aabfed8119fed3da1359549a46c798"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "apply iffTrans with (substituteFormula LNT (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x)))) 1 (LNN2LNT_term (natToTermLNN n0))).",
            "VernacExtend",
            "d05239f8001f9fc2c7fbcd99e3929844ed0b7e6f"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply (reduceSub LNT).",
            "VernacExtend",
            "bb1e267350d37a1efb39a14d6e6c591fdebe279b"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "eapply andE1.",
            "VernacExtend",
            "932461eacc6376aaacc9bb8ca9130c6060a6201f"
        ],
        [
            "rewrite LNN2LNT_and.",
            "VernacExtend",
            "747c4e6df04d830ab56d1eedd5be03a071dd1c58"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply Axm; left; right; constructor.",
            "VernacExtend",
            "fc933040337f48b416dd8f5aeac8df5d75f902ab"
        ],
        [
            "unfold E in |- *.",
            "VernacExtend",
            "651fae98269e843e7858ceab3ea2e68808f3dd47"
        ],
        [
            "clear H4 E.",
            "VernacExtend",
            "f44b99b74eb58b471414c31174c4c88f62186eb6"
        ],
        [
            "induction (codePrf x0 x x1).",
            "VernacExtend",
            "db0732d71d56b1424a2db624392e683e1c29cca5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply eqRefl.",
            "VernacExtend",
            "3ad8e37f8390813c8bd02eb3ffc8248edee78d95"
        ],
        [
            "unfold nat_rec, nat_rect in |- *.",
            "VernacExtend",
            "a7af695abb8191d2250c1a5f6049283b1551f716"
        ],
        [
            "rewrite LNN2LNT_and.",
            "VernacExtend",
            "747c4e6df04d830ab56d1eedd5be03a071dd1c58"
        ],
        [
            "apply andI.",
            "VernacExtend",
            "f9d3279a8b72d3210f5050fba9800fa4bb631a97"
        ],
        [
            "induction (eq_nat_dec (checkPrf LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR (codeFormula (notH x)) n) 0).",
            "VernacExtend",
            "53cf3404d4ae78bda5db9e37c629043880628bc2"
        ],
        [
            "unfold codeSysPrfNot in |- *.",
            "VernacExtend",
            "c1d1ce7d3dca1a847c2ec1b45d3993185641de06"
        ],
        [
            "apply T'prf2Tprf.",
            "VernacExtend",
            "d20e47b2d0516361f6cbbb39d7b0cf1ce6cd244c"
        ],
        [
            "apply codeSysPrfNCorrect3.",
            "VernacExtend",
            "525486c53a7b0a1a2237549a5d9ee8d29ba13f92"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "rewrite H4 in a.",
            "VernacExtend",
            "59416ce95fe4f7614e01b8990fd6873a01e277a1"
        ],
        [
            "rewrite (checkPrfCorrect1 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsCorrect1 codeArityLNTRIsCorrect1) in a.",
            "VernacExtend",
            "60cd347ad857e384002e7e8aafdfaa1e05eada90"
        ],
        [
            "discriminate a.",
            "VernacExtend",
            "954a0001c22cf537896d0b1ad7e9b20fa8968146"
        ],
        [
            "decompose record (checkPrfCorrect2 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsCorrect1 codeArityLNTFIsCorrect2 codeArityLNTRIsCorrect1 codeArityLNTRIsCorrect2 codeLNTFunctionInj codeLNTRelationInj _ _ b).",
            "VernacExtend",
            "26f00a07b61209047a7711d3bfa89eba9fd66c18"
        ],
        [
            "rewrite <- H6.",
            "VernacExtend",
            "87f0bbdef7718e8c7d1d8eeab2d9828935bcf389"
        ],
        [
            "assert (x2 = notH x).",
            "VernacExtend",
            "1641e1d0e2a2f410ad098dd4e6ecd08becd83f15"
        ],
        [
            "eapply codeFormulaInj.",
            "VernacExtend",
            "7852cde31d2de1fdfaf1d6936ecd082d0f4ee492"
        ],
        [
            "apply codeLNTFunctionInj.",
            "VernacExtend",
            "ed64377aae3a02a204f9d3d3a3c8aa16a98aeacb"
        ],
        [
            "apply codeLNTRelationInj.",
            "VernacExtend",
            "4623c19f06f773493b216a161ca7fbdc141794c5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (code.codePrf LNT codeLNTFunction codeLNTRelation x3 x2 x4 = n).",
            "VernacExtend",
            "756563f25a48a1f156c56ffb22f294aa1e37ef06"
        ],
        [
            "generalize x4.",
            "VernacExtend",
            "38054802b97dd3704fed1e96e3dd1fb29a9dfa50"
        ],
        [
            "clear H6 x4.",
            "VernacExtend",
            "2d4f9166e89c77fd359444c9d5de8bcbdc4a50ab"
        ],
        [
            "rewrite H4.",
            "VernacExtend",
            "fc5d011df68f7160e4669d129d2975825ac089bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply T'prf2Tprf.",
            "VernacExtend",
            "d20e47b2d0516361f6cbbb39d7b0cf1ce6cd244c"
        ],
        [
            "apply codeSysPrfNCorrect2.",
            "VernacExtend",
            "8b0bc13d4a155ac775460d18409cff933c7511d5"
        ],
        [
            "eapply H3.",
            "VernacExtend",
            "c283fe0cccfea6349d3f3b143a42b920bc1e86aa"
        ],
        [
            "apply lt_S.",
            "VernacExtend",
            "47477bda68b8f0c94efef6095ed80a97ae3f2827"
        ],
        [
            "rewrite <- H6.",
            "VernacExtend",
            "87f0bbdef7718e8c7d1d8eeab2d9828935bcf389"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply H3.",
            "VernacExtend",
            "c283fe0cccfea6349d3f3b143a42b920bc1e86aa"
        ],
        [
            "apply lt_S.",
            "VernacExtend",
            "47477bda68b8f0c94efef6095ed80a97ae3f2827"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "unfold Inconsistent in |- *.",
            "VernacExtend",
            "0eb00ce7c934ae4c564ebd33a299653286c3d1be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H2 as (x1, H2).",
            "VernacExtend",
            "b5632b3f13581a26924fd7af0ecac9484cd78efb"
        ],
        [
            "induction (searchProof decide _ x _ x1).",
            "VernacExtend",
            "b2f86282b00a8b4492516ab38328503eef5e9f34"
        ],
        [
            "decompose record H3.",
            "VernacExtend",
            "f60543c714246c1e5864816d8c8da51954e2d9a9"
        ],
        [
            "apply contradiction with x.",
            "VernacExtend",
            "2266ada3188d9d1556a1827a05b9a18c0c28ed99"
        ],
        [
            "exists x2.",
            "VernacExtend",
            "c66cfc490b972d4e27c8ead94cd5deb052231b69"
        ],
        [
            "exists x3.",
            "VernacExtend",
            "fdf676e105ec13f635c8882c91b4fdae5ec87366"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply contradiction with (substituteFormula LNT (LNN2LNT_formula A) 0 (natToTermLNT (code.codeFormula LNT codeLNTFunction codeLNTRelation x))).",
            "VernacExtend",
            "eaf3a3ee2f51950e9cabd35fa34a6eeb7a511ab1"
        ],
        [
            "unfold A in |- *.",
            "VernacExtend",
            "3d4031a5dbdaa51031d69f7b1bd339e3135314dd"
        ],
        [
            "replace (LNN2LNT_formula (fol.forallH LNN 1 (fol.impH LNN codeSysPrf (fol.existH LNN 2 (fol.andH LNN (LT (fol.var LNN 2) (fol.var LNN 1)) (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2))))))) with (forallH 1 (impH (LNN2LNT_formula codeSysPrf) (existH 2 (andH (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2))))))).",
            "VernacExtend",
            "4ba0799ade0cedada2e7fb24a49ac13efb927cb6"
        ],
        [
            "rewrite (subFormulaForall LNT).",
            "VernacExtend",
            "3b1ff3b80273ca14a7ff164616f81f160d181277"
        ],
        [
            "induction (eq_nat_dec 1 0).",
            "VernacExtend",
            "7b4fb4ca71c63df5b0d3aa5a66a5254d0504ed7a"
        ],
        [
            "discriminate a.",
            "VernacExtend",
            "954a0001c22cf537896d0b1ad7e9b20fa8968146"
        ],
        [
            "induction (In_dec eq_nat_dec 1 (freeVarTerm LNT (natToTermLNT (code.codeFormula LNT codeLNTFunction codeLNTRelation x)))).",
            "VernacExtend",
            "313ae0dbf61ddd65554eb9ecea074b1640f084f3"
        ],
        [
            "elim (closedNatToTerm _ _ a).",
            "VernacExtend",
            "4d6e0e1e36db0a4fb3fc3c3159f41a50d5380617"
        ],
        [
            "clear b0 b.",
            "VernacExtend",
            "692fd968128e01c49866722a57410289ffd39549"
        ],
        [
            "set (E := LNN2LNT_formula (nat_rec (fun _ => fol.Formula LNN) (LNT2LNN_formula (equal Zero Zero)) (fun (n : nat) rec => fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n))) rec) (S (codePrf _ _ x1)))) in *.",
            "VernacExtend",
            "ebfbaca336e8dd4c7303aacdcfec4b5b977e7c01"
        ],
        [
            "assert (forall x : nat, ~ In x (freeVarFormula LNT E)).",
            "VernacExtend",
            "6809977754bbddbf22ef93a3b4c2a7c23bf7b904"
        ],
        [
            "unfold E in |- *.",
            "VernacExtend",
            "651fae98269e843e7858ceab3ea2e68808f3dd47"
        ],
        [
            "clear H3 E.",
            "VernacExtend",
            "7217fc0419bc2c5d696ce6888fccafa4c23ba276"
        ],
        [
            "induction (S (codePrf x0 (notH x) x1)).",
            "VernacExtend",
            "c68921655919f23cb09b16a948efdadf1f9ec9a6"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold nat_rec, nat_rect in |- *.",
            "VernacExtend",
            "a7af695abb8191d2250c1a5f6049283b1551f716"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "cut (In x2 (freeVarFormula LNN (fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n))) ((fix F (n : nat) : (fun _ : nat => fol.Formula LNN) n := match n with | O => LNT2LNN_formula (equal Zero Zero) | S n0 => (fun (n1 : nat) (rec : fol.Formula LNN) => fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n1))) rec) n0 (F n0) end) n)))).",
            "VernacExtend",
            "74f64b657c5438a1db3efe05e86fb631f8010c61"
        ],
        [
            "clear H3.",
            "VernacExtend",
            "fc50f4d83926cbda2c6b6c4c8fff0c14162e2a3f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "SimplFreeVar.",
            "VernacExtend",
            "2c638d57ac9770a2d6be38a3c09907ee24fdb74b"
        ],
        [
            "apply (le_not_lt x2 1).",
            "VernacExtend",
            "23af9c12a115bf65d466328acc6d39fb32e0961f"
        ],
        [
            "apply (freeVarCodeSysPrf LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsPR codeArityLNTRIsPR (LNT2LNN_formula repT) v0 freeVarRepT').",
            "VernacExtend",
            "79b821593ba66d9628a816cad24cfe7fdd7e57ca"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "destruct x2 as [| n0].",
            "VernacExtend",
            "f7bc0b1caf77ff043f3d4e07874f583b6a1276ac"
        ],
        [
            "elim H6; reflexivity.",
            "VernacExtend",
            "1737cf6ed377a07897711e6e9b31944573951451"
        ],
        [
            "destruct n0.",
            "VernacExtend",
            "907b25c8fbf8f33251f3f0e692baa7be0dc4b830"
        ],
        [
            "elim H5; reflexivity.",
            "VernacExtend",
            "74762402acbcc767c75a6bef6ac448ede07acbf9"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "rewrite <- LNT2LNN_natToTerm in H3.",
            "VernacExtend",
            "0c2b3685624f7c7f16f1f72cccfd06c7178b6bf0"
        ],
        [
            "rewrite LNT2LNN_freeVarTerm in H3.",
            "VernacExtend",
            "f9bb902dd9b2b5f7b2205e08da7cdc8c12145143"
        ],
        [
            "apply (closedNatToTerm _ _ H3).",
            "VernacExtend",
            "f5abc6b6a973b63c9edf2d34f0b7943330f32002"
        ],
        [
            "rewrite <- LNT2LNN_natToTerm in H3.",
            "VernacExtend",
            "0c2b3685624f7c7f16f1f72cccfd06c7178b6bf0"
        ],
        [
            "rewrite LNT2LNN_freeVarTerm in H3.",
            "VernacExtend",
            "f9bb902dd9b2b5f7b2205e08da7cdc8c12145143"
        ],
        [
            "apply (closedNatToTerm _ _ H3).",
            "VernacExtend",
            "f5abc6b6a973b63c9edf2d34f0b7943330f32002"
        ],
        [
            "assert (In x2 (freeVarFormula LNT (LNN2LNT_formula (nat_rec (fun _ : nat => fol.Formula LNN) (LNT2LNN_formula (equal Zero Zero)) (fun (n : nat) (rec : fol.Formula LNN) => fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n))) rec) n)))).",
            "VernacExtend",
            "68ae0e3df232b5f8efaa8b5d9350e47004908609"
        ],
        [
            "apply LNN2LNT_freeVarFormula2.",
            "VernacExtend",
            "095043a00d6ab83aded88ae8cb1f2cab5bb26e60"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply (IHn _ H4).",
            "VernacExtend",
            "1f357e7f4047bb35b402a595c046e762deaebad2"
        ],
        [
            "apply LNN2LNT_freeVarFormula1.",
            "VernacExtend",
            "ad31639606d49165b89543678ede68fe6784f76d"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply impE with E.",
            "VernacExtend",
            "0eef6c4384684774d51be148c5b09eaba8324ff5"
        ],
        [
            "set (G := substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 0 (natToTerm (codeFormula x))) 1 (natToTerm (codePrf x0 (notH x) x1))) in *.",
            "VernacExtend",
            "d2bb0b9bd92a73a607e652530c0b3dccde6765b5"
        ],
        [
            "apply impE with G.",
            "VernacExtend",
            "9a90bbd182f5cba2c61f664ff3ddc360d723e8c1"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat apply impI.",
            "VernacExtend",
            "84056f0f112b60b779cb9102a0d732508ad89cf5"
        ],
        [
            "apply forallI.",
            "VernacExtend",
            "1ef9f6cd50c84d0027a28c8ee533843601787f0a"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "induction H5 as (x2, H5); induction H5 as (H5, H6).",
            "VernacExtend",
            "490dd052ab98a2b228bf885ac38caa753994f239"
        ],
        [
            "induction H6 as [x2 H6| x2 H6].",
            "VernacExtend",
            "b0f8e7fce116ab318d58b38e88bb5acb2e36e944"
        ],
        [
            "induction H6 as [x2 H6| x2 H6].",
            "VernacExtend",
            "b0f8e7fce116ab318d58b38e88bb5acb2e36e944"
        ],
        [
            "apply (closedPA 1).",
            "VernacExtend",
            "c0cb9ee290c5900c6b0a585afc772523ab375d1d"
        ],
        [
            "exists x2.",
            "VernacExtend",
            "c66cfc490b972d4e27c8ead94cd5deb052231b69"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "unfold G in H5.",
            "VernacExtend",
            "e67a43705d01c4949738fcf008d727bf95dac9e3"
        ],
        [
            "SimplFreeVar.",
            "VernacExtend",
            "2c638d57ac9770a2d6be38a3c09907ee24fdb74b"
        ],
        [
            "induction H6.",
            "VernacExtend",
            "d952b6a4752e23dd01aab6ed4b924826224b8867"
        ],
        [
            "apply (H4 _ H5).",
            "VernacExtend",
            "4f69ead237b022f5fea6dfdd086f2a44f36ec90e"
        ],
        [
            "rewrite (subFormulaImp LNT).",
            "VernacExtend",
            "9c45b0a269c81df73f71e80b9d92541d4e101874"
        ],
        [
            "rewrite (subFormulaExist LNT).",
            "VernacExtend",
            "85ec58e3778d0ad9828763082333dee5be4f3e14"
        ],
        [
            "induction (eq_nat_dec 2 0).",
            "VernacExtend",
            "e2eccace7f04685f663aa1661442f4e32e0f3052"
        ],
        [
            "discriminate a.",
            "VernacExtend",
            "954a0001c22cf537896d0b1ad7e9b20fa8968146"
        ],
        [
            "induction (In_dec eq_nat_dec 2 (freeVarTerm LNT (natToTermLNT (code.codeFormula LNT codeLNTFunction codeLNTRelation x)))).",
            "VernacExtend",
            "92700f37fb597e3a405a13f3d704d34a898497df"
        ],
        [
            "elim (closedNatToTerm _ _ a).",
            "VernacExtend",
            "4d6e0e1e36db0a4fb3fc3c3159f41a50d5380617"
        ],
        [
            "clear b0 b.",
            "VernacExtend",
            "692fd968128e01c49866722a57410289ffd39549"
        ],
        [
            "rewrite (subFormulaAnd LNT).",
            "VernacExtend",
            "2cc1f3f6daa0f74d965cac403d3edf0a38e065c9"
        ],
        [
            "apply impE with (fol.impH LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrf) 0 (natToTermLNT (code.codeFormula LNT codeLNTFunction codeLNTRelation x))) (fol.existH LNT 2 (fol.andH LNT (LNN2LNT_formula (LT (fol.var LNN 2) (fol.var LNN 1))) (substituteFormula LNT (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 1 (fol.var LNN 2))) 0 (natToTermLNT (code.codeFormula LNT codeLNTFunction codeLNTRelation x)))))).",
            "VernacExtend",
            "54101057285db8024070593d4f787ea485a38772"
        ],
        [
            "repeat simple apply sysWeaken.",
            "VernacExtend",
            "f6b768ef2cf4e0b49a5386f2e660077710988179"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply (reduceImp LNT).",
            "VernacExtend",
            "ea86639b051907f7d34e235b93cf29d5994b20fd"
        ],
        [
            "apply iffRefl.",
            "VernacExtend",
            "0aaf4ca531047f5e0ae634b651a4f5c44f055b9b"
        ],
        [
            "apply (reduceExist LNT).",
            "VernacExtend",
            "a99778ac16c51d56238bb23a242d9bd5010d6422"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply (reduceAnd LNT).",
            "VernacExtend",
            "dc5c2878b03ac14220653d73ea7f639c06203c49"
        ],
        [
            "apply iffTrans with (LNN2LNT_formula (substituteFormula LNN (LT (fol.var LNN 2) (fol.var LNN 1)) 0 (natToTermLNN (code.codeFormula LNT codeLNTFunction codeLNTRelation x)))).",
            "VernacExtend",
            "f15dd38b7068ce2149d146e5e30a8a2d814cc0e8"
        ],
        [
            "rewrite <- LNN2LNT_iff.",
            "VernacExtend",
            "496e48e028653446936a1feae8f91bb7121f5bd9"
        ],
        [
            "apply NN2PA.",
            "VernacExtend",
            "6385d40c197578fd1788d02e9d31785f27c06052"
        ],
        [
            "apply (folLogic.iffRefl LNN).",
            "VernacExtend",
            "0e500f714034833a21c9321dbad01172df1a8ea2"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply iffRefl.",
            "VernacExtend",
            "0aaf4ca531047f5e0ae634b651a4f5c44f055b9b"
        ],
        [
            "apply orE with (LNN2LNT_formula (fol.orH LNN (LT (fol.var LNN 1) (natToTermLNN (codePrf x0 (notH x) x1))) (LNT2LNN_formula (equal (var 1) (natToTerm (codePrf x0 (notH x) x1)))))) (LNN2LNT_formula (LT (natToTermLNN (codePrf x0 (notH x) x1)) (fol.var LNN 1))).",
            "VernacExtend",
            "53b1ca8cddde70d90a8dd3cdfa33e17fdbc01600"
        ],
        [
            "repeat simple apply sysWeaken.",
            "VernacExtend",
            "f6b768ef2cf4e0b49a5386f2e660077710988179"
        ],
        [
            "apply impE with (LNN2LNT_formula (fol.orH LNN (LT (fol.var LNN 1) (natToTermLNN (codePrf x0 (notH x) x1))) (fol.orH LNN (LNT2LNN_formula (equal (var 1) (natToTerm (codePrf x0 (notH x) x1)))) (LT (natToTermLNN (codePrf x0 (notH x) x1)) (fol.var LNN 1))))).",
            "VernacExtend",
            "87571f3fe4f57bc0cc66c0cd68a196324b3544ca"
        ],
        [
            "repeat rewrite LNN2LNT_or.",
            "VernacExtend",
            "dc467e5e7f04cebd5b368d92dfca37ed38abb6fc"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply orSys.",
            "VernacExtend",
            "c25bda4a2012ba31fecfcec5d73d50f7f983e806"
        ],
        [
            "apply orI1.",
            "VernacExtend",
            "db0ad01eb30445fcd92e48ef760b299e1669e887"
        ],
        [
            "apply orI1.",
            "VernacExtend",
            "db0ad01eb30445fcd92e48ef760b299e1669e887"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply orSys.",
            "VernacExtend",
            "c25bda4a2012ba31fecfcec5d73d50f7f983e806"
        ],
        [
            "apply orI1.",
            "VernacExtend",
            "db0ad01eb30445fcd92e48ef760b299e1669e887"
        ],
        [
            "apply orI2.",
            "VernacExtend",
            "94b84b946400b3b9d3473fcba3c2f9d5812eff02"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply orI2.",
            "VernacExtend",
            "94b84b946400b3b9d3473fcba3c2f9d5812eff02"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply NN2PA.",
            "VernacExtend",
            "6385d40c197578fd1788d02e9d31785f27c06052"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite LNT2LNN_natToTerm.",
            "VernacExtend",
            "0cf5b3a04b3c4e58d9ea66e89c479bf2757a4aa0"
        ],
        [
            "apply nn9.",
            "VernacExtend",
            "d224e271e5ffb6b7cde07797179d9509df644277"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "apply impE with G.",
            "VernacExtend",
            "9a90bbd182f5cba2c61f664ff3ddc360d723e8c1"
        ],
        [
            "apply impE with E.",
            "VernacExtend",
            "0eef6c4384684774d51be148c5b09eaba8324ff5"
        ],
        [
            "apply impE with (LNN2LNT_formula (LT (fol.var LNN 1) (natToTermLNN (S (codePrf x0 (notH x) x1))))).",
            "VernacExtend",
            "c02007872b43486e3f75b4adecd0338efa08a55e"
        ],
        [
            "repeat simple apply sysWeaken.",
            "VernacExtend",
            "f6b768ef2cf4e0b49a5386f2e660077710988179"
        ],
        [
            "apply PAboundedLT.",
            "VernacExtend",
            "3c0bfb2f6ccb94f6f6e3a7a0e5f6edd70a196aba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat rewrite (subFormulaImp LNT).",
            "VernacExtend",
            "f1c60530aeff9745d17ea69b9254ee8a1966f7ea"
        ],
        [
            "repeat apply impI.",
            "VernacExtend",
            "84056f0f112b60b779cb9102a0d732508ad89cf5"
        ],
        [
            "fold codeFormula in |- *.",
            "VernacExtend",
            "44457d9b6b3415e76a6b0752c6fa91381eccc886"
        ],
        [
            "apply contradiction with (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrf) 0 (natToTermLNT (codeFormula x))) 1 (natToTerm n)).",
            "VernacExtend",
            "3be40846b88fdf4abb74453dd62e0594c3f17fdf"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply impE with E.",
            "VernacExtend",
            "0eef6c4384684774d51be148c5b09eaba8324ff5"
        ],
        [
            "repeat simple apply sysWeaken.",
            "VernacExtend",
            "f6b768ef2cf4e0b49a5386f2e660077710988179"
        ],
        [
            "apply impI.",
            "VernacExtend",
            "60955e24356265eb0e9ef6255e08bbd113551585"
        ],
        [
            "clear H3 H4.",
            "VernacExtend",
            "c594212e6ab0214cf3574b9ccddf238f49d58c36"
        ],
        [
            "induction (S (codePrf x0 (notH x) x1)).",
            "VernacExtend",
            "c68921655919f23cb09b16a948efdadf1f9ec9a6"
        ],
        [
            "elim (lt_n_O _ H5).",
            "VernacExtend",
            "86531a1feab4406bcd7bd1c9b8c3ffc42e2b516f"
        ],
        [
            "induction (le_lt_or_eq _ _ (lt_n_Sm_le _ _ H5)).",
            "VernacExtend",
            "d53ff505fb9927ff37ae2188afa1a34fb6ebe356"
        ],
        [
            "unfold E in |- *.",
            "VernacExtend",
            "651fae98269e843e7858ceab3ea2e68808f3dd47"
        ],
        [
            "apply impE with (LNN2LNT_formula (nat_rec (fun _ : nat => fol.Formula LNN) (LNT2LNN_formula (equal Zero Zero)) (fun (n1 : nat) (rec : fol.Formula LNN) => fol.andH LNN (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n1))) rec) n0)).",
            "VernacExtend",
            "c46746f8168f67a790ab1e33659f1ee028392a8e"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "repeat apply impI.",
            "VernacExtend",
            "84056f0f112b60b779cb9102a0d732508ad89cf5"
        ],
        [
            "apply IHn0.",
            "VernacExtend",
            "73404847dc68367a9e6f571d4b770e407730e60a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold nat_rec, nat_rect in |- *.",
            "VernacExtend",
            "a7af695abb8191d2250c1a5f6049283b1551f716"
        ],
        [
            "rewrite LNN2LNT_and.",
            "VernacExtend",
            "747c4e6df04d830ab56d1eedd5be03a071dd1c58"
        ],
        [
            "eapply andE2.",
            "VernacExtend",
            "c82ce44debfda7a5cd2fde9cabfd460aebba18a5"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "unfold E in |- *.",
            "VernacExtend",
            "651fae98269e843e7858ceab3ea2e68808f3dd47"
        ],
        [
            "unfold nat_rec, nat_rect in |- *.",
            "VernacExtend",
            "a7af695abb8191d2250c1a5f6049283b1551f716"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "rewrite LNN2LNT_and.",
            "VernacExtend",
            "747c4e6df04d830ab56d1eedd5be03a071dd1c58"
        ],
        [
            "apply impE with (LNN2LNT_formula (fol.notH LNN (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n0)))).",
            "VernacExtend",
            "5d8e3e24620a127554ca77b91206cd3750c08dcd"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply iffTrans with (notH (LNN2LNT_formula (substituteFormula LNN (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN n0)))).",
            "VernacExtend",
            "9e069ed144583ff2524db09f19be73de102f5299"
        ],
        [
            "apply iffRefl.",
            "VernacExtend",
            "0aaf4ca531047f5e0ae634b651a4f5c44f055b9b"
        ],
        [
            "apply (reduceNot LNT).",
            "VernacExtend",
            "e59eb706f6aabfed8119fed3da1359549a46c798"
        ],
        [
            "repeat rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "76dbb0517a41768e9360abf3f89a31a317ab45d8"
        ],
        [
            "apply iffTrans with (substituteFormula LNT (LNN2LNT_formula (substituteFormula LNN codeSysPrf 0 (natToTermLNN (codeFormula x)))) 1 (LNN2LNT_term (natToTermLNN n0))).",
            "VernacExtend",
            "47de3a3a0eac3a96797522c074cec5a5a079a791"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply (reduceSub LNT).",
            "VernacExtend",
            "bb1e267350d37a1efb39a14d6e6c591fdebe279b"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "eapply andE1.",
            "VernacExtend",
            "932461eacc6376aaacc9bb8ca9130c6060a6201f"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply impE with (substituteFormula LNT E 1 (natToTerm n)).",
            "VernacExtend",
            "bed6c521d56ccb930d78be7cdef40da643884499"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply (subFormulaNil LNT).",
            "VernacExtend",
            "b432d424e1fb2cd3a80340720b9e41362e5ea27f"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply Axm; left; right; constructor.",
            "VernacExtend",
            "fc933040337f48b416dd8f5aeac8df5d75f902ab"
        ],
        [
            "apply impE with (LNN2LNT_formula (fol.orH LNN (LT (fol.var LNN 1) (natToTermLNN (codePrf x0 (notH x) x1))) (LNT2LNN_formula (equal (var 1) (natToTerm (codePrf x0 (notH x) x1)))))).",
            "VernacExtend",
            "3084bc79208239147d74eba6a4f751120189acf8"
        ],
        [
            "repeat simple apply sysWeaken.",
            "VernacExtend",
            "f6b768ef2cf4e0b49a5386f2e660077710988179"
        ],
        [
            "replace (impH (LNN2LNT_formula (fol.orH LNN (LT (fol.var LNN 1) (natToTermLNN (codePrf x0 (notH x) x1))) (LNT2LNN_formula (equal (var 1) (natToTerm (codePrf x0 (notH x) x1)))))) (LNN2LNT_formula (LT (fol.var LNN 1) (natToTermLNN (S (codePrf x0 (notH x) x1)))))) with (LNN2LNT_formula (fol.impH LNN (fol.orH LNN (LT (fol.var LNN 1) (natToTermLNN (codePrf x0 (notH x) x1))) (LNT2LNN_formula (equal (var 1) (natToTerm (codePrf x0 (notH x) x1))))) (LT (fol.var LNN 1) (natToTermLNN (S (codePrf x0 (notH x) x1)))))).",
            "VernacExtend",
            "cb5fa4f2cfafde5775c38ad9d585bf01572c8cd9"
        ],
        [
            "apply NN2PA.",
            "VernacExtend",
            "6385d40c197578fd1788d02e9d31785f27c06052"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite LNT2LNN_natToTerm.",
            "VernacExtend",
            "0cf5b3a04b3c4e58d9ea66e89c479bf2757a4aa0"
        ],
        [
            "apply nnPlusNotNeeded.",
            "VernacExtend",
            "4ae1cac866d091b0b68b5c3527088e62950c6e3b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply Axm; left; right; constructor.",
            "VernacExtend",
            "fc933040337f48b416dd8f5aeac8df5d75f902ab"
        ],
        [
            "apply Axm; do 2 left; right; constructor.",
            "VernacExtend",
            "d39955e1841f2b8aaf85ee4a6bbb88364975275f"
        ],
        [
            "repeat apply impI.",
            "VernacExtend",
            "84056f0f112b60b779cb9102a0d732508ad89cf5"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply existI with (natToTerm (codePrf x0 (notH x) x1)).",
            "VernacExtend",
            "28f24c693ee0745f5521391eac32465657dd268a"
        ],
        [
            "rewrite (subFormulaAnd LNT).",
            "VernacExtend",
            "2cc1f3f6daa0f74d965cac403d3edf0a38e065c9"
        ],
        [
            "apply andI.",
            "VernacExtend",
            "f9d3279a8b72d3210f5050fba9800fa4bb631a97"
        ],
        [
            "apply impE with (LNN2LNT_formula (LT (natToTermLNN (codePrf x0 (notH x) x1)) (fol.var LNN 1))).",
            "VernacExtend",
            "41863edf10f57e5b5d65872cc48174ac74b2bac8"
        ],
        [
            "repeat simple apply sysWeaken.",
            "VernacExtend",
            "f6b768ef2cf4e0b49a5386f2e660077710988179"
        ],
        [
            "apply impTrans with (LNN2LNT_formula (substituteFormula LNN (LT (fol.var LNN 2) (fol.var LNN 1)) 2 (natToTermLNN (codePrf x0 (notH x) x1)))).",
            "VernacExtend",
            "54322c0e1e7cb8b7671963c0ff3b8ae717ed1df8"
        ],
        [
            "replace (impH (LNN2LNT_formula (LT (natToTermLNN (codePrf x0 (notH x) x1)) (fol.var LNN 1))) (LNN2LNT_formula (substituteFormula LNN (LT (fol.var LNN 2) (fol.var LNN 1)) 2 (natToTermLNN (codePrf x0 (notH x) x1))))) with (LNN2LNT_formula (fol.impH LNN (LT (natToTermLNN (codePrf x0 (notH x) x1)) (fol.var LNN 1)) (substituteFormula LNN (LT (fol.var LNN 2) (fol.var LNN 1)) 2 (natToTermLNN (codePrf x0 (notH x) x1))))).",
            "VernacExtend",
            "16f5b977943d2fd2aade795d80c16502c1dda665"
        ],
        [
            "apply NN2PA.",
            "VernacExtend",
            "6385d40c197578fd1788d02e9d31785f27c06052"
        ],
        [
            "unfold LT in |- *.",
            "VernacExtend",
            "a2b52089d355403e644427049555930e9c264ec8"
        ],
        [
            "apply (folLogic.impI LNN).",
            "VernacExtend",
            "cdfe879d8eeabc39e0bd60efe55e5242bb582c9a"
        ],
        [
            "rewrite (subFormulaRelation LNN).",
            "VernacExtend",
            "99523d62f00e54bec3893f970e77d61eda76a86b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (folLogic.Axm LNN); right; constructor.",
            "VernacExtend",
            "0936f394e03eb6a6535da477db4e1086761274e8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply impE with (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 0 (natToTerm (codeFormula x))) 1 (natToTerm (codePrf x0 (notH x) x1))).",
            "VernacExtend",
            "2d2fc97da364761fcf4cd130c9214bb8fb992bd0"
        ],
        [
            "apply sysWeaken.",
            "VernacExtend",
            "6184cd0fa2a41223f187033e88e17cf0d86b61db"
        ],
        [
            "apply iffE2.",
            "VernacExtend",
            "634f5292bea916e4459588d212267ab3a9b42941"
        ],
        [
            "fold codeFormula in |- *.",
            "VernacExtend",
            "44457d9b6b3415e76a6b0752c6fa91381eccc886"
        ],
        [
            "apply iffTrans with (substituteFormula LNT (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 1 (var 2)) 0 (natToTermLNT (codeFormula x))) 2 (natToTerm (codePrf x0 (notH x) x1))).",
            "VernacExtend",
            "01548e9a1bdded94d846f14d1225eae03583281e"
        ],
        [
            "repeat (apply (reduceSub LNT); [ apply closedPA | idtac ]).",
            "VernacExtend",
            "227bde3057b33e526193f162ff28f8031cbed7df"
        ],
        [
            "replace (var 2) with (LNN2LNT_term (fol.var LNN 2)).",
            "VernacExtend",
            "781d4fca1155528c17549ccc6171eda3fb4bdce2"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply iffTrans with (substituteFormula LNT (substituteFormula LNT (substituteFormula LNT (LNN2LNT_formula codeSysPrfNot) 0 (natToTermLNT (codeFormula x))) 1 (var 2)) 2 (natToTerm (codePrf x0 (notH x) x1))).",
            "VernacExtend",
            "b61adbd342b3076092891674957fd1f0b09ae77d"
        ],
        [
            "repeat (apply (reduceSub LNT); [ apply closedPA | idtac ]).",
            "VernacExtend",
            "227bde3057b33e526193f162ff28f8031cbed7df"
        ],
        [
            "apply (subFormulaExch LNT).",
            "VernacExtend",
            "43d2d64a0e19e13c80db306e13a998190c0f5b16"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "unfold not in |- *; intros; SimplFreeVar.",
            "VernacExtend",
            "ae970221816d0247c05a21a90fde9452c65d1869"
        ],
        [
            "discriminate H6.",
            "VernacExtend",
            "7415b937012eb118b755d10a8be2a67e478ec2c8"
        ],
        [
            "apply closedNatToTerm.",
            "VernacExtend",
            "ab6879b4c24fe4725b9b521be10558ba4b21bb8e"
        ],
        [
            "apply (subFormulaTrans LNT).",
            "VernacExtend",
            "2c1d20acf5f840b3b75958896235361938838008"
        ],
        [
            "unfold not in |- *; intros; SimplFreeVar.",
            "VernacExtend",
            "ae970221816d0247c05a21a90fde9452c65d1869"
        ],
        [
            "apply (le_not_lt 2 1).",
            "VernacExtend",
            "1e0bcb58b7ee1cf5be033157a3696eb00e62361d"
        ],
        [
            "apply freeVarCodeSysPrfN.",
            "VernacExtend",
            "671d395428833d781bcb25ed271cca497713b060"
        ],
        [
            "apply LNN2LNT_freeVarFormula1.",
            "VernacExtend",
            "ad31639606d49165b89543678ede68fe6784f76d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "apply Axm; right; constructor.",
            "VernacExtend",
            "fafb5c153ffd727407f5c87d3444711b114dac59"
        ],
        [
            "unfold G in |- *.",
            "VernacExtend",
            "ff39da39f3ba21f96e7114ca5af788dda7a94c87"
        ],
        [
            "apply impE with (LNN2LNT_formula (substituteFormula LNN (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x))) 1 (natToTermLNN (codePrf x0 (notH x) x1)))).",
            "VernacExtend",
            "e4fe0320cbe84dbcef6f5460d22f43440c20cf72"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "repeat rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "76dbb0517a41768e9360abf3f89a31a317ab45d8"
        ],
        [
            "apply iffTrans with (substituteFormula LNT (LNN2LNT_formula (substituteFormula LNN codeSysPrfNot 0 (natToTermLNN (codeFormula x)))) 1 (LNN2LNT_term (natToTermLNN (codePrf x0 (notH x) x1)))).",
            "VernacExtend",
            "8c6ddbf9bdb78a9ab90f79996c51f03c94df5f9b"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (reduceSub LNT).",
            "VernacExtend",
            "bb1e267350d37a1efb39a14d6e6c591fdebe279b"
        ],
        [
            "apply closedPA.",
            "VernacExtend",
            "d7cdef6800d972204510b4f5225e4d91fb00a44f"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply T'prf2Tprf.",
            "VernacExtend",
            "d20e47b2d0516361f6cbbb39d7b0cf1ce6cd244c"
        ],
        [
            "apply codeSysPrfNCorrect1.",
            "VernacExtend",
            "07a66665a107c4121f97379649103f154b1de58d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "clear H4.",
            "VernacExtend",
            "b63698fbba7b38f68086944744e776a2fb5bc886"
        ],
        [
            "unfold E in |- *; clear E.",
            "VernacExtend",
            "072bbe208279a9c6f2e62f117f266fde1640f8e0"
        ],
        [
            "induction (S (codePrf x0 (notH x) x1)).",
            "VernacExtend",
            "c68921655919f23cb09b16a948efdadf1f9ec9a6"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply eqRefl.",
            "VernacExtend",
            "3ad8e37f8390813c8bd02eb3ffc8248edee78d95"
        ],
        [
            "unfold nat_rec, nat_rect in |- *.",
            "VernacExtend",
            "a7af695abb8191d2250c1a5f6049283b1551f716"
        ],
        [
            "rewrite LNN2LNT_and.",
            "VernacExtend",
            "747c4e6df04d830ab56d1eedd5be03a071dd1c58"
        ],
        [
            "apply andI.",
            "VernacExtend",
            "f9d3279a8b72d3210f5050fba9800fa4bb631a97"
        ],
        [
            "induction (eq_nat_dec (checkPrf LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR (codeFormula x) n) 0).",
            "VernacExtend",
            "928ad7e0ad0162bae9c2731a5840e68152816c87"
        ],
        [
            "unfold codeSysPrf, codeFormula in |- *.",
            "VernacExtend",
            "6c025161ab9056399b6de6b64c815fb71eee631f"
        ],
        [
            "apply T'prf2Tprf.",
            "VernacExtend",
            "d20e47b2d0516361f6cbbb39d7b0cf1ce6cd244c"
        ],
        [
            "apply codeSysPrfCorrect3.",
            "VernacExtend",
            "309f35915f9d62a88f521addba92c5b42de43a91"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "rewrite H4 in a.",
            "VernacExtend",
            "59416ce95fe4f7614e01b8990fd6873a01e277a1"
        ],
        [
            "rewrite (checkPrfCorrect1 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsCorrect1 codeArityLNTRIsCorrect1) in a.",
            "VernacExtend",
            "60cd347ad857e384002e7e8aafdfaa1e05eada90"
        ],
        [
            "discriminate a.",
            "VernacExtend",
            "954a0001c22cf537896d0b1ad7e9b20fa8968146"
        ],
        [
            "decompose record (checkPrfCorrect2 LNT codeLNTFunction codeLNTRelation codeArityLNTF codeArityLNTR codeArityLNTFIsCorrect1 codeArityLNTFIsCorrect2 codeArityLNTRIsCorrect1 codeArityLNTRIsCorrect2 codeLNTFunctionInj codeLNTRelationInj _ _ b).",
            "VernacExtend",
            "26f00a07b61209047a7711d3bfa89eba9fd66c18"
        ],
        [
            "rewrite <- H6.",
            "VernacExtend",
            "87f0bbdef7718e8c7d1d8eeab2d9828935bcf389"
        ],
        [
            "assert (x2 = x).",
            "VernacExtend",
            "42349beb75b898c361e2c61367c0e85f291fe667"
        ],
        [
            "eapply (codeFormulaInj LNT).",
            "VernacExtend",
            "c0038301b80ae0c9043aecfd7b388e2aae9f81b4"
        ],
        [
            "apply codeLNTFunctionInj.",
            "VernacExtend",
            "ed64377aae3a02a204f9d3d3a3c8aa16a98aeacb"
        ],
        [
            "apply codeLNTRelationInj.",
            "VernacExtend",
            "4623c19f06f773493b216a161ca7fbdc141794c5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- H4.",
            "VernacExtend",
            "15801069338f53d2cf64b6951fc88c5758e631f8"
        ],
        [
            "apply T'prf2Tprf.",
            "VernacExtend",
            "d20e47b2d0516361f6cbbb39d7b0cf1ce6cd244c"
        ],
        [
            "apply codeSysPrfCorrect2.",
            "VernacExtend",
            "29edced64027829fb6037def12c9509b78a9bbf1"
        ],
        [
            "rewrite <- H4 in H3.",
            "VernacExtend",
            "e942856bfb4aaf897d4b1f6217838fc9faee9610"
        ],
        [
            "apply H3 with x4.",
            "VernacExtend",
            "db446b47d3b8913bc52214889df0375f664295b5"
        ],
        [
            "rewrite <- H6.",
            "VernacExtend",
            "87f0bbdef7718e8c7d1d8eeab2d9828935bcf389"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply H3.",
            "VernacExtend",
            "c283fe0cccfea6349d3f3b143a42b920bc1e86aa"
        ],
        [
            "apply lt_S.",
            "VernacExtend",
            "47477bda68b8f0c94efef6095ed80a97ae3f2827"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply impE with (notH x).",
            "VernacExtend",
            "7d1ac7088ec17ba4869ffa0a5e6fd70ec5849e85"
        ],
        [
            "apply cp2.",
            "VernacExtend",
            "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
        ],
        [
            "apply iffE2.",
            "VernacExtend",
            "634f5292bea916e4459588d212267ab3a9b42941"
        ],
        [
            "apply sysExtend with PA.",
            "VernacExtend",
            "434b942682c0dceed91505dc465c95371a761ad9"
        ],
        [
            "apply extendsPA.",
            "VernacExtend",
            "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Rosser's_Incompleteness.",
            "VernacEndSegment",
            "5c4331f5b482958e26eaeb54220bc6a8a63af4e0"
        ],
        [
            "Require Import codePA.",
            "VernacRequire",
            "db374b96adfced659fdc7217c3e5f094958d6236"
        ],
        [
            "Require Import PAconsistent.",
            "VernacRequire",
            "4ad0b73d5637570f635e9d29df50ab058bade792"
        ],
        [
            "Theorem PAIncomplete : exists f : Formula, (Sentence f) /\\ ~(SysPrf PA f \\/ SysPrf PA (notH f)).",
            "VernacStartTheoremProof",
            "a055bbb12473057ba3e7d2bd43f0e16be79ba0ce"
        ],
        [
            "assert (Expressible NN 1 codePA (substituteFormula LNN (primRecFormula 1 (proj1_sig codePAIsPR)) 0 (natToTermLNN 1))).",
            "VernacExtend",
            "6d9e640dd2798107e793da2ad608acc221f78c63"
        ],
        [
            "apply (Representable2Expressible _ closedNN1).",
            "VernacExtend",
            "ba99d05a4c52f3202657e7e4c7d864c69ea62eb4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply nn1.",
            "VernacExtend",
            "c903514c0a1c26bc95236b52616257c3109264ed"
        ],
        [
            "apply primRecRepresentable.",
            "VernacExtend",
            "fc48023cc2308cac60b1697f1bd6a17a5a4d9954"
        ],
        [
            "induction H as (H, H0).",
            "VernacExtend",
            "80e8063abf40b69235269bf918fb9d1309d64e40"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "assert (exists f : Formula, (forall v : nat, ~ In v (freeVarFormula LNT f)) /\\ (SysPrf PA f \\/ SysPrf PA (notH f) -> Inconsistent LNT PA)).",
            "VernacExtend",
            "4dc6d0d8a5b327c591232e3c42f69ae668d670db"
        ],
        [
            "eapply Rosser'sIncompleteness with (repT := LNN2LNT_formula (substituteFormula LNN (primRecFormula 1 (proj1_sig codePAIsPR)) 0 (natToTermLNN 1))) (v0 := 1).",
            "VernacExtend",
            "a38f2857bf6b0794511ca6e4cfff9a033c9c52e4"
        ],
        [
            "unfold Included in |- *.",
            "VernacExtend",
            "c51ce0cf8e35f07a67db2a482d290f743d798a70"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (v <= 1 /\\ v <> 0).",
            "VernacExtend",
            "1714245a0bcd24326e45f30f62fbb3e4f7c04261"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply LNN2LNT_freeVarFormula1.",
            "VernacExtend",
            "ad31639606d49165b89543678ede68fe6784f76d"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "destruct v as [| n].",
            "VernacExtend",
            "6c408d4b6fe4848787af1f3ef6e9f691d27d88f9"
        ],
        [
            "induction H2 as (H2, H3).",
            "VernacExtend",
            "0d861cb6d88dcee96d00a46e953498c0d889d4f1"
        ],
        [
            "elim H3.",
            "VernacExtend",
            "70fb843285201ec5a9b4d417b6f0002c41dde4c6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "induction H2 as (H2, H3).",
            "VernacExtend",
            "0d861cb6d88dcee96d00a46e953498c0d889d4f1"
        ],
        [
            "elim (le_not_lt _ _ H2).",
            "VernacExtend",
            "b9efd32a401693759356c8b3a5bb632e9863d70e"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "eapply impE.",
            "VernacExtend",
            "adc0e8b3e4d04a89a00c60673ed002e1f9a888ae"
        ],
        [
            "apply iffE1.",
            "VernacExtend",
            "5ef2c5bdeaee57bc3d3bec2daa1270395936d0ee"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply NN2PA.",
            "VernacExtend",
            "6385d40c197578fd1788d02e9d31785f27c06052"
        ],
        [
            "assert (if codePA (codeFormula f) then LNN.SysPrf NN (substituteFormula LNN (substituteFormula LNN (primRecFormula 1 (proj1_sig codePAIsPR)) 0 (LNN.Succ LNN.Zero)) 1 (LNN.natToTerm (codeFormula f))) else LNN.SysPrf NN (LNN.notH (substituteFormula LNN (substituteFormula LNN (primRecFormula 1 (proj1_sig codePAIsPR)) 0 (LNN.Succ LNN.Zero)) 1 (LNN.natToTerm (codeFormula f))))).",
            "VernacExtend",
            "59aa2e51f9ea790a328ca2667936e5377b7c08ae"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (codePA (codeFormula f) = true).",
            "VernacExtend",
            "fa88f301679498030d12562a5e5ab306e3a84882"
        ],
        [
            "apply codePAcorrect3.",
            "VernacExtend",
            "8360438cd717014678c39941dba6ed316a6b02ca"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H0 in H2.",
            "VernacExtend",
            "a4d82e65c345819bdd50b79b067ee218c42a8857"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- LNN2LNT_natToTerm.",
            "VernacExtend",
            "d0f917d7e3d19bd0ff9c0f6e58d6f0bb29698784"
        ],
        [
            "eapply impE with (LNN2LNT_formula (LNN.notH (substituteFormula LNN (substituteFormula LNN (primRecFormula 1 (proj1_sig codePAIsPR)) 0 (LNN.Succ LNN.Zero)) 1 (LNN.natToTerm (codeFormula f))))).",
            "VernacExtend",
            "e6ba70ead38aa3bdf1f108a7196eb4b10e0d5b0c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply cp2.",
            "VernacExtend",
            "a93b092125c6dc1f67ff420ed2834f9c03e56fcb"
        ],
        [
            "apply iffE2.",
            "VernacExtend",
            "634f5292bea916e4459588d212267ab3a9b42941"
        ],
        [
            "apply LNN2LNT_subFormula.",
            "VernacExtend",
            "81fd85649f951d638ad93188de3f991157b5bc89"
        ],
        [
            "apply NN2PA.",
            "VernacExtend",
            "6385d40c197578fd1788d02e9d31785f27c06052"
        ],
        [
            "assert (if codePA (codeFormula f) then LNN.SysPrf NN (substituteFormula LNN (substituteFormula LNN (primRecFormula 1 (proj1_sig codePAIsPR)) 0 (LNN.Succ LNN.Zero)) 1 (LNN.natToTerm (codeFormula f))) else LNN.SysPrf NN (LNN.notH (substituteFormula LNN (substituteFormula LNN (primRecFormula 1 (proj1_sig codePAIsPR)) 0 (LNN.Succ LNN.Zero)) 1 (LNN.natToTerm (codeFormula f))))).",
            "VernacExtend",
            "59aa2e51f9ea790a328ca2667936e5377b7c08ae"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (codePA (codeFormula f) = false).",
            "VernacExtend",
            "25c337498d18d1130729da4a8b5bd3195329ea65"
        ],
        [
            "apply codePAcorrect2.",
            "VernacExtend",
            "637e3c0c30c2be76b4cc8f978dca1b289ab6262a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H0 in H2.",
            "VernacExtend",
            "a4d82e65c345819bdd50b79b067ee218c42a8857"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply PAdec.",
            "VernacExtend",
            "d9e2cdba1684dfd4643f21556470a4fc2900e464"
        ],
        [
            "clear H H0.",
            "VernacExtend",
            "a743351ff441835fe992d483bf3a5b58c3fccd77"
        ],
        [
            "decompose record H1.",
            "VernacExtend",
            "fc89bc5e30950f44e0dd70feb01cfe1cc8129126"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "unfold Inconsistent in H2.",
            "VernacExtend",
            "6307fc0c82548a79ef355c8e939f046d07febbe4"
        ],
        [
            "induction PAconsistent.",
            "VernacExtend",
            "a954c0e6f5f7422e964bdf45b63c2521bc563d67"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "extendsNN",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "unfold Included in |- *.",
                        "VernacExtend",
                        "c51ce0cf8e35f07a67db2a482d290f743d798a70"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold T' in |- *.",
                        "VernacExtend",
                        "b353f9e745566aea339f40af708cda35721fce38"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "freeVarRepT'",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply freeVarRepT.",
                        "VernacExtend",
                        "d7f927fffc7d72393c628f7a98d5ef3989e6ae70"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (LNT2LNT_formula repT).",
                        "VernacExtend",
                        "7d1b93459e314639653a0b88fa96129a4ffc4220"
                    ]
                },
                {
                    "command": [
                        "apply LNN2LNT_freeVarFormula2.",
                        "VernacExtend",
                        "095043a00d6ab83aded88ae8cb1f2cab5bb26e60"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Tprf2T'prf",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold T' in |- *.",
                        "VernacExtend",
                        "b353f9e745566aea339f40af708cda35721fce38"
                    ]
                },
                {
                    "command": [
                        "apply (folLogic.sysExtend LNN) with (fun x : fol.Formula LNN => mem (fol.Formula LNT) T (LNN2LNT_formula x)).",
                        "VernacExtend",
                        "c4fb699aa2adb70a170a4eb4c1490ea7626dcc57"
                    ]
                },
                {
                    "command": [
                        "unfold Included in |- *.",
                        "VernacExtend",
                        "c51ce0cf8e35f07a67db2a482d290f743d798a70"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, H); induction H as (x0, H).",
                        "VernacExtend",
                        "0dd71bc2b57f605f3b0f66d45601920fe1c2d974"
                    ]
                },
                {
                    "command": [
                        "exists (map LNT2LNN_formula x).",
                        "VernacExtend",
                        "a225b0c96b63bf94f7ee57aab2507c9b9d9ce06d"
                    ]
                },
                {
                    "command": [
                        "induction x0 as [A| Axm1 Axm2 A B x0_1 Hrecx0_1 x0_0 Hrecx0_0| Axm A v n x0 Hrecx0| A B| A B C| A B| A v t| A v n| A B v| | | | R| f]; simpl in |- *.",
                        "VernacExtend",
                        "161f41bae403f314fb5f3bbc4ac663f2c69570b1"
                    ]
                },
                {
                    "command": [
                        "exists (AXM LNN (LNT2LNN_formula A)).",
                        "VernacExtend",
                        "b443f1ef95e59cc630c22ffc8505de46f47d238c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold mem in |- *.",
                        "VernacExtend",
                        "a9d5e92f6f6a1c8fc5ab6101dfec5f848acdb500"
                    ]
                },
                {
                    "command": [
                        "unfold Ensembles.In in |- *.",
                        "VernacExtend",
                        "14ff23bde5d46e91e9824c5dab0703700558d31f"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite LNT2LNT_formula.",
                        "VernacExtend",
                        "38298ac7eadc52914802f9137a6caf28b9c871cb"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "assert (forall g : fol.Formula LNT, In g Axm1 -> mem (fol.Formula LNT) T g).",
                        "VernacExtend",
                        "39e04713751f72694a6215a947be03d545c761a3"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "assert (forall g : fol.Formula LNT, In g Axm2 -> mem (fol.Formula LNT) T g).",
                        "VernacExtend",
                        "7cc63670a96984cd0fb267b9d25400892371d244"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "induction (Hrecx0_0 H1).",
                        "VernacExtend",
                        "0e9e83358eb663b631184c3020f06186dcc4e992"
                    ]
                },
                {
                    "command": [
                        "induction (Hrecx0_1 H0).",
                        "VernacExtend",
                        "e3d3fc6e5089df8e06a1756718cd39fb43977872"
                    ]
                },
                {
                    "command": [
                        "clear Hrecx0_0 Hrecx0_1 H0 H1.",
                        "VernacExtend",
                        "ff44c7e03336ee85f1fda835413e88f2b0d2ea14"
                    ]
                },
                {
                    "command": [
                        "assert (map LNT2LNN_formula (Axm1 ++ Axm2) = map LNT2LNN_formula Axm1 ++ map LNT2LNN_formula Axm2).",
                        "VernacExtend",
                        "b91654c8720504c0b1b341554ed4e8d2ce09f4c4"
                    ]
                },
                {
                    "command": [
                        "generalize Axm1 Axm2; intros.",
                        "VernacExtend",
                        "4b747241af2e7f16114cce504c9f2780992d8746"
                    ]
                },
                {
                    "command": [
                        "induction Axm0 as [| a Axm0 HrecAxm0]; simpl in |- *.",
                        "VernacExtend",
                        "d0c4d2e5587186acb45876bdd57bd465de0c95ab"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite HrecAxm0.",
                        "VernacExtend",
                        "ad3ada3a04604cd0b1c61842c070fa502a42bea9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "exists (MP LNN (map LNT2LNN_formula Axm1) (map LNT2LNN_formula Axm2) (LNT2LNN_formula A) (LNT2LNN_formula B) x0 x).",
                        "VernacExtend",
                        "85fe51a1b1605f01e7f53ce4d7be05c9e1b94036"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (in_app_or _ _ _ H1); auto.",
                        "VernacExtend",
                        "17857a934a23290e503df3889a65f976f190c6af"
                    ]
                },
                {
                    "command": [
                        "induction (Hrecx0 H).",
                        "VernacExtend",
                        "2a5764726a606de6d68c9dc0c26bbb22520082a9"
                    ]
                },
                {
                    "command": [
                        "assert (~ In v (freeVarListFormula LNN (map LNT2LNN_formula Axm))).",
                        "VernacExtend",
                        "607d67b6267efe13b2932ca30a6db5b50c634033"
                    ]
                },
                {
                    "command": [
                        "clear x0 H Hrecx0 x H0.",
                        "VernacExtend",
                        "78a98510d7d30cba3d3867170a42829d6b68d1f8"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros; apply n.",
                        "VernacExtend",
                        "1bb00d990363a9f879030fafd27e43e3f8ed1044"
                    ]
                },
                {
                    "command": [
                        "clear n.",
                        "VernacExtend",
                        "950078f0511238b7bf11b5533c9ffd133a02ab04"
                    ]
                },
                {
                    "command": [
                        "induction Axm as [| a Axm HrecAxm].",
                        "VernacExtend",
                        "ff8a6bc02045c62de51eb4063ce772b8891a9028"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "apply in_or_app.",
                        "VernacExtend",
                        "5d96e3be59ed2c78adfe02ab12e779d3ca3f43c0"
                    ]
                },
                {
                    "command": [
                        "induction (in_app_or _ _ _ H).",
                        "VernacExtend",
                        "acf73ae8a5b539424453278277bcc3b62da459d6"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (LNT2LNT_formula a).",
                        "VernacExtend",
                        "5aa63f8f4a7f74ac60403d1c7239be12d61f23bc"
                    ]
                },
                {
                    "command": [
                        "apply LNN2LNT_freeVarFormula2.",
                        "VernacExtend",
                        "095043a00d6ab83aded88ae8cb1f2cab5bb26e60"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (GEN LNN (map LNT2LNN_formula Axm) (LNT2LNN_formula A) v H1 x).",
                        "VernacExtend",
                        "1e5be8853c71a1991491ebee81ebd7fb661fdc6d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (IMP1 LNN (LNT2LNN_formula A) (LNT2LNN_formula B)).",
                        "VernacExtend",
                        "a51d8afa2c93b2dbab386c2661f6364f4e5b4b82"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (IMP2 LNN (LNT2LNN_formula A) (LNT2LNN_formula B) (LNT2LNN_formula C)).",
                        "VernacExtend",
                        "f7cd5e699cd6f0d697a923f937b5e3c249e9094a"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (CP LNN (LNT2LNN_formula A) (LNT2LNN_formula B)).",
                        "VernacExtend",
                        "f73875a485bbdf15af0b8e020e528ee649fb3353"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "rewrite LNT2LNN_subFormula.",
                        "VernacExtend",
                        "8c1c470cc545a2414ee410234afc60871305c873"
                    ]
                },
                {
                    "command": [
                        "exists (FA1 LNN (LNT2LNN_formula A) v (LNT2LNN_term t)).",
                        "VernacExtend",
                        "cd4d1d5b52c144541d69daab343eb71f265ccf12"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- LNT2LNN_freeVarFormula in n.",
                        "VernacExtend",
                        "20da3b24ea4a6d0fa0a75ab7f6cc4814e96f7fea"
                    ]
                },
                {
                    "command": [
                        "exists (FA2 LNN (LNT2LNN_formula A) v n).",
                        "VernacExtend",
                        "c0e45d1a6265d185ad99c30d2254f9350e48412f"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (FA3 LNN (LNT2LNN_formula A) (LNT2LNN_formula B) v).",
                        "VernacExtend",
                        "6dfa8e637e0d279b63a0f6b72e8142eee3ba4469"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (EQ1 LNN).",
                        "VernacExtend",
                        "02ac72b700f0e9027a4618ea4ec32440321cf22c"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (EQ2 LNN).",
                        "VernacExtend",
                        "d679f0ce33f65962c8524c892a9755ae239ab30b"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (EQ3 LNN).",
                        "VernacExtend",
                        "117ca316ab6c8e7bdb9cff1cd8c45e577f6147bf"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "induction R.",
                        "VernacExtend",
                        "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
                    ]
                },
                {
                    "command": [
                        "induction f; simpl in |- *.",
                        "VernacExtend",
                        "b59a15af4e6ab0d04242e4f2a1f984279750715d"
                    ]
                },
                {
                    "command": [
                        "exists (EQ5 LNN Languages.Plus).",
                        "VernacExtend",
                        "93b4d6a7f52205830c4cf05284e066d52da9c9ba"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (EQ5 LNN Languages.Times).",
                        "VernacExtend",
                        "3cf8d227f5badfedaa951f9302f1ce674954a591"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (EQ5 LNN Languages.Succ).",
                        "VernacExtend",
                        "f00ac3373c67e7a70d3c3a7036c1a4caef34484a"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (EQ5 LNN Languages.Zero).",
                        "VernacExtend",
                        "de48505b0526537d6c547e473f9833489c213c53"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expressT'1",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (LNT2LNN_natToTerm (codeFormula f)).",
                        "VernacExtend",
                        "ffd4d80c5bd2fa140059ff446dffb845a1a00eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- LNT2LNN_subFormula.",
                        "VernacExtend",
                        "95eeaf34a13b6cfe5cb7de6fac7998d29e9597b2"
                    ]
                },
                {
                    "command": [
                        "apply Tprf2T'prf.",
                        "VernacExtend",
                        "4c5c7c1f8c7fc32c5d49675708c3f59eceea7a43"
                    ]
                },
                {
                    "command": [
                        "apply expressT1.",
                        "VernacExtend",
                        "ce539f965089a07fe6fa5c99b85fcde6c6d29bf4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "expressT'2",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (LNT2LNN_natToTerm (codeFormula f)).",
                        "VernacExtend",
                        "ffd4d80c5bd2fa140059ff446dffb845a1a00eb8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- LNT2LNN_subFormula.",
                        "VernacExtend",
                        "95eeaf34a13b6cfe5cb7de6fac7998d29e9597b2"
                    ]
                },
                {
                    "command": [
                        "replace (fol.notH LNN (LNT2LNN_formula (substituteFormula LNT repT v0 (natToTerm (codeFormula f))))) with (LNT2LNN_formula (notH (substituteFormula LNT repT v0 (natToTerm (codeFormula f))))).",
                        "VernacExtend",
                        "d9b270660b6537b7c1ac1710945eb3d670a4b139"
                    ]
                },
                {
                    "command": [
                        "apply Tprf2T'prf.",
                        "VernacExtend",
                        "4c5c7c1f8c7fc32c5d49675708c3f59eceea7a43"
                    ]
                },
                {
                    "command": [
                        "apply expressT2.",
                        "VernacExtend",
                        "f751b5a6c87d52070e5e1eb1994983e5bc680e76"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decideAxioms",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction x as [| a x Hrecx].",
                        "VernacExtend",
                        "bfc5fe4d63cadd785efcb41a065d8dbf6de188be"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "induction Hrecx as [H0| H0].",
                        "VernacExtend",
                        "1f9b4f9cc0cb3638f80ee3bf977cf3356fcde053"
                    ]
                },
                {
                    "command": [
                        "induction (H a).",
                        "VernacExtend",
                        "8761a9a5c2f83fdbd13d1a0d2020f716856230d9"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H2 as [H2| H2].",
                        "VernacExtend",
                        "2237c6da2b81b951afe769bc727b63b267d6e7b3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2.",
                        "VernacExtend",
                        "c204509e5e85cb1396c425732210ff127ac38a7b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, H0).",
                        "VernacExtend",
                        "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (H0, H1).",
                        "VernacExtend",
                        "bf205e87bc39521a75ba7f60076f211d70aac7cf"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "T'prf2Tprf",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "assert (freeVarPA : forall x : Formulas, (forall g : fol.Formula LNT, In g x -> mem (fol.Formula LNT) PA g) -> forall v : nat, In v (freeVarListFormula LNT x) -> False).",
                        "VernacExtend",
                        "1f5cf1bf010ab4a12bccc2fc32713f147126f833"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction x as [| a x Hrecx].",
                        "VernacExtend",
                        "bfc5fe4d63cadd785efcb41a065d8dbf6de188be"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "induction (in_app_or _ _ _ H0).",
                        "VernacExtend",
                        "948639aa589e40c1f757e2be96f8ccda75f6eafa"
                    ]
                },
                {
                    "command": [
                        "apply (closedPA v).",
                        "VernacExtend",
                        "c60a1f165de9168f7436804f659d0e8aed8d462a"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, H); induction H as (x0, H).",
                        "VernacExtend",
                        "0dd71bc2b57f605f3b0f66d45601920fe1c2d974"
                    ]
                },
                {
                    "command": [
                        "unfold SysPrf, folProof.SysPrf in |- *.",
                        "VernacExtend",
                        "ca533a7ee7c26b8e1677f4228699bb5a89b3afc7"
                    ]
                },
                {
                    "command": [
                        "assert (exists Axm : fol.Formulas LNT, (forall v : nat, In v (freeVarListFormula _ Axm) -> In v (freeVarListFormula _ x)) /\\ ex (fun _ : Prf LNT Axm (LNN2LNT_formula f) => forall g : fol.Formula LNT, In g Axm -> mem (fol.Formula LNT) T g)).",
                        "VernacExtend",
                        "d879ab4361f27689740010f4692396e5dfc837f3"
                    ]
                },
                {
                    "command": [
                        "induction x0 as [A| Axm1 Axm2 A B x0_1 Hrecx0_1 x0_0 Hrecx0_0| Axm A v n x0 Hrecx0| A B| A B C| A B| A v t| A v n| A B v| | | | R| f]; simpl in |- *.",
                        "VernacExtend",
                        "161f41bae403f314fb5f3bbc4ac663f2c69570b1"
                    ]
                },
                {
                    "command": [
                        "assert (mem (fol.Formula LNN) T' A).",
                        "VernacExtend",
                        "574c8610f175cdfa864e987fb833c787e71c3c5e"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "repeat induction H0.",
                        "VernacExtend",
                        "c58bfc31105b7edeb17da8a421022530afd5fc1b"
                    ]
                },
                {
                    "command": [
                        "exists (PA1 :: nil).",
                        "VernacExtend",
                        "3406fc9c642027133fe9ffe88778f25c37d17f7c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (AXM _ PA1).",
                        "VernacExtend",
                        "5b2580c15d8b5d7ba710322ffaab51de7f024922"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "repeat (right; constructor) || left.",
                        "VernacExtend",
                        "694c452e8236347b8bbef72521323823496079fb"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "exists (PA2 :: nil).",
                        "VernacExtend",
                        "3749c92e49d8384f0464fbc68734f4b026f5b4a2"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (AXM _ PA2).",
                        "VernacExtend",
                        "05938aa0531f90f1d89bcf1bade7a439d8377c20"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "repeat (right; constructor) || left.",
                        "VernacExtend",
                        "694c452e8236347b8bbef72521323823496079fb"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "exists (PA3 :: nil).",
                        "VernacExtend",
                        "24879ba17cbc8b64fb7074684160f707216bcb3f"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (AXM _ PA3).",
                        "VernacExtend",
                        "2402fded59b8639668f83918ec7eeae05fadc886"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "repeat (right; constructor) || left.",
                        "VernacExtend",
                        "694c452e8236347b8bbef72521323823496079fb"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "exists (PA4 :: nil).",
                        "VernacExtend",
                        "608ea0ea02d0d216e1aecd002fd5b9c9b3d0f06a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (AXM _ PA4).",
                        "VernacExtend",
                        "bc5eb9e4891c1232a9cffa1aaff0542f1f0dc062"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "repeat (right; constructor) || left.",
                        "VernacExtend",
                        "694c452e8236347b8bbef72521323823496079fb"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "exists (PA5 :: nil).",
                        "VernacExtend",
                        "46f7a578478c0032e587abaca94c4b2b4fd47273"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (AXM _ PA5).",
                        "VernacExtend",
                        "6ab08cfa888ff61ef626d630baface728c5a332f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "repeat (right; constructor) || left.",
                        "VernacExtend",
                        "694c452e8236347b8bbef72521323823496079fb"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "exists (PA6 :: nil).",
                        "VernacExtend",
                        "b51e246791c65da0c4aa512ad2ee03215d3ebc35"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (AXM _ PA6).",
                        "VernacExtend",
                        "8fe6af4428b7ed20e2a54ccadf93a7171bfd44a4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "induction H0 as [H0| H0].",
                        "VernacExtend",
                        "752e399e91dad761644d5649d773ebf9cb5570fe"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "repeat (right; constructor) || left.",
                        "VernacExtend",
                        "694c452e8236347b8bbef72521323823496079fb"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "assert (SysPrf PA (LNN2LNT_formula NN7)).",
                        "VernacExtend",
                        "894aa0d917d4972307b381136272b9b7af7aecda"
                    ]
                },
                {
                    "command": [
                        "apply NN72PA.",
                        "VernacExtend",
                        "4cb1b41feddc3022d8ac8b65983c8675b747cde6"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, H0); induction H0 as (x0, H0).",
                        "VernacExtend",
                        "9d3fcf932e985415dbb37de5d3b5c6c5d469f8de"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (freeVarPA x H0 v H1).",
                        "VernacExtend",
                        "fe6251a3b5c13945bb1f47901c217c9fd22d5e57"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "fold mem.",
                        "VernacExtend",
                        "f08ed3a85d27e29673b5de460481add243e02eaa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (SysPrf PA (LNN2LNT_formula NN8)).",
                        "VernacExtend",
                        "bd79c6fd802c57a0b261a8334b1275ed244308c2"
                    ]
                },
                {
                    "command": [
                        "apply NN82PA.",
                        "VernacExtend",
                        "309ef9df06d0f1bfd328ef2c2fbe79d6d61015b5"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, H0); induction H0 as (x0, H0).",
                        "VernacExtend",
                        "9d3fcf932e985415dbb37de5d3b5c6c5d469f8de"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (freeVarPA x H0 v H1).",
                        "VernacExtend",
                        "fe6251a3b5c13945bb1f47901c217c9fd22d5e57"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "fold mem.",
                        "VernacExtend",
                        "f08ed3a85d27e29673b5de460481add243e02eaa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (SysPrf PA (LNN2LNT_formula NN9)).",
                        "VernacExtend",
                        "585bcef9520c201d15cac8a1c3bbc4b773bb38bc"
                    ]
                },
                {
                    "command": [
                        "apply NN92PA.",
                        "VernacExtend",
                        "4793d25438e11b9b22c8b571cc83d20c80ce9998"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, H0); induction H0 as (x0, H0).",
                        "VernacExtend",
                        "9d3fcf932e985415dbb37de5d3b5c6c5d469f8de"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (freeVarPA x H0 v H1).",
                        "VernacExtend",
                        "fe6251a3b5c13945bb1f47901c217c9fd22d5e57"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extendsPA.",
                        "VernacExtend",
                        "2f15eb6b246b653687bf04fe899b39575fe5d5cf"
                    ]
                },
                {
                    "command": [
                        "fold mem.",
                        "VernacExtend",
                        "f08ed3a85d27e29673b5de460481add243e02eaa"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (LNN2LNT_formula x :: nil).",
                        "VernacExtend",
                        "4ba81e248d06a664f1da97e957ec0d309964c2a7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- app_nil_end.",
                        "VernacExtend",
                        "281bc95ebce4f3f8db931310175dcf6eeb5425ef"
                    ]
                },
                {
                    "command": [
                        "apply (LNN2LNT_freeVarFormula1 x).",
                        "VernacExtend",
                        "766d19a9ad3f1e4f0432134b5a2ca676a9dc9175"
                    ]
                },
                {
                    "command": [
                        "exists (AXM _ (LNN2LNT_formula x)).",
                        "VernacExtend",
                        "31b3412c1aa5c17f7e14275c7accc0b8f7f3a168"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H1 as [H1| H1].",
                        "VernacExtend",
                        "755982f3031394b3076eabcf2040a3fc8f4e3364"
                    ]
                },
                {
                    "command": [
                        "unfold mem in H0.",
                        "VernacExtend",
                        "f3c1fadaa32ac54492a8f647af50637ef3969852"
                    ]
                },
                {
                    "command": [
                        "unfold Ensembles.In in H0.",
                        "VernacExtend",
                        "36180c0dc16873a481004ff582b3eb686b57dd34"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H0.",
                        "VernacExtend",
                        "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "elim H1.",
                        "VernacExtend",
                        "2ee512db90fb1d268bb2752d9c0b7a5339eb8a0a"
                    ]
                },
                {
                    "command": [
                        "assert (forall g : fol.Formula LNN, In g Axm1 -> mem (fol.Formula LNN) T' g).",
                        "VernacExtend",
                        "5c66fe4a2aaec9061f067220db021266789ed110"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "assert (forall g : fol.Formula LNN, In g Axm2 -> mem (fol.Formula LNN) T' g).",
                        "VernacExtend",
                        "6cd66ca445b6b5741b3a1614508852723e3f1889"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "induction (Hrecx0_1 H0).",
                        "VernacExtend",
                        "e3d3fc6e5089df8e06a1756718cd39fb43977872"
                    ]
                },
                {
                    "command": [
                        "induction (Hrecx0_0 H1).",
                        "VernacExtend",
                        "0e9e83358eb663b631184c3020f06186dcc4e992"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (H2, H4).",
                        "VernacExtend",
                        "8585b2702b14cc1c98eae44a5d3ebc963eb0b33a"
                    ]
                },
                {
                    "command": [
                        "induction H3 as (H3, H5).",
                        "VernacExtend",
                        "15a63e9335f77a9da4f0e9d0fff3ad19fa6e1f25"
                    ]
                },
                {
                    "command": [
                        "induction H4 as (x1, H4).",
                        "VernacExtend",
                        "5c13b32fdc828ce90f5325bb0b6d0da665b7b1d6"
                    ]
                },
                {
                    "command": [
                        "induction H5 as (x2, H5).",
                        "VernacExtend",
                        "44d47f03695c1990088dc39268b0ab678fea525b"
                    ]
                },
                {
                    "command": [
                        "clear Hrecx0_1 H0 Hrecx0_0 H1.",
                        "VernacExtend",
                        "1d9ade6228676c67963a7d75ec342f7449a6c91e"
                    ]
                },
                {
                    "command": [
                        "exists (x ++ x0).",
                        "VernacExtend",
                        "5b13708635818feb7bb91ff9ca466e9e0681abac"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite freeVarListFormulaApp.",
                        "VernacExtend",
                        "1fefeeec0c4e6fd14fcda9d20e01c990d1b7b098"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (in_app_or _ _ _ H0); auto with datatypes.",
                        "VernacExtend",
                        "6c891e50072a74f3d1587bed06c45625a91b6091"
                    ]
                },
                {
                    "command": [
                        "simpl in x1.",
                        "VernacExtend",
                        "1eba97c1842c620369cee721c1842a38033a9d04"
                    ]
                },
                {
                    "command": [
                        "exists (MP _ _ _ _ _ x1 x2).",
                        "VernacExtend",
                        "5e977eda1625d6d1ec3850494d5e6a7a7b2a5c7a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (in_app_or _ _ _ H0); auto.",
                        "VernacExtend",
                        "340626bce083878e1f5d4f6073ba842e4d36d6ac"
                    ]
                },
                {
                    "command": [
                        "assert (forall g : fol.Formula LNN, In g Axm -> mem (fol.Formula LNN) T' g).",
                        "VernacExtend",
                        "9e3c314a93ca06aebba1c6e5e731f35cebd3cfe6"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (Hrecx0 H0).",
                        "VernacExtend",
                        "a7f83f3033855b00f053cc86c8edcbd616b036cb"
                    ]
                },
                {
                    "command": [
                        "clear Hrecx0 H0.",
                        "VernacExtend",
                        "5d1af69068d9a932c81e9c3a244de7e8d894927c"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (H0, H1).",
                        "VernacExtend",
                        "05afdee601429a43c7c92f397d917f02e50f0ee0"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, H1).",
                        "VernacExtend",
                        "f427b9e7b8ef70407cef25b7baaed1da297db186"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (~ In v (freeVarListFormula LNT x)).",
                        "VernacExtend",
                        "0d59c0fa20f06125681ce3cda984bbce5d579412"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (GEN _ _ _ _ H2 x1).",
                        "VernacExtend",
                        "77a14e023777a1b8a5da9ef3675a951e32019a3a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (IMP1 _ (LNN2LNT_formula A) (LNN2LNT_formula B)).",
                        "VernacExtend",
                        "be3ba42e62e7644eb3296e6872cd098b01433db2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (IMP2 _ (LNN2LNT_formula A) (LNN2LNT_formula B) (LNN2LNT_formula C)).",
                        "VernacExtend",
                        "b30e36a2cddedef7f2dad5c62363078021bf1e48"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (CP _ (LNN2LNT_formula A) (LNN2LNT_formula B)).",
                        "VernacExtend",
                        "c38ac59989cc6cbd7d1b6e034f175096ed35dee5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (SysPrf (Empty_set _) (impH (forallH v (LNN2LNT_formula A)) (LNN2LNT_formula (substituteFormula LNN A v t)))).",
                        "VernacExtend",
                        "9b997280554578d153d43021cc26251b5c178d64"
                    ]
                },
                {
                    "command": [
                        "apply impTrans with (substituteFormula LNT (LNN2LNT_formula A) v (LNN2LNT_term t)).",
                        "VernacExtend",
                        "708b37642e3979f3416d146b3c8d141ff497bc3d"
                    ]
                },
                {
                    "command": [
                        "apply impI.",
                        "VernacExtend",
                        "60955e24356265eb0e9ef6255e08bbd113551585"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; right; constructor.",
                        "VernacExtend",
                        "fafb5c153ffd727407f5c87d3444711b114dac59"
                    ]
                },
                {
                    "command": [
                        "apply iffE2.",
                        "VernacExtend",
                        "634f5292bea916e4459588d212267ab3a9b42941"
                    ]
                },
                {
                    "command": [
                        "apply LNN2LNT_subFormula.",
                        "VernacExtend",
                        "81fd85649f951d638ad93188de3f991157b5bc89"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, H0).",
                        "VernacExtend",
                        "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, H0).",
                        "VernacExtend",
                        "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
                    ]
                },
                {
                    "command": [
                        "induction x as [| a x Hrecx].",
                        "VernacExtend",
                        "bfc5fe4d63cadd785efcb41a065d8dbf6de188be"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "assert (mem (fol.Formula LNT) (Empty_set (fol.Formula LNT)) a).",
                        "VernacExtend",
                        "bbe4d774aae23952dff1ac94c03d24a2e10bdbf3"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "induction H1.",
                        "VernacExtend",
                        "2e7754b8626e84404f5bc663332beef2a7c01b81"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (~ In v (freeVarFormula LNT (LNN2LNT_formula A))).",
                        "VernacExtend",
                        "22a5ed44ff12c52904637563d592deb2c3bb0c7d"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros; apply n.",
                        "VernacExtend",
                        "1bb00d990363a9f879030fafd27e43e3f8ed1044"
                    ]
                },
                {
                    "command": [
                        "apply LNN2LNT_freeVarFormula1.",
                        "VernacExtend",
                        "ad31639606d49165b89543678ede68fe6784f76d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "exists (FA2 _ (LNN2LNT_formula A) v H0).",
                        "VernacExtend",
                        "437fc9bacd2858f0ce320c13114c627f0d35793c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (FA3 _ (LNN2LNT_formula A) (LNN2LNT_formula B) v).",
                        "VernacExtend",
                        "9a3d17132d21628d3e40ab1363a80ffd5b8f1263"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (EQ1 LNT).",
                        "VernacExtend",
                        "f3a5a5804287b4f3d0ef25ae2bf7734c1a685647"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (EQ2 LNT).",
                        "VernacExtend",
                        "a7f2cc313bc5542709619e25dbd22a61a6cd17fc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=Formula)).",
                        "VernacExtend",
                        "3b38b5e114c133c8be5629e529cc4807867b4594"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (EQ3 LNT).",
                        "VernacExtend",
                        "9482a5245d578e9c27bc4c366fb9be5596b13d2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "assert (SysPrf (Empty_set Formula) (LNN2LNT_formula (AxmEq4 LNN R))).",
                        "VernacExtend",
                        "71cfc975d80464e390ddd72538e274648ef533df"
                    ]
                },
                {
                    "command": [
                        "apply translateProof with (Empty_set (fol.Formula LNN)).",
                        "VernacExtend",
                        "88e2ebea3cabee6397b45888fd5607a5e8d96391"
                    ]
                },
                {
                    "command": [
                        "unfold ClosedSystem in |- *.",
                        "VernacExtend",
                        "b64861ad193e303f5998f4ce049538afc4ae451a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=fol.Formula LNN)).",
                        "VernacExtend",
                        "d27ecff4ff261d061ec9446699a4cfb55f7baf61"
                    ]
                },
                {
                    "command": [
                        "exists (EQ4 LNN R).",
                        "VernacExtend",
                        "2044551e2954a9f0237177669c6ea26dfc193211"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, H0).",
                        "VernacExtend",
                        "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, H0).",
                        "VernacExtend",
                        "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (In_freeVarListFormulaE _ _ _ H1).",
                        "VernacExtend",
                        "3d8a02a358a7bda400c804579b5316b8c85dc4d6"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (H2, H3).",
                        "VernacExtend",
                        "0d861cb6d88dcee96d00a46e953498c0d889d4f1"
                    ]
                },
                {
                    "command": [
                        "assert (mem (fol.Formula LNT) (Empty_set Formula) x1).",
                        "VernacExtend",
                        "8829e5de7ad41da33665f7a5d5e886bd7466037e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (mem (fol.Formula LNT) (Empty_set Formula) g).",
                        "VernacExtend",
                        "454f343fd9e93118cb052dd56a77d721bbae4265"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "assert (SysPrf (Empty_set Formula) (LNN2LNT_formula (AxmEq5 LNN f))).",
                        "VernacExtend",
                        "c6f9ec430e750793611d2e2dc396b67da33814b9"
                    ]
                },
                {
                    "command": [
                        "apply translateProof with (Empty_set (fol.Formula LNN)).",
                        "VernacExtend",
                        "88e2ebea3cabee6397b45888fd5607a5e8d96391"
                    ]
                },
                {
                    "command": [
                        "unfold ClosedSystem in |- *.",
                        "VernacExtend",
                        "b64861ad193e303f5998f4ce049538afc4ae451a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H0.",
                        "VernacExtend",
                        "f7088b4eda47862769d27dcb01ed8193ca5ffe6c"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=fol.Formula LNN)).",
                        "VernacExtend",
                        "d27ecff4ff261d061ec9446699a4cfb55f7baf61"
                    ]
                },
                {
                    "command": [
                        "exists (EQ5 LNN f).",
                        "VernacExtend",
                        "d167c1c9714c96125820521fc77d1dd74be64fab"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, H0).",
                        "VernacExtend",
                        "edb66f17973b0c9c2760dc29c33bec5aef84fec7"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, H0).",
                        "VernacExtend",
                        "dbb2e2f5e9d42e0cc8d36737316e829c93cb610c"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (In_freeVarListFormulaE _ _ _ H1).",
                        "VernacExtend",
                        "3d8a02a358a7bda400c804579b5316b8c85dc4d6"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (H2, H3).",
                        "VernacExtend",
                        "0d861cb6d88dcee96d00a46e953498c0d889d4f1"
                    ]
                },
                {
                    "command": [
                        "assert (mem (fol.Formula LNT) (Empty_set Formula) x1).",
                        "VernacExtend",
                        "8829e5de7ad41da33665f7a5d5e886bd7466037e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction H4.",
                        "VernacExtend",
                        "0794cfb373907d93c39b7ee82cb033b7d935333f"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (mem (fol.Formula LNT) (Empty_set Formula) g).",
                        "VernacExtend",
                        "454f343fd9e93118cb052dd56a77d721bbae4265"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction H2.",
                        "VernacExtend",
                        "951bbbec963ad1faf7953248242dfa5ae7a3bc03"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x1, H0).",
                        "VernacExtend",
                        "d854a0e5d3ecce8f1501fb9b83864fca108dae5f"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (H0, H1).",
                        "VernacExtend",
                        "bf205e87bc39521a75ba7f60076f211d70aac7cf"
                    ]
                },
                {
                    "command": [
                        "exists x1.",
                        "VernacExtend",
                        "41149f92e5f2a0109418d3e02971541f67fbd3df"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}