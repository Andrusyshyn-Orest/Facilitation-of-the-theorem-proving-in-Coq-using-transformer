{
    "filename": "NN.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Ensembles.",
            "VernacRequire",
            "63f80d6be2b42bad6c3542a86c69acf401d90a4a"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import folProp.",
            "VernacRequire",
            "9a8c9e707f6075129a70023b069f5369c9a9b295"
        ],
        [
            "Require Import subAll.",
            "VernacRequire",
            "3bc44800880fcbfa701035610cc9224d4b5ca16f"
        ],
        [
            "Require Import folLogic3.",
            "VernacRequire",
            "5313da917cbd8284650f06a63d4e78e11cf70419"
        ],
        [
            "Require Export Languages.",
            "VernacRequire",
            "91a4d3c3df8dcbac8b4a165d5cf26cad2555b98a"
        ],
        [
            "Require Export LNN.",
            "VernacRequire",
            "d24263917ff3861862ed9150dea8a85684a85b3b"
        ],
        [
            "Section NN.",
            "VernacBeginSection",
            "28e60ad7764441e3c3692dd17eee157530722eab"
        ],
        [
            "Definition NN1 := forallH 0 (notH (equal (Succ (var 0)) Zero)).",
            "VernacDefinition",
            "03e63142cd30165fc51db3a650f7611aee07ca59"
        ],
        [
            "Definition NN2 := forallH 1 (forallH 0 (impH (equal (Succ (var 0)) (Succ (var 1))) (equal (var 0) (var 1)))).",
            "VernacDefinition",
            "56df16a95ed79af017b7017b063244ced8f3d18a"
        ],
        [
            "Definition NN3 := forallH 0 (equal (Plus (var 0) Zero) (var 0)).",
            "VernacDefinition",
            "1b179da23f5a2442c5b8928ad3344f0664c3ffac"
        ],
        [
            "Definition NN4 := forallH 1 (forallH 0 (equal (Plus (var 0) (Succ (var 1))) (Succ (Plus (var 0) (var 1))))).",
            "VernacDefinition",
            "a31e49f3c7a6968f28c73ac1a7560b2c29b0105e"
        ],
        [
            "Definition NN5 := forallH 0 (equal (Times (var 0) Zero) Zero).",
            "VernacDefinition",
            "a79f4352944b31dcd2904b3b06bcc5354b935bb2"
        ],
        [
            "Definition NN6 := forallH 1 (forallH 0 (equal (Times (var 0) (Succ (var 1))) (Plus (Times (var 0) (var 1)) (var 0)))).",
            "VernacDefinition",
            "570bc6d65b974ad8734274174cf72c23db8a6d77"
        ],
        [
            "Definition NN7 := forallH 0 (notH (LT (var 0) Zero)).",
            "VernacDefinition",
            "53bfa8e74a4e188c6bde2e73111c373ce1e1e7cc"
        ],
        [
            "Definition NN8 := forallH 1 (forallH 0 (impH (LT (var 0) (Succ (var 1))) (orH (LT (var 0) (var 1)) (equal (var 0) (var 1))))).",
            "VernacDefinition",
            "e18df588dc7a85eb5a1ab287b6421a0b952aa53d"
        ],
        [
            "Definition NN9 := forallH 1 (forallH 0 (orH (LT (var 0) (var 1)) (orH (equal (var 0) (var 1)) (LT (var 1) (var 0))))).",
            "VernacDefinition",
            "c1a2ec65e90d307321c9e370f8e18f080798bda4"
        ],
        [
            "Definition NNStar := forallH 1 (forallH 0 (impH (orH (LT (var 0) (var 1)) (equal (var 0) (var 1))) (LT (var 0) (Succ (var 1))))).",
            "VernacDefinition",
            "06cac010877c32c66da034b8dadf9c9b9f5732c2"
        ],
        [
            "Definition NN := Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Ensembles.Add _ (Singleton _ NN1) NN2) NN3) NN4) NN5) NN6) NN7) NN8) NN9.",
            "VernacDefinition",
            "73a533393eb18cc1cbcfa2c08d403df46b1add5f"
        ],
        [
            "Lemma closedNN1 : ClosedSystem LNN NN.",
            "VernacStartTheoremProof",
            "e52344b97d6fd3f97bb05ddf3051ed514b611ede"
        ],
        [
            "unfold ClosedSystem in |- *.",
            "VernacExtend",
            "b64861ad193e303f5998f4ce049538afc4ae451a"
        ],
        [
            "unfold NN in |- *.",
            "VernacExtend",
            "b3321fa528fff158bd16e883ceaca7c945dedc4a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "repeat induction H; auto.",
            "VernacExtend",
            "deaf4b570d5bbc97da1d6b5cb701e2fe1430d2fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma closedNN : forall v : nat, ~ In_freeVarSys LNN v NN.",
            "VernacStartTheoremProof",
            "f8c5936478a9fb58af47e4280e24c50417794619"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "unfold In_freeVarSys in H.",
            "VernacExtend",
            "bbb5a97381c9bee37ae4371e1199b1f49fad4c8b"
        ],
        [
            "induction H as (x, H).",
            "VernacExtend",
            "d232074075f4e7274913cc4565e332b8e4fccd19"
        ],
        [
            "elim closedNN1 with v x; tauto.",
            "VernacExtend",
            "bb0a9f31cf42de2ccfeb1765b8802a94320ff8c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn1 : forall a : Term, SysPrf NN (notH (equal (Succ a) Zero)).",
            "VernacStartTheoremProof",
            "6735f8069a92627f1d851f069f5d9fa6028fd9e0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (notH (equal (Succ a) Zero)) with (substituteFormula LNN (notH (equal (Succ (var 0)) Zero)) 0 a).",
            "VernacExtend",
            "c005e940999eb3bb95a7a9ba9c8f6ae8c4f23953"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn2 : forall a b : Term, SysPrf NN (impH (equal (Succ a) (Succ b)) (equal a b)).",
            "VernacStartTheoremProof",
            "ddd9ded770e56ff7cc0cd0db34f5c4046d10a312"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (impH (equal (Succ a) (Succ b)) (equal a b)) with (subAllFormula LNN (impH (equal (Succ (var 0)) (Succ (var 1))) (equal (var 0) (var 1))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "db56b691645b3757c08ff8d230b7dd5a8912fe0b"
        ],
        [
            "apply (subAllCloseFrom LNN).",
            "VernacExtend",
            "07cc99780383ba1f34973b22b7ec19d5c6ece183"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn3 : forall a : Term, SysPrf NN (equal (Plus a Zero) a).",
            "VernacStartTheoremProof",
            "1dd0761a6f5df34a9f5cd399157c8c0dd9ba72b9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (equal (Plus a Zero) a) with (substituteFormula LNN (equal (Plus (var 0) Zero) (var 0)) 0 a).",
            "VernacExtend",
            "d3f0beedb29590cc96b7dd34757ba5d514f62565"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn4 : forall a b : Term, SysPrf NN (equal (Plus a (Succ b)) (Succ (Plus a b))).",
            "VernacStartTheoremProof",
            "97af179dedb8a4769c65990f711ae854101a7d5e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (equal (Plus a (Succ b)) (Succ (Plus a b))) with (subAllFormula LNN (equal (Plus (var 0) (Succ (var 1))) (Succ (Plus (var 0) (var 1)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "a7ec1558bc97b336089e13f1780a5a746e1a2e13"
        ],
        [
            "apply (subAllCloseFrom LNN).",
            "VernacExtend",
            "07cc99780383ba1f34973b22b7ec19d5c6ece183"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn5 : forall a : Term, SysPrf NN (equal (Times a Zero) Zero).",
            "VernacStartTheoremProof",
            "a283cd9cba49620f386f37ea21b23f507c77ce84"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (equal (Times a Zero) Zero) with (substituteFormula LNN (equal (Times (var 0) Zero) Zero) 0 a).",
            "VernacExtend",
            "24122e69b388bb7b4ec6d4d1b138d54f60f182f1"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn6 : forall a b : Term, SysPrf NN (equal (Times a (Succ b)) (Plus (Times a b) a)).",
            "VernacStartTheoremProof",
            "a544f1710d699bb20495e4e413f64e588a819962"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (equal (Times a (Succ b)) (Plus (Times a b) a)) with (subAllFormula LNN (equal (Times (var 0) (Succ (var 1))) (Plus (Times (var 0) (var 1)) (var 0))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "74795d4b8a30646b63d58c27507489aca2da282b"
        ],
        [
            "apply (subAllCloseFrom LNN).",
            "VernacExtend",
            "07cc99780383ba1f34973b22b7ec19d5c6ece183"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn7 : forall a : Term, SysPrf NN (notH (LT a Zero)).",
            "VernacStartTheoremProof",
            "2339e4d0f166e3ee07707ab34cbe82dd4fe7b081"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (notH (LT a Zero)) with (substituteFormula LNN (notH (LT (var 0) Zero)) 0 a).",
            "VernacExtend",
            "b3f558390cb888eb470280a7bbbda89c1c36ede2"
        ],
        [
            "apply forallE.",
            "VernacExtend",
            "7f071a14071192583c11d473fd6e292e02eb268d"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn8 : forall a b : Term, SysPrf NN (impH (LT a (Succ b)) (orH (LT a b) (equal a b))).",
            "VernacStartTheoremProof",
            "a96e3b3cfc0e1d738f64cab0a372a65e3d41eed5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (impH (LT a (Succ b)) (orH (LT a b) (equal a b))) with (subAllFormula LNN (impH (LT (var 0) (Succ (var 1))) (orH (LT (var 0) (var 1)) (equal (var 0) (var 1)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "ccb088ae8c47f68e7726ef6d23cfb4add23f63eb"
        ],
        [
            "apply (subAllCloseFrom LNN).",
            "VernacExtend",
            "07cc99780383ba1f34973b22b7ec19d5c6ece183"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nn9 : forall a b : Term, SysPrf NN (orH (LT a b) (orH (equal a b) (LT b a))).",
            "VernacStartTheoremProof",
            "298a7d71256fc45c6f1a78f3b317b3d759e36ca1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
            "VernacExtend",
            "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
        ],
        [
            "replace (orH (LT a b) (orH (equal a b) (LT b a))) with (subAllFormula LNN (orH (LT (var 0) (var 1)) (orH (equal (var 0) (var 1)) (LT (var 1) (var 0)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
            "VernacExtend",
            "3836b9c8333f28d6d6154551e561a7c283a9281a"
        ],
        [
            "apply (subAllCloseFrom LNN).",
            "VernacExtend",
            "07cc99780383ba1f34973b22b7ec19d5c6ece183"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Axm; repeat (try right; constructor) || left.",
            "VernacExtend",
            "0f107d851676921f89d623a9947852c72438b8ae"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec 2 0).",
            "VernacExtend",
            "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_dec 2 1).",
            "VernacExtend",
            "0a8df519dc4db61f97c45ead93277fc13085e745"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NN.",
            "VernacEndSegment",
            "3b7de483c8b0547b6d933f75b74a66177bd3e935"
        ]
    ],
    "proofs": [
        {
            "name": "closedNN1",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "unfold ClosedSystem in |- *.",
                        "VernacExtend",
                        "b64861ad193e303f5998f4ce049538afc4ae451a"
                    ]
                },
                {
                    "command": [
                        "unfold NN in |- *.",
                        "VernacExtend",
                        "b3321fa528fff158bd16e883ceaca7c945dedc4a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "repeat induction H; auto.",
                        "VernacExtend",
                        "deaf4b570d5bbc97da1d6b5cb701e2fe1430d2fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "closedNN",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "unfold In_freeVarSys in H.",
                        "VernacExtend",
                        "bbb5a97381c9bee37ae4371e1199b1f49fad4c8b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, H).",
                        "VernacExtend",
                        "d232074075f4e7274913cc4565e332b8e4fccd19"
                    ]
                },
                {
                    "command": [
                        "elim closedNN1 with v x; tauto.",
                        "VernacExtend",
                        "bb0a9f31cf42de2ccfeb1765b8802a94320ff8c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn1",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (notH (equal (Succ a) Zero)) with (substituteFormula LNN (notH (equal (Succ (var 0)) Zero)) 0 a).",
                        "VernacExtend",
                        "c005e940999eb3bb95a7a9ba9c8f6ae8c4f23953"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn2",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (impH (equal (Succ a) (Succ b)) (equal a b)) with (subAllFormula LNN (impH (equal (Succ (var 0)) (Succ (var 1))) (equal (var 0) (var 1))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "db56b691645b3757c08ff8d230b7dd5a8912fe0b"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNN).",
                        "VernacExtend",
                        "07cc99780383ba1f34973b22b7ec19d5c6ece183"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn3",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Plus a Zero) a) with (substituteFormula LNN (equal (Plus (var 0) Zero) (var 0)) 0 a).",
                        "VernacExtend",
                        "d3f0beedb29590cc96b7dd34757ba5d514f62565"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn4",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Plus a (Succ b)) (Succ (Plus a b))) with (subAllFormula LNN (equal (Plus (var 0) (Succ (var 1))) (Succ (Plus (var 0) (var 1)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "a7ec1558bc97b336089e13f1780a5a746e1a2e13"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNN).",
                        "VernacExtend",
                        "07cc99780383ba1f34973b22b7ec19d5c6ece183"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn5",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Times a Zero) Zero) with (substituteFormula LNN (equal (Times (var 0) Zero) Zero) 0 a).",
                        "VernacExtend",
                        "24122e69b388bb7b4ec6d4d1b138d54f60f182f1"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn6",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (equal (Times a (Succ b)) (Plus (Times a b) a)) with (subAllFormula LNN (equal (Times (var 0) (Succ (var 1))) (Plus (Times (var 0) (var 1)) (var 0))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "74795d4b8a30646b63d58c27507489aca2da282b"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNN).",
                        "VernacExtend",
                        "07cc99780383ba1f34973b22b7ec19d5c6ece183"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn7",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (notH (LT a Zero)) with (substituteFormula LNN (notH (LT (var 0) Zero)) 0 a).",
                        "VernacExtend",
                        "b3f558390cb888eb470280a7bbbda89c1c36ede2"
                    ]
                },
                {
                    "command": [
                        "apply forallE.",
                        "VernacExtend",
                        "7f071a14071192583c11d473fd6e292e02eb268d"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn8",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (impH (LT a (Succ b)) (orH (LT a b) (equal a b))) with (subAllFormula LNN (impH (LT (var 0) (Succ (var 1))) (orH (LT (var 0) (var 1)) (equal (var 0) (var 1)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "ccb088ae8c47f68e7726ef6d23cfb4add23f63eb"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNN).",
                        "VernacExtend",
                        "07cc99780383ba1f34973b22b7ec19d5c6ece183"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nn9",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (m := fun x : nat => match x with | O => a | S _ => b end) in *.",
                        "VernacExtend",
                        "c478cf49fa4ad2ac94788a8fd2d20cbf353aabeb"
                    ]
                },
                {
                    "command": [
                        "replace (orH (LT a b) (orH (equal a b) (LT b a))) with (subAllFormula LNN (orH (LT (var 0) (var 1)) (orH (equal (var 0) (var 1)) (LT (var 1) (var 0)))) (fun x : nat => match le_lt_dec 2 x with | left _ => var x | right _ => m x end)).",
                        "VernacExtend",
                        "3836b9c8333f28d6d6154551e561a7c283a9281a"
                    ]
                },
                {
                    "command": [
                        "apply (subAllCloseFrom LNN).",
                        "VernacExtend",
                        "07cc99780383ba1f34973b22b7ec19d5c6ece183"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Axm; repeat (try right; constructor) || left.",
                        "VernacExtend",
                        "0f107d851676921f89d623a9947852c72438b8ae"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 0).",
                        "VernacExtend",
                        "7f9db7f3386314b5b89d32e4cc0d6be45e2d845d"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec 2 1).",
                        "VernacExtend",
                        "0a8df519dc4db61f97c45ead93277fc13085e745"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}