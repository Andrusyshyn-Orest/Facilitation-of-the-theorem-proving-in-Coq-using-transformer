{
    "filename": "cPair.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import extEqualNat.",
            "VernacRequire",
            "b54dcb28a918e1b7add174b81952c2b30a6e435b"
        ],
        [
            "Require Import primRec.",
            "VernacRequire",
            "75a83dde535ddae28126e82cc7ff15f05b8e505b"
        ],
        [
            "Require Vector.",
            "VernacRequire",
            "145bcbe9535700f6fddf277a7fc43bb4df45a9f9"
        ],
        [
            "Require Import Div2.",
            "VernacRequire",
            "b85d4c50c97b3f286ca435eeaa679d97ebbe5cfa"
        ],
        [
            "Definition sumToN (n : nat) := nat_rec (fun _ => nat) 0 (fun x y : nat => S x + y) n.",
            "VernacDefinition",
            "097e4508783b5c26e54cb16d052a9fe097ff54e0"
        ],
        [
            "Lemma sumToN1 : forall n : nat, n <= sumToN n.",
            "VernacStartTheoremProof",
            "d217f58fa95c44bc9932f91f692494d98446e73c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumToN2 : forall b a : nat, a <= b -> sumToN a <= sumToN b.",
            "VernacStartTheoremProof",
            "cbdce96fd00f1c5edabec26ff31f21667963d4c3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction b as [| b Hrecb]; intros.",
            "VernacExtend",
            "f3c2c1a4d24b629f834a9f02368eaff033b831aa"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- (le_n_O_eq _ H).",
            "VernacExtend",
            "d0907fea26f2178c83d4cd8e28931c247899ebd5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_or_eq _ _ H).",
            "VernacExtend",
            "c0c7392f8f9e8372d13c2d509df756df62a4de50"
        ],
        [
            "apply le_trans with (sumToN b).",
            "VernacExtend",
            "83d819c6d25b41357eeb86690b98aaf1e516bd7a"
        ],
        [
            "apply Hrecb.",
            "VernacExtend",
            "80670c41dde2e82ba232122d512977ca4333ade0"
        ],
        [
            "apply lt_n_Sm_le.",
            "VernacExtend",
            "354c1d072708776c26f2aab2afa0945822d0815b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply le_S.",
            "VernacExtend",
            "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumToNIsPR : isPR 1 sumToN.",
            "VernacStartTheoremProof",
            "f6d18a877b13c849cefe87d27b2895038d9c91ff"
        ],
        [
            "unfold sumToN in |- *.",
            "VernacExtend",
            "df9813dcff7bc17efae58aca88e3e472d30f24b5"
        ],
        [
            "apply indIsPR with (f := fun x y : nat => S x + y).",
            "VernacExtend",
            "63e5b49c1f8fc09999730c2764bcf73070a37bd6"
        ],
        [
            "apply compose2_2IsPR with (f := fun x y : nat => S x) (g := fun x y : nat => y) (h := plus).",
            "VernacExtend",
            "c2786e46b181b4c456c98724a809f7c8e8394e7b"
        ],
        [
            "apply filter10IsPR.",
            "VernacExtend",
            "a511891d7a43751c68939783b674e14f242f8594"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "apply pi2_2IsPR.",
            "VernacExtend",
            "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
        ],
        [
            "apply plusIsPR.",
            "VernacExtend",
            "3b0a74ba0921212c33f63b79cd048faf8df5a016"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cPair (a b : nat) := a + sumToN (a + b).",
            "VernacDefinition",
            "39e81b9cbf97f473d5a5c7fd50441ef01e1883e1"
        ],
        [
            "Lemma cPairIsPR : isPR 2 cPair.",
            "VernacStartTheoremProof",
            "32a5b39f5cd2dac55c73eab9ebfbae790e8fb244"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "apply compose2_2IsPR with (f := fun x y : nat => x) (g := fun x y : nat => sumToN (x + y)) (h := plus).",
            "VernacExtend",
            "1eb2003b8e40883672ab4715cacea23cf4ef985f"
        ],
        [
            "apply pi1_2IsPR.",
            "VernacExtend",
            "de83e3a673d46ec194b97a67a98b94cf405137bf"
        ],
        [
            "apply compose2_1IsPR.",
            "VernacExtend",
            "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
        ],
        [
            "apply plusIsPR.",
            "VernacExtend",
            "3b0a74ba0921212c33f63b79cd048faf8df5a016"
        ],
        [
            "apply sumToNIsPR.",
            "VernacExtend",
            "18d4487529ed26fc4a102796d692e818f64dd984"
        ],
        [
            "apply plusIsPR.",
            "VernacExtend",
            "3b0a74ba0921212c33f63b79cd048faf8df5a016"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section CPair_Injectivity.",
            "VernacBeginSection",
            "2460a1a5aafe2929416879bb4fee2a01d192c749"
        ],
        [
            "Remark cPairInjHelp : forall a b c d : nat, cPair a b = cPair c d -> a + b = c + d.",
            "VernacStartTheoremProof",
            "5e211fb29b16c5318d1286bbcf75e52a033853f6"
        ],
        [
            "assert (forall a b : nat, a < b -> a + sumToN a < sumToN b).",
            "VernacExtend",
            "61d5ba120a8d5dd5d5232cf151bd43dee17bd85a"
        ],
        [
            "simple induction b.",
            "VernacExtend",
            "aaf6cf93d76e209e75d07a1a5a9329a3219b969c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (lt_n_O _ H).",
            "VernacExtend",
            "b93451b1a30fa3f24613ad7b0441907b3427a80f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (a <= n).",
            "VernacExtend",
            "8c00239f042c3630303d63ed50f622db7e852c21"
        ],
        [
            "apply lt_n_Sm_le.",
            "VernacExtend",
            "354c1d072708776c26f2aab2afa0945822d0815b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction (le_lt_or_eq a n H1).",
            "VernacExtend",
            "9dbb7bee14bfbc2aa06dfdb20830766ca8b52717"
        ],
        [
            "apply lt_trans with (sumToN n).",
            "VernacExtend",
            "9018c337aa85b8357b76bab663454401a5a55bcf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "assert (forall a b c d : nat, a <= c -> b <= d -> a + sumToN c = b + sumToN d -> c = d).",
            "VernacExtend",
            "be4d5d1daefc21bee8732eee86814681be0d80c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (le_or_lt c d).",
            "VernacExtend",
            "7c4c1216c0c34a95cae1080ee7aefd9901858680"
        ],
        [
            "induction (le_lt_or_eq _ _ H3).",
            "VernacExtend",
            "fd942c98ddf533b8e123f32d9363529f5ba7633d"
        ],
        [
            "assert (a + sumToN c < sumToN d).",
            "VernacExtend",
            "b8a4f8ded2e993e743b8ed3d5cc743e45771e351"
        ],
        [
            "apply le_lt_trans with (c + sumToN c).",
            "VernacExtend",
            "22dca13816b3883cbd504b78214230bbcb64d1dd"
        ],
        [
            "apply plus_le_compat_r.",
            "VernacExtend",
            "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H2 in H5.",
            "VernacExtend",
            "62bf9fbd634770cf7f52af2924d8f61336c6b57a"
        ],
        [
            "elim (lt_not_le _ _ H5).",
            "VernacExtend",
            "658803789689be3095c22ae04f08ee433e82c005"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (b + sumToN d < sumToN c).",
            "VernacExtend",
            "c77169ab306b018abfd2d5d9cf4fe5dd4b32c4c9"
        ],
        [
            "apply le_lt_trans with (d + sumToN d).",
            "VernacExtend",
            "49833e7b3ca08f98fa8e759226d4d827dc510f90"
        ],
        [
            "apply plus_le_compat_r.",
            "VernacExtend",
            "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite <- H2 in H4.",
            "VernacExtend",
            "300aa66a7b72cfd41251520b6df0dfe827ca8a0d"
        ],
        [
            "elim (lt_not_le _ _ H4).",
            "VernacExtend",
            "c936740508ebb2c1ac9085fadf6592d79b3573c7"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply H0.",
            "VernacExtend",
            "fdf6443e4e58cab6382db9111187a5f78f51e8f6"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairInj1 : forall a b c d : nat, cPair a b = cPair c d -> a = c.",
            "VernacStartTheoremProof",
            "1b34d3155ee3436339e54dbac7ff6a1ba08d39be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (a + b = c + d).",
            "VernacExtend",
            "c9aa9ce39c0bedc612a5f385ec8db0a490525df9"
        ],
        [
            "apply cPairInjHelp.",
            "VernacExtend",
            "bab9f8ea2bdb4cdd4917279ed7a06f783a4dea0f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "eapply plus_reg_l.",
            "VernacExtend",
            "2715600bfa8522005ab4597ed206f3e8725eed02"
        ],
        [
            "unfold cPair in H.",
            "VernacExtend",
            "d3d747d09c1a0d9137e0917914dc078ca90af21b"
        ],
        [
            "rewrite (plus_comm a) in H.",
            "VernacExtend",
            "e99360b4eeb59d1df2b018c92e37d52946c2b6d1"
        ],
        [
            "rewrite (plus_comm c) in H.",
            "VernacExtend",
            "f1c2b0fe7e7b27080ee56842b6c5010c86fabaa2"
        ],
        [
            "rewrite H0 in H.",
            "VernacExtend",
            "7452e3cc0dd69f3f801875694ef5fef26bb0a630"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairInj2 : forall a b c d : nat, cPair a b = cPair c d -> b = d.",
            "VernacStartTheoremProof",
            "adc4d742a82d6a049769f2e0b2c08959888e3851"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (a + b = c + d).",
            "VernacExtend",
            "c9aa9ce39c0bedc612a5f385ec8db0a490525df9"
        ],
        [
            "apply cPairInjHelp.",
            "VernacExtend",
            "bab9f8ea2bdb4cdd4917279ed7a06f783a4dea0f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (a = c).",
            "VernacExtend",
            "20ebf4d959b2413f066dd47415bea4387278791b"
        ],
        [
            "eapply cPairInj1.",
            "VernacExtend",
            "262e1daf4eaf0fb3221dfc5a198c6499be7ec520"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply plus_reg_l.",
            "VernacExtend",
            "2715600bfa8522005ab4597ed206f3e8725eed02"
        ],
        [
            "rewrite H1 in H0.",
            "VernacExtend",
            "4421ff2cd84dca8f3db1b9c68d58f4e168d6194d"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CPair_Injectivity.",
            "VernacEndSegment",
            "5bef33e7a1de199736ab21f78b83d3b83d90c025"
        ],
        [
            "Section CPair_projections.",
            "VernacBeginSection",
            "4400075c8dde1472e62e0fd96ffbb6af54d1a100"
        ],
        [
            "Let searchXY (a : nat) := boundedSearch (fun a y : nat => ltBool a (sumToN (S y))) a.",
            "VernacDefinition",
            "ba4d1b7158736a9158eade1abded146386b89a16"
        ],
        [
            "Definition cPairPi1 (a : nat) := a - sumToN (searchXY a).",
            "VernacDefinition",
            "92c3d41508af6c1a51fa0900fad14f9cf7eec0dc"
        ],
        [
            "Definition cPairPi2 (a : nat) := searchXY a - cPairPi1 a.",
            "VernacDefinition",
            "07d7873c3f9726d3c2a92353cee222dd9c64bf86"
        ],
        [
            "Lemma cPairProjectionsHelp : forall a b : nat, b < sumToN (S a) -> sumToN a <= b -> searchXY b = a.",
            "VernacStartTheoremProof",
            "6ecbee75460355b148edf745521a17e09e717d57"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold searchXY in |- *.",
            "VernacExtend",
            "f15cf6fc733d5b8dadab567192ae482710467307"
        ],
        [
            "induction (boundedSearch2 (fun b y : nat => ltBool b (sumToN (S y))) b).",
            "VernacExtend",
            "91b91bdbf9dbc930a77acec29a5951d3ca596a1d"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "induction (eq_nat_dec b a).",
            "VernacExtend",
            "5216b6c7f844854eb01befc949ac07040b0c7400"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim (ltBoolFalse b (sumToN (S a))).",
            "VernacExtend",
            "5040088500de8096842effe69fd7fe0c8d95bbd3"
        ],
        [
            "apply (boundedSearch1 (fun b y : nat => ltBool b (sumToN (S y))) b).",
            "VernacExtend",
            "d0c141f90d270150a93eebc05b668abaae88c281"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "induction (nat_total_order _ _ b0).",
            "VernacExtend",
            "86db508768257cac6bedd558e5d614e9c7517f8b"
        ],
        [
            "elim (lt_not_le _ _ H2).",
            "VernacExtend",
            "c6ea4f580d8b332a8a188fb1e317a31a4407a0b1"
        ],
        [
            "apply le_trans with (sumToN a).",
            "VernacExtend",
            "410f543ae21ac188f95afbc3f6e36ab0d84d25e8"
        ],
        [
            "apply sumToN1.",
            "VernacExtend",
            "833d8ae912b25ac3b6f69961d0bb36d00b33a0bd"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "set (c := boundedSearch (fun b y : nat => ltBool b (sumToN (S y))) b) in *.",
            "VernacExtend",
            "4fefb4b786252e46a52f867ad11cee84f9951196"
        ],
        [
            "induction (eq_nat_dec c a).",
            "VernacExtend",
            "7cf8849bb0db5bbacef1ade159cf997b9f6d81ae"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim (ltBoolFalse b (sumToN (S a))).",
            "VernacExtend",
            "5040088500de8096842effe69fd7fe0c8d95bbd3"
        ],
        [
            "apply (boundedSearch1 (fun b y : nat => ltBool b (sumToN (S y))) b).",
            "VernacExtend",
            "d0c141f90d270150a93eebc05b668abaae88c281"
        ],
        [
            "fold c in |- *.",
            "VernacExtend",
            "0fd56bdbcef822e5354b6d7f8c198429ed4a4824"
        ],
        [
            "induction (nat_total_order _ _ b0).",
            "VernacExtend",
            "86db508768257cac6bedd558e5d614e9c7517f8b"
        ],
        [
            "elim (le_not_lt _ _ H0).",
            "VernacExtend",
            "0c1c9d5ce2d5e91c4e62053d3293492f5f9ce4c9"
        ],
        [
            "apply lt_le_trans with (sumToN (S c)).",
            "VernacExtend",
            "bd12807d7eea286feed3cfa413f03b3def438aa8"
        ],
        [
            "apply ltBoolTrue.",
            "VernacExtend",
            "4e307eb107466a0aebbea4e90ed01f0e1cc8f19c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (S c <= a).",
            "VernacExtend",
            "dca1aecdd2f81c3480fa87c764f53cdad882270a"
        ],
        [
            "apply lt_n_Sm_le.",
            "VernacExtend",
            "354c1d072708776c26f2aab2afa0945822d0815b"
        ],
        [
            "apply lt_n_S.",
            "VernacExtend",
            "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply sumToN2.",
            "VernacExtend",
            "8534447e695848ecfa22ba71969dbc6019dbef7a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairProjections : forall a : nat, cPair (cPairPi1 a) (cPairPi2 a) = a.",
            "VernacStartTheoremProof",
            "e2f66dd4ea8ee6a0657273965589cb6bd8c1cdb7"
        ],
        [
            "assert (forall a b : nat, b < sumToN a -> cPair (cPairPi1 b) (cPairPi2 b) = b).",
            "VernacExtend",
            "2e97d4519242164b904686918dcb0dd0f557dd3e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction a as [| a Hreca].",
            "VernacExtend",
            "3b09b8ca995ac21355e2604c0f694eb4a294ab43"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "elim (lt_n_O _ H).",
            "VernacExtend",
            "b93451b1a30fa3f24613ad7b0441907b3427a80f"
        ],
        [
            "induction (le_or_lt (sumToN a) b).",
            "VernacExtend",
            "74838134be661e96cec7c8157f9c481d941ecfca"
        ],
        [
            "assert (searchXY b = a).",
            "VernacExtend",
            "489e76b42a2ecee3ffe4a881ee9dad3fc09dee59"
        ],
        [
            "apply cPairProjectionsHelp; auto.",
            "VernacExtend",
            "aa5dfe7748e094852f64dd423e6351aace49a2a2"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "replace (cPairPi1 b + cPairPi2 b) with a.",
            "VernacExtend",
            "9e0979c912f6f543c9bbe52cd97b09312586b201"
        ],
        [
            "unfold cPairPi1 in |- *.",
            "VernacExtend",
            "e40dd9735213ecde35e01bd0af496f9d8e166a07"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "rewrite <- le_plus_minus.",
            "VernacExtend",
            "df54f8f5861a03109d3b268120c5e39a79d41d20"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold cPairPi2 in |- *.",
            "VernacExtend",
            "b42a1507c260a66b28100a27a75ed916084de1fb"
        ],
        [
            "rewrite <- le_plus_minus.",
            "VernacExtend",
            "df54f8f5861a03109d3b268120c5e39a79d41d20"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold cPairPi1 in |- *.",
            "VernacExtend",
            "e40dd9735213ecde35e01bd0af496f9d8e166a07"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "apply (fun p n m : nat => plus_le_reg_l n m p) with (sumToN a).",
            "VernacExtend",
            "51fefc9e8db15f77bc989d75b5e6ccfb2388d5cd"
        ],
        [
            "rewrite <- le_plus_minus.",
            "VernacExtend",
            "df54f8f5861a03109d3b268120c5e39a79d41d20"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply lt_n_Sm_le.",
            "VernacExtend",
            "354c1d072708776c26f2aab2afa0945822d0815b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Hreca.",
            "VernacExtend",
            "6fc9468528c6f36692617e8183c9aa731135bf44"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H with (S a).",
            "VernacExtend",
            "1fc0fd842cc2b73527fea652d1b7136c99fd14cd"
        ],
        [
            "apply lt_le_trans with (S a).",
            "VernacExtend",
            "57041d4f0b32787a5dba46aaa3c00bc5db724286"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "apply sumToN1.",
            "VernacExtend",
            "833d8ae912b25ac3b6f69961d0bb36d00b33a0bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark searchXYIsPR : isPR 1 searchXY.",
            "VernacStartTheoremProof",
            "af6a6223302e2b79af3a002e7a84ee4ac83be0f3"
        ],
        [
            "unfold searchXY in |- *.",
            "VernacExtend",
            "f15cf6fc733d5b8dadab567192ae482710467307"
        ],
        [
            "apply boundSearchIsPR with (P := fun a y : nat => ltBool a (sumToN (S y))).",
            "VernacExtend",
            "00dde0dd4ec71912d55919fb11ca8bea777c7470"
        ],
        [
            "unfold isPRrel in |- *.",
            "VernacExtend",
            "6d98e12be7c05bdc572e2f26b0ae95c605885208"
        ],
        [
            "apply compose2_2IsPR with (h := charFunction 2 ltBool) (f := fun a y : nat => a) (g := fun a y : nat => sumToN (S y)).",
            "VernacExtend",
            "aa8df4f3c7639f4892a8585dc759c2df61b02dc7"
        ],
        [
            "apply pi1_2IsPR.",
            "VernacExtend",
            "de83e3a673d46ec194b97a67a98b94cf405137bf"
        ],
        [
            "apply filter01IsPR with (g := fun y : nat => sumToN (S y)).",
            "VernacExtend",
            "7cd4629cc5e273f7b5324a8c7b3334b99740d342"
        ],
        [
            "apply compose1_1IsPR.",
            "VernacExtend",
            "9921406eb1ce66f3429e19cb4b6f5468429ee619"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "apply sumToNIsPR.",
            "VernacExtend",
            "18d4487529ed26fc4a102796d692e818f64dd984"
        ],
        [
            "apply ltIsPR.",
            "VernacExtend",
            "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairPi1IsPR : isPR 1 cPairPi1.",
            "VernacStartTheoremProof",
            "19feea632779c82c29bd2e08e2e17e08176c344a"
        ],
        [
            "unfold cPairPi1 in |- *.",
            "VernacExtend",
            "e40dd9735213ecde35e01bd0af496f9d8e166a07"
        ],
        [
            "apply compose1_2IsPR with (g := minus) (f := fun x : nat => x) (f' := fun a : nat => sumToN (searchXY a)).",
            "VernacExtend",
            "742c8244bac4b2a88afd3305572df89c2c014584"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply compose1_1IsPR.",
            "VernacExtend",
            "9921406eb1ce66f3429e19cb4b6f5468429ee619"
        ],
        [
            "apply searchXYIsPR.",
            "VernacExtend",
            "ad4e113883e80bd9cb6bbeb958e13dd0856eb22b"
        ],
        [
            "apply sumToNIsPR.",
            "VernacExtend",
            "18d4487529ed26fc4a102796d692e818f64dd984"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairPi2IsPR : isPR 1 cPairPi2.",
            "VernacStartTheoremProof",
            "c2ff726e7de6592c91a09f672ca71385cb72e090"
        ],
        [
            "unfold cPairPi2 in |- *.",
            "VernacExtend",
            "b42a1507c260a66b28100a27a75ed916084de1fb"
        ],
        [
            "apply compose1_2IsPR with (g := minus) (f := searchXY) (f' := cPairPi1).",
            "VernacExtend",
            "176caadf35aaf62ca9f2713a44d728879d32f89e"
        ],
        [
            "apply searchXYIsPR.",
            "VernacExtend",
            "ad4e113883e80bd9cb6bbeb958e13dd0856eb22b"
        ],
        [
            "apply cPairPi1IsPR.",
            "VernacExtend",
            "4bac551b247f32e958ed42e3ad9b87d435edb811"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairProjections1 : forall a b : nat, cPairPi1 (cPair a b) = a.",
            "VernacStartTheoremProof",
            "5e5d97af9da7632a74fadfe62c6c9e6bc3189c37"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "unfold cPairPi1 in |- *.",
            "VernacExtend",
            "e40dd9735213ecde35e01bd0af496f9d8e166a07"
        ],
        [
            "replace (searchXY (a + sumToN (a + b))) with (a + b).",
            "VernacExtend",
            "563aa0d6551a251941008a78e45701a5b5cb7b95"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply minus_plus.",
            "VernacExtend",
            "04e8c71f9155efe89ef3c9498d0cef9fe5c3ddbb"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply cPairProjectionsHelp.",
            "VernacExtend",
            "7fb69a85bb28cbde32ecf42d83de5fbb92c53bdd"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply plus_le_compat_r.",
            "VernacExtend",
            "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairProjections2 : forall a b : nat, cPairPi2 (cPair a b) = b.",
            "VernacStartTheoremProof",
            "69c0f3075d6d2e3f853b5fdd2eb2532916d4e647"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPairPi2 in |- *.",
            "VernacExtend",
            "b42a1507c260a66b28100a27a75ed916084de1fb"
        ],
        [
            "rewrite cPairProjections1.",
            "VernacExtend",
            "2aeb03f60ab3e427170cb96956a5648ecc7ae528"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "replace (searchXY (a + sumToN (a + b))) with (a + b).",
            "VernacExtend",
            "563aa0d6551a251941008a78e45701a5b5cb7b95"
        ],
        [
            "apply minus_plus.",
            "VernacExtend",
            "04e8c71f9155efe89ef3c9498d0cef9fe5c3ddbb"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply cPairProjectionsHelp.",
            "VernacExtend",
            "7fb69a85bb28cbde32ecf42d83de5fbb92c53bdd"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply plus_le_compat_r.",
            "VernacExtend",
            "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CPair_projections.",
            "VernacEndSegment",
            "2951ea12ebc4463fca485fda85d09673b6ca9d9e"
        ],
        [
            "Section CPair_Order.",
            "VernacBeginSection",
            "b911ffb53e523781af1c2b7a0911dfaa49ae49aa"
        ],
        [
            "Lemma cPairLe1 : forall a b : nat, a <= cPair a b.",
            "VernacStartTheoremProof",
            "9ffc3b51e520f774c099ae39cb2b1edfeea78ae2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairLe1A : forall a : nat, cPairPi1 a <= a.",
            "VernacStartTheoremProof",
            "39f6188f30db18888daa3bede940e26d538fad0b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply le_trans with (cPair (cPairPi1 a) (cPairPi2 a)).",
            "VernacExtend",
            "0159055c655263e4c72ff7ea0462384f8a603d1c"
        ],
        [
            "apply cPairLe1.",
            "VernacExtend",
            "273d467bdcab30f1cf5e460652e5c74f67b1471b"
        ],
        [
            "rewrite cPairProjections.",
            "VernacExtend",
            "c3175365627fe539261822cb2060e943f0ca0952"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairLe2 : forall a b : nat, b <= cPair a b.",
            "VernacStartTheoremProof",
            "e03c4a3afef8fec7ae56bac38b5d27366a56e027"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "eapply le_trans.",
            "VernacExtend",
            "fb859396e58c41e60ce972d076db09f2f51f5b44"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply plus_le_compat_l.",
            "VernacExtend",
            "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
        ],
        [
            "apply le_trans with (a + b).",
            "VernacExtend",
            "cb8e72f66c8684c8f9c66a258a461d70266d9e07"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply sumToN1.",
            "VernacExtend",
            "833d8ae912b25ac3b6f69961d0bb36d00b33a0bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairLe2A : forall a : nat, cPairPi2 a <= a.",
            "VernacStartTheoremProof",
            "2a2594e92da76d0e5e14137d1bd89cd4cfff526a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply le_trans with (cPair (cPairPi1 a) (cPairPi2 a)).",
            "VernacExtend",
            "0159055c655263e4c72ff7ea0462384f8a603d1c"
        ],
        [
            "apply cPairLe2.",
            "VernacExtend",
            "318e030685487083b7f09f04b3c45f941127c60e"
        ],
        [
            "rewrite cPairProjections.",
            "VernacExtend",
            "c3175365627fe539261822cb2060e943f0ca0952"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairLe3 : forall a b c d : nat, a <= b -> c <= d -> cPair a c <= cPair b d.",
            "VernacStartTheoremProof",
            "89ba6b41e0b092735bad9814eb2d9a0020de3fb5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "apply le_trans with (a + sumToN (b + d)).",
            "VernacExtend",
            "3e686c70b0fb9eda627f9d68662234a89fc071fb"
        ],
        [
            "apply plus_le_compat_l.",
            "VernacExtend",
            "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
        ],
        [
            "apply sumToN2.",
            "VernacExtend",
            "8534447e695848ecfa22ba71969dbc6019dbef7a"
        ],
        [
            "apply le_trans with (a + d).",
            "VernacExtend",
            "99fb9051c9fe4d4668e25f8e32ac03314599fa7a"
        ],
        [
            "apply plus_le_compat_l.",
            "VernacExtend",
            "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply plus_le_compat_r.",
            "VernacExtend",
            "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply plus_le_compat_r.",
            "VernacExtend",
            "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairLt1 : forall a b : nat, a < cPair a (S b).",
            "VernacStartTheoremProof",
            "1f735b306942b32f0c3a3340aa3e67083115950c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "rewrite (plus_comm a (S b)).",
            "VernacExtend",
            "4661717f69509744300b533f220f7fa7d554ec08"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "unfold lt in |- *.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cPairLt2 : forall a b : nat, b < cPair (S a) b.",
            "VernacStartTheoremProof",
            "4f397320a6769f8d86124d93200dec5855af2cf9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold cPair in |- *.",
            "VernacExtend",
            "abd50f61dd3aec074899a302dd95c99d7eb256da"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold lt in |- *.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "eapply le_trans.",
            "VernacExtend",
            "fb859396e58c41e60ce972d076db09f2f51f5b44"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply plus_le_compat_l.",
            "VernacExtend",
            "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
        ],
        [
            "apply le_S.",
            "VernacExtend",
            "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
        ],
        [
            "eapply le_trans.",
            "VernacExtend",
            "fb859396e58c41e60ce972d076db09f2f51f5b44"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CPair_Order.",
            "VernacEndSegment",
            "95e702d2ea0339b2b1e539c9ef12ccce6c382a44"
        ],
        [
            "Section code_nat_list.",
            "VernacBeginSection",
            "5bcc3da31faf127cd50ffeffeddbd36a30424e2e"
        ],
        [
            "Fixpoint codeList (l : list nat) : nat := match l with | nil => 0 | n :: l' => S (cPair n (codeList l')) end.",
            "VernacFixpoint",
            "83d1416121337b8fd49f2f189baf0efdf60721f5"
        ],
        [
            "Lemma codeListInj : forall l m : list nat, codeList l = codeList m -> l = m.",
            "VernacStartTheoremProof",
            "ff27cf26511db10b3769ea930cf4acf0b089f11f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction l as [| a l Hrecl].",
            "VernacExtend",
            "fd09d6abd5c50f5308a8699ed52e53f02987fb3d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct m as [| n l].",
            "VernacExtend",
            "945aa27729bbf921323a392ce7ecfed364e4a60e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "discriminate H.",
            "VernacExtend",
            "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct m as [| n l0].",
            "VernacExtend",
            "98e6959473cf0a6417594b3f2988189d3c690caa"
        ],
        [
            "discriminate H.",
            "VernacExtend",
            "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "replace n with a.",
            "VernacExtend",
            "70abf5eea5b78ce7b2c5af73949e1da7386574b3"
        ],
        [
            "rewrite (Hrecl l0).",
            "VernacExtend",
            "f8c4438c75b52968ad2ff67c25661bf289e37db0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "eapply cPairInj2.",
            "VernacExtend",
            "6b9372f6160aa5f6b58d385e2be52f8ca9195711"
        ],
        [
            "apply eq_add_S.",
            "VernacExtend",
            "8d4d3e3ae50c51a73d942cd0765a2d1f975f43b5"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "eapply cPairInj1.",
            "VernacExtend",
            "262e1daf4eaf0fb3221dfc5a198c6499be7ec520"
        ],
        [
            "apply eq_add_S.",
            "VernacExtend",
            "8d4d3e3ae50c51a73d942cd0765a2d1f975f43b5"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition codeNth (n m : nat) : nat.",
            "VernacDefinition",
            "75c57970d72c5a156e58ccf00880b50756326f69"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert nat.",
            "VernacExtend",
            "0cb7419463a8688877148e63e7c8a05c3a8386e2"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "exact m.",
            "VernacExtend",
            "8d7948dfc26fba51657e330970affde86df14ee0"
        ],
        [
            "exact (cPairPi2 (pred Hrecn)).",
            "VernacExtend",
            "e59738d08d09ed106a284773dd51aa5d7566c896"
        ],
        [
            "exact (cPairPi1 (pred H)).",
            "VernacExtend",
            "a0d5c28d935b9420b2c58a57a86e859607c34655"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Let drop (n : nat) : forall (l : list nat), list nat.",
            "VernacDefinition",
            "831fb375061b990df1f0eee10fb26e0579a5c3b5"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "exact (fun l => l).",
            "VernacExtend",
            "e627184822054eefa34e4d1534d8de392f1f41e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "exact (nil (A:=nat)).",
            "VernacExtend",
            "3fb88bfb56addadf6a7a6083eeda9ed9bd6be21a"
        ],
        [
            "exact l.",
            "VernacExtend",
            "efa2b6abdbd0965137045bcf56cd8ae18b3db15c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma codeNthCorrect : forall (n : nat) (l : list nat), codeNth n (codeList l) = nth n l 0.",
            "VernacStartTheoremProof",
            "6cee09b824c1606f277daccbcce4aace5afcc6df"
        ],
        [
            "unfold codeNth in |- *.",
            "VernacExtend",
            "9d8e0dbd610e066c269e4d361f6b39760fe38561"
        ],
        [
            "set (A := fun l : list nat => match l with | nil => nil (A:=nat) | _ :: l0 => l0 end) in *.",
            "VernacExtend",
            "155ed760eae31361c3f8ec5f62ad66dfa3f26116"
        ],
        [
            "assert (forall l : list nat, cPairPi2 (pred (codeList l)) = codeList (A l)).",
            "VernacExtend",
            "af9ca6bef7e125ce94a182332ee6f1ee7540ccde"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (cPairProjections2 0 0).",
            "VernacExtend",
            "f3b13ad544fac0b86847aee1255d3391551556e5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply cPairProjections2.",
            "VernacExtend",
            "428a2ef63747d3d8f75cdd3ddcf906d1ca882db2"
        ],
        [
            "assert (forall (n : nat) (l : list nat), nat_rec (fun _ : nat => nat) (codeList l) (fun _ Hrecn : nat => cPairPi2 (pred Hrecn)) n = codeList (drop n l)).",
            "VernacExtend",
            "d0c0dfbba970bb4d333edabbefe5dc9598b2f567"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "unfold A in |- *.",
            "VernacExtend",
            "3d4031a5dbdaa51031d69f7b1bd339e3135314dd"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "generalize l.",
            "VernacExtend",
            "fbcff490b75c6cf309de9bddda3dcc2e7000171f"
        ],
        [
            "clear l.",
            "VernacExtend",
            "fea3fd0af2a95dd56fb8262ccfbea1340d887dc7"
        ],
        [
            "induction n0 as [| n0 Hrecn0]; simpl in |- *; intros.",
            "VernacExtend",
            "2a84624435c4fab39b116292cbd3104740ee14e4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "apply (Hrecn0 nil).",
            "VernacExtend",
            "62846589f15ea8938fe64daea9c661610eee61f5"
        ],
        [
            "apply Hrecn0.",
            "VernacExtend",
            "8921784bf742d83fe7f3361dd8f1a13794ab6947"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (nth n l 0) with match drop n l with | nil => 0 | a :: _ => a end.",
            "VernacExtend",
            "c4c2e30b67dc668e09a5fc0e3c1ea73e3a3384f5"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "destruct (drop n l).",
            "VernacExtend",
            "31c34ab236f9aab182bd9557572e968681936d45"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply (cPairProjections1 0 0).",
            "VernacExtend",
            "ada3907ab05fc23ffb78bc3d698eaec1bbe21df3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply cPairProjections1.",
            "VernacExtend",
            "935e33e08920195b4c882741c145613fc5548736"
        ],
        [
            "generalize l.",
            "VernacExtend",
            "fbcff490b75c6cf309de9bddda3dcc2e7000171f"
        ],
        [
            "clear l.",
            "VernacExtend",
            "fea3fd0af2a95dd56fb8262ccfbea1340d887dc7"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "destruct l; reflexivity.",
            "VernacExtend",
            "42b473bf3e8933eacdf63f985b424a7e6c62ee2e"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "simpl in Hrecn.",
            "VernacExtend",
            "ea968db343458b0b39ad686acf58fda153877d43"
        ],
        [
            "destruct n; apply (Hrecn nil).",
            "VernacExtend",
            "a21852ad9214cc03ed1d60826e8cc8663e3e7a3c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma codeNthIsPR : isPR 2 codeNth.",
            "VernacStartTheoremProof",
            "66c1b1c3fea372717f761e25ce6f32324d38a4b0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold codeNth in |- *.",
            "VernacExtend",
            "9d8e0dbd610e066c269e4d361f6b39760fe38561"
        ],
        [
            "apply compose2_1IsPR with (g := fun x : nat => cPairPi1 (pred x)) (f := fun n m : nat => nat_rec (fun _ : nat => nat) m (fun _ Hrecn : nat => cPairPi2 (pred Hrecn)) n).",
            "VernacExtend",
            "a3aa7637567d4ba80c3537e7d6d674a3f07f9442"
        ],
        [
            "apply ind1ParamIsPR with (g := fun m : nat => m) (f := fun _ Hrecn m : nat => cPairPi2 (pred Hrecn)).",
            "VernacExtend",
            "bcccde4bbf9fc6bd7f9e1677869a265d357d814a"
        ],
        [
            "apply filter010IsPR with (g := fun x : nat => cPairPi2 (pred x)).",
            "VernacExtend",
            "fe236e7782046e9d71a51726746eb5f629c5499a"
        ],
        [
            "apply compose1_1IsPR.",
            "VernacExtend",
            "9921406eb1ce66f3429e19cb4b6f5468429ee619"
        ],
        [
            "apply predIsPR.",
            "VernacExtend",
            "997e71cc9af65178f66c42c7c23c11ad0d929df2"
        ],
        [
            "apply cPairPi2IsPR.",
            "VernacExtend",
            "576d617c91a7b31dc0407d020f8adc0e8302f05d"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply compose1_1IsPR.",
            "VernacExtend",
            "9921406eb1ce66f3429e19cb4b6f5468429ee619"
        ],
        [
            "apply predIsPR.",
            "VernacExtend",
            "997e71cc9af65178f66c42c7c23c11ad0d929df2"
        ],
        [
            "apply cPairPi1IsPR.",
            "VernacExtend",
            "4bac551b247f32e958ed42e3ad9b87d435edb811"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End code_nat_list.",
            "VernacEndSegment",
            "8c0453144e20fbc8dbfc8ed09c7a5886c33f5a07"
        ],
        [
            "Section Strong_Recursion.",
            "VernacBeginSection",
            "10cfecd717d9925f42984319c274eed9f5042964"
        ],
        [
            "Definition evalStrongRecHelp (n : nat) (f : naryFunc (S (S n))) : naryFunc (S n) := evalPrimRecFunc n (evalComposeFunc n 0 (Vector.nil _) (codeList nil)) (evalComposeFunc (S (S n)) 2 (Vector.cons _ f _ (Vector.cons _ (evalProjFunc (S (S n)) n (lt_S _ _ (lt_n_Sn _))) _ (Vector.nil _))) (fun a b : nat => S (cPair a b))).",
            "VernacDefinition",
            "a16e94415c77417e8344a49e1e576e8ef50bfe6f"
        ],
        [
            "Definition evalStrongRec (n : nat) (f : naryFunc (S (S n))) : naryFunc (S n) := evalComposeFunc (S n) 1 (Vector.cons _ (fun z : nat => evalStrongRecHelp n f (S z)) _ (Vector.nil _)) (fun z : nat => cPairPi1 (pred z)).",
            "VernacDefinition",
            "7b0feba816a08186db648c608ca121862d17aaf8"
        ],
        [
            "Lemma evalStrongRecIsPR : forall (n : nat) (f : naryFunc (S (S n))), isPR _ f -> isPR _ (evalStrongRec n f).",
            "VernacStartTheoremProof",
            "f4d0cc95b87f41d4dac5c4c4a13213cef4913dd4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold evalStrongRec, evalStrongRecHelp in |- *.",
            "VernacExtend",
            "08640daf5906ca4b9295ed95a8904e7cee1c94da"
        ],
        [
            "fold (naryFunc (S n)) in |- *.",
            "VernacExtend",
            "896ce7fc93450ce2ccb62ec676d2dd211fa921ae"
        ],
        [
            "set (A := evalPrimRecFunc n (evalComposeFunc n 0 (Vector.nil (naryFunc n)) (codeList nil)) (evalComposeFunc (S (S n)) 2 (Vector.cons (naryFunc (S (S n))) f 1 (Vector.cons (naryFunc (S (S n))) (evalProjFunc (S (S n)) n (lt_S n (S n) (lt_n_Sn n))) 0 (Vector.nil (naryFunc (S (S n)))))) (fun a b : nat => S (cPair a b)))) in *.",
            "VernacExtend",
            "e867060017818626152193840968e30f5f9f4b50"
        ],
        [
            "assert (isPR (S n) A).",
            "VernacExtend",
            "838c51ec6b2c527b3401507d2ed3803b4603b22f"
        ],
        [
            "unfold A in |- *.",
            "VernacExtend",
            "3d4031a5dbdaa51031d69f7b1bd339e3135314dd"
        ],
        [
            "assert (isPR 2 (fun a b : nat => S (cPair a b))).",
            "VernacExtend",
            "129173588f63d562f39c591e18577454910171d2"
        ],
        [
            "apply compose2_1IsPR.",
            "VernacExtend",
            "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
        ],
        [
            "apply cPairIsPR.",
            "VernacExtend",
            "f8a5b87c0a2d77125868da28d8368de40c2103e9"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "assert (isPR 1 (fun z : nat => cPairPi1 (pred z))).",
            "VernacExtend",
            "8b4cec83b8f9e12a479017683345656497d06c8c"
        ],
        [
            "apply compose1_1IsPR.",
            "VernacExtend",
            "9921406eb1ce66f3429e19cb4b6f5468429ee619"
        ],
        [
            "apply predIsPR.",
            "VernacExtend",
            "997e71cc9af65178f66c42c7c23c11ad0d929df2"
        ],
        [
            "apply cPairPi1IsPR.",
            "VernacExtend",
            "4bac551b247f32e958ed42e3ad9b87d435edb811"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "induction H0 as (x0, p0).",
            "VernacExtend",
            "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
        ],
        [
            "induction H1 as (x1, p1).",
            "VernacExtend",
            "c242d8fed3efc7692a00ad85d4e185b69ca69594"
        ],
        [
            "exists (primRecFunc n (composeFunc n 0 (PRnil _) zeroFunc) (composeFunc (S (S n)) 2 (PRcons _ _ x (PRcons _ _ (projFunc (S (S n)) n (lt_S n (S n) (lt_n_Sn n))) (PRnil _))) x0)).",
            "VernacExtend",
            "205b4da7fbd69f083d3a7455c1a03ff67a8776cf"
        ],
        [
            "apply extEqualTrans with (evalPrimRecFunc n (evalComposeFunc n 0 (Vector.nil _) 0) (evalComposeFunc (S (S n)) 2 (Vector.cons _ (evalPrimRec _ x) _ (Vector.cons _ (evalProjFunc (S (S n)) n (lt_S n (S n) (lt_n_Sn n))) _ (Vector.nil _))) (evalPrimRec _ x0))).",
            "VernacExtend",
            "fce5a17cc2b2fe71bc85e50eaacb3cab981399e0"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply extEqualPrimRec.",
            "VernacExtend",
            "52893b892d5541e8d2adf83a296727e0b28a5429"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector, extEqualVectorGeneral, Vector.t_rect in |- *.",
            "VernacExtend",
            "b917e16c802b1e1febf8cf9dcca0b6a664b6517d"
        ],
        [
            "repeat split; auto.",
            "VernacExtend",
            "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (isPR (S n) (fun z : nat => A (S z))).",
            "VernacExtend",
            "550d26f94d5d64a1a7f00b88eb3e9d15c48cd3ee"
        ],
        [
            "apply compose1_NIsPR.",
            "VernacExtend",
            "15af4ab2a2a66478ac68a10e7c5b7090aa31e86e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "assert (isPR 1 (fun z : nat => cPairPi1 (pred z))).",
            "VernacExtend",
            "8b4cec83b8f9e12a479017683345656497d06c8c"
        ],
        [
            "apply compose1_1IsPR.",
            "VernacExtend",
            "9921406eb1ce66f3429e19cb4b6f5468429ee619"
        ],
        [
            "apply predIsPR.",
            "VernacExtend",
            "997e71cc9af65178f66c42c7c23c11ad0d929df2"
        ],
        [
            "apply cPairPi1IsPR.",
            "VernacExtend",
            "4bac551b247f32e958ed42e3ad9b87d435edb811"
        ],
        [
            "induction H0 as (x, p).",
            "VernacExtend",
            "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
        ],
        [
            "induction H1 as (x0, p0).",
            "VernacExtend",
            "076633e77e72eb5b45f12e88e8e8562ed864107c"
        ],
        [
            "exists (composeFunc (S n) 1 (PRcons _ _ x0 (PRnil _)) x).",
            "VernacExtend",
            "21ebb6e88b66200e72767893fda66ebd9e36f736"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply (p0 c).",
            "VernacExtend",
            "640672e86f95efa48e08605854f0481c024f9876"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma computeEvalStrongRecHelp : forall (n : nat) (f : naryFunc (S (S n))) (c : nat), evalStrongRecHelp n f (S c) = compose2 n (evalStrongRecHelp n f c) (fun a0 : nat => evalComposeFunc n 2 (Vector.cons (naryFunc n) (f c a0) 1 (Vector.cons (naryFunc n) (evalConstFunc n a0) 0 (Vector.nil (naryFunc n)))) (fun a1 b0 : nat => S (cPair a1 b0))).",
            "VernacStartTheoremProof",
            "5fffa51818d15901d87ce559f33d86589c186dff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold evalStrongRecHelp at 1 in |- *.",
            "VernacExtend",
            "f2d80934908cb1d0353d0bee1293e6b9ff9fb10c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "induction (eq_nat_dec n (S n)).",
            "VernacExtend",
            "080500546a2cee35087e4a196c5e0a280bcf3567"
        ],
        [
            "elim (lt_not_le n (S n)).",
            "VernacExtend",
            "5a8c6a146707278bb4dfbb271951b55733f821e8"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "rewrite <- a.",
            "VernacExtend",
            "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (eq_nat_dec n n).",
            "VernacExtend",
            "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
        ],
        [
            "replace (evalPrimRecFunc n (evalComposeFunc n 0 (Vector.nil (naryFunc n)) 0) (fun a0 a1 : nat => evalComposeFunc n 2 (Vector.cons (naryFunc n) (f a0 a1) 1 (Vector.cons (naryFunc n) (evalConstFunc n a1) 0 (Vector.nil (naryFunc n)))) (fun a2 b0 : nat => S (cPair a2 b0))) c) with (evalStrongRecHelp n f c).",
            "VernacExtend",
            "164046517fb55e5f3f10073932b34b798c17346c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold evalStrongRecHelp at 1 in |- *.",
            "VernacExtend",
            "f2d80934908cb1d0353d0bee1293e6b9ff9fb10c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "induction (eq_nat_dec n (S n)).",
            "VernacExtend",
            "080500546a2cee35087e4a196c5e0a280bcf3567"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (eq_nat_dec n n).",
            "VernacExtend",
            "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim b1.",
            "VernacExtend",
            "e56693198c91ed42bdd9da7d5e65f768de914997"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim b0.",
            "VernacExtend",
            "4506652c796867e8c9be690f8925bec68461304f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let listValues (f : naryFunc 2) (n : nat) : list nat.",
            "VernacDefinition",
            "d98fc04c3ada24944ba37db2a1a0b8dd284fa9c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "exact nil.",
            "VernacExtend",
            "221463c73c88586bbdeb2d7fddb75313a7dd5887"
        ],
        [
            "exact (evalStrongRec _ f n :: Hrecn).",
            "VernacExtend",
            "29bdc0f15de0ba2d1131ed277d4b07a5b0ac6ed2"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma evalStrongRecHelp1 : forall (f : naryFunc 2) (n m : nat), m < n -> codeNth (n - S m) (evalStrongRecHelp _ f n) = evalStrongRec _ f m.",
            "VernacStartTheoremProof",
            "dba26dcc451dd36be6f50cadc27cdd12997f7f6e"
        ],
        [
            "assert (forall (f : naryFunc 2) (n : nat), evalStrongRecHelp _ f n = codeList (listValues f n)).",
            "VernacExtend",
            "a78f1aa76ce2716074e9bcad37a9889ec2e42de9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold evalStrongRecHelp in |- *.",
            "VernacExtend",
            "5b0f3071c6ffa54c20053804eb3ee6e205169d9c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold evalStrongRecHelp in |- *.",
            "VernacExtend",
            "5b0f3071c6ffa54c20053804eb3ee6e205169d9c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold evalStrongRecHelp in Hrecn.",
            "VernacExtend",
            "0b6b311fda67aa2e97e604979c820c67c6f52b8d"
        ],
        [
            "simpl in Hrecn.",
            "VernacExtend",
            "ea968db343458b0b39ad686acf58fda153877d43"
        ],
        [
            "rewrite Hrecn.",
            "VernacExtend",
            "9f2f9eb25208250dc135a15348250f012f2be502"
        ],
        [
            "unfold evalStrongRec in |- *.",
            "VernacExtend",
            "4cf49f2247395396309d3b668fa7008ed75287b9"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite cPairProjections1.",
            "VernacExtend",
            "2aeb03f60ab3e427170cb96956a5648ecc7ae528"
        ],
        [
            "rewrite Hrecn.",
            "VernacExtend",
            "9f2f9eb25208250dc135a15348250f012f2be502"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite codeNthCorrect.",
            "VernacExtend",
            "e592f2c2ee22d4983e21fb209ded6b6765143586"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "elim (lt_n_O _ H0).",
            "VernacExtend",
            "231f0ea2a5259bce18c0d5de01a49b4f7ab8b30e"
        ],
        [
            "induction (le_lt_or_eq _ _ H0).",
            "VernacExtend",
            "86cf13b389eca13e2e02416cb22c7982f40bd28d"
        ],
        [
            "rewrite <- minus_Sn_m.",
            "VernacExtend",
            "808a21c00826f53fd5122068d41d20a5b1758aff"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecn.",
            "VernacExtend",
            "9f2f9eb25208250dc135a15348250f012f2be502"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply lt_n_Sm_le.",
            "VernacExtend",
            "354c1d072708776c26f2aab2afa0945822d0815b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "rewrite <- minus_n_n.",
            "VernacExtend",
            "a1971924636c60393251f10dbf5ec735a2ebc0d9"
        ],
        [
            "clear H3 H1 Hrecn H0 m.",
            "VernacExtend",
            "912747e92adea0cfea163b2ecbde7c5aacd43d28"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evalStrongRecHelpParam : forall (a n c : nat) (f : naryFunc (S (S (S a)))), extEqual a (evalStrongRecHelp (S a) f n c) (evalStrongRecHelp a (fun x y : nat => f x y c) n).",
            "VernacStartTheoremProof",
            "6fee75cf5d73adca8bb6dd9aed3714fec9b77dba"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold evalStrongRecHelp in |- *.",
            "VernacExtend",
            "5b0f3071c6ffa54c20053804eb3ee6e205169d9c"
        ],
        [
            "eapply extEqualTrans.",
            "VernacExtend",
            "fcc0112687eaec3e88c4c8a01889eb47c927b5f2"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "apply evalPrimRecParam.",
            "VernacExtend",
            "3c91ae4af24a2bd1a6d1104e70cb0941a21a858d"
        ],
        [
            "assert (extEqual (S a) (evalPrimRecFunc a (evalComposeFunc (S a) 0 (Vector.nil (naryFunc (S a))) (codeList nil) c) (fun x y : nat => evalComposeFunc (S (S (S a))) 2 (Vector.cons (naryFunc (S (S (S a)))) f 1 (Vector.cons (naryFunc (S (S (S a)))) (evalProjFunc (S (S (S a))) (S a) (lt_S (S a) (S (S a)) (lt_n_Sn (S a)))) 0 (Vector.nil (naryFunc (S (S (S a))))))) (fun a0 b : nat => S (cPair a0 b)) x y c)) (evalPrimRecFunc a (evalComposeFunc a 0 (Vector.nil (naryFunc a)) (codeList nil)) (evalComposeFunc (S (S a)) 2 (Vector.cons (naryFunc (S (S a))) (fun x y : nat => f x y c) 1 (Vector.cons (naryFunc (S (S a))) (evalProjFunc (S (S a)) a (lt_S a (S a) (lt_n_Sn a))) 0 (Vector.nil (naryFunc (S (S a)))))) (fun a0 b : nat => S (cPair a0 b))))).",
            "VernacExtend",
            "1b1902fea9e9248eeacb19296e4207944ab8d11e"
        ],
        [
            "apply (extEqualPrimRec a (evalComposeFunc (S a) 0 (Vector.nil (naryFunc (S a))) (codeList nil) c)).",
            "VernacExtend",
            "147631e822ce6d50906e0e7469b09e94e7d73113"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc a) in |- *.",
            "VernacExtend",
            "5aaa6dc2ab8a20287b5c7348ff0cf6d6238cfd90"
        ],
        [
            "induction (sumbool_rec (fun _ : {a = S a} + {a <> S a} => {S a = S (S a)} + {S a <> S (S a)}) (fun a0 : a = S a => left (S a <> S (S a)) (f_equal S a0)) (fun b : a <> S a => right (S a = S (S a)) (not_eq_S a (S a) b)) (eq_nat_dec a (S a))).",
            "VernacExtend",
            "0b2def9a2f210eab5a8ba5d6d18d1bab97ca2119"
        ],
        [
            "elim (lt_not_le (S a) (S (S a))).",
            "VernacExtend",
            "80605e6094c09d58cd65b364312d3ec03d1bfd51"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "rewrite <- a0.",
            "VernacExtend",
            "b04100d912b648a1b5b7a54e55b5ef65418cc60a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (sumbool_rec (fun _ : {a = a} + {a <> a} => {S a = S a} + {S a <> S a}) (fun a0 : a = a => left (S a <> S a) (f_equal S a0)) (fun b0 : a <> a => right (S a = S a) (not_eq_S a a b0)) (eq_nat_dec a a)).",
            "VernacExtend",
            "486d504e969c4903ded12d3b5d314c2234fffa44"
        ],
        [
            "induction (eq_nat_dec a (S a)).",
            "VernacExtend",
            "79ec9d910fbed6f53a2f34d89e91be02b8356ae7"
        ],
        [
            "elim (lt_not_le a (S a)).",
            "VernacExtend",
            "4f2792387197642c2e22881550a30b72830b1755"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "rewrite <- a1.",
            "VernacExtend",
            "01a4887608b8f862603391558fab6909f639223a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (eq_nat_dec a a).",
            "VernacExtend",
            "80f7b829e27073185595131060c57afea581f9ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "elim b1.",
            "VernacExtend",
            "e56693198c91ed42bdd9da7d5e65f768de914997"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim b0.",
            "VernacExtend",
            "4506652c796867e8c9be690f8925bec68461304f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply (H n).",
            "VernacExtend",
            "a5d548991a4ff3efeb8dcb7be494c69a58e18191"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evalStrongRecHelp2 : forall (a : nat) (f : naryFunc (S (S a))) (n m : nat), m < n -> extEqual _ (evalComposeFunc _ 1 (Vector.cons _ (evalStrongRecHelp _ f n) 0 (Vector.nil _)) (fun b : nat => codeNth (n - S m) b)) (evalStrongRec _ f m).",
            "VernacStartTheoremProof",
            "8221a89a04df7f18a26346433c0f11943b8ac398"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "fold (naryFunc a) in |- *.",
            "VernacExtend",
            "5aaa6dc2ab8a20287b5c7348ff0cf6d6238cfd90"
        ],
        [
            "induction a as [| a Hreca].",
            "VernacExtend",
            "3b09b8ca995ac21355e2604c0f694eb4a294ab43"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply evalStrongRecHelp1.",
            "VernacExtend",
            "b66ee36b34d33853449f0a197c7c825ef0a995d4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "fold (naryFunc a) in |- *.",
            "VernacExtend",
            "5aaa6dc2ab8a20287b5c7348ff0cf6d6238cfd90"
        ],
        [
            "set (g := fun x y : nat => f x y c) in *.",
            "VernacExtend",
            "fb6374067f252395c4b33d08d2dcf19c41df7e2f"
        ],
        [
            "assert (extEqual a (evalComposeFunc a 1 (Vector.cons (naryFunc a) (evalStrongRecHelp a g n) 0 (Vector.nil (naryFunc a))) (fun b : nat => codeNth (n - S m) b)) (evalStrongRec a g m)).",
            "VernacExtend",
            "3b1709bf1643564921b4045c0cdb3d791fa9d2d0"
        ],
        [
            "apply Hreca.",
            "VernacExtend",
            "6fc9468528c6f36692617e8183c9aa731135bf44"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold g in H0.",
            "VernacExtend",
            "85fcbb8dfc7b55c0fa77e07b3b235f42409f222b"
        ],
        [
            "clear g Hreca.",
            "VernacExtend",
            "e51c622b1ce46eae3489ac3ad72962d7ab425f44"
        ],
        [
            "apply extEqualTrans with (evalStrongRec a (fun x y : nat => f x y c) m).",
            "VernacExtend",
            "8b4f6859d543d2f1bae22498fb847c73d7430687"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc a 1 (Vector.cons (naryFunc a) (evalStrongRecHelp a (fun x y : nat => f x y c) n) 0 (Vector.nil (naryFunc a))) (fun b : nat => codeNth (n - S m) b)).",
            "VernacExtend",
            "f3b2ecb8e027a2e19549bb3afbc1a282ddcbcf45"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply evalStrongRecHelpParam.",
            "VernacExtend",
            "a6c289867777847d3a3d8222048274c72c7b5eb4"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold evalStrongRec in |- *.",
            "VernacExtend",
            "4cf49f2247395396309d3b668fa7008ed75287b9"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc a) in |- *.",
            "VernacExtend",
            "5aaa6dc2ab8a20287b5c7348ff0cf6d6238cfd90"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "apply evalStrongRecHelpParam.",
            "VernacExtend",
            "a6c289867777847d3a3d8222048274c72c7b5eb4"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma callIsPR : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a recs : nat => codeNth (a - S (g a)) recs).",
            "VernacStartTheoremProof",
            "7c44b0dc4b73b1db8bee5eb5aee5c8224df2ce5f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply compose2_2IsPR with (f := fun a recs : nat => a - S (g a)) (g := fun a recs : nat => recs).",
            "VernacExtend",
            "f1711f9df65f69ac21722ce3571582af9e3f51cc"
        ],
        [
            "apply filter10IsPR with (g := fun a : nat => a - S (g a)).",
            "VernacExtend",
            "bfe742c682f69883a5e0fea9dc24714baa7aecda"
        ],
        [
            "apply compose1_2IsPR with (f := fun a : nat => a) (f' := fun a : nat => S (g a)).",
            "VernacExtend",
            "e72d9c47615345d3aa8cca9fbfe12f5ef85ac635"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply compose1_1IsPR.",
            "VernacExtend",
            "9921406eb1ce66f3429e19cb4b6f5468429ee619"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "apply pi2_2IsPR.",
            "VernacExtend",
            "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
        ],
        [
            "apply codeNthIsPR.",
            "VernacExtend",
            "c8fe7117bd7c4ce7a2c8812ec8e21dd42b250732"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Strong_Recursion.",
            "VernacEndSegment",
            "0885ddfba539f55b80ced5a2181a3da7eed6f28c"
        ],
        [
            "Lemma div2IsPR : isPR 1 div2.",
            "VernacStartTheoremProof",
            "a4ef68013b165d8c2ad9c58dd6c94730b6a7e793"
        ],
        [
            "assert (isPR 1 (evalStrongRec 0 (fun n recs : nat => switchPR n (switchPR (pred n) (S (codeNth (n - S (pred (pred n))) recs)) 0) 0))).",
            "VernacExtend",
            "7b2937f459fcff9b91fcbfaf5127abc314467560"
        ],
        [
            "apply evalStrongRecIsPR.",
            "VernacExtend",
            "f12840d75e2be8f2c437a32ed7b12f63fef0bf96"
        ],
        [
            "assert (isPR 2 (fun n recs : nat => 0)).",
            "VernacExtend",
            "32b9de97f8b19414e256a6e5dbc1ba6c8a3545a8"
        ],
        [
            "exists (composeFunc 2 0 (PRnil _) zeroFunc).",
            "VernacExtend",
            "6d1f0f8ee83bc990d5d6792d2988e872621e2024"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply compose2_3IsPR with (f1 := fun n recs : nat => n) (f2 := fun n recs : nat => switchPR (pred n) (S (codeNth (n - S (pred (pred n))) recs)) 0) (f3 := fun n recs : nat => 0).",
            "VernacExtend",
            "256819df4abcdcd8e2dd0138104fe675a13679c6"
        ],
        [
            "apply pi1_2IsPR.",
            "VernacExtend",
            "de83e3a673d46ec194b97a67a98b94cf405137bf"
        ],
        [
            "apply compose2_3IsPR with (f1 := fun n recs : nat => pred n) (f2 := fun n recs : nat => S (codeNth (n - S (pred (pred n))) recs)) (f3 := fun n recs : nat => 0).",
            "VernacExtend",
            "e620479dc6a3339a1ec7d3fb18d84cd738d60a9e"
        ],
        [
            "apply filter10IsPR.",
            "VernacExtend",
            "a511891d7a43751c68939783b674e14f242f8594"
        ],
        [
            "apply predIsPR.",
            "VernacExtend",
            "997e71cc9af65178f66c42c7c23c11ad0d929df2"
        ],
        [
            "apply compose2_1IsPR with (f := fun n recs : nat => codeNth (n - S (pred (pred n))) recs).",
            "VernacExtend",
            "bd635d40d11339869e8b9f47c51071ca17c66be5"
        ],
        [
            "apply compose2_2IsPR with (f := fun n recs : nat => n - S (pred (pred n))) (g := fun n recs : nat => recs).",
            "VernacExtend",
            "6d36ee51bfc358f073649ed08964fe4fd4b56e3c"
        ],
        [
            "apply filter10IsPR with (g := fun n : nat => n - S (pred (pred n))).",
            "VernacExtend",
            "bdd6cea2f5ea1c96e1754419d3dce9038ebbfe5e"
        ],
        [
            "apply compose1_2IsPR with (f := fun n : nat => n) (f' := fun n : nat => S (pred (pred n))).",
            "VernacExtend",
            "2f7cb848bed2877599aa8ba335c12c654a366633"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply compose1_1IsPR with (f := fun n : nat => pred (pred n)).",
            "VernacExtend",
            "5269ffaa79af692e99a6b2b7a8eb097d64b3a4b3"
        ],
        [
            "apply compose1_1IsPR; apply predIsPR.",
            "VernacExtend",
            "61d691fd46da093c01b2700af6331b749a430976"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "apply pi2_2IsPR.",
            "VernacExtend",
            "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
        ],
        [
            "apply codeNthIsPR.",
            "VernacExtend",
            "c8fe7117bd7c4ce7a2c8812ec8e21dd42b250732"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply switchIsPR.",
            "VernacExtend",
            "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply switchIsPR.",
            "VernacExtend",
            "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "eapply extEqualTrans.",
            "VernacExtend",
            "fcc0112687eaec3e88c4c8a01889eb47c927b5f2"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "clear p x.",
            "VernacExtend",
            "40fdab52d26e2832a3bb99ac4d21f82c6bc01250"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (f := fun n recs : nat => switchPR n (switchPR (pred n) (S (codeNth (n - S (pred (pred n))) recs)) 0) 0) in *.",
            "VernacExtend",
            "7f573c4b852cc6b6134ef155ce2253a3acd37edb"
        ],
        [
            "elim c using ind_0_1_SS.",
            "VernacExtend",
            "0a6362083b846fde70b0ed8729942390f30d4d59"
        ],
        [
            "unfold evalStrongRec in |- *.",
            "VernacExtend",
            "4cf49f2247395396309d3b668fa7008ed75287b9"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "unfold evalStrongRec in |- *.",
            "VernacExtend",
            "4cf49f2247395396309d3b668fa7008ed75287b9"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply cPairProjections1.",
            "VernacExtend",
            "935e33e08920195b4c882741c145613fc5548736"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold evalStrongRec in |- *.",
            "VernacExtend",
            "4cf49f2247395396309d3b668fa7008ed75287b9"
        ],
        [
            "unfold evalComposeFunc in |- *.",
            "VernacExtend",
            "39ada200228fdc8c2cef55ef1448531290850600"
        ],
        [
            "unfold evalOneParamList in |- *.",
            "VernacExtend",
            "1fd99ff56ff0a3524386ef61bbc42bc2d9937afc"
        ],
        [
            "rewrite computeEvalStrongRecHelp.",
            "VernacExtend",
            "74b97e1ef9e685ac7c00b8175fdc06413a9fcb77"
        ],
        [
            "unfold f at 2 in |- *.",
            "VernacExtend",
            "767ef188a6777d3bb03698e42f6b1423d873411e"
        ],
        [
            "set (A := S (S n) - S (pred (pred (S (S n))))) in *.",
            "VernacExtend",
            "0919b68fa03dff1e8ae9741b077abf011046b49e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite cPairProjections1.",
            "VernacExtend",
            "2aeb03f60ab3e427170cb96956a5648ecc7ae528"
        ],
        [
            "apply eq_S.",
            "VernacExtend",
            "8ef0b219ea0189c2d80bb55d03c4c9f24beca469"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "unfold A in |- *.",
            "VernacExtend",
            "3d4031a5dbdaa51031d69f7b1bd339e3135314dd"
        ],
        [
            "apply evalStrongRecHelp1.",
            "VernacExtend",
            "b66ee36b34d33853449f0a197c7c825ef0a995d4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "sumToN1",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumToN2",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction b as [| b Hrecb]; intros.",
                        "VernacExtend",
                        "f3c2c1a4d24b629f834a9f02368eaff033b831aa"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (le_n_O_eq _ H).",
                        "VernacExtend",
                        "d0907fea26f2178c83d4cd8e28931c247899ebd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_or_eq _ _ H).",
                        "VernacExtend",
                        "c0c7392f8f9e8372d13c2d509df756df62a4de50"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (sumToN b).",
                        "VernacExtend",
                        "83d819c6d25b41357eeb86690b98aaf1e516bd7a"
                    ]
                },
                {
                    "command": [
                        "apply Hrecb.",
                        "VernacExtend",
                        "80670c41dde2e82ba232122d512977ca4333ade0"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sm_le.",
                        "VernacExtend",
                        "354c1d072708776c26f2aab2afa0945822d0815b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply le_S.",
                        "VernacExtend",
                        "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_r.",
                        "VernacExtend",
                        "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumToNIsPR",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "unfold sumToN in |- *.",
                        "VernacExtend",
                        "df9813dcff7bc17efae58aca88e3e472d30f24b5"
                    ]
                },
                {
                    "command": [
                        "apply indIsPR with (f := fun x y : nat => S x + y).",
                        "VernacExtend",
                        "63e5b49c1f8fc09999730c2764bcf73070a37bd6"
                    ]
                },
                {
                    "command": [
                        "apply compose2_2IsPR with (f := fun x y : nat => S x) (g := fun x y : nat => y) (h := plus).",
                        "VernacExtend",
                        "c2786e46b181b4c456c98724a809f7c8e8394e7b"
                    ]
                },
                {
                    "command": [
                        "apply filter10IsPR.",
                        "VernacExtend",
                        "a511891d7a43751c68939783b674e14f242f8594"
                    ]
                },
                {
                    "command": [
                        "apply succIsPR.",
                        "VernacExtend",
                        "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
                    ]
                },
                {
                    "command": [
                        "apply pi2_2IsPR.",
                        "VernacExtend",
                        "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
                    ]
                },
                {
                    "command": [
                        "apply plusIsPR.",
                        "VernacExtend",
                        "3b0a74ba0921212c33f63b79cd048faf8df5a016"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairIsPR",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cPair in |- *.",
                        "VernacExtend",
                        "abd50f61dd3aec074899a302dd95c99d7eb256da"
                    ]
                },
                {
                    "command": [
                        "apply compose2_2IsPR with (f := fun x y : nat => x) (g := fun x y : nat => sumToN (x + y)) (h := plus).",
                        "VernacExtend",
                        "1eb2003b8e40883672ab4715cacea23cf4ef985f"
                    ]
                },
                {
                    "command": [
                        "apply pi1_2IsPR.",
                        "VernacExtend",
                        "de83e3a673d46ec194b97a67a98b94cf405137bf"
                    ]
                },
                {
                    "command": [
                        "apply compose2_1IsPR.",
                        "VernacExtend",
                        "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
                    ]
                },
                {
                    "command": [
                        "apply plusIsPR.",
                        "VernacExtend",
                        "3b0a74ba0921212c33f63b79cd048faf8df5a016"
                    ]
                },
                {
                    "command": [
                        "apply sumToNIsPR.",
                        "VernacExtend",
                        "18d4487529ed26fc4a102796d692e818f64dd984"
                    ]
                },
                {
                    "command": [
                        "apply plusIsPR.",
                        "VernacExtend",
                        "3b0a74ba0921212c33f63b79cd048faf8df5a016"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairProjectionsHelp",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold searchXY in |- *.",
                        "VernacExtend",
                        "f15cf6fc733d5b8dadab567192ae482710467307"
                    ]
                },
                {
                    "command": [
                        "induction (boundedSearch2 (fun b y : nat => ltBool b (sumToN (S y))) b).",
                        "VernacExtend",
                        "91b91bdbf9dbc930a77acec29a5951d3ca596a1d"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec b a).",
                        "VernacExtend",
                        "5216b6c7f844854eb01befc949ac07040b0c7400"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "elim (ltBoolFalse b (sumToN (S a))).",
                        "VernacExtend",
                        "5040088500de8096842effe69fd7fe0c8d95bbd3"
                    ]
                },
                {
                    "command": [
                        "apply (boundedSearch1 (fun b y : nat => ltBool b (sumToN (S y))) b).",
                        "VernacExtend",
                        "d0c141f90d270150a93eebc05b668abaae88c281"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "induction (nat_total_order _ _ b0).",
                        "VernacExtend",
                        "86db508768257cac6bedd558e5d614e9c7517f8b"
                    ]
                },
                {
                    "command": [
                        "elim (lt_not_le _ _ H2).",
                        "VernacExtend",
                        "c6ea4f580d8b332a8a188fb1e317a31a4407a0b1"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (sumToN a).",
                        "VernacExtend",
                        "410f543ae21ac188f95afbc3f6e36ab0d84d25e8"
                    ]
                },
                {
                    "command": [
                        "apply sumToN1.",
                        "VernacExtend",
                        "833d8ae912b25ac3b6f69961d0bb36d00b33a0bd"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "set (c := boundedSearch (fun b y : nat => ltBool b (sumToN (S y))) b) in *.",
                        "VernacExtend",
                        "4fefb4b786252e46a52f867ad11cee84f9951196"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec c a).",
                        "VernacExtend",
                        "7cf8849bb0db5bbacef1ade159cf997b9f6d81ae"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "elim (ltBoolFalse b (sumToN (S a))).",
                        "VernacExtend",
                        "5040088500de8096842effe69fd7fe0c8d95bbd3"
                    ]
                },
                {
                    "command": [
                        "apply (boundedSearch1 (fun b y : nat => ltBool b (sumToN (S y))) b).",
                        "VernacExtend",
                        "d0c141f90d270150a93eebc05b668abaae88c281"
                    ]
                },
                {
                    "command": [
                        "fold c in |- *.",
                        "VernacExtend",
                        "0fd56bdbcef822e5354b6d7f8c198429ed4a4824"
                    ]
                },
                {
                    "command": [
                        "induction (nat_total_order _ _ b0).",
                        "VernacExtend",
                        "86db508768257cac6bedd558e5d614e9c7517f8b"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ H0).",
                        "VernacExtend",
                        "0c1c9d5ce2d5e91c4e62053d3293492f5f9ce4c9"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (sumToN (S c)).",
                        "VernacExtend",
                        "bd12807d7eea286feed3cfa413f03b3def438aa8"
                    ]
                },
                {
                    "command": [
                        "apply ltBoolTrue.",
                        "VernacExtend",
                        "4e307eb107466a0aebbea4e90ed01f0e1cc8f19c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (S c <= a).",
                        "VernacExtend",
                        "dca1aecdd2f81c3480fa87c764f53cdad882270a"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sm_le.",
                        "VernacExtend",
                        "354c1d072708776c26f2aab2afa0945822d0815b"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_S.",
                        "VernacExtend",
                        "3c5e09f79b5d536a7a60dd2965c3f0ec6c1930e5"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply sumToN2.",
                        "VernacExtend",
                        "8534447e695848ecfa22ba71969dbc6019dbef7a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairProjections",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "assert (forall a b : nat, b < sumToN a -> cPair (cPairPi1 b) (cPairPi2 b) = b).",
                        "VernacExtend",
                        "2e97d4519242164b904686918dcb0dd0f557dd3e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction a as [| a Hreca].",
                        "VernacExtend",
                        "3b09b8ca995ac21355e2604c0f694eb4a294ab43"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ H).",
                        "VernacExtend",
                        "b93451b1a30fa3f24613ad7b0441907b3427a80f"
                    ]
                },
                {
                    "command": [
                        "induction (le_or_lt (sumToN a) b).",
                        "VernacExtend",
                        "74838134be661e96cec7c8157f9c481d941ecfca"
                    ]
                },
                {
                    "command": [
                        "assert (searchXY b = a).",
                        "VernacExtend",
                        "489e76b42a2ecee3ffe4a881ee9dad3fc09dee59"
                    ]
                },
                {
                    "command": [
                        "apply cPairProjectionsHelp; auto.",
                        "VernacExtend",
                        "aa5dfe7748e094852f64dd423e6351aace49a2a2"
                    ]
                },
                {
                    "command": [
                        "unfold cPair in |- *.",
                        "VernacExtend",
                        "abd50f61dd3aec074899a302dd95c99d7eb256da"
                    ]
                },
                {
                    "command": [
                        "replace (cPairPi1 b + cPairPi2 b) with a.",
                        "VernacExtend",
                        "9e0979c912f6f543c9bbe52cd97b09312586b201"
                    ]
                },
                {
                    "command": [
                        "unfold cPairPi1 in |- *.",
                        "VernacExtend",
                        "e40dd9735213ecde35e01bd0af496f9d8e166a07"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus.",
                        "VernacExtend",
                        "df54f8f5861a03109d3b268120c5e39a79d41d20"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold cPairPi2 in |- *.",
                        "VernacExtend",
                        "b42a1507c260a66b28100a27a75ed916084de1fb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus.",
                        "VernacExtend",
                        "df54f8f5861a03109d3b268120c5e39a79d41d20"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold cPairPi1 in |- *.",
                        "VernacExtend",
                        "e40dd9735213ecde35e01bd0af496f9d8e166a07"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m : nat => plus_le_reg_l n m p) with (sumToN a).",
                        "VernacExtend",
                        "51fefc9e8db15f77bc989d75b5e6ccfb2388d5cd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus.",
                        "VernacExtend",
                        "df54f8f5861a03109d3b268120c5e39a79d41d20"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sm_le.",
                        "VernacExtend",
                        "354c1d072708776c26f2aab2afa0945822d0815b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Hreca.",
                        "VernacExtend",
                        "6fc9468528c6f36692617e8183c9aa731135bf44"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H with (S a).",
                        "VernacExtend",
                        "1fc0fd842cc2b73527fea652d1b7136c99fd14cd"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S a).",
                        "VernacExtend",
                        "57041d4f0b32787a5dba46aaa3c00bc5db724286"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "apply sumToN1.",
                        "VernacExtend",
                        "833d8ae912b25ac3b6f69961d0bb36d00b33a0bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "searchXYIsPR",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "unfold searchXY in |- *.",
                        "VernacExtend",
                        "f15cf6fc733d5b8dadab567192ae482710467307"
                    ]
                },
                {
                    "command": [
                        "apply boundSearchIsPR with (P := fun a y : nat => ltBool a (sumToN (S y))).",
                        "VernacExtend",
                        "00dde0dd4ec71912d55919fb11ca8bea777c7470"
                    ]
                },
                {
                    "command": [
                        "unfold isPRrel in |- *.",
                        "VernacExtend",
                        "6d98e12be7c05bdc572e2f26b0ae95c605885208"
                    ]
                },
                {
                    "command": [
                        "apply compose2_2IsPR with (h := charFunction 2 ltBool) (f := fun a y : nat => a) (g := fun a y : nat => sumToN (S y)).",
                        "VernacExtend",
                        "aa8df4f3c7639f4892a8585dc759c2df61b02dc7"
                    ]
                },
                {
                    "command": [
                        "apply pi1_2IsPR.",
                        "VernacExtend",
                        "de83e3a673d46ec194b97a67a98b94cf405137bf"
                    ]
                },
                {
                    "command": [
                        "apply filter01IsPR with (g := fun y : nat => sumToN (S y)).",
                        "VernacExtend",
                        "7cd4629cc5e273f7b5324a8c7b3334b99740d342"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR.",
                        "VernacExtend",
                        "9921406eb1ce66f3429e19cb4b6f5468429ee619"
                    ]
                },
                {
                    "command": [
                        "apply succIsPR.",
                        "VernacExtend",
                        "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
                    ]
                },
                {
                    "command": [
                        "apply sumToNIsPR.",
                        "VernacExtend",
                        "18d4487529ed26fc4a102796d692e818f64dd984"
                    ]
                },
                {
                    "command": [
                        "apply ltIsPR.",
                        "VernacExtend",
                        "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairPi1IsPR",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "unfold cPairPi1 in |- *.",
                        "VernacExtend",
                        "e40dd9735213ecde35e01bd0af496f9d8e166a07"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (g := minus) (f := fun x : nat => x) (f' := fun a : nat => sumToN (searchXY a)).",
                        "VernacExtend",
                        "742c8244bac4b2a88afd3305572df89c2c014584"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR.",
                        "VernacExtend",
                        "9921406eb1ce66f3429e19cb4b6f5468429ee619"
                    ]
                },
                {
                    "command": [
                        "apply searchXYIsPR.",
                        "VernacExtend",
                        "ad4e113883e80bd9cb6bbeb958e13dd0856eb22b"
                    ]
                },
                {
                    "command": [
                        "apply sumToNIsPR.",
                        "VernacExtend",
                        "18d4487529ed26fc4a102796d692e818f64dd984"
                    ]
                },
                {
                    "command": [
                        "apply minusIsPR.",
                        "VernacExtend",
                        "065f2551340f5d516a958dedbc9b9d09920c86cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairPi2IsPR",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "unfold cPairPi2 in |- *.",
                        "VernacExtend",
                        "b42a1507c260a66b28100a27a75ed916084de1fb"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (g := minus) (f := searchXY) (f' := cPairPi1).",
                        "VernacExtend",
                        "176caadf35aaf62ca9f2713a44d728879d32f89e"
                    ]
                },
                {
                    "command": [
                        "apply searchXYIsPR.",
                        "VernacExtend",
                        "ad4e113883e80bd9cb6bbeb958e13dd0856eb22b"
                    ]
                },
                {
                    "command": [
                        "apply cPairPi1IsPR.",
                        "VernacExtend",
                        "4bac551b247f32e958ed42e3ad9b87d435edb811"
                    ]
                },
                {
                    "command": [
                        "apply minusIsPR.",
                        "VernacExtend",
                        "065f2551340f5d516a958dedbc9b9d09920c86cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairProjections1",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cPair in |- *.",
                        "VernacExtend",
                        "abd50f61dd3aec074899a302dd95c99d7eb256da"
                    ]
                },
                {
                    "command": [
                        "unfold cPairPi1 in |- *.",
                        "VernacExtend",
                        "e40dd9735213ecde35e01bd0af496f9d8e166a07"
                    ]
                },
                {
                    "command": [
                        "replace (searchXY (a + sumToN (a + b))) with (a + b).",
                        "VernacExtend",
                        "563aa0d6551a251941008a78e45701a5b5cb7b95"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "apply minus_plus.",
                        "VernacExtend",
                        "04e8c71f9155efe89ef3c9498d0cef9fe5c3ddbb"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "apply cPairProjectionsHelp.",
                        "VernacExtend",
                        "7fb69a85bb28cbde32ecf42d83de5fbb92c53bdd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_n_Sm.",
                        "VernacExtend",
                        "f92329fc5a21d6fff46401efc5d5a45be946b12c"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat_r.",
                        "VernacExtend",
                        "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_r.",
                        "VernacExtend",
                        "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairProjections2",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cPairPi2 in |- *.",
                        "VernacExtend",
                        "b42a1507c260a66b28100a27a75ed916084de1fb"
                    ]
                },
                {
                    "command": [
                        "rewrite cPairProjections1.",
                        "VernacExtend",
                        "2aeb03f60ab3e427170cb96956a5648ecc7ae528"
                    ]
                },
                {
                    "command": [
                        "unfold cPair in |- *.",
                        "VernacExtend",
                        "abd50f61dd3aec074899a302dd95c99d7eb256da"
                    ]
                },
                {
                    "command": [
                        "replace (searchXY (a + sumToN (a + b))) with (a + b).",
                        "VernacExtend",
                        "563aa0d6551a251941008a78e45701a5b5cb7b95"
                    ]
                },
                {
                    "command": [
                        "apply minus_plus.",
                        "VernacExtend",
                        "04e8c71f9155efe89ef3c9498d0cef9fe5c3ddbb"
                    ]
                },
                {
                    "command": [
                        "symmetry in |- *.",
                        "VernacExtend",
                        "dc33a39a53e296ef5e59fd831d55212be2a42f22"
                    ]
                },
                {
                    "command": [
                        "apply cPairProjectionsHelp.",
                        "VernacExtend",
                        "7fb69a85bb28cbde32ecf42d83de5fbb92c53bdd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_n_Sm.",
                        "VernacExtend",
                        "f92329fc5a21d6fff46401efc5d5a45be946b12c"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat_r.",
                        "VernacExtend",
                        "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_r.",
                        "VernacExtend",
                        "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairLe1",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cPair in |- *.",
                        "VernacExtend",
                        "abd50f61dd3aec074899a302dd95c99d7eb256da"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairLe1A",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (cPair (cPairPi1 a) (cPairPi2 a)).",
                        "VernacExtend",
                        "0159055c655263e4c72ff7ea0462384f8a603d1c"
                    ]
                },
                {
                    "command": [
                        "apply cPairLe1.",
                        "VernacExtend",
                        "273d467bdcab30f1cf5e460652e5c74f67b1471b"
                    ]
                },
                {
                    "command": [
                        "rewrite cPairProjections.",
                        "VernacExtend",
                        "c3175365627fe539261822cb2060e943f0ca0952"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairLe2A",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (cPair (cPairPi1 a) (cPairPi2 a)).",
                        "VernacExtend",
                        "0159055c655263e4c72ff7ea0462384f8a603d1c"
                    ]
                },
                {
                    "command": [
                        "apply cPairLe2.",
                        "VernacExtend",
                        "318e030685487083b7f09f04b3c45f941127c60e"
                    ]
                },
                {
                    "command": [
                        "rewrite cPairProjections.",
                        "VernacExtend",
                        "c3175365627fe539261822cb2060e943f0ca0952"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairLe3",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cPair in |- *.",
                        "VernacExtend",
                        "abd50f61dd3aec074899a302dd95c99d7eb256da"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (a + sumToN (b + d)).",
                        "VernacExtend",
                        "3e686c70b0fb9eda627f9d68662234a89fc071fb"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat_l.",
                        "VernacExtend",
                        "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
                    ]
                },
                {
                    "command": [
                        "apply sumToN2.",
                        "VernacExtend",
                        "8534447e695848ecfa22ba71969dbc6019dbef7a"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (a + d).",
                        "VernacExtend",
                        "99fb9051c9fe4d4668e25f8e32ac03314599fa7a"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat_l.",
                        "VernacExtend",
                        "0b54a9a94d1f4251de3f3aca0ea73ceff51e1f05"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat_r.",
                        "VernacExtend",
                        "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat_r.",
                        "VernacExtend",
                        "833b5a32f0610ff2547bf68889db0eaa0ae96d48"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cPairLt1",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold cPair in |- *.",
                        "VernacExtend",
                        "abd50f61dd3aec074899a302dd95c99d7eb256da"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm a (S b)).",
                        "VernacExtend",
                        "4661717f69509744300b533f220f7fa7d554ec08"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "unfold lt in |- *.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeNth",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert nat.",
                        "VernacExtend",
                        "0cb7419463a8688877148e63e7c8a05c3a8386e2"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "exact m.",
                        "VernacExtend",
                        "8d7948dfc26fba51657e330970affde86df14ee0"
                    ]
                },
                {
                    "command": [
                        "exact (cPairPi2 (pred Hrecn)).",
                        "VernacExtend",
                        "e59738d08d09ed106a284773dd51aa5d7566c896"
                    ]
                },
                {
                    "command": [
                        "exact (cPairPi1 (pred H)).",
                        "VernacExtend",
                        "a0d5c28d935b9420b2c58a57a86e859607c34655"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "drop",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "exact (fun l => l).",
                        "VernacExtend",
                        "e627184822054eefa34e4d1534d8de392f1f41e7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "exact (nil (A:=nat)).",
                        "VernacExtend",
                        "3fb88bfb56addadf6a7a6083eeda9ed9bd6be21a"
                    ]
                },
                {
                    "command": [
                        "exact l.",
                        "VernacExtend",
                        "efa2b6abdbd0965137045bcf56cd8ae18b3db15c"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "codeNthCorrect",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "unfold codeNth in |- *.",
                        "VernacExtend",
                        "9d8e0dbd610e066c269e4d361f6b39760fe38561"
                    ]
                },
                {
                    "command": [
                        "set (A := fun l : list nat => match l with | nil => nil (A:=nat) | _ :: l0 => l0 end) in *.",
                        "VernacExtend",
                        "155ed760eae31361c3f8ec5f62ad66dfa3f26116"
                    ]
                },
                {
                    "command": [
                        "assert (forall l : list nat, cPairPi2 (pred (codeList l)) = codeList (A l)).",
                        "VernacExtend",
                        "af9ca6bef7e125ce94a182332ee6f1ee7540ccde"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (cPairProjections2 0 0).",
                        "VernacExtend",
                        "f3b13ad544fac0b86847aee1255d3391551556e5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply cPairProjections2.",
                        "VernacExtend",
                        "428a2ef63747d3d8f75cdd3ddcf906d1ca882db2"
                    ]
                },
                {
                    "command": [
                        "assert (forall (n : nat) (l : list nat), nat_rec (fun _ : nat => nat) (codeList l) (fun _ Hrecn : nat => cPairPi2 (pred Hrecn)) n = codeList (drop n l)).",
                        "VernacExtend",
                        "d0c0dfbba970bb4d333edabbefe5dc9598b2f567"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "unfold A in |- *.",
                        "VernacExtend",
                        "3d4031a5dbdaa51031d69f7b1bd339e3135314dd"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "generalize l.",
                        "VernacExtend",
                        "fbcff490b75c6cf309de9bddda3dcc2e7000171f"
                    ]
                },
                {
                    "command": [
                        "clear l.",
                        "VernacExtend",
                        "fea3fd0af2a95dd56fb8262ccfbea1340d887dc7"
                    ]
                },
                {
                    "command": [
                        "induction n0 as [| n0 Hrecn0]; simpl in |- *; intros.",
                        "VernacExtend",
                        "2a84624435c4fab39b116292cbd3104740ee14e4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "apply (Hrecn0 nil).",
                        "VernacExtend",
                        "62846589f15ea8938fe64daea9c661610eee61f5"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn0.",
                        "VernacExtend",
                        "8921784bf742d83fe7f3361dd8f1a13794ab6947"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (nth n l 0) with match drop n l with | nil => 0 | a :: _ => a end.",
                        "VernacExtend",
                        "c4c2e30b67dc668e09a5fc0e3c1ea73e3a3384f5"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "destruct (drop n l).",
                        "VernacExtend",
                        "31c34ab236f9aab182bd9557572e968681936d45"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply (cPairProjections1 0 0).",
                        "VernacExtend",
                        "ada3907ab05fc23ffb78bc3d698eaec1bbe21df3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply cPairProjections1.",
                        "VernacExtend",
                        "935e33e08920195b4c882741c145613fc5548736"
                    ]
                },
                {
                    "command": [
                        "generalize l.",
                        "VernacExtend",
                        "fbcff490b75c6cf309de9bddda3dcc2e7000171f"
                    ]
                },
                {
                    "command": [
                        "clear l.",
                        "VernacExtend",
                        "fea3fd0af2a95dd56fb8262ccfbea1340d887dc7"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "destruct l; reflexivity.",
                        "VernacExtend",
                        "42b473bf3e8933eacdf63f985b424a7e6c62ee2e"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "simpl in Hrecn.",
                        "VernacExtend",
                        "ea968db343458b0b39ad686acf58fda153877d43"
                    ]
                },
                {
                    "command": [
                        "destruct n; apply (Hrecn nil).",
                        "VernacExtend",
                        "a21852ad9214cc03ed1d60826e8cc8663e3e7a3c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "codeNthIsPR",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold codeNth in |- *.",
                        "VernacExtend",
                        "9d8e0dbd610e066c269e4d361f6b39760fe38561"
                    ]
                },
                {
                    "command": [
                        "apply compose2_1IsPR with (g := fun x : nat => cPairPi1 (pred x)) (f := fun n m : nat => nat_rec (fun _ : nat => nat) m (fun _ Hrecn : nat => cPairPi2 (pred Hrecn)) n).",
                        "VernacExtend",
                        "a3aa7637567d4ba80c3537e7d6d674a3f07f9442"
                    ]
                },
                {
                    "command": [
                        "apply ind1ParamIsPR with (g := fun m : nat => m) (f := fun _ Hrecn m : nat => cPairPi2 (pred Hrecn)).",
                        "VernacExtend",
                        "bcccde4bbf9fc6bd7f9e1677869a265d357d814a"
                    ]
                },
                {
                    "command": [
                        "apply filter010IsPR with (g := fun x : nat => cPairPi2 (pred x)).",
                        "VernacExtend",
                        "fe236e7782046e9d71a51726746eb5f629c5499a"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR.",
                        "VernacExtend",
                        "9921406eb1ce66f3429e19cb4b6f5468429ee619"
                    ]
                },
                {
                    "command": [
                        "apply predIsPR.",
                        "VernacExtend",
                        "997e71cc9af65178f66c42c7c23c11ad0d929df2"
                    ]
                },
                {
                    "command": [
                        "apply cPairPi2IsPR.",
                        "VernacExtend",
                        "576d617c91a7b31dc0407d020f8adc0e8302f05d"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR.",
                        "VernacExtend",
                        "9921406eb1ce66f3429e19cb4b6f5468429ee619"
                    ]
                },
                {
                    "command": [
                        "apply predIsPR.",
                        "VernacExtend",
                        "997e71cc9af65178f66c42c7c23c11ad0d929df2"
                    ]
                },
                {
                    "command": [
                        "apply cPairPi1IsPR.",
                        "VernacExtend",
                        "4bac551b247f32e958ed42e3ad9b87d435edb811"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evalStrongRecIsPR",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRec, evalStrongRecHelp in |- *.",
                        "VernacExtend",
                        "08640daf5906ca4b9295ed95a8904e7cee1c94da"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc (S n)) in |- *.",
                        "VernacExtend",
                        "896ce7fc93450ce2ccb62ec676d2dd211fa921ae"
                    ]
                },
                {
                    "command": [
                        "set (A := evalPrimRecFunc n (evalComposeFunc n 0 (Vector.nil (naryFunc n)) (codeList nil)) (evalComposeFunc (S (S n)) 2 (Vector.cons (naryFunc (S (S n))) f 1 (Vector.cons (naryFunc (S (S n))) (evalProjFunc (S (S n)) n (lt_S n (S n) (lt_n_Sn n))) 0 (Vector.nil (naryFunc (S (S n)))))) (fun a b : nat => S (cPair a b)))) in *.",
                        "VernacExtend",
                        "e867060017818626152193840968e30f5f9f4b50"
                    ]
                },
                {
                    "command": [
                        "assert (isPR (S n) A).",
                        "VernacExtend",
                        "838c51ec6b2c527b3401507d2ed3803b4603b22f"
                    ]
                },
                {
                    "command": [
                        "unfold A in |- *.",
                        "VernacExtend",
                        "3d4031a5dbdaa51031d69f7b1bd339e3135314dd"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 (fun a b : nat => S (cPair a b))).",
                        "VernacExtend",
                        "129173588f63d562f39c591e18577454910171d2"
                    ]
                },
                {
                    "command": [
                        "apply compose2_1IsPR.",
                        "VernacExtend",
                        "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
                    ]
                },
                {
                    "command": [
                        "apply cPairIsPR.",
                        "VernacExtend",
                        "f8a5b87c0a2d77125868da28d8368de40c2103e9"
                    ]
                },
                {
                    "command": [
                        "apply succIsPR.",
                        "VernacExtend",
                        "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 1 (fun z : nat => cPairPi1 (pred z))).",
                        "VernacExtend",
                        "8b4cec83b8f9e12a479017683345656497d06c8c"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR.",
                        "VernacExtend",
                        "9921406eb1ce66f3429e19cb4b6f5468429ee619"
                    ]
                },
                {
                    "command": [
                        "apply predIsPR.",
                        "VernacExtend",
                        "997e71cc9af65178f66c42c7c23c11ad0d929df2"
                    ]
                },
                {
                    "command": [
                        "apply cPairPi1IsPR.",
                        "VernacExtend",
                        "4bac551b247f32e958ed42e3ad9b87d435edb811"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0).",
                        "VernacExtend",
                        "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1).",
                        "VernacExtend",
                        "c242d8fed3efc7692a00ad85d4e185b69ca69594"
                    ]
                },
                {
                    "command": [
                        "exists (primRecFunc n (composeFunc n 0 (PRnil _) zeroFunc) (composeFunc (S (S n)) 2 (PRcons _ _ x (PRcons _ _ (projFunc (S (S n)) n (lt_S n (S n) (lt_n_Sn n))) (PRnil _))) x0)).",
                        "VernacExtend",
                        "205b4da7fbd69f083d3a7455c1a03ff67a8776cf"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalPrimRecFunc n (evalComposeFunc n 0 (Vector.nil _) 0) (evalComposeFunc (S (S n)) 2 (Vector.cons _ (evalPrimRec _ x) _ (Vector.cons _ (evalProjFunc (S (S n)) n (lt_S n (S n) (lt_n_Sn n))) _ (Vector.nil _))) (evalPrimRec _ x0))).",
                        "VernacExtend",
                        "fce5a17cc2b2fe71bc85e50eaacb3cab981399e0"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply extEqualPrimRec.",
                        "VernacExtend",
                        "52893b892d5541e8d2adf83a296727e0b28a5429"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector, extEqualVectorGeneral, Vector.t_rect in |- *.",
                        "VernacExtend",
                        "b917e16c802b1e1febf8cf9dcca0b6a664b6517d"
                    ]
                },
                {
                    "command": [
                        "repeat split; auto.",
                        "VernacExtend",
                        "68be7c4701ceff95aa9f283aa43fa2774d48c7a0"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (isPR (S n) (fun z : nat => A (S z))).",
                        "VernacExtend",
                        "550d26f94d5d64a1a7f00b88eb3e9d15c48cd3ee"
                    ]
                },
                {
                    "command": [
                        "apply compose1_NIsPR.",
                        "VernacExtend",
                        "15af4ab2a2a66478ac68a10e7c5b7090aa31e86e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply succIsPR.",
                        "VernacExtend",
                        "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 1 (fun z : nat => cPairPi1 (pred z))).",
                        "VernacExtend",
                        "8b4cec83b8f9e12a479017683345656497d06c8c"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR.",
                        "VernacExtend",
                        "9921406eb1ce66f3429e19cb4b6f5468429ee619"
                    ]
                },
                {
                    "command": [
                        "apply predIsPR.",
                        "VernacExtend",
                        "997e71cc9af65178f66c42c7c23c11ad0d929df2"
                    ]
                },
                {
                    "command": [
                        "apply cPairPi1IsPR.",
                        "VernacExtend",
                        "4bac551b247f32e958ed42e3ad9b87d435edb811"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, p).",
                        "VernacExtend",
                        "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x0, p0).",
                        "VernacExtend",
                        "076633e77e72eb5b45f12e88e8e8562ed864107c"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc (S n) 1 (PRcons _ _ x0 (PRnil _)) x).",
                        "VernacExtend",
                        "21ebb6e88b66200e72767893fda66ebd9e36f736"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply (p0 c).",
                        "VernacExtend",
                        "640672e86f95efa48e08605854f0481c024f9876"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "computeEvalStrongRecHelp",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRecHelp at 1 in |- *.",
                        "VernacExtend",
                        "f2d80934908cb1d0353d0bee1293e6b9ff9fb10c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n (S n)).",
                        "VernacExtend",
                        "080500546a2cee35087e4a196c5e0a280bcf3567"
                    ]
                },
                {
                    "command": [
                        "elim (lt_not_le n (S n)).",
                        "VernacExtend",
                        "5a8c6a146707278bb4dfbb271951b55733f821e8"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "rewrite <- a.",
                        "VernacExtend",
                        "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n n).",
                        "VernacExtend",
                        "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
                    ]
                },
                {
                    "command": [
                        "replace (evalPrimRecFunc n (evalComposeFunc n 0 (Vector.nil (naryFunc n)) 0) (fun a0 a1 : nat => evalComposeFunc n 2 (Vector.cons (naryFunc n) (f a0 a1) 1 (Vector.cons (naryFunc n) (evalConstFunc n a1) 0 (Vector.nil (naryFunc n)))) (fun a2 b0 : nat => S (cPair a2 b0))) c) with (evalStrongRecHelp n f c).",
                        "VernacExtend",
                        "164046517fb55e5f3f10073932b34b798c17346c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRecHelp at 1 in |- *.",
                        "VernacExtend",
                        "f2d80934908cb1d0353d0bee1293e6b9ff9fb10c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n (S n)).",
                        "VernacExtend",
                        "080500546a2cee35087e4a196c5e0a280bcf3567"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n n).",
                        "VernacExtend",
                        "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim b1.",
                        "VernacExtend",
                        "e56693198c91ed42bdd9da7d5e65f768de914997"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "elim b0.",
                        "VernacExtend",
                        "4506652c796867e8c9be690f8925bec68461304f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "listValues",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "exact nil.",
                        "VernacExtend",
                        "221463c73c88586bbdeb2d7fddb75313a7dd5887"
                    ]
                },
                {
                    "command": [
                        "exact (evalStrongRec _ f n :: Hrecn).",
                        "VernacExtend",
                        "29bdc0f15de0ba2d1131ed277d4b07a5b0ac6ed2"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "evalStrongRecHelp1",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "assert (forall (f : naryFunc 2) (n : nat), evalStrongRecHelp _ f n = codeList (listValues f n)).",
                        "VernacExtend",
                        "a78f1aa76ce2716074e9bcad37a9889ec2e42de9"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRecHelp in |- *.",
                        "VernacExtend",
                        "5b0f3071c6ffa54c20053804eb3ee6e205169d9c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRecHelp in |- *.",
                        "VernacExtend",
                        "5b0f3071c6ffa54c20053804eb3ee6e205169d9c"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRecHelp in Hrecn.",
                        "VernacExtend",
                        "0b6b311fda67aa2e97e604979c820c67c6f52b8d"
                    ]
                },
                {
                    "command": [
                        "simpl in Hrecn.",
                        "VernacExtend",
                        "ea968db343458b0b39ad686acf58fda153877d43"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn.",
                        "VernacExtend",
                        "9f2f9eb25208250dc135a15348250f012f2be502"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRec in |- *.",
                        "VernacExtend",
                        "4cf49f2247395396309d3b668fa7008ed75287b9"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite cPairProjections1.",
                        "VernacExtend",
                        "2aeb03f60ab3e427170cb96956a5648ecc7ae528"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn.",
                        "VernacExtend",
                        "9f2f9eb25208250dc135a15348250f012f2be502"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite codeNthCorrect.",
                        "VernacExtend",
                        "e592f2c2ee22d4983e21fb209ded6b6765143586"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ H0).",
                        "VernacExtend",
                        "231f0ea2a5259bce18c0d5de01a49b4f7ab8b30e"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_or_eq _ _ H0).",
                        "VernacExtend",
                        "86cf13b389eca13e2e02416cb22c7982f40bd28d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_Sn_m.",
                        "VernacExtend",
                        "808a21c00826f53fd5122068d41d20a5b1758aff"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn.",
                        "VernacExtend",
                        "9f2f9eb25208250dc135a15348250f012f2be502"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n.",
                        "VernacExtend",
                        "0207638f6e9dea4c2a8a3945f23446b376d8318e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sm_le.",
                        "VernacExtend",
                        "354c1d072708776c26f2aab2afa0945822d0815b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n.",
                        "VernacExtend",
                        "a1971924636c60393251f10dbf5ec735a2ebc0d9"
                    ]
                },
                {
                    "command": [
                        "clear H3 H1 Hrecn H0 m.",
                        "VernacExtend",
                        "912747e92adea0cfea163b2ecbde7c5aacd43d28"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evalStrongRecHelp2",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc a) in |- *.",
                        "VernacExtend",
                        "5aaa6dc2ab8a20287b5c7348ff0cf6d6238cfd90"
                    ]
                },
                {
                    "command": [
                        "induction a as [| a Hreca].",
                        "VernacExtend",
                        "3b09b8ca995ac21355e2604c0f694eb4a294ab43"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply evalStrongRecHelp1.",
                        "VernacExtend",
                        "b66ee36b34d33853449f0a197c7c825ef0a995d4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc a) in |- *.",
                        "VernacExtend",
                        "5aaa6dc2ab8a20287b5c7348ff0cf6d6238cfd90"
                    ]
                },
                {
                    "command": [
                        "set (g := fun x y : nat => f x y c) in *.",
                        "VernacExtend",
                        "fb6374067f252395c4b33d08d2dcf19c41df7e2f"
                    ]
                },
                {
                    "command": [
                        "assert (extEqual a (evalComposeFunc a 1 (Vector.cons (naryFunc a) (evalStrongRecHelp a g n) 0 (Vector.nil (naryFunc a))) (fun b : nat => codeNth (n - S m) b)) (evalStrongRec a g m)).",
                        "VernacExtend",
                        "3b1709bf1643564921b4045c0cdb3d791fa9d2d0"
                    ]
                },
                {
                    "command": [
                        "apply Hreca.",
                        "VernacExtend",
                        "6fc9468528c6f36692617e8183c9aa731135bf44"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "unfold g in H0.",
                        "VernacExtend",
                        "85fcbb8dfc7b55c0fa77e07b3b235f42409f222b"
                    ]
                },
                {
                    "command": [
                        "clear g Hreca.",
                        "VernacExtend",
                        "e51c622b1ce46eae3489ac3ad72962d7ab425f44"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalStrongRec a (fun x y : nat => f x y c) m).",
                        "VernacExtend",
                        "8b4f6859d543d2f1bae22498fb847c73d7430687"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc a 1 (Vector.cons (naryFunc a) (evalStrongRecHelp a (fun x y : nat => f x y c) n) 0 (Vector.nil (naryFunc a))) (fun b : nat => codeNth (n - S m) b)).",
                        "VernacExtend",
                        "f3b2ecb8e027a2e19549bb3afbc1a282ddcbcf45"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply evalStrongRecHelpParam.",
                        "VernacExtend",
                        "a6c289867777847d3a3d8222048274c72c7b5eb4"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "unfold evalStrongRec in |- *.",
                        "VernacExtend",
                        "4cf49f2247395396309d3b668fa7008ed75287b9"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc a) in |- *.",
                        "VernacExtend",
                        "5aaa6dc2ab8a20287b5c7348ff0cf6d6238cfd90"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply extEqualSym.",
                        "VernacExtend",
                        "8139d37ad614cdf54a9a845deca0627767f9a131"
                    ]
                },
                {
                    "command": [
                        "apply evalStrongRecHelpParam.",
                        "VernacExtend",
                        "a6c289867777847d3a3d8222048274c72c7b5eb4"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "callIsPR",
            "line_nb": 623,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply compose2_2IsPR with (f := fun a recs : nat => a - S (g a)) (g := fun a recs : nat => recs).",
                        "VernacExtend",
                        "f1711f9df65f69ac21722ce3571582af9e3f51cc"
                    ]
                },
                {
                    "command": [
                        "apply filter10IsPR with (g := fun a : nat => a - S (g a)).",
                        "VernacExtend",
                        "bfe742c682f69883a5e0fea9dc24714baa7aecda"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (f := fun a : nat => a) (f' := fun a : nat => S (g a)).",
                        "VernacExtend",
                        "e72d9c47615345d3aa8cca9fbfe12f5ef85ac635"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply compose1_1IsPR.",
                        "VernacExtend",
                        "9921406eb1ce66f3429e19cb4b6f5468429ee619"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply succIsPR.",
                        "VernacExtend",
                        "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
                    ]
                },
                {
                    "command": [
                        "apply minusIsPR.",
                        "VernacExtend",
                        "065f2551340f5d516a958dedbc9b9d09920c86cc"
                    ]
                },
                {
                    "command": [
                        "apply pi2_2IsPR.",
                        "VernacExtend",
                        "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
                    ]
                },
                {
                    "command": [
                        "apply codeNthIsPR.",
                        "VernacExtend",
                        "c8fe7117bd7c4ce7a2c8812ec8e21dd42b250732"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}