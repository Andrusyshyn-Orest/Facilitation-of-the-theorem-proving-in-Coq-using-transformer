{
    "filename": "primRec.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Require Import Peano_dec.",
            "VernacRequire",
            "5f49ca778918c88f400242f11d696ec23079b44f"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "Require Import Coq.Lists.List.",
            "VernacRequire",
            "3f8620a911f16f9e8918ea7512dbb594c917da38"
        ],
        [
            "Require Import Eqdep_dec.",
            "VernacRequire",
            "3df4d5c5706856734a53d6d3e96f8d8cd6d87f23"
        ],
        [
            "Require Import extEqualNat.",
            "VernacRequire",
            "b54dcb28a918e1b7add174b81952c2b30a6e435b"
        ],
        [
            "Require Vector.",
            "VernacRequire",
            "145bcbe9535700f6fddf277a7fc43bb4df45a9f9"
        ],
        [
            "Require Import misc.",
            "VernacRequire",
            "cb0a0f95cbb16dccbd6e9271405cb8d23475f804"
        ],
        [
            "Require Export Bool.",
            "VernacRequire",
            "500cc19db69e98518370a848222fb5a92821e8f8"
        ],
        [
            "Require Export EqNat.",
            "VernacRequire",
            "317fb41f3347a0d718b0eec0414bdfd0a93d422f"
        ],
        [
            "Require Import Even.",
            "VernacRequire",
            "69da947c62598dadd17a168638c6bce04a4d0bdf"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "Inductive PrimRec : nat -> Set := | succFunc : PrimRec 1 | zeroFunc : PrimRec 0 | projFunc : forall n m : nat, m < n -> PrimRec n | composeFunc : forall (n m : nat) (g : PrimRecs n m) (h : PrimRec m), PrimRec n | primRecFunc : forall (n : nat) (g : PrimRec n) (h : PrimRec (S (S n))), PrimRec (S n) with PrimRecs : nat -> nat -> Set := | PRnil : forall n : nat, PrimRecs n 0 | PRcons : forall n m : nat, PrimRec n -> PrimRecs n m -> PrimRecs n (S m).",
            "VernacInductive",
            "e869d40b4b2916efb5e554364551ac8558f1eb98"
        ],
        [
            "Scheme PrimRec_PrimRecs_rec := Induction for PrimRec Sort Set with PrimRecs_PrimRec_rec := Induction for PrimRecs Sort Set.",
            "VernacScheme",
            "617ed590064784827113cf2b9a7838b126f8aa17"
        ],
        [
            "Scheme PrimRec_PrimRecs_ind := Induction for PrimRec Sort Prop with PrimRecs_PrimRec_ind := Induction for PrimRecs Sort Prop.",
            "VernacScheme",
            "de7674e2c904e32210446fbb6702d51a84615d79"
        ],
        [
            "Fixpoint evalConstFunc (n m : nat) {struct n} : naryFunc n := match n return (naryFunc n) with | O => m | S n' => fun _ => evalConstFunc n' m end.",
            "VernacFixpoint",
            "46054ffa0f7a5f9380309861319db6517cea024e"
        ],
        [
            "Fixpoint evalProjFunc (n : nat) : forall m : nat, m < n -> naryFunc n := match n return (forall m : nat, m < n -> naryFunc n) with | O => fun (m : nat) (l : m < 0) => False_rec _ (lt_n_O _ l) | S n' => fun (m : nat) (l : m < S n') => match eq_nat_dec m n' with | left _ => fun a : nat => evalConstFunc _ a | right l1 => fun _ => evalProjFunc n' m match le_lt_or_eq _ _ (lt_n_Sm_le _ _ l) with | or_introl l2 => l2 | or_intror l2 => False_ind _ (l1 l2) end end end.",
            "VernacFixpoint",
            "da51c1b65fd27a02cbb93263162bfcdea4ac7b60"
        ],
        [
            "Lemma evalProjFuncInd : forall (n m : nat) (p1 p2 : m < n), evalProjFunc n m p1 = evalProjFunc n m p2.",
            "VernacStartTheoremProof",
            "3c94b580e0a5139c60ed0e49af58cb9d690678c5"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (lt_n_O _ p1).",
            "VernacExtend",
            "a5d88a2c225e66d07492ad330702e6e64bb7d687"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (eq_nat_dec m n).",
            "VernacExtend",
            "9d41f8d7f176093066f76471eee46964d7b42ca0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite (Hrecn _ match le_lt_or_eq m n (lt_n_Sm_le m n p1) with | or_introl l2 => l2 | or_intror l2 => False_ind (m < n) (b l2) end match le_lt_or_eq m n (lt_n_Sm_le m n p2) with | or_introl l2 => l2 | or_intror l2 => False_ind (m < n) (b l2) end).",
            "VernacExtend",
            "9da929afc65ad253fd7d1f2689b53d7de63384ae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint evalList (m : nat) (l : Vector.t nat m) {struct l} : naryFunc m -> nat := match l in (Vector.t _ m) return (naryFunc m -> nat) with | Vector.nil => fun x : naryFunc 0 => x | Vector.cons a n l' => fun x : naryFunc (S n) => evalList n l' (x a) end.",
            "VernacFixpoint",
            "23ef104ee6faae0cee6053ea83bbed754126073a"
        ],
        [
            "Fixpoint evalOneParamList (n m a : nat) (l : Vector.t (naryFunc (S n)) m) {struct l} : Vector.t (naryFunc n) m := match l in (Vector.t _ m) return (Vector.t (naryFunc n) m) with | Vector.nil => Vector.nil (naryFunc n) | Vector.cons f m' l' => Vector.cons _ (f a) m' (evalOneParamList n m' a l') end.",
            "VernacFixpoint",
            "b0f30696519c6c59fb85442b721a138cc8d907ad"
        ],
        [
            "Fixpoint evalComposeFunc (n : nat) : forall m : nat, Vector.t (naryFunc n) m -> naryFunc m -> naryFunc n := match n return (forall m : nat, Vector.t (naryFunc n) m -> naryFunc m -> naryFunc n) with | O => evalList | S n' => fun (m : nat) (l : Vector.t (naryFunc (S n')) m) (f : naryFunc m) (a : nat) => evalComposeFunc n' m (evalOneParamList _ _ a l) f end.",
            "VernacFixpoint",
            "d2bc4a0ceba3dafecdf9bfb58d15044a37f7687e"
        ],
        [
            "Fixpoint compose2 (n : nat) : naryFunc n -> naryFunc (S n) -> naryFunc n := match n return (naryFunc n -> naryFunc (S n) -> naryFunc n) with | O => fun (a : nat) (g : nat -> nat) => g a | S n' => fun (f : naryFunc (S n')) (g : naryFunc (S (S n'))) (a : nat) => compose2 n' (f a) (fun x : nat => g x a) end.",
            "VernacFixpoint",
            "0fd6be61c848a96fe0f9a64227c9bc89e5f949da"
        ],
        [
            "Fixpoint evalPrimRecFunc (n : nat) (g : naryFunc n) (h : naryFunc (S (S n))) (a : nat) {struct a} : naryFunc n := match a with | O => g | S a' => compose2 _ (evalPrimRecFunc n g h a') (h a') end.",
            "VernacFixpoint",
            "203c11ae11373a61f3ef7d28c04eed76256a014b"
        ],
        [
            "Fixpoint evalPrimRec (n : nat) (f : PrimRec n) {struct f} : naryFunc n := match f in (PrimRec n) return (naryFunc n) with | succFunc => S | zeroFunc => 0 | projFunc n m pf => evalProjFunc n m pf | composeFunc n m l f => evalComposeFunc n m (evalPrimRecs _ _ l) (evalPrimRec _ f) | primRecFunc n g h => evalPrimRecFunc n (evalPrimRec _ g) (evalPrimRec _ h) end with evalPrimRecs (n m : nat) (fs : PrimRecs n m) {struct fs} : Vector.t (naryFunc n) m := match fs in (PrimRecs n m) return (Vector.t (naryFunc n) m) with | PRnil a => Vector.nil (naryFunc a) | PRcons a b g gs => Vector.cons _ (evalPrimRec _ g) _ (evalPrimRecs _ _ gs) end.",
            "VernacFixpoint",
            "33c79beac5f4d0f31a2ed7f3391b8a831d5b1362"
        ],
        [
            "Definition extEqualVectorGeneral (n m : nat) (l : Vector.t (naryFunc n) m) : forall (m' : nat) (l' : Vector.t (naryFunc n) m'), Prop.",
            "VernacDefinition",
            "278a10395493338251cbe594bb50cdb2e7d97e08"
        ],
        [
            "induction l as [| a n0 l Hrecl].",
            "VernacExtend",
            "a1d92005a73320fa50a1f4d8a3af223f695e9d4e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l' as [| a n0 v].",
            "VernacExtend",
            "ba1ad78b0814a61b1157def0ef5eed0bc4ab1b44"
        ],
        [
            "exact True.",
            "VernacExtend",
            "b5c43874db95f600ccc8b514869bf5d7833ed4dc"
        ],
        [
            "exact False.",
            "VernacExtend",
            "ae3d9c0ecc9ffbe27866258a1e51267ec8491391"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l' as [| a0 n1 v].",
            "VernacExtend",
            "c6e2f69dbf5aa81e2e9fa786f1a094fbe015d8e6"
        ],
        [
            "exact False.",
            "VernacExtend",
            "ae3d9c0ecc9ffbe27866258a1e51267ec8491391"
        ],
        [
            "exact (extEqual n a a0 /\\ Hrecl _ v).",
            "VernacExtend",
            "9908126f878832e39cc849d32d66b405668c0ba7"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition extEqualVector n: forall m (l l' : Vector.t (naryFunc n) m), Prop.",
            "VernacDefinition",
            "fe739e75395402dce3c55d38b044948d99352415"
        ],
        [
            "refine (@Vector.rect2 _ _ _ _ _); intros.",
            "VernacExtend",
            "249069fffa69fd3d65536e0b2770250240fc518e"
        ],
        [
            "apply True.",
            "VernacExtend",
            "fe34c223d22449ec810a08d1ac598b2897c63cb5"
        ],
        [
            "apply (extEqual n a b /\\ X).",
            "VernacExtend",
            "ee9af9db1921ff0f13580c680920f66333cd1cdb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma extEqualVectorRefl : forall (n m : nat) (l : Vector.t (naryFunc n) m), extEqualVector n m l l.",
            "VernacStartTheoremProof",
            "8ad51f811b8a251ee6e6af07ca04b537f8ebdf15"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction l as [| a n0 l Hrecl].",
            "VernacExtend",
            "a1d92005a73320fa50a1f4d8a3af223f695e9d4e"
        ],
        [
            "now simpl.",
            "VernacExtend",
            "7cf8ae1595f521e6705ea84c45dd2f1b53854af2"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extEqualOneParamList : forall (n m : nat) (l1 l2 : Vector.t (naryFunc (S n)) m) (c : nat), extEqualVector (S n) m l1 l2 -> extEqualVector n m (evalOneParamList n m c l1) (evalOneParamList n m c l2).",
            "VernacStartTheoremProof",
            "076f176ef66468af1c70193e59f04ca3993b8241"
        ],
        [
            "intro; refine (@Vector.rect2 _ _ _ _ _); simpl; intros.",
            "VernacExtend",
            "ffb6cecd78d656630b0b3758da5c4753d8313635"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extEqualCompose : forall (n m : nat) (l1 l2 : Vector.t (naryFunc n) m) (f1 f2 : naryFunc m), extEqualVector n m l1 l2 -> extEqual m f1 f2 -> extEqual n (evalComposeFunc n m l1 f1) (evalComposeFunc n m l2 f2).",
            "VernacStartTheoremProof",
            "1256524192919c5c1c7def4c964723e9059b2ebb"
        ],
        [
            "induction n; refine (@Vector.rect2 _ _ _ _ _); simpl; intros.",
            "VernacExtend",
            "54f3d7affae4f3fdc7308a959e3f0553fa580dff"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H0; now (apply H; [|subst a]).",
            "VernacExtend",
            "e8598ea13d608f8374df2371a2a327327fa66b2d"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "destruct H0 as (Hi, Hj).",
            "VernacExtend",
            "9bf9dcedd724396e1dc28b2d2a6ef2f3e209dc3e"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Hi.",
            "VernacExtend",
            "b7959f73b24cea8febda147e5d8d404627f1652f"
        ],
        [
            "now apply extEqualOneParamList.",
            "VernacExtend",
            "40445aaa1e86629d83b24e3fad8bbba326a88aa9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extEqualCompose2 : forall (n : nat) (f1 f2 : naryFunc n), extEqual n f1 f2 -> forall g1 g2 : naryFunc (S n), extEqual (S n) g1 g2 -> extEqual n (compose2 n f1 g1) (compose2 n f2 g2).",
            "VernacStartTheoremProof",
            "45c1e7e7056943761707d8032b8e3058e6046ac1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction n as [| n Hrecn]; simpl in |- *; intros.",
            "VernacExtend",
            "51bd88ded8722029048b757ffb577841c2e26b54"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply Hrecn; simpl in |- *; intros; auto.",
            "VernacExtend",
            "7667836ccab2d713bf9fa45db05e7e2abb726228"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extEqualPrimRec : forall (n : nat) (g1 g2 : naryFunc n) (h1 h2 : naryFunc (S (S n))), extEqual n g1 g2 -> extEqual (S (S n)) h1 h2 -> extEqual (S n) (evalPrimRecFunc n g1 h1) (evalPrimRecFunc n g2 h2).",
            "VernacStartTheoremProof",
            "56456545cf2d10f09f920afd7d6a9329ac962971"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut (extEqual n (evalPrimRecFunc n g1 h1 c) (evalPrimRecFunc n g2 h2 c)).",
            "VernacExtend",
            "041c3bca9273ca4bad2e12cabc7721998309f727"
        ],
        [
            "cut (extEqual (S n) (h1 c) (h2 c)).",
            "VernacExtend",
            "6f101b32546024c14f57bf061b342ff849fbe399"
        ],
        [
            "generalize (h1 c) (h2 c) (evalPrimRecFunc n g1 h1 c) (evalPrimRecFunc n g2 h2 c).",
            "VernacExtend",
            "d1d58871179376f359432993e1df1587c8d3c9be"
        ],
        [
            "fold (naryFunc (S n)) in |- *.",
            "VernacExtend",
            "896ce7fc93450ce2ccb62ec676d2dd211fa921ae"
        ],
        [
            "clear Hrecc H0 h1 h2 g1 g2 H.",
            "VernacExtend",
            "c8b9c1585a24f990c63dc7c5f05087a8b94397f6"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in H0.",
            "VernacExtend",
            "a4a6a8421870dbf7255f8d031744eec32f12a941"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition isPR (n : nat) (f : naryFunc n) : Set := {p : PrimRec n | extEqual n (evalPrimRec _ p) f}.",
            "VernacDefinition",
            "73bb6982a62677364d47ee72a42d151316370a86"
        ],
        [
            "Definition isPRrel (n : nat) (R : naryRel n) : Set := isPR n (charFunction n R).",
            "VernacDefinition",
            "5ba8bb57886c7c6436cf3008814708de80f2228b"
        ],
        [
            "Lemma succIsPR : isPR 1 S.",
            "VernacStartTheoremProof",
            "ad34951cfb37f3bc8ae75a7e95c50ca6cb9cc4ed"
        ],
        [
            "exists succFunc.",
            "VernacExtend",
            "cc10084bf444deee1fc49c8d32b3453c7af59a47"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma const0_NIsPR : forall n : nat, isPR 0 n.",
            "VernacStartTheoremProof",
            "c3a8df055459b3c046db48bedcb34316c8d45489"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "exists zeroFunc.",
            "VernacExtend",
            "9b8894192874b27c012217ee4b6f4d92e210305e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) succFunc).",
            "VernacExtend",
            "ee0a6fa3194718024cf70505c8428cf41c393c07"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma const1_NIsPR : forall n : nat, isPR 1 (fun _ => n).",
            "VernacStartTheoremProof",
            "4195a0c23532f2b74e84f78be2e8b3ac3e9176a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (isPR 0 n).",
            "VernacExtend",
            "03b8644a3e318cfbd602f16a80629426d86c7958"
        ],
        [
            "apply const0_NIsPR.",
            "VernacExtend",
            "8a427edf922f9ef42dce08bace80762af444ae94"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists (composeFunc 1 _ (PRnil _) x).",
            "VernacExtend",
            "261cc3fa5df91f1725941103c001449f0dc0001d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma idIsPR : isPR 1 (fun x : nat => x).",
            "VernacStartTheoremProof",
            "9b71c6883e52b2a3a5ee7da36f8c26b989613bbe"
        ],
        [
            "assert (0 < 1).",
            "VernacExtend",
            "acf5a1655ca45e2d8fd17ee915cbc58e6badb8e4"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi1_2IsPR : isPR 2 (fun a b : nat => a).",
            "VernacStartTheoremProof",
            "8f9a5302adb89c44504d9bcf13b7783566627edf"
        ],
        [
            "assert (1 < 2).",
            "VernacExtend",
            "2260ccbdd314bc4ac62f9b5ba5635c927360b16e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi2_2IsPR : isPR 2 (fun a b : nat => b).",
            "VernacStartTheoremProof",
            "987a28bec32dd74380c154ec045d796b7d8ad94c"
        ],
        [
            "assert (0 < 2).",
            "VernacExtend",
            "4b6791f8aa3fed7ef44a223c8ebbc7abe8c16199"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi1_3IsPR : isPR 3 (fun a b c : nat => a).",
            "VernacStartTheoremProof",
            "09df8f6d041ad9372c3613f7f3856b7d1d3ffeef"
        ],
        [
            "assert (2 < 3).",
            "VernacExtend",
            "070e4f5df152fbf407c3f05f0fe1edec992ecd9d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi2_3IsPR : isPR 3 (fun a b c : nat => b).",
            "VernacStartTheoremProof",
            "18535566483d071614f5feb5780e9e866dab4dd9"
        ],
        [
            "assert (1 < 3).",
            "VernacExtend",
            "c102e19b2ce4f626589e7919eb1305355f615038"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi3_3IsPR : isPR 3 (fun a b c : nat => c).",
            "VernacStartTheoremProof",
            "fa0649408e340e7daee6ae849e7da20268331880"
        ],
        [
            "assert (0 < 3).",
            "VernacExtend",
            "69266d4ff172165aafc0f812f0e89be243038dcc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi1_4IsPR : isPR 4 (fun a b c d : nat => a).",
            "VernacStartTheoremProof",
            "db6eada2db2a246449422250825f0867889b60d8"
        ],
        [
            "assert (3 < 4).",
            "VernacExtend",
            "849ed08c3deabb6da77fe1e23010de6ddec2b57c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi2_4IsPR : isPR 4 (fun a b c d : nat => b).",
            "VernacStartTheoremProof",
            "56824d49e20fac60d6cda2ac80758c0f3aa7aac4"
        ],
        [
            "assert (2 < 4).",
            "VernacExtend",
            "2d849360429c1e7278378b60245b1233512bb6ad"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi3_4IsPR : isPR 4 (fun a b c d : nat => c).",
            "VernacStartTheoremProof",
            "e24f3e1a599eaf365fa61d45ccbe7c771814d6f3"
        ],
        [
            "assert (1 < 4).",
            "VernacExtend",
            "6bfc8c999bf693ea177b0bfc0ead721bc7b43929"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pi4_4IsPR : isPR 4 (fun a b c d : nat => d).",
            "VernacStartTheoremProof",
            "5f19e4bbd03e7db526fd2b4bf298ecbe2e084009"
        ],
        [
            "assert (0 < 4).",
            "VernacExtend",
            "40127bbe5219a08f17884935afe20034fcdbf31d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (projFunc _ _ H).",
            "VernacExtend",
            "60e17da737dffd95f2d4583cf44466562e898b2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter01IsPR : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a b : nat => g b).",
            "VernacStartTheoremProof",
            "809be080f94fa79955ccd0605d29389076de75f8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 2 (fun a b : nat => b)).",
            "VernacExtend",
            "56c3123399dd5b9c2626337ef70abf5580ac7b4f"
        ],
        [
            "apply pi2_2IsPR.",
            "VernacExtend",
            "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
            "VernacExtend",
            "6462b90fbb4520692fa494786a68b568391e5feb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c0) with (g (evalPrimRec 2 x0 c c0)).",
            "VernacExtend",
            "8886419e7c80ee9767d33d3b68f13e47ec7dde61"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter10IsPR : forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a b : nat => g a).",
            "VernacStartTheoremProof",
            "74704869bb52190b30bf24adacb080f549f80cfe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 2 (fun a b : nat => a)).",
            "VernacExtend",
            "a6809aab71358467c4f2f35d9cbba7fe42fd9af3"
        ],
        [
            "apply pi1_2IsPR.",
            "VernacExtend",
            "de83e3a673d46ec194b97a67a98b94cf405137bf"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
            "VernacExtend",
            "6462b90fbb4520692fa494786a68b568391e5feb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c) with (g (evalPrimRec 2 x0 c c0)).",
            "VernacExtend",
            "5fc0d9947830b63da578da85aee176578c590cf0"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter100IsPR : forall g : nat -> nat, isPR 1 g -> isPR 3 (fun a b c : nat => g a).",
            "VernacStartTheoremProof",
            "adbb6baf4c81f3e74ec82814a381a909fa8eed18"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => a)).",
            "VernacExtend",
            "dce7b7a55a332b6f48dccdade150b267c52e0b02"
        ],
        [
            "apply pi1_3IsPR.",
            "VernacExtend",
            "69ded56cb54e46793815f38a229f810bef22ec17"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
            "VernacExtend",
            "6462b90fbb4520692fa494786a68b568391e5feb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c) with (g (evalPrimRec 3 x0 c c0 c1)).",
            "VernacExtend",
            "ff8ab44d215834979297ce594f784b5e5aa24cfc"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter010IsPR : forall g : nat -> nat, isPR 1 g -> isPR 3 (fun a b c : nat => g b).",
            "VernacStartTheoremProof",
            "dadcd4f4dafe213c0263c3c0070ea95357fa65d8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => b)).",
            "VernacExtend",
            "3f762d1fdf69ada9094023c38c30086732ab0cc3"
        ],
        [
            "apply pi2_3IsPR.",
            "VernacExtend",
            "b556a10eda38792ce0fb0989e9246a2b09b60d23"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
            "VernacExtend",
            "6462b90fbb4520692fa494786a68b568391e5feb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c0) with (g (evalPrimRec 3 x0 c c0 c1)).",
            "VernacExtend",
            "a64895445e100b215065da07599b6772e4eaad8c"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter001IsPR : forall g : nat -> nat, isPR 1 g -> isPR 3 (fun a b c : nat => g c).",
            "VernacStartTheoremProof",
            "3e2e5c08f2aba90379121769eef2240a2cc5c7ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => c)).",
            "VernacExtend",
            "28db0c9c8262a9cfbcd84ceb97e748000dd9bd44"
        ],
        [
            "apply pi3_3IsPR.",
            "VernacExtend",
            "6100d98550fd9fe7006e8e40ada8e774ce795e62"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
            "VernacExtend",
            "6462b90fbb4520692fa494786a68b568391e5feb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c1) with (g (evalPrimRec 3 x0 c c0 c1)).",
            "VernacExtend",
            "ddde6feb34b75e50e4db2f6b862243109e934c86"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter011IsPR : forall g : nat -> nat -> nat, isPR 2 g -> isPR 3 (fun a b c : nat => g b c).",
            "VernacStartTheoremProof",
            "93e38b4c17701fdeef63077132ee332156154161"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => b)).",
            "VernacExtend",
            "3f762d1fdf69ada9094023c38c30086732ab0cc3"
        ],
        [
            "apply pi2_3IsPR.",
            "VernacExtend",
            "b556a10eda38792ce0fb0989e9246a2b09b60d23"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => c)).",
            "VernacExtend",
            "28db0c9c8262a9cfbcd84ceb97e748000dd9bd44"
        ],
        [
            "apply pi3_3IsPR.",
            "VernacExtend",
            "6100d98550fd9fe7006e8e40ada8e774ce795e62"
        ],
        [
            "induction H as (x1, p1).",
            "VernacExtend",
            "3c7a69edeee426de8520701da581094158fd43c9"
        ],
        [
            "simpl in p1.",
            "VernacExtend",
            "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
            "VernacExtend",
            "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c0 c1) with (g (evalPrimRec 3 x0 c c0 c1) (evalPrimRec 3 x1 c c0 c1)).",
            "VernacExtend",
            "430adba04dd56c62f5afb5be434d0208123d632d"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "rewrite p1.",
            "VernacExtend",
            "8e2199ae6271b1221500c939b89a4565c1d09137"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter110IsPR : forall g : nat -> nat -> nat, isPR 2 g -> isPR 3 (fun a b c : nat => g a b).",
            "VernacStartTheoremProof",
            "bbba071286b422d09f4501dd06fd31c8efebc847"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => a)).",
            "VernacExtend",
            "dce7b7a55a332b6f48dccdade150b267c52e0b02"
        ],
        [
            "apply pi1_3IsPR.",
            "VernacExtend",
            "69ded56cb54e46793815f38a229f810bef22ec17"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => b)).",
            "VernacExtend",
            "3f762d1fdf69ada9094023c38c30086732ab0cc3"
        ],
        [
            "apply pi2_3IsPR.",
            "VernacExtend",
            "b556a10eda38792ce0fb0989e9246a2b09b60d23"
        ],
        [
            "induction H as (x1, p1).",
            "VernacExtend",
            "3c7a69edeee426de8520701da581094158fd43c9"
        ],
        [
            "simpl in p1.",
            "VernacExtend",
            "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
            "VernacExtend",
            "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c c0) with (g (evalPrimRec 3 x0 c c0 c1) (evalPrimRec 3 x1 c c0 c1)).",
            "VernacExtend",
            "4dca33562aeb7d4e8ab82065fda19fc912b08df5"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "rewrite p1.",
            "VernacExtend",
            "8e2199ae6271b1221500c939b89a4565c1d09137"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter101IsPR : forall g : nat -> nat -> nat, isPR 2 g -> isPR 3 (fun a b c : nat => g a c).",
            "VernacStartTheoremProof",
            "f6e50e7ed2730b18c91a439965cb5cd90e298370"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => a)).",
            "VernacExtend",
            "dce7b7a55a332b6f48dccdade150b267c52e0b02"
        ],
        [
            "apply pi1_3IsPR.",
            "VernacExtend",
            "69ded56cb54e46793815f38a229f810bef22ec17"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => c)).",
            "VernacExtend",
            "28db0c9c8262a9cfbcd84ceb97e748000dd9bd44"
        ],
        [
            "apply pi3_3IsPR.",
            "VernacExtend",
            "6100d98550fd9fe7006e8e40ada8e774ce795e62"
        ],
        [
            "induction H as (x1, p1).",
            "VernacExtend",
            "3c7a69edeee426de8520701da581094158fd43c9"
        ],
        [
            "simpl in p1.",
            "VernacExtend",
            "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
            "VernacExtend",
            "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c c1) with (g (evalPrimRec 3 x0 c c0 c1) (evalPrimRec 3 x1 c c0 c1)).",
            "VernacExtend",
            "675fcc1eb704b6c1cb5b05e9570a003abac3ba17"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "rewrite p1.",
            "VernacExtend",
            "8e2199ae6271b1221500c939b89a4565c1d09137"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter0011IsPR : forall g : nat -> nat -> nat, isPR 2 g -> isPR 4 (fun a b c d : nat => g c d).",
            "VernacStartTheoremProof",
            "e9aced29be534d1a5bf323d8bf7ded6af441d4be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => c)).",
            "VernacExtend",
            "83f236ef9827e9a29d8b49b5fe7e3e9a25320b93"
        ],
        [
            "apply pi3_4IsPR.",
            "VernacExtend",
            "4d47efad201e96236b3b103926c176f186dde800"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => d)).",
            "VernacExtend",
            "89bc17aa505ff9333d446b4733f194276b739c2f"
        ],
        [
            "apply pi4_4IsPR.",
            "VernacExtend",
            "a6c3c8af3301656a228eb20037eb1216fb3bbe65"
        ],
        [
            "induction H as (x1, p1).",
            "VernacExtend",
            "3c7a69edeee426de8520701da581094158fd43c9"
        ],
        [
            "simpl in p1.",
            "VernacExtend",
            "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
            "VernacExtend",
            "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c1 c2) with (g (evalPrimRec 4 x0 c c0 c1 c2) (evalPrimRec 4 x1 c c0 c1 c2)).",
            "VernacExtend",
            "fbf27eafa46a6814d8694a21e8cc22af08b318af"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "rewrite p1.",
            "VernacExtend",
            "8e2199ae6271b1221500c939b89a4565c1d09137"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter1000IsPR : forall g : nat -> nat, isPR 1 g -> isPR 4 (fun a b c d : nat => g a).",
            "VernacStartTheoremProof",
            "cd72df287767c1718ccbe45fd876f5668fcb5127"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => a)).",
            "VernacExtend",
            "b1a4dbf850fd4b3dc5802a1db5bb597db2322e13"
        ],
        [
            "apply pi1_4IsPR.",
            "VernacExtend",
            "df635b73dcfba3d6b3a87ba4a5579d402f179c7b"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
            "VernacExtend",
            "6462b90fbb4520692fa494786a68b568391e5feb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c) with (g (evalPrimRec 4 x0 c c0 c1 c2)).",
            "VernacExtend",
            "7559d72db3bfe668fee85ea9630d33104c31c13a"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter1011IsPR : forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 4 (fun a b c d : nat => g a c d).",
            "VernacStartTheoremProof",
            "abfb65d93fdc30aff2a0d61bf705f92a9d845598"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => a)).",
            "VernacExtend",
            "b1a4dbf850fd4b3dc5802a1db5bb597db2322e13"
        ],
        [
            "apply pi1_4IsPR.",
            "VernacExtend",
            "df635b73dcfba3d6b3a87ba4a5579d402f179c7b"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => c)).",
            "VernacExtend",
            "83f236ef9827e9a29d8b49b5fe7e3e9a25320b93"
        ],
        [
            "apply pi3_4IsPR.",
            "VernacExtend",
            "4d47efad201e96236b3b103926c176f186dde800"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => d)).",
            "VernacExtend",
            "89bc17aa505ff9333d446b4733f194276b739c2f"
        ],
        [
            "apply pi4_4IsPR.",
            "VernacExtend",
            "a6c3c8af3301656a228eb20037eb1216fb3bbe65"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "induction H0 as (x1, p1).",
            "VernacExtend",
            "8e7bf48e799685c88b1579f195bbc2d5b65ba28d"
        ],
        [
            "simpl in p1.",
            "VernacExtend",
            "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
        ],
        [
            "induction H1 as (x2, p2).",
            "VernacExtend",
            "7c1a1b68ab8699c0a1bb5065f64f35bfcc867be7"
        ],
        [
            "simpl in p2.",
            "VernacExtend",
            "415e3f1e2ba7c6627303802fac802ff63223f818"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRcons _ _ x2 (PRnil _)))) x).",
            "VernacExtend",
            "50245cbfed97978455c36acaea25e800be2b61cd"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c c1 c2) with (g (evalPrimRec 4 x0 c c0 c1 c2) (evalPrimRec 4 x1 c c0 c1 c2) (evalPrimRec 4 x2 c c0 c1 c2)).",
            "VernacExtend",
            "0aed26dcbf7bc43d9b8cec7bd164a5b85c5c3425"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter1100IsPR : forall g : nat -> nat -> nat, isPR 2 g -> isPR 4 (fun a b c d : nat => g a b).",
            "VernacStartTheoremProof",
            "08e2ae61213c427cb37da67b5c9cc635538dcc94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => a)).",
            "VernacExtend",
            "b1a4dbf850fd4b3dc5802a1db5bb597db2322e13"
        ],
        [
            "apply pi1_4IsPR.",
            "VernacExtend",
            "df635b73dcfba3d6b3a87ba4a5579d402f179c7b"
        ],
        [
            "assert (isPR 4 (fun a b c d : nat => b)).",
            "VernacExtend",
            "b3bf0c52f8a9b2fc4f8942d28cd9289e24e1a560"
        ],
        [
            "apply pi2_4IsPR.",
            "VernacExtend",
            "9a963479d1f35ba2f63682b1b725787b4390c3ee"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "induction H0 as (x1, p1).",
            "VernacExtend",
            "8e7bf48e799685c88b1579f195bbc2d5b65ba28d"
        ],
        [
            "simpl in p1.",
            "VernacExtend",
            "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
            "VernacExtend",
            "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (g c c0) with (g (evalPrimRec 4 x0 c c0 c1 c2) (evalPrimRec 4 x1 c c0 c1 c2)).",
            "VernacExtend",
            "88257ea344d704dd68a07aa656977c80f2157fe8"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose1_1IsPR : forall f : nat -> nat, isPR 1 f -> forall g : nat -> nat, isPR 1 g -> isPR 1 (fun x : nat => g (f x)).",
            "VernacStartTheoremProof",
            "9b43f0557d69c68e17c29c5602056118b1e900bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
            "VernacExtend",
            "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose1_2IsPR : forall f : nat -> nat, isPR 1 f -> forall f' : nat -> nat, isPR 1 f' -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 1 (fun x : nat => g (f x) (f' x)).",
            "VernacStartTheoremProof",
            "38191a4278de11ecd6ad9cf9c29410b3bfe5ede8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
            "VernacExtend",
            "7633a35c3e2d0efb6278a9eae198279f8ba96511"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose1_3IsPR : forall f1 : nat -> nat, isPR 1 f1 -> forall f2 : nat -> nat, isPR 1 f2 -> forall f3 : nat -> nat, isPR 1 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 1 (fun x : nat => g (f1 x) (f2 x) (f3 x)).",
            "VernacStartTheoremProof",
            "b503067b6d26d5974e87cba7613e99e86c38bdb0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "induction H2 as (x2, p2); simpl in p2.",
            "VernacExtend",
            "12374b3183bfa921b9edbee4d0d809c550a368bd"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
            "VernacExtend",
            "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "rewrite <- p2.",
            "VernacExtend",
            "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose2_1IsPR : forall f : nat -> nat -> nat, isPR 2 f -> forall g : nat -> nat, isPR 1 g -> isPR 2 (fun x y : nat => g (f x y)).",
            "VernacStartTheoremProof",
            "aadd50f686e6e3cfbc816055004bff09b262cfa3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
            "VernacExtend",
            "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose2_2IsPR : forall f : nat -> nat -> nat, isPR 2 f -> forall g : nat -> nat -> nat, isPR 2 g -> forall h : nat -> nat -> nat, isPR 2 h -> isPR 2 (fun x y : nat => h (f x y) (g x y)).",
            "VernacStartTheoremProof",
            "ef2e5ab4452fd9ff1aba2118ed4a29f835008c23"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
            "VernacExtend",
            "7633a35c3e2d0efb6278a9eae198279f8ba96511"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose2_3IsPR : forall f1 : nat -> nat -> nat, isPR 2 f1 -> forall f2 : nat -> nat -> nat, isPR 2 f2 -> forall f3 : nat -> nat -> nat, isPR 2 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 2 (fun x y : nat => g (f1 x y) (f2 x y) (f3 x y)).",
            "VernacStartTheoremProof",
            "0016790f9bf348242402503873113ee36198702c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "induction H2 as (x2, p2); simpl in p2.",
            "VernacExtend",
            "12374b3183bfa921b9edbee4d0d809c550a368bd"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
            "VernacExtend",
            "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "rewrite <- p2.",
            "VernacExtend",
            "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose2_4IsPR : forall f1 : nat -> nat -> nat, isPR 2 f1 -> forall f2 : nat -> nat -> nat, isPR 2 f2 -> forall f3 : nat -> nat -> nat, isPR 2 f3 -> forall f4 : nat -> nat -> nat, isPR 2 f4 -> forall g : nat -> nat -> nat -> nat -> nat, isPR 4 g -> isPR 2 (fun x y : nat => g (f1 x y) (f2 x y) (f3 x y) (f4 x y)).",
            "VernacStartTheoremProof",
            "6a7e8cc9d2fdf8ae357bbb937aa600079ec0ba46"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "induction H2 as (x2, p2); simpl in p2.",
            "VernacExtend",
            "12374b3183bfa921b9edbee4d0d809c550a368bd"
        ],
        [
            "induction H3 as (x3, p3); simpl in p3.",
            "VernacExtend",
            "a8d8f765d22938f27425dd7f52b6d79ed4cb751d"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRcons _ _ x2 (PRnil _))))) x3).",
            "VernacExtend",
            "d97e9c084fb855c80ad1d8417cb900bd3537eb2a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "rewrite <- p2.",
            "VernacExtend",
            "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
        ],
        [
            "rewrite <- p3.",
            "VernacExtend",
            "b104cf4352fc54c90f557b45c881ffe5786e0e81"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose3_1IsPR : forall f : nat -> nat -> nat -> nat, isPR 3 f -> forall g : nat -> nat, isPR 1 g -> isPR 3 (fun x y z : nat => g (f x y z)).",
            "VernacStartTheoremProof",
            "3fc4eb7f402ed96f969091402503b82f2010af27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
            "VernacExtend",
            "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose3_2IsPR : forall f1 : nat -> nat -> nat -> nat, isPR 3 f1 -> forall f2 : nat -> nat -> nat -> nat, isPR 3 f2 -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 3 (fun x y z : nat => g (f1 x y z) (f2 x y z)).",
            "VernacStartTheoremProof",
            "f6f8d3a21b8031950a0e93d2e2516009f1c683ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
            "VernacExtend",
            "7633a35c3e2d0efb6278a9eae198279f8ba96511"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose3_3IsPR : forall f1 : nat -> nat -> nat -> nat, isPR 3 f1 -> forall f2 : nat -> nat -> nat -> nat, isPR 3 f2 -> forall f3 : nat -> nat -> nat -> nat, isPR 3 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 3 (fun x y z : nat => g (f1 x y z) (f2 x y z) (f3 x y z)).",
            "VernacStartTheoremProof",
            "3a279e33e737e850ac5b92105222eb48037dbd96"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "induction H2 as (x2, p2); simpl in p2.",
            "VernacExtend",
            "12374b3183bfa921b9edbee4d0d809c550a368bd"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
            "VernacExtend",
            "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "rewrite <- p2.",
            "VernacExtend",
            "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose4_2IsPR : forall f1 : nat -> nat -> nat -> nat -> nat, isPR 4 f1 -> forall f2 : nat -> nat -> nat -> nat -> nat, isPR 4 f2 -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 4 (fun w x y z : nat => g (f1 w x y z) (f2 w x y z)).",
            "VernacStartTheoremProof",
            "f5075afdeee66a798a5ebfa9bd47f81e09391390"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
            "VernacExtend",
            "7633a35c3e2d0efb6278a9eae198279f8ba96511"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose4_3IsPR : forall f1 : nat -> nat -> nat -> nat -> nat, isPR 4 f1 -> forall f2 : nat -> nat -> nat -> nat -> nat, isPR 4 f2 -> forall f3 : nat -> nat -> nat -> nat -> nat, isPR 4 f3 -> forall g : nat -> nat -> nat -> nat, isPR 3 g -> isPR 4 (fun w x y z : nat => g (f1 w x y z) (f2 w x y z) (f3 w x y z)).",
            "VernacStartTheoremProof",
            "9ccc208ddb5248502f93c8c4e3d402db305785d1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p); simpl in p.",
            "VernacExtend",
            "c73ccd10ebc52390bad71b3f223756aacc72271d"
        ],
        [
            "induction H0 as (x0, p0); simpl in p0.",
            "VernacExtend",
            "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
        ],
        [
            "induction H1 as (x1, p1); simpl in p1.",
            "VernacExtend",
            "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
        ],
        [
            "induction H2 as (x2, p2); simpl in p2.",
            "VernacExtend",
            "12374b3183bfa921b9edbee4d0d809c550a368bd"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
            "VernacExtend",
            "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "rewrite <- p1.",
            "VernacExtend",
            "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
        ],
        [
            "rewrite <- p2.",
            "VernacExtend",
            "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma swapIsPR : forall f : nat -> nat -> nat, isPR 2 f -> isPR 2 (fun x y : nat => f y x).",
            "VernacStartTheoremProof",
            "f38284a83d4843c4e5505064be4c915504ecbbce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply compose2_2IsPR with (f := fun a b : nat => b) (g := fun a b : nat => a).",
            "VernacExtend",
            "a6cd9bfea36dc29fcc3981ddb8e0e7aa5db0e386"
        ],
        [
            "apply pi2_2IsPR.",
            "VernacExtend",
            "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
        ],
        [
            "apply pi1_2IsPR.",
            "VernacExtend",
            "de83e3a673d46ec194b97a67a98b94cf405137bf"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma indIsPR : forall f : nat -> nat -> nat, isPR 2 f -> forall g : nat, isPR 1 (fun a : nat => nat_rec (fun n : nat => nat) g (fun x y : nat => f x y) a).",
            "VernacStartTheoremProof",
            "883c2e030a11063990020787d57230b258a03487"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "induction (const0_NIsPR g).",
            "VernacExtend",
            "630fb72361596cff2da0514905f113a38e1a928e"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (primRecFunc _ x0 x).",
            "VernacExtend",
            "28ce1862be335a94b0013295d60ff6751c72bb23"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simple induction c.",
            "VernacExtend",
            "55a1a00a6d6a7629189492cced687c138ce2fcd8"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- p0.",
            "VernacExtend",
            "9a3a27a23f2379edb87ebff7dbef50390898f65a"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- p.",
            "VernacExtend",
            "388bccc4339b5f5d63163534189e8e2fc069dd7b"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ind1ParamIsPR : forall f : nat -> nat -> nat -> nat, isPR 3 f -> forall g : nat -> nat, isPR 1 g -> isPR 2 (fun a b : nat => nat_rec (fun n : nat => nat) (g b) (fun x y : nat => f x y b) a).",
            "VernacStartTheoremProof",
            "55d3e2aba8f0de99825d6da9352527e4bf37d696"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "induction H0 as (x0, p0).",
            "VernacExtend",
            "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (primRecFunc _ x0 x).",
            "VernacExtend",
            "28ce1862be335a94b0013295d60ff6751c72bb23"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply p0.",
            "VernacExtend",
            "0522b06301b27388d7eda1294f7572093cabc0a4"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "rewrite Hrecc.",
            "VernacExtend",
            "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ind2ParamIsPR : forall f : nat -> nat -> nat -> nat -> nat, isPR 4 f -> forall g : nat -> nat -> nat, isPR 2 g -> isPR 3 (fun a b c : nat => nat_rec (fun n : nat => nat) (g b c) (fun x y : nat => f x y b c) a).",
            "VernacStartTheoremProof",
            "415fa3ea753874d49c23fcb0e2369749a4bac5a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "induction H0 as (x0, p0).",
            "VernacExtend",
            "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
        ],
        [
            "simpl in p0.",
            "VernacExtend",
            "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
        ],
        [
            "exists (primRecFunc _ x0 x).",
            "VernacExtend",
            "28ce1862be335a94b0013295d60ff6751c72bb23"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simple induction c.",
            "VernacExtend",
            "55a1a00a6d6a7629189492cced687c138ce2fcd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite p0.",
            "VernacExtend",
            "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plusIndIsPR : isPR 3 (fun n fn b : nat => S fn).",
            "VernacStartTheoremProof",
            "87a119a50015826403dfeb7f2e43508a949b95ba"
        ],
        [
            "apply (filter010IsPR _ succIsPR).",
            "VernacExtend",
            "02ba8008ae04fc672a73f71e7ee9e303f9cc76be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plusIsPR : isPR 2 plus.",
            "VernacStartTheoremProof",
            "3fb1494f15ad0efb283cae4346b0b7afa2248af8"
        ],
        [
            "assert (isPR 2 (fun a b : nat => nat_rec (fun n : nat => nat) b (fun x y : nat => S y) a)).",
            "VernacExtend",
            "ddc980c7d57d632727c8d04d5efbc7b16884560f"
        ],
        [
            "apply (ind1ParamIsPR _ plusIndIsPR _ idIsPR).",
            "VernacExtend",
            "34fcd46199f794918587dfb72add45a95b805114"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecc.",
            "VernacExtend",
            "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multIndIsPR : isPR 3 (fun n fn b : nat => fn + b).",
            "VernacStartTheoremProof",
            "3439b2f33ec15be0dd1a60289f9b074795c2d077"
        ],
        [
            "apply (filter011IsPR _ plusIsPR).",
            "VernacExtend",
            "bfc57918054773f43ddf315a29b1fb8e553e0c79"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multIsPR : isPR 2 mult.",
            "VernacStartTheoremProof",
            "3e141f50d7d670d17e68ef5900fec8547100cf66"
        ],
        [
            "assert (isPR 2 (fun a b : nat => nat_rec (fun n : nat => nat) 0 (fun x y : nat => y + b) a)).",
            "VernacExtend",
            "c4418cace84b18363eff837617026290267f9971"
        ],
        [
            "assert (isPR 1 (fun _ => 0)).",
            "VernacExtend",
            "548f12188061c641b2afff65c27807a4e3b41bf1"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply (ind1ParamIsPR _ multIndIsPR _ H).",
            "VernacExtend",
            "f62171e3236b9ce1d8da58d63f40589539f3d5d3"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecc.",
            "VernacExtend",
            "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
        ],
        [
            "apply plus_comm.",
            "VernacExtend",
            "12475eb4e354334e12b009d49112b8335e8ec9d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma predIsPR : isPR 1 pred.",
            "VernacStartTheoremProof",
            "d63f19a482249ab93603883cdeb46a572e9039f5"
        ],
        [
            "assert (isPR 1 (fun a : nat => nat_rec (fun n : nat => nat) 0 (fun x y : nat => x) a)).",
            "VernacExtend",
            "36350bc0dd3ac9f7e50afe9a5627e5a4a350da5f"
        ],
        [
            "apply (indIsPR _ pi1_2IsPR 0).",
            "VernacExtend",
            "a199f7fd8cb8d9690519032b2b87430fe74955c5"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minusIndIsPR : isPR 3 (fun n fn b : nat => pred fn).",
            "VernacStartTheoremProof",
            "b87147686fd23961655541beb362232167d767fc"
        ],
        [
            "apply (filter010IsPR _ predIsPR).",
            "VernacExtend",
            "b4dc94892f9522cc12615875a87bcd57e6a1c540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minusIsPR : isPR 2 minus.",
            "VernacStartTheoremProof",
            "c706d68c98dc55b2fd5d111f5363760059021ba5"
        ],
        [
            "assert (isPR 2 (fun b a : nat => nat_rec (fun n : nat => nat) b (fun x y : nat => pred y) a)).",
            "VernacExtend",
            "1e18eea2c619c0d9dc5eefb35703d35a5f9a70ab"
        ],
        [
            "apply swapIsPR with (f := fun a b : nat => nat_rec (fun n : nat => nat) b (fun x y : nat => pred y) a).",
            "VernacExtend",
            "30df277ef3be6d4f07a4a6d5b145ce4c1a558165"
        ],
        [
            "apply (ind1ParamIsPR _ minusIndIsPR _ idIsPR).",
            "VernacExtend",
            "94d1571fe8bdbf07dbc2edc9aed0567c0e4f81f9"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "induction c0 as [| c0 Hrecc0].",
            "VernacExtend",
            "35d7be1430ef9394d1deb0f54c43b7e7b7d8a401"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply minus_n_O.",
            "VernacExtend",
            "4cd3664cd8ce93a91bb4c4c41d6f774baaa59eac"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecc0.",
            "VernacExtend",
            "2bc1a004997e309d7f913219cf370c8a6555702b"
        ],
        [
            "generalize c c0.",
            "VernacExtend",
            "ab5f8833375be5adeffa4760b930a344a67bcca0"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction c1 as [| c1 Hrecc1].",
            "VernacExtend",
            "d4f94844bea0e4e446bec8ebdad1de67098af31d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction c2 as [| c2 Hrecc2].",
            "VernacExtend",
            "7ce3d1708757cf615ff43bdee4790678764dc929"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply minus_n_O.",
            "VernacExtend",
            "4cd3664cd8ce93a91bb4c4c41d6f774baaa59eac"
        ],
        [
            "apply Hrecc1.",
            "VernacExtend",
            "f309ad042646e738f2577ae49f4f45fa10542c4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition notZero (a : nat) := nat_rec (fun n : nat => nat) 0 (fun x y : nat => 1) a.",
            "VernacDefinition",
            "176435388596e775a42a146fa875419380bc1dda"
        ],
        [
            "Lemma notZeroIsPR : isPR 1 notZero.",
            "VernacStartTheoremProof",
            "67c003e7b505842b9f7638d32d094bdea6f4db0c"
        ],
        [
            "unfold notZero in |- *.",
            "VernacExtend",
            "a64055a4b5578fd427c20d1d381831894f2608aa"
        ],
        [
            "apply indIsPR with (f := fun _ _ : nat => 1).",
            "VernacExtend",
            "4736dba517140371459b605d001c4605cac0937b"
        ],
        [
            "apply filter10IsPR with (g := fun _ : nat => 1).",
            "VernacExtend",
            "b23baeb83b401cb3543a338ae23a5f8c3e580492"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ltBool (a b : nat) : bool.",
            "VernacDefinition",
            "b0a521f9a43a7735050b4ed35dc27a2c3882804a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_lt_dec b a).",
            "VernacExtend",
            "8b8f17adde605b740d024b1d0674d01a424dfcee"
        ],
        [
            "exact false.",
            "VernacExtend",
            "0494187fd8a52673bed730144ed26c9a7c743063"
        ],
        [
            "exact true.",
            "VernacExtend",
            "4be0afa4107470999b2797dd1e3397668121c2c5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma ltBoolTrue : forall a b : nat, ltBool a b = true -> a < b.",
            "VernacStartTheoremProof",
            "1dacf711424ec774f3739e1999b5f22f09b5ad06"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ltBool in H.",
            "VernacExtend",
            "5c8876a2032dfabdfc85afee0788ee2029e7116d"
        ],
        [
            "induction (le_lt_dec b a).",
            "VernacExtend",
            "821425e51b8979db56016dc8956604119785ebb5"
        ],
        [
            "discriminate H.",
            "VernacExtend",
            "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltBoolFalse : forall a b : nat, ltBool a b = false -> ~ a < b.",
            "VernacStartTheoremProof",
            "b1c3a081f84afefeba72fe50d6b3ca5b3c73ca83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold ltBool in H.",
            "VernacExtend",
            "5c8876a2032dfabdfc85afee0788ee2029e7116d"
        ],
        [
            "induction (le_lt_dec b a).",
            "VernacExtend",
            "821425e51b8979db56016dc8956604119785ebb5"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "elim (le_not_lt _ _ a0).",
            "VernacExtend",
            "33509f251a66b6db42abefae669e9894f167dc40"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "discriminate H.",
            "VernacExtend",
            "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltIsPR : isPRrel 2 ltBool.",
            "VernacStartTheoremProof",
            "993790d2b4d19c86bf73b342e22a80a990b734fe"
        ],
        [
            "unfold isPRrel in |- *.",
            "VernacExtend",
            "6d98e12be7c05bdc572e2f26b0ae95c605885208"
        ],
        [
            "assert (isPR 2 (fun a b : nat => notZero (b - a))).",
            "VernacExtend",
            "d45d9c51e27e7b1ea9a6246f7ea2b804ce36c5c6"
        ],
        [
            "apply swapIsPR with (f := fun a b : nat => notZero (a - b)).",
            "VernacExtend",
            "ef3f1f41ef3cb4843201392f3502d809c3012cfa"
        ],
        [
            "apply compose2_1IsPR.",
            "VernacExtend",
            "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "apply notZeroIsPR.",
            "VernacExtend",
            "d560836695e6a004a1fd240990803d448a999c93"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "unfold ltBool in |- *.",
            "VernacExtend",
            "07c8d350ffd107125252f58f321a6237cfc1aaf1"
        ],
        [
            "induction (le_lt_dec c0 c).",
            "VernacExtend",
            "ee2217a59c32efef089500362f84d93cff3bd54c"
        ],
        [
            "cut (c0 <= c).",
            "VernacExtend",
            "dd07f1f07c9b2e14d1acb1b27e8897bb9c563bcc"
        ],
        [
            "generalize c.",
            "VernacExtend",
            "a805df29ab482041b1df850bac2970392e984dbc"
        ],
        [
            "clear c a.",
            "VernacExtend",
            "613771d7ab45146d26e3109de9adc3e85b6f3688"
        ],
        [
            "induction c0 as [| c0 Hrecc0].",
            "VernacExtend",
            "35d7be1430ef9394d1deb0f54c43b7e7b7d8a401"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "elim (le_Sn_O _ H).",
            "VernacExtend",
            "89790f2f1d51f4861a2af9e5f0ced1b7d5f48c8e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Hrecc0.",
            "VernacExtend",
            "267213424d456d927f79554d7934cd94a6cc1ce4"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "cut (c < c0).",
            "VernacExtend",
            "4e1a53dce3c3a49959ae1b84466c6cf2a48732b4"
        ],
        [
            "generalize c.",
            "VernacExtend",
            "a805df29ab482041b1df850bac2970392e984dbc"
        ],
        [
            "clear c b.",
            "VernacExtend",
            "300511b30280162f277fd630ae7b766a0926d1bf"
        ],
        [
            "induction c0 as [| c0 Hrecc0].",
            "VernacExtend",
            "35d7be1430ef9394d1deb0f54c43b7e7b7d8a401"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (lt_n_O _ H).",
            "VernacExtend",
            "b93451b1a30fa3f24613ad7b0441907b3427a80f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Hrecc0.",
            "VernacExtend",
            "267213424d456d927f79554d7934cd94a6cc1ce4"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxIsPR : isPR 2 max.",
            "VernacStartTheoremProof",
            "20e39c098beb8e78a0c3cc71623751409b265fe8"
        ],
        [
            "assert (isPR 2 (fun a b : nat => a + (b - a))).",
            "VernacExtend",
            "701454920088ca4b43b22d56d7c6396c6167bad6"
        ],
        [
            "apply compose2_2IsPR with (h := plus) (f := fun a b : nat => a) (g := fun a b : nat => b - a).",
            "VernacExtend",
            "e94e7fa8d1a593c134fff3bd88f953b153c5e5cd"
        ],
        [
            "apply pi1_2IsPR.",
            "VernacExtend",
            "de83e3a673d46ec194b97a67a98b94cf405137bf"
        ],
        [
            "apply swapIsPR.",
            "VernacExtend",
            "df1101069b402c0319f06625614023d04b616873"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "apply plusIsPR.",
            "VernacExtend",
            "3b0a74ba0921212c33f63b79cd048faf8df5a016"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "eapply extEqualTrans.",
            "VernacExtend",
            "fcc0112687eaec3e88c4c8a01889eb47c927b5f2"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "clear x p.",
            "VernacExtend",
            "7b0994ef6e51a7667631c0faab2a8bdf473f3a4c"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (le_or_lt c c0).",
            "VernacExtend",
            "3c535dc97784d167d4f42d6c62ccf23c72e6f37a"
        ],
        [
            "rewrite max_r.",
            "VernacExtend",
            "869a07f74f3ce45da84a7310f0f38718f0ce9b58"
        ],
        [
            "symmetry in |- *.",
            "VernacExtend",
            "dc33a39a53e296ef5e59fd831d55212be2a42f22"
        ],
        [
            "apply le_plus_minus.",
            "VernacExtend",
            "df37b63db77b4df0f047707f2e27bddc60219927"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite not_le_minus_0.",
            "VernacExtend",
            "d06fd9a98ede7f458315a8708a2c67f1c727f8be"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "rewrite max_l.",
            "VernacExtend",
            "0f68340b183e4359ba72475c2ddf8004512764c9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply lt_le_weak.",
            "VernacExtend",
            "d7437f5b1907802e4133984009174fdcf6e7411b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lt_not_le.",
            "VernacExtend",
            "153fbf8b5dfa799e22f198ba7d37d620ab119bf0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtIsPR : isPRrel 2 (fun a b : nat => ltBool b a).",
            "VernacStartTheoremProof",
            "fa9e2c61b6924e7d0cf56f9044909c4c7b27bf89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold isPRrel in |- *.",
            "VernacExtend",
            "6d98e12be7c05bdc572e2f26b0ae95c605885208"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply swapIsPR with (f := fun a0 a : nat => if ltBool a0 a then 1 else 0).",
            "VernacExtend",
            "d4d9bab93d1275e3f669f95bcc37e81a53bae0e1"
        ],
        [
            "apply ltIsPR.",
            "VernacExtend",
            "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Remark replaceCompose2 : forall (n : nat) (a b a' b' : naryFunc n) (c c' : naryFunc 2), extEqual n a a' -> extEqual n b b' -> extEqual 2 c c' -> extEqual n (evalComposeFunc _ _ (Vector.cons _ a _ (Vector.cons _ b _ (Vector.nil (naryFunc n)))) c) (evalComposeFunc _ _ (Vector.cons _ a' _ (Vector.cons _ b' _ (Vector.nil (naryFunc n)))) c').",
            "VernacStartTheoremProof",
            "c1ea80c47bc085d895914d3df320bed7751d4687"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition orRel (n : nat) (R S : naryRel n) : naryRel n.",
            "VernacDefinition",
            "6a0baec3e6973ca43bba60960013bb124a991355"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "apply (R || S).",
            "VernacExtend",
            "04480cec0090e9900e18b8d53d40ed82e7248f4e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply (R H).",
            "VernacExtend",
            "7b5b0d47746420cf0d016ebfedf4a3690fb3e157"
        ],
        [
            "apply (S H).",
            "VernacExtend",
            "9d3e375b25603320e32bb96876362faa055aed12"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma orRelPR : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (orRel n R R').",
            "VernacStartTheoremProof",
            "efed6f6fd98be57a15d5d793100de198c8d01c91"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "induction H0 as (x0, p0).",
            "VernacExtend",
            "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
        ],
        [
            "assert (isPR 2 (fun a b : nat => notZero (a + b))).",
            "VernacExtend",
            "b58f837e62fcc157f5cbee155c5fae1f405e8dfe"
        ],
        [
            "apply compose2_1IsPR.",
            "VernacExtend",
            "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
        ],
        [
            "apply plusIsPR.",
            "VernacExtend",
            "3b0a74ba0921212c33f63b79cd048faf8df5a016"
        ],
        [
            "apply notZeroIsPR.",
            "VernacExtend",
            "d560836695e6a004a1fd240990803d448a999c93"
        ],
        [
            "induction H as (x1, p1).",
            "VernacExtend",
            "3c7a69edeee426de8520701da581094158fd43c9"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
            "VernacExtend",
            "7633a35c3e2d0efb6278a9eae198279f8ba96511"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n 2 (Vector.cons (naryFunc n) (charFunction n R) 1 (Vector.cons (naryFunc n) (charFunction n R') 0 (Vector.nil (naryFunc n)))) (fun a b : nat => notZero (a + b))).",
            "VernacExtend",
            "c00a53d7b90d1ceddfcd93130b5eaf43ee58fb57"
        ],
        [
            "apply replaceCompose2; auto.",
            "VernacExtend",
            "6a6c4228d540486bc4b59ad18796d15e955cfc92"
        ],
        [
            "clear x p x0 p0 x1 p1.",
            "VernacExtend",
            "6e7c80beca4873f6ccfaaa567e9b0944d9de906b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction R.",
            "VernacExtend",
            "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "induction R'.",
            "VernacExtend",
            "6c27fb5d567ef3980262154e7b554474b8d923e2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (Hrecn (R c) (R' c)).",
            "VernacExtend",
            "2c813432225cf50219b7f83af813130c3942b11a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition andRel (n : nat) (R S : naryRel n) : naryRel n.",
            "VernacDefinition",
            "96080656f2561d82803d6065e5fc49e4b2c1874a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "exact (R && S).",
            "VernacExtend",
            "a1ba36395dd88ecfe2bd4f5634d297d1e05d1cfd"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply (R H).",
            "VernacExtend",
            "7b5b0d47746420cf0d016ebfedf4a3690fb3e157"
        ],
        [
            "apply (S H).",
            "VernacExtend",
            "9d3e375b25603320e32bb96876362faa055aed12"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma andRelPR : forall (n : nat) (R R' : naryRel n), isPRrel n R -> isPRrel n R' -> isPRrel n (andRel n R R').",
            "VernacStartTheoremProof",
            "927a3a864824bf061fbd7849958e7c2cc1203f44"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "induction H0 as (x0, p0).",
            "VernacExtend",
            "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
        ],
        [
            "assert (isPR 2 mult).",
            "VernacExtend",
            "723359fa2adea2477376dd11706532fa44c99998"
        ],
        [
            "apply multIsPR.",
            "VernacExtend",
            "e81beaf90a6eafd17be42571cffda5efa424c833"
        ],
        [
            "induction H as (x1, p1).",
            "VernacExtend",
            "3c7a69edeee426de8520701da581094158fd43c9"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
            "VernacExtend",
            "7633a35c3e2d0efb6278a9eae198279f8ba96511"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n 2 (Vector.cons (naryFunc n) (charFunction n R) 1 (Vector.cons (naryFunc n) (charFunction n R') 0 (Vector.nil (naryFunc n)))) mult).",
            "VernacExtend",
            "5fbf95f9c8c4489af81966cdaa800dcd17b4983f"
        ],
        [
            "apply replaceCompose2; auto.",
            "VernacExtend",
            "6a6c4228d540486bc4b59ad18796d15e955cfc92"
        ],
        [
            "clear x p x0 p0 x1 p1.",
            "VernacExtend",
            "6e7c80beca4873f6ccfaaa567e9b0944d9de906b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction R.",
            "VernacExtend",
            "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
        ],
        [
            "induction R'.",
            "VernacExtend",
            "6c27fb5d567ef3980262154e7b554474b8d923e2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (Hrecn (R c) (R' c)).",
            "VernacExtend",
            "2c813432225cf50219b7f83af813130c3942b11a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition notRel (n : nat) (R : naryRel n) : naryRel n.",
            "VernacDefinition",
            "e785cc2d3011ee0aed7c9b7305d841fd330b6992"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "exact (negb R).",
            "VernacExtend",
            "8fd22bd53a3fd73758385d6034cbdf611f0d84fe"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply (R H).",
            "VernacExtend",
            "7b5b0d47746420cf0d016ebfedf4a3690fb3e157"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma notRelPR : forall (n : nat) (R : naryRel n), isPRrel n R -> isPRrel n (notRel n R).",
            "VernacStartTheoremProof",
            "d458a9b3b572adf6f84b7c8de5ae2b728a0b1491"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "assert (isPR 1 (fun x : nat => 1 - x)).",
            "VernacExtend",
            "8540f9ea4a8ae40b832c371e78d86d205b9e976f"
        ],
        [
            "apply compose1_2IsPR with (f := fun x : nat => 1) (f' := fun x : nat => x).",
            "VernacExtend",
            "a10cffa1c013a45e7245b23946011ae5290cd2f2"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "induction H as (x0, p0).",
            "VernacExtend",
            "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
            "VernacExtend",
            "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n 1 (Vector.cons _ (charFunction n R) _ (Vector.nil _)) (fun x : nat => 1 - x)).",
            "VernacExtend",
            "5fdb0ebf4fa31f5bab368064c3fb03cb490dc471"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear p0 x0 p x.",
            "VernacExtend",
            "70c89d69bce8ba3cba3eed6923babe7309f725a5"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction R.",
            "VernacExtend",
            "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint bodd (n : nat) : bool := match n with | O => false | S n' => negb (bodd n') end.",
            "VernacFixpoint",
            "4e50255772b61e11cb4858230ea8adc7a994740f"
        ],
        [
            "Lemma boddIsPR : isPRrel 1 bodd.",
            "VernacStartTheoremProof",
            "d02e33a648307c72ce229c071b7dc35b787fb854"
        ],
        [
            "assert (isPR 2 (fun _ rec : nat => 1 - rec)).",
            "VernacExtend",
            "a80f466fd812e67cd16edb694dc4513ec756728f"
        ],
        [
            "apply filter01IsPR with (g := fun rec : nat => 1 - rec).",
            "VernacExtend",
            "991bd14f65df02ec1eae1e5d23c33ab783c1e946"
        ],
        [
            "apply compose1_2IsPR with (f := fun _ : nat => 1) (f' := fun x : nat => x).",
            "VernacExtend",
            "d1d7e04f5be10d6d7a2bccc9c566f6e20ba6a4f4"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply minusIsPR.",
            "VernacExtend",
            "065f2551340f5d516a958dedbc9b9d09920c86cc"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists (primRecFunc 0 zeroFunc x).",
            "VernacExtend",
            "0d435b2f5e45bf39231c0e07dfb86083b5837e62"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecc.",
            "VernacExtend",
            "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
        ],
        [
            "clear Hrecc.",
            "VernacExtend",
            "e0f6c664f1120bbdff285fc60b104728d13f50f2"
        ],
        [
            "induction (bodd c).",
            "VernacExtend",
            "cf7498ce27f4b26fc91a9d9087e5bdac05ac926e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma beq_nat_not_refl : forall a b : nat, a <> b -> beq_nat a b = false.",
            "VernacStartTheoremProof",
            "a809cb3b75761cb2223a2cab7110afcbe6c6773f"
        ],
        [
            "double induction a b.",
            "VernacExtend",
            "378a5044742eadc6ee8211fa155f3f5a42b71643"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neqIsPR : isPRrel 2 (fun a b : nat => negb (beq_nat a b)).",
            "VernacStartTheoremProof",
            "975ee30a0d4403e41425612b42d185ca9dfecd00"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (isPRrel 2 (orRel 2 ltBool (fun a b : nat => ltBool b a))).",
            "VernacExtend",
            "be57b6ff3e1b6ca249d5429c1e9561d425f02a03"
        ],
        [
            "apply orRelPR.",
            "VernacExtend",
            "f03401cd3375fa450ffbb4b72c01bf3e5b47da6c"
        ],
        [
            "apply ltIsPR.",
            "VernacExtend",
            "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
        ],
        [
            "apply gtIsPR.",
            "VernacExtend",
            "80cb702c072a14c7a0c7c267501041248e257acc"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "clear p.",
            "VernacExtend",
            "5f73d163168e7a544792b1dfd7eff9cdb7659426"
        ],
        [
            "unfold ltBool in |- *.",
            "VernacExtend",
            "07c8d350ffd107125252f58f321a6237cfc1aaf1"
        ],
        [
            "induction (eq_nat_dec c c0).",
            "VernacExtend",
            "84fd54b5afee590fc5c06402de9e43a3fe1bf511"
        ],
        [
            "rewrite a.",
            "VernacExtend",
            "905c705a182fa776d319d2bbb7fe34c13fe7d244"
        ],
        [
            "rewrite <- beq_nat_refl.",
            "VernacExtend",
            "6483e653b28875693c3c92037ba92da24c711ae3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec c0 c0).",
            "VernacExtend",
            "463af36a89e7f0b97a19d0634ddf49cfdf6c7362"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim (lt_irrefl _ b).",
            "VernacExtend",
            "a35fadf1dca1683abd0594b5b9602426c9cfd4b0"
        ],
        [
            "rewrite beq_nat_not_refl.",
            "VernacExtend",
            "1233302f99cf1c86d83f4544c8d696eababc6902"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec c0 c).",
            "VernacExtend",
            "ee2217a59c32efef089500362f84d93cff3bd54c"
        ],
        [
            "induction (le_lt_dec c c0).",
            "VernacExtend",
            "a89473dc5544eabddeba3772ad929838e20e5096"
        ],
        [
            "induction (nat_total_order _ _ b).",
            "VernacExtend",
            "d089d19eb468aa82e618ae887773104057efd1de"
        ],
        [
            "elim (lt_not_le _ _ H).",
            "VernacExtend",
            "1f0dcfc525ad36870fb69998e58845954642906c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim (lt_not_le _ _ H).",
            "VernacExtend",
            "1f0dcfc525ad36870fb69998e58845954642906c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqIsPR : isPRrel 2 beq_nat.",
            "VernacStartTheoremProof",
            "8a3d1988f09eacba8a430cc3153ffb8d9d853389"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (isPRrel 2 (notRel 2 (fun a b : nat => negb (beq_nat a b)))).",
            "VernacExtend",
            "d479d7eaa5eacfba7d9d324c6c22bb3a6fd51be0"
        ],
        [
            "apply notRelPR.",
            "VernacExtend",
            "b514198d3ee3f888f030aa803106a8af01eb6d6d"
        ],
        [
            "apply neqIsPR.",
            "VernacExtend",
            "0aaf9cf29f792fd9b3bffa550de688747994251d"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "clear p.",
            "VernacExtend",
            "5f73d163168e7a544792b1dfd7eff9cdb7659426"
        ],
        [
            "induction (beq_nat c c0).",
            "VernacExtend",
            "3e605cdf05783b0c6aa8ac4441cecf6755a08ce7"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition leBool (a b : nat) : bool.",
            "VernacDefinition",
            "b0f8cb33b68235ea193de722e0ad1d1ee9c52214"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_lt_dec a b).",
            "VernacExtend",
            "5019ba5a4f4f1d91155c96de81767ab378fa8680"
        ],
        [
            "exact true.",
            "VernacExtend",
            "4be0afa4107470999b2797dd1e3397668121c2c5"
        ],
        [
            "exact false.",
            "VernacExtend",
            "0494187fd8a52673bed730144ed26c9a7c743063"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma leIsPR : isPRrel 2 leBool.",
            "VernacStartTheoremProof",
            "adae310cb1dfd8775aa373ab5f20c71c3678c4fc"
        ],
        [
            "assert (isPRrel 2 (orRel 2 ltBool beq_nat)).",
            "VernacExtend",
            "889dda3271a62b9572cf7f028f6a2292e6ba8dfa"
        ],
        [
            "apply orRelPR.",
            "VernacExtend",
            "f03401cd3375fa450ffbb4b72c01bf3e5b47da6c"
        ],
        [
            "apply ltIsPR.",
            "VernacExtend",
            "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
        ],
        [
            "apply eqIsPR.",
            "VernacExtend",
            "493018d16fb870ceb55150454019ccac18f41f8a"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite p.",
            "VernacExtend",
            "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
        ],
        [
            "clear p x.",
            "VernacExtend",
            "40fdab52d26e2832a3bb99ac4d21f82c6bc01250"
        ],
        [
            "unfold leBool in |- *.",
            "VernacExtend",
            "da8afa09a716117767f4fe4c7eab9bad0af9e8f5"
        ],
        [
            "unfold ltBool in |- *.",
            "VernacExtend",
            "07c8d350ffd107125252f58f321a6237cfc1aaf1"
        ],
        [
            "induction (le_lt_dec c0 c).",
            "VernacExtend",
            "ee2217a59c32efef089500362f84d93cff3bd54c"
        ],
        [
            "induction (le_lt_dec c c0).",
            "VernacExtend",
            "a89473dc5544eabddeba3772ad929838e20e5096"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace c0 with c.",
            "VernacExtend",
            "0f9081088f0b8cbea14b62e72d1b89c80af17f63"
        ],
        [
            "rewrite <- beq_nat_refl.",
            "VernacExtend",
            "6483e653b28875693c3c92037ba92da24c711ae3"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "induction (eq_nat_dec c c0).",
            "VernacExtend",
            "84fd54b5afee590fc5c06402de9e43a3fe1bf511"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (nat_total_order _ _ b).",
            "VernacExtend",
            "d089d19eb468aa82e618ae887773104057efd1de"
        ],
        [
            "elim (lt_not_le _ _ H).",
            "VernacExtend",
            "1f0dcfc525ad36870fb69998e58845954642906c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim (lt_not_le _ _ H).",
            "VernacExtend",
            "1f0dcfc525ad36870fb69998e58845954642906c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite beq_nat_not_refl.",
            "VernacExtend",
            "1233302f99cf1c86d83f4544c8d696eababc6902"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold not in |- *; intros.",
            "VernacExtend",
            "a373869c1c99731a8797825160ba5f5ab7a057a9"
        ],
        [
            "rewrite H in b.",
            "VernacExtend",
            "dcc916f0a821c964d0ede35a77684fc10fac86d3"
        ],
        [
            "elim (lt_irrefl _ b).",
            "VernacExtend",
            "a35fadf1dca1683abd0594b5b9602426c9cfd4b0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (le_lt_dec c c0).",
            "VernacExtend",
            "a89473dc5544eabddeba3772ad929838e20e5096"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim (lt_irrefl c).",
            "VernacExtend",
            "ac1929f1a072911a4254dc7155273efdd238c908"
        ],
        [
            "apply lt_trans with c0; auto.",
            "VernacExtend",
            "db5a205f59f193744193274f50ec7080c1ba476f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Ignore_Params.",
            "VernacBeginSection",
            "eb459230d889760268823dac871b3a497fdcf7f5"
        ],
        [
            "Fixpoint ignoreParams (n m : nat) (f : naryFunc n) {struct m} : naryFunc (m + n) := match m return (naryFunc (m + n)) with | O => f | S x => fun _ => ignoreParams n x f end.",
            "VernacFixpoint",
            "4d6c2d97bb2c90f57c27c560f7f19999b1384489"
        ],
        [
            "Definition projectionListPR (n m : nat) (p : m <= n) : PrimRecs n m.",
            "VernacDefinition",
            "07d09f0c2d5ecd7f0e88ce796992544bd5ee9396"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction m as [| m Hrecm].",
            "VernacExtend",
            "93d2b60c268fff5d958c27bdb803738ea66bba5b"
        ],
        [
            "exact (PRnil n).",
            "VernacExtend",
            "8322c4401a2d71d34b73d27d2485f21e9b79cfee"
        ],
        [
            "assert (m < n).",
            "VernacExtend",
            "bbbe73e8958ba24139e5557789042c98ee9abe83"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "apply (PRcons _ m (projFunc _ _ H)).",
            "VernacExtend",
            "5c5c8bc1f0e7408c64aa0cfb91d520f7752e2076"
        ],
        [
            "apply Hrecm.",
            "VernacExtend",
            "9d632fd684a6e3b27b37a617bb0fc9cbbce47171"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "apply le_S.",
            "VernacExtend",
            "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition projectionList (n m : nat) (p : m <= n) : Vector.t (naryFunc n) m := evalPrimRecs n m (projectionListPR n m p).",
            "VernacDefinition",
            "5cc324af53328336b63b813f1837cbf185a51548"
        ],
        [
            "Lemma projectionListInd : forall (n m : nat) (p1 p2 : m <= n), projectionList n m p1 = projectionList n m p2.",
            "VernacStartTheoremProof",
            "a72f8070d7f029ef2dab38cc2f42d104a9f5d190"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold projectionList in |- *.",
            "VernacExtend",
            "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
        ],
        [
            "induction m as [| m Hrecm].",
            "VernacExtend",
            "93d2b60c268fff5d958c27bdb803738ea66bba5b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite (Hrecm (le_S_n m n (le_S (S m) n p1)) (le_S_n m n (le_S (S m) n p2))).",
            "VernacExtend",
            "129a64e79912a2608009722f8c787ae223629ff0"
        ],
        [
            "rewrite (evalProjFuncInd _ _ (lt_S_n m n (le_lt_n_Sm (S m) n p1)) (lt_S_n m n (le_lt_n_Sm (S m) n p2))).",
            "VernacExtend",
            "b506f3e8b10c095e842c1462e10e4ed2656bb9e5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projectionListApplyParam : forall (m n c : nat) (p1 : m <= n) (p2 : m <= S n), extEqualVector _ _ (projectionList n m p1) (evalOneParamList n m c (projectionList (S n) m p2)).",
            "VernacStartTheoremProof",
            "2063d0edc1d4081366d5af7825e9d92efe291715"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "unfold projectionList in |- *.",
            "VernacExtend",
            "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
        ],
        [
            "simple induction m.",
            "VernacExtend",
            "c6b53704a73119c9ff4383bfeec236079504e73a"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (eq_nat_dec n n0).",
            "VernacExtend",
            "01b6be4c2892cf9f70e0db461abb99bbbdbd17cf"
        ],
        [
            "elim (lt_not_le n (S n)).",
            "VernacExtend",
            "5a8c6a146707278bb4dfbb271951b55733f821e8"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "rewrite <- a in p1.",
            "VernacExtend",
            "dc2dfdbe291a85eefbbcc8e8764413eaef5bbdfe"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite (evalProjFuncInd _ _ (lt_S_n n n0 (le_lt_n_Sm (S n) n0 p1)) match le_lt_or_eq n n0 (lt_n_Sm_le n n0 (lt_S_n n (S n0) (le_lt_n_Sm (S n) (S n0) p2))) with | or_introl l2 => l2 | or_intror l2 => False_ind (n < n0) (b l2) end).",
            "VernacExtend",
            "e378de46d6e03c5fbc2db3582444ca4eb3726946"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projectionListId : forall (n : nat) (f : naryFunc n) (p : n <= n), extEqual n f (evalComposeFunc n n (projectionList n n p) f).",
            "VernacStartTheoremProof",
            "67afefc96ed53762f548812e716e06fe3474609a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "induction (eq_nat_dec n n).",
            "VernacExtend",
            "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n (S n) (Vector.cons (naryFunc n) (evalConstFunc n c) n (projectionList n n (le_n n))) f).",
            "VernacExtend",
            "ffad4f8528a903298d502413b22f3a3e510964a8"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n n (projectionList n n (le_n n)) (f c)).",
            "VernacExtend",
            "49840c509f9415b5ebbf5f8d304eaca098f98c43"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "clear Hrecn a p.",
            "VernacExtend",
            "72193b570eb93ed1b23e7170de1f29431818f82f"
        ],
        [
            "generalize (projectionList n n (le_n n)).",
            "VernacExtend",
            "c519175a0a70a7129d5561794e5abc0d6fc56af3"
        ],
        [
            "generalize f c.",
            "VernacExtend",
            "4330a6a3ceb211c54b7d16ed4620536168205c49"
        ],
        [
            "clear f c.",
            "VernacExtend",
            "9bc06e66012703be2db4368ff9eab9a97ae60d93"
        ],
        [
            "assert (forall (m : nat) (f : naryFunc (S m)) (c : nat) (v : Vector.t (naryFunc n) m), extEqual n (evalComposeFunc n m v (f c)) (evalComposeFunc n (S m) (Vector.cons (naryFunc n) (evalConstFunc n c) m v) f)).",
            "VernacExtend",
            "b56fa093ce655040574a77ebeaa4cf95311c82ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply (projectionListApplyParam n n c (le_n n) (le_S_n n (S n) (le_S (S n) (S n) p))).",
            "VernacExtend",
            "abe3d95486e4dfc86e4ec60b30cf71a6002a0372"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ignoreParamsIsPR : forall (n m : nat) (f : naryFunc n), isPR _ f -> isPR _ (ignoreParams n m f).",
            "VernacStartTheoremProof",
            "39489c6e0f9e176468b433cc9543afc5337bb2b5"
        ],
        [
            "assert (forall (n m : nat) (pr : m <= n) (f : naryFunc m) (p : n - m + m = n), extEqual _ (eq_rec (n - m + m) naryFunc (ignoreParams m (n - m) f) _ p) (evalComposeFunc _ _ (projectionList n m pr) f)).",
            "VernacExtend",
            "84e0f99c9632b05a04309d519c99d9156cfd7988"
        ],
        [
            "unfold projectionList in |- *.",
            "VernacExtend",
            "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "induction n as [| n Hrecn]; intros.",
            "VernacExtend",
            "d515ddee41ca4e4124c87df7f7ee535606506467"
        ],
        [
            "destruct m as [| n].",
            "VernacExtend",
            "1d85b85bc8a8633d178139d5357a5e3cd404df02"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim p using K_dec_set.",
            "VernacExtend",
            "34b336491c4f17a03da1c1abc51efb1b32c7e076"
        ],
        [
            "apply eq_nat_dec.",
            "VernacExtend",
            "536650fad05f5969715904f755cca79b8956a9cb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "elim (le_Sn_O _ pr).",
            "VernacExtend",
            "5db78d2a06cd060521d2e08204a1fd0124014618"
        ],
        [
            "induction (le_lt_or_eq _ _ pr).",
            "VernacExtend",
            "8f2cdba58ba9bcbd9179ae3289daf9d54c479d35"
        ],
        [
            "assert (m <= n).",
            "VernacExtend",
            "706f6660639c7393b5730543a246139c189529a1"
        ],
        [
            "apply lt_n_Sm_le.",
            "VernacExtend",
            "354c1d072708776c26f2aab2afa0945822d0815b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize p.",
            "VernacExtend",
            "de434a1dd41d3101cdc3a131ce71f229369637c3"
        ],
        [
            "rewrite <- minus_Sn_m.",
            "VernacExtend",
            "808a21c00826f53fd5122068d41d20a5b1758aff"
        ],
        [
            "clear p.",
            "VernacExtend",
            "5f73d163168e7a544792b1dfd7eff9cdb7659426"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (n - m + m = n).",
            "VernacExtend",
            "83c1f65c490948b70787e12987210567bd718a6f"
        ],
        [
            "simpl in p.",
            "VernacExtend",
            "758a283616e7f958e765c456c9c1fef6ebb53020"
        ],
        [
            "injection p.",
            "VernacExtend",
            "6231ba8fc007bc44cc55655f26b610c585a72751"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "replace (eq_rec (S (n - m + m)) naryFunc (fun _ : nat => ignoreParams m (n - m) f) (S n) p c) with (eq_rec (n - m + m) naryFunc (ignoreParams m (n - m) f) n H1).",
            "VernacExtend",
            "18981c2c2b9decde05ae0fc25a545434c92e2afb"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n m (projectionList n m H0) f).",
            "VernacExtend",
            "4225c61647df7d8a7b7ab8cfd8b1a9d4c1f293cb"
        ],
        [
            "unfold projectionList in |- *.",
            "VernacExtend",
            "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "apply (projectionListApplyParam m n c H0 pr).",
            "VernacExtend",
            "ab69d6f1e01a5f885b0b8cbd0d781842408e6515"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "generalize H1.",
            "VernacExtend",
            "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
        ],
        [
            "generalize p.",
            "VernacExtend",
            "de434a1dd41d3101cdc3a131ce71f229369637c3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (ignoreParams m (n - m) f).",
            "VernacExtend",
            "215934f6250453eb0ef0d9c8a6d2ec54706e28b8"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H2 using K_dec_set.",
            "VernacExtend",
            "1991b420facbe0ce0fafd1fa207cb8333b508b89"
        ],
        [
            "apply eq_nat_dec.",
            "VernacExtend",
            "536650fad05f5969715904f755cca79b8956a9cb"
        ],
        [
            "elim p0 using K_dec_set.",
            "VernacExtend",
            "cd7e0009bbfb165d7c25e990d674b8217729c643"
        ],
        [
            "apply eq_nat_dec.",
            "VernacExtend",
            "536650fad05f5969715904f755cca79b8956a9cb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize p.",
            "VernacExtend",
            "de434a1dd41d3101cdc3a131ce71f229369637c3"
        ],
        [
            "generalize pr.",
            "VernacExtend",
            "bb6d5735c399111decf58d0d77a146378cdcb795"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "clear H p.",
            "VernacExtend",
            "e87546921f8279ce26d52837984f53b17aba034f"
        ],
        [
            "replace (m - m) with 0.",
            "VernacExtend",
            "ac95f85acbeac85e6083b4a23cc32693758c70d2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim p using K_dec_set.",
            "VernacExtend",
            "34b336491c4f17a03da1c1abc51efb1b32c7e076"
        ],
        [
            "apply eq_nat_dec.",
            "VernacExtend",
            "536650fad05f5969715904f755cca79b8956a9cb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "clear p pr.",
            "VernacExtend",
            "aa8ff6cab26f254535025d0e910b0bd3ad5102ba"
        ],
        [
            "apply (projectionListId m f pr0).",
            "VernacExtend",
            "fb38abf9691f9d4dd03cec34bcbf0fddfc6ca400"
        ],
        [
            "apply minus_n_n.",
            "VernacExtend",
            "5673e8ab55081f922675dcf1780f93530ec33746"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold projectionList in H.",
            "VernacExtend",
            "67b6bb715715374076e9dea854ce3fb068aa4b24"
        ],
        [
            "induction H0 as (x, p).",
            "VernacExtend",
            "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
        ],
        [
            "exists (composeFunc (m + n) n (projectionListPR _ _ (le_plus_r _ _)) x).",
            "VernacExtend",
            "0ecbd6cda3d96bc08440a528ffca2529c18ef210"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "assert (m + n - n + n = m + n).",
            "VernacExtend",
            "eeb28a0502385a5d9cf142fafc652779063f0e08"
        ],
        [
            "rewrite (plus_comm m n).",
            "VernacExtend",
            "8d0d37b04aa5a1da22933785060a1cfa93f89e8a"
        ],
        [
            "rewrite minus_plus.",
            "VernacExtend",
            "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
        ],
        [
            "apply plus_comm.",
            "VernacExtend",
            "12475eb4e354334e12b009d49112b8335e8ec9d3"
        ],
        [
            "assert (extEqual (m + n) (eq_rec (m + n - n + n) naryFunc (ignoreParams n (m + n - n) f) (m + n) H0) (evalComposeFunc (m + n) _ (evalPrimRecs (m + n) n (projectionListPR (m + n) n (le_plus_r m n))) f)).",
            "VernacExtend",
            "9cf08245f23a8020af163e143429c659742a7a47"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "replace (ignoreParams n m f) with (eq_rec (m + n - n + n) naryFunc (ignoreParams n (m + n - n) f) (m + n) H0).",
            "VernacExtend",
            "0f433254179b659280c4397b1f9d2c414f516624"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc (m + n) _ (evalPrimRecs (m + n) n (projectionListPR (m + n) n (le_plus_r m n))) f).",
            "VernacExtend",
            "fbde6f7e079e8f393abd424ac1db43869b23628c"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "generalize (evalPrimRecs (m + n) n (projectionListPR (m + n) n (le_plus_r m n))).",
            "VernacExtend",
            "87c2fdd82bd636574fed93f31139129e69dcdef4"
        ],
        [
            "generalize (m + n).",
            "VernacExtend",
            "b7dfbb31685579454f920fc7b097f71b17bb6a95"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extEqualVectorRefl.",
            "VernacExtend",
            "37eb606254b7fdd25f0280c92c56c0e93860002e"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "generalize H0.",
            "VernacExtend",
            "83d8c9bf832ff69c91cc4428b24355f2bade716e"
        ],
        [
            "replace (m + n - n) with m.",
            "VernacExtend",
            "c0275cbd25dade153989aaccf8f5c049e41d1b64"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim H2 using K_dec_set.",
            "VernacExtend",
            "1991b420facbe0ce0fafd1fa207cb8333b508b89"
        ],
        [
            "apply eq_nat_dec.",
            "VernacExtend",
            "536650fad05f5969715904f755cca79b8956a9cb"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "rewrite minus_plus.",
            "VernacExtend",
            "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Ignore_Params.",
            "VernacEndSegment",
            "269fc9eab7b3265e9991dc9b4e7fb28be1822992"
        ],
        [
            "Lemma reduce1stCompose : forall (c n m : nat) (v : Vector.t (naryFunc n) m) (g : naryFunc (S m)), extEqual n (evalComposeFunc n _ (Vector.cons (naryFunc n) (evalConstFunc n c) _ v) g) (evalComposeFunc n _ v (g c)).",
            "VernacStartTheoremProof",
            "37db8f2a68d0549cd2966d65d4044990df12887c"
        ],
        [
            "intros c n.",
            "VernacExtend",
            "79fe6b592df100e844cecedc467e48f554d3955f"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma reduce2ndCompose : forall (c n m : nat) (v : Vector.t (naryFunc n) m) (n0 : naryFunc n) (g : naryFunc (S (S m))), extEqual n (evalComposeFunc n _ (Vector.cons (naryFunc n) n0 _ (Vector.cons (naryFunc n) (evalConstFunc n c) _ v)) g) (evalComposeFunc n _ (Vector.cons (naryFunc n) n0 _ v) (fun x : nat => g x c)).",
            "VernacStartTheoremProof",
            "2105c2e2ae363a3bf751916b799b68cc7fcb1cd1"
        ],
        [
            "intros c n.",
            "VernacExtend",
            "79fe6b592df100e844cecedc467e48f554d3955f"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma evalPrimRecParam : forall (n c d : nat) (g : naryFunc (S n)) (h : naryFunc (S (S (S n)))), extEqual _ (evalPrimRecFunc n (g d) (fun x y : nat => h x y d) c) (evalPrimRecFunc (S n) g h c d).",
            "VernacStartTheoremProof",
            "fcd9b9b333a6e0644026c7154384a9c472e0cd73"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualCompose2.",
            "VernacExtend",
            "a95d1fdec19facca5e1f9999f86ec1ba0a2b3307"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose2IsPR : forall (n : nat) (f : naryFunc n) (p : isPR n f) (g : naryFunc (S n)) (q : isPR (S n) g), isPR n (compose2 n f g).",
            "VernacStartTheoremProof",
            "ee8c5a235a61417ddb71b6b5d8662fbdea0707a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction p as (x, p).",
            "VernacExtend",
            "bbe8f680287b2bde9232007e906d506e2b6a6e8e"
        ],
        [
            "induction q as (x0, p0).",
            "VernacExtend",
            "7585cdd671df24c0b48e238270a11074a09e6b7b"
        ],
        [
            "exists (composeFunc _ _ (PRcons _ _ x (projectionListPR n n (le_n n))) x0).",
            "VernacExtend",
            "76149b0de5fb381ce6ac36f3934ce2aa2ffe76fd"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n (S n) (Vector.cons (naryFunc n) f n (evalPrimRecs n n (projectionListPR n n (le_n n)))) g).",
            "VernacExtend",
            "61bd7ef3bbb1a35774d04f1b8bd283068ca9e955"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply extEqualVectorRefl.",
            "VernacExtend",
            "37eb606254b7fdd25f0280c92c56c0e93860002e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear p0 x0 p x.",
            "VernacExtend",
            "70c89d69bce8ba3cba3eed6923babe7309f725a5"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "induction (eq_nat_dec n n).",
            "VernacExtend",
            "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n (S (S n)) (Vector.cons (naryFunc n) (f c) (S n) (Vector.cons (naryFunc n) (evalConstFunc n c) n (projectionList n n (le_n n)))) g).",
            "VernacExtend",
            "9ed095e1dcd37cba34267ef8acf79a7c62c4ce72"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply (projectionListApplyParam n n c (le_n n) (le_S_n n (S n) (le_S (S n) (S n) (le_n (S n))))).",
            "VernacExtend",
            "b54594da8f4ac9754b400bcfbe50448542e0941e"
        ],
        [
            "apply extEqualRefl.",
            "VernacExtend",
            "a88a89e31f744cf42ff156368cc638b721a63df2"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n (S n) (Vector.cons (naryFunc n) (f c) n (evalPrimRecs n n (projectionListPR n n (le_n n)))) (fun x : nat => g x c)).",
            "VernacExtend",
            "9a66455b9b42613c31d42854141f2abe0068e39f"
        ],
        [
            "clear a Hrecn.",
            "VernacExtend",
            "42ef097e085215f9ad5f2ee3770b0c30f0037d28"
        ],
        [
            "generalize (f c).",
            "VernacExtend",
            "6fccca63bb711374fa2d8798aa958f2bffcc49c8"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "fold (projectionList n n (le_n n)) in |- *.",
            "VernacExtend",
            "0b288c7574a1f3fd709e6375558c03ea3d21173b"
        ],
        [
            "generalize (projectionList n n (le_n n)).",
            "VernacExtend",
            "c519175a0a70a7129d5561794e5abc0d6fc56af3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (reduce2ndCompose c n n t n0).",
            "VernacExtend",
            "48807b3f2ab5acd4c69b2c8915a5122d7878dfbb"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compose1_NIsPR : forall (n : nat) (g : naryFunc (S n)), isPR (S n) g -> forall f : naryFunc 1, isPR 1 f -> isPR (S n) (fun x : nat => g (f x)).",
            "VernacStartTheoremProof",
            "bbd7cca9f6746c8a314340969d4b5b9382824682"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "induction H0 as (x0, p0).",
            "VernacExtend",
            "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
        ],
        [
            "exists (composeFunc (S n) (S n) (PRcons _ _ (composeFunc (S n) 1 (PRcons _ _ (projFunc (S n) n (lt_n_Sn n)) (PRnil _)) x0) (projectionListPR (S n) n (le_n_Sn n))) x).",
            "VernacExtend",
            "d2ea78ec0ad7ce5e249f578a3394773f45edcd3b"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "fold (naryFunc n) in |- *.",
            "VernacExtend",
            "1746ff37c333d14829a01aee24645ac0c87da96c"
        ],
        [
            "induction (eq_nat_dec n n).",
            "VernacExtend",
            "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n (S n) (Vector.cons (naryFunc n) (evalConstFunc n (f c)) n (projectionList n n (le_n n))) g).",
            "VernacExtend",
            "1e405d8f59cc034e356a56ca5cb721e58fac7ae8"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "unfold extEqualVector in |- *.",
            "VernacExtend",
            "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "apply extEqualTrans with (evalComposeFunc n 1 (Vector.cons (naryFunc n) (evalConstFunc n c) 0 (Vector.nil (naryFunc n))) f).",
            "VernacExtend",
            "27b3bccc5878135b3b225b187e6af5f77f296f79"
        ],
        [
            "apply extEqualCompose.",
            "VernacExtend",
            "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
        ],
        [
            "apply extEqualVectorRefl.",
            "VernacExtend",
            "37eb606254b7fdd25f0280c92c56c0e93860002e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear a p0 x0 p x g.",
            "VernacExtend",
            "415c1cbdfac4c5b650fedb422c5646de61562f80"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply (projectionListApplyParam n n c (le_n n) (le_n_Sn n)).",
            "VernacExtend",
            "ddff47d0297dc71691cacf8291785672fe9077f7"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear p0 x0 p x a.",
            "VernacExtend",
            "6e89d8a1eb057e52c2372ee980f3620dceaf9bfc"
        ],
        [
            "eapply extEqualTrans.",
            "VernacExtend",
            "fcc0112687eaec3e88c4c8a01889eb47c927b5f2"
        ],
        [
            "apply reduce1stCompose.",
            "VernacExtend",
            "df88d7a3960172ccf43d3b5667e5809d7f5225b5"
        ],
        [
            "apply extEqualSym.",
            "VernacExtend",
            "8139d37ad614cdf54a9a845deca0627767f9a131"
        ],
        [
            "apply (projectionListId n (g (f c)) (le_n n)).",
            "VernacExtend",
            "caa23a3e485c2b9e3138be26a0543c87dc72fc9c"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition switchPR : naryFunc 3.",
            "VernacDefinition",
            "408973aa32b32669776dc179fa43f2f61c632881"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as [| n].",
            "VernacExtend",
            "04b8b20a4692c4606b627fdb37d3152ea55d5ec9"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma switchIsPR : isPR 3 switchPR.",
            "VernacStartTheoremProof",
            "4747b08043da573b74fce51961497676f549e209"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (isPR 3 (fun a b c : nat => nat_rec (fun _ : nat => nat) c (fun (n : nat) (_ : (fun _ : nat => nat) n) => b) a)).",
            "VernacExtend",
            "5461661d530811e51faf6a7dfc98a6ff7c9ee8cd"
        ],
        [
            "apply ind2ParamIsPR with (f := fun _ _ b c : nat => b) (g := fun b c : nat => c).",
            "VernacExtend",
            "8b48de6e404af83fe019c60e9490197f73f2a272"
        ],
        [
            "apply pi3_4IsPR.",
            "VernacExtend",
            "4d47efad201e96236b3b103926c176f186dde800"
        ],
        [
            "apply pi2_2IsPR.",
            "VernacExtend",
            "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
        ],
        [
            "induction H as (x, p).",
            "VernacExtend",
            "8e365c7e75bd074d4b6834825d45e1c02288e71d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "apply extEqualTrans with (fun a b c : nat => nat_rec (fun _ : nat => nat) c (fun _ _ : nat => b) a).",
            "VernacExtend",
            "7620cef8cac068adece5fdbd963a7385b2769524"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "unfold switchPR in |- *.",
            "VernacExtend",
            "2b8d77a15cf79a75ac598fd4909e05bd13dfb7e7"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction c; reflexivity.",
            "VernacExtend",
            "abdf85891f4eb571a0dabf24b44d5c376c2fd652"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint boundedSearchHelp (P : naryRel 1) (b : nat) {struct b} : nat := match b with | O => 0 | S b' => match eq_nat_dec (boundedSearchHelp P b') b' with | left _ => match P b' with | true => b' | false => S b' end | right _ => boundedSearchHelp P b' end end.",
            "VernacFixpoint",
            "da6b2ef24dfb83efee9c94030be02c209ae23283"
        ],
        [
            "Definition boundedSearch (P : naryRel 2) (b : nat) : nat := boundedSearchHelp (P b) b.",
            "VernacDefinition",
            "4674914fbb42de4954dbaf3c0a951b90e79a4113"
        ],
        [
            "Lemma boundedSearch1 : forall (P : naryRel 2) (b x : nat), x < boundedSearch P b -> P b x = false.",
            "VernacStartTheoremProof",
            "051559774c859278a7b15020a7f8b53b1078fd9f"
        ],
        [
            "unfold boundedSearch in |- *.",
            "VernacExtend",
            "99b344d594e431598b24d037d4c611a70f6fd3d1"
        ],
        [
            "intros P b.",
            "VernacExtend",
            "0190c54b2fda298ad10062b6e094e3a1087133b6"
        ],
        [
            "generalize (P b).",
            "VernacExtend",
            "709801f4d5c5c8d7c5d70a8425b18cbd357515d1"
        ],
        [
            "intros b0 x H.",
            "VernacExtend",
            "f16c494b774346774e5f697325dae93d1e78bd3b"
        ],
        [
            "clear P.",
            "VernacExtend",
            "09979dc635f62a4144acc1997516dcd0750123f1"
        ],
        [
            "induction b as [| b Hrecb].",
            "VernacExtend",
            "fec7634b02a794607b0227223842e0197019a2f0"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "elim (lt_n_O _ H).",
            "VernacExtend",
            "b93451b1a30fa3f24613ad7b0441907b3427a80f"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "induction (eq_nat_dec (boundedSearchHelp b0 b) b).",
            "VernacExtend",
            "30dd0a4024dc43ba2130519658f7dcbb4e8325bb"
        ],
        [
            "rewrite a in Hrecb.",
            "VernacExtend",
            "f70db42e6d6af760d6d3799f1d6d8db06911f44f"
        ],
        [
            "induction (eq_nat_dec x b).",
            "VernacExtend",
            "06f800cd87a3dd04434059de01acb417c58cdc0e"
        ],
        [
            "rewrite a0.",
            "VernacExtend",
            "878ace771130763fd02fc3b15d151f261e4941ca"
        ],
        [
            "induction (b0 b).",
            "VernacExtend",
            "b02f929bae8d08ea5640200582248f4eabd23e9b"
        ],
        [
            "elim (lt_irrefl b).",
            "VernacExtend",
            "166bbfaac3d914249d6cd330c7758b70159d0def"
        ],
        [
            "rewrite a0 in H.",
            "VernacExtend",
            "854a6a990bc2c07be9d35073c8e1e5f476078718"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Hrecb.",
            "VernacExtend",
            "80670c41dde2e82ba232122d512977ca4333ade0"
        ],
        [
            "induction (b0 b).",
            "VernacExtend",
            "b02f929bae8d08ea5640200582248f4eabd23e9b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (x <= b).",
            "VernacExtend",
            "5b6ee2f458d00381f957f9114912acc7266502dc"
        ],
        [
            "apply lt_n_Sm_le.",
            "VernacExtend",
            "354c1d072708776c26f2aab2afa0945822d0815b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction (le_lt_or_eq _ _ H0).",
            "VernacExtend",
            "86cf13b389eca13e2e02416cb22c7982f40bd28d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "elim b1.",
            "VernacExtend",
            "e56693198c91ed42bdd9da7d5e65f768de914997"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Hrecb.",
            "VernacExtend",
            "80670c41dde2e82ba232122d512977ca4333ade0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma boundedSearch2 : forall (P : naryRel 2) (b : nat), boundedSearch P b = b \\/ P b (boundedSearch P b) = true.",
            "VernacStartTheoremProof",
            "af2c015ed3d0281e5bd5ef7e5cf6c2383a3ecd66"
        ],
        [
            "unfold boundedSearch in |- *.",
            "VernacExtend",
            "99b344d594e431598b24d037d4c611a70f6fd3d1"
        ],
        [
            "intros P b.",
            "VernacExtend",
            "0190c54b2fda298ad10062b6e094e3a1087133b6"
        ],
        [
            "assert (forall P : naryRel 1, boundedSearchHelp P b = b \\/ P (boundedSearchHelp P b) = true).",
            "VernacExtend",
            "efd27a96b471996c9ef79a1690bccc950cdcf1c0"
        ],
        [
            "clear P.",
            "VernacExtend",
            "09979dc635f62a4144acc1997516dcd0750123f1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction b as [| b Hrecb].",
            "VernacExtend",
            "fec7634b02a794607b0227223842e0197019a2f0"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (P b = true \\/ P b = false).",
            "VernacExtend",
            "0a58338c76404b77b196b2c1174a09e6733d9864"
        ],
        [
            "induction (P b); auto.",
            "VernacExtend",
            "a10b43cbbc1c815990495eed8d62e4ac916f9bc4"
        ],
        [
            "induction (eq_nat_dec (boundedSearchHelp P b) b).",
            "VernacExtend",
            "d7187f7ffc50a221b4b840c482b525a3a8b68db1"
        ],
        [
            "induction H as [H| H].",
            "VernacExtend",
            "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "induction Hrecb as [H0| H0].",
            "VernacExtend",
            "18eb445c893e76ac8ac10762bff89904f9e52f69"
        ],
        [
            "elim b0.",
            "VernacExtend",
            "4506652c796867e8c9be690f8925bec68461304f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma boundSearchIsPR : forall P : naryRel 2, isPRrel 2 P -> isPR 1 (fun b : nat => boundedSearch P b).",
            "VernacStartTheoremProof",
            "3483e5473f59820ea0655975cc380a22668f804c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold boundedSearch in |- *.",
            "VernacExtend",
            "99b344d594e431598b24d037d4c611a70f6fd3d1"
        ],
        [
            "assert (isPR 2 (fun b c : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b)).",
            "VernacExtend",
            "1d089c6cf403a5dee69389ede4379d411e4fc9d0"
        ],
        [
            "apply ind1ParamIsPR with (g := fun _ : nat => 0) (f := fun b0 Hrecb c : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)).",
            "VernacExtend",
            "b12dab7c70ef99c5045c7c1bbfb835b45328d636"
        ],
        [
            "unfold isPRrel in H.",
            "VernacExtend",
            "36ad334b6765ff7d5190d32c9b21dd518e2a171a"
        ],
        [
            "assert (isPR 3 (fun b0 Hrecb c : nat => switchPR (charFunction 2 beq_nat Hrecb b0) (bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) Hrecb)).",
            "VernacExtend",
            "5c2d909ce4f47ee3675a1f8fd716acaa25006803"
        ],
        [
            "apply compose3_3IsPR with (g := switchPR) (f1 := fun b0 Hrecb c : nat => charFunction 2 beq_nat Hrecb b0) (f2 := fun b0 Hrecb c : nat => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (f3 := fun b0 Hrecb c : nat => Hrecb).",
            "VernacExtend",
            "691e36dfbb8779f2e6101e1642aac759248e1006"
        ],
        [
            "apply filter110IsPR with (g := fun b0 Hrecb : nat => charFunction 2 beq_nat Hrecb b0).",
            "VernacExtend",
            "d28d5b07480de685e41238aca623bebceb87f575"
        ],
        [
            "apply swapIsPR.",
            "VernacExtend",
            "df1101069b402c0319f06625614023d04b616873"
        ],
        [
            "apply eqIsPR.",
            "VernacExtend",
            "493018d16fb870ceb55150454019ccac18f41f8a"
        ],
        [
            "apply filter101IsPR with (g := fun b0 c : nat => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)).",
            "VernacExtend",
            "01522420e07b2653ffb565caf1e3835f0e2c2699"
        ],
        [
            "assert (isPR 2 (fun b0 c : nat => switchPR (charFunction 2 P c b0) b0 (S b0))).",
            "VernacExtend",
            "618f42ebfc9e9562f9c11d3e833617835aded771"
        ],
        [
            "apply compose2_3IsPR with (g := switchPR) (f1 := fun b0 c : nat => charFunction 2 P c b0) (f2 := fun b0 c : nat => b0) (f3 := fun b0 c : nat => S b0).",
            "VernacExtend",
            "9d5280a5df6eb3a30c529cbd4352e9f6b33e9cd0"
        ],
        [
            "apply swapIsPR.",
            "VernacExtend",
            "df1101069b402c0319f06625614023d04b616873"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply pi1_2IsPR.",
            "VernacExtend",
            "de83e3a673d46ec194b97a67a98b94cf405137bf"
        ],
        [
            "apply filter10IsPR.",
            "VernacExtend",
            "a511891d7a43751c68939783b674e14f242f8594"
        ],
        [
            "apply succIsPR.",
            "VernacExtend",
            "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
        ],
        [
            "apply switchIsPR.",
            "VernacExtend",
            "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
        ],
        [
            "induction H0 as (x, p).",
            "VernacExtend",
            "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "apply extEqualTrans with (fun b0 c : nat => switchPR (charFunction 2 P c b0) b0 (S b0)).",
            "VernacExtend",
            "59304f2d7c31f344200fefa5e9788cf7d668860f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (P c0 c); reflexivity.",
            "VernacExtend",
            "d156fbbee713379b621dc938985edcac07fb87b6"
        ],
        [
            "apply pi2_3IsPR.",
            "VernacExtend",
            "b556a10eda38792ce0fb0989e9246a2b09b60d23"
        ],
        [
            "apply switchIsPR.",
            "VernacExtend",
            "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
        ],
        [
            "induction H0 as (x, p).",
            "VernacExtend",
            "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "apply extEqualTrans with (fun b0 Hrecb c : nat => switchPR (charFunction 2 beq_nat Hrecb b0) (bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) Hrecb).",
            "VernacExtend",
            "cb2aad3fb7aa8a6e63b340ebedcb5ce8842d8fda"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction (eq_nat_dec c0 c).",
            "VernacExtend",
            "aebd0b531e95afd05a03625515e09cc8e74f66d5"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- a.",
            "VernacExtend",
            "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
        ],
        [
            "rewrite <- beq_nat_refl.",
            "VernacExtend",
            "6483e653b28875693c3c92037ba92da24c711ae3"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite beq_nat_not_refl.",
            "VernacExtend",
            "1233302f99cf1c86d83f4544c8d696eababc6902"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply const1_NIsPR.",
            "VernacExtend",
            "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
        ],
        [
            "assert (isPR 1 (fun b : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P b b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b)).",
            "VernacExtend",
            "5e39437518ea1670e791b095bde5b6708802b0bd"
        ],
        [
            "apply compose1_2IsPR with (g := fun b c : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b) (f := fun b : nat => b) (f' := fun b : nat => b).",
            "VernacExtend",
            "67d8122cc4975d73007eac1e2f91e593cb350578"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear H0.",
            "VernacExtend",
            "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
        ],
        [
            "induction H1 as (x, p).",
            "VernacExtend",
            "08ec86c4cca942236e8111200b8e9a72133604f9"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "apply extEqualTrans with (fun b : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P b b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b).",
            "VernacExtend",
            "d3e14b89e3ca95da0e48411d564db4f70b7215c2"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "clear H x p.",
            "VernacExtend",
            "638d65388730b826678d4e1cfb468c05f73c91a6"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (P c).",
            "VernacExtend",
            "53c5a5d19aea3b14ddb1cee77a3e843bf37ec048"
        ],
        [
            "intros b.",
            "VernacExtend",
            "45476e0fc5a2ecbf4e254186332d285aa1668368"
        ],
        [
            "clear P.",
            "VernacExtend",
            "09979dc635f62a4144acc1997516dcd0750123f1"
        ],
        [
            "induction c as [| c Hrecc].",
            "VernacExtend",
            "775b22ff02d1bbc4d4afdb9b0405050cad715144"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Hrecc.",
            "VernacExtend",
            "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
        ],
        [
            "induction (eq_nat_dec (boundedSearchHelp b c) c).",
            "VernacExtend",
            "3adf27659209cef361f443103e13a419d80b4a54"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (b c).",
            "VernacExtend",
            "79d3f035ff8cce04641ba5ae099de30f5f65a7f8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition iterate (g : nat -> nat) := nat_rec (fun _ => nat -> nat) (fun x : nat => x) (fun (_ : nat) (rec : nat -> nat) (x : nat) => g (rec x)).",
            "VernacDefinition",
            "e118d56aa7b6b0e6fb6b623392d08145196e7fce"
        ],
        [
            "Lemma iterateIsPR : forall g : nat -> nat, isPR 1 g -> forall n : nat, isPR 1 (iterate g n).",
            "VernacStartTheoremProof",
            "d3560ef5d00e0234738636d2a17a8a486fd37d8a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn]; simpl in |- *.",
            "VernacExtend",
            "e1a74f74b74b5da6b39f1b5d05925afd4843b4b4"
        ],
        [
            "apply idIsPR.",
            "VernacExtend",
            "53dbd586054559f4d155667fb58fd24add718135"
        ],
        [
            "apply compose1_1IsPR; assumption.",
            "VernacExtend",
            "87d5ecc11e8cc864762dc2537e6031e9bd2ee2b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "evalProjFuncInd",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ p1).",
                        "VernacExtend",
                        "a5d88a2c225e66d07492ad330702e6e64bb7d687"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec m n).",
                        "VernacExtend",
                        "9d41f8d7f176093066f76471eee46964d7b42ca0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite (Hrecn _ match le_lt_or_eq m n (lt_n_Sm_le m n p1) with | or_introl l2 => l2 | or_intror l2 => False_ind (m < n) (b l2) end match le_lt_or_eq m n (lt_n_Sm_le m n p2) with | or_introl l2 => l2 | or_intror l2 => False_ind (m < n) (b l2) end).",
                        "VernacExtend",
                        "9da929afc65ad253fd7d1f2689b53d7de63384ae"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extEqualVectorGeneral",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "induction l as [| a n0 l Hrecl].",
                        "VernacExtend",
                        "a1d92005a73320fa50a1f4d8a3af223f695e9d4e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l' as [| a n0 v].",
                        "VernacExtend",
                        "ba1ad78b0814a61b1157def0ef5eed0bc4ab1b44"
                    ]
                },
                {
                    "command": [
                        "exact True.",
                        "VernacExtend",
                        "b5c43874db95f600ccc8b514869bf5d7833ed4dc"
                    ]
                },
                {
                    "command": [
                        "exact False.",
                        "VernacExtend",
                        "ae3d9c0ecc9ffbe27866258a1e51267ec8491391"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l' as [| a0 n1 v].",
                        "VernacExtend",
                        "c6e2f69dbf5aa81e2e9fa786f1a094fbe015d8e6"
                    ]
                },
                {
                    "command": [
                        "exact False.",
                        "VernacExtend",
                        "ae3d9c0ecc9ffbe27866258a1e51267ec8491391"
                    ]
                },
                {
                    "command": [
                        "exact (extEqual n a a0 /\\ Hrecl _ v).",
                        "VernacExtend",
                        "9908126f878832e39cc849d32d66b405668c0ba7"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "extEqualVector",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "refine (@Vector.rect2 _ _ _ _ _); intros.",
                        "VernacExtend",
                        "249069fffa69fd3d65536e0b2770250240fc518e"
                    ]
                },
                {
                    "command": [
                        "apply True.",
                        "VernacExtend",
                        "fe34c223d22449ec810a08d1ac598b2897c63cb5"
                    ]
                },
                {
                    "command": [
                        "apply (extEqual n a b /\\ X).",
                        "VernacExtend",
                        "ee9af9db1921ff0f13580c680920f66333cd1cdb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "extEqualVectorRefl",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction l as [| a n0 l Hrecl].",
                        "VernacExtend",
                        "a1d92005a73320fa50a1f4d8a3af223f695e9d4e"
                    ]
                },
                {
                    "command": [
                        "now simpl.",
                        "VernacExtend",
                        "7cf8ae1595f521e6705ea84c45dd2f1b53854af2"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extEqualOneParamList",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intro; refine (@Vector.rect2 _ _ _ _ _); simpl; intros.",
                        "VernacExtend",
                        "ffb6cecd78d656630b0b3758da5c4753d8313635"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct H0.",
                        "VernacExtend",
                        "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extEqualCompose",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "induction n; refine (@Vector.rect2 _ _ _ _ _); simpl; intros.",
                        "VernacExtend",
                        "54f3d7affae4f3fdc7308a959e3f0553fa580dff"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H0; now (apply H; [|subst a]).",
                        "VernacExtend",
                        "e8598ea13d608f8374df2371a2a327327fa66b2d"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (Hi, Hj).",
                        "VernacExtend",
                        "9bf9dcedd724396e1dc28b2d2a6ef2f3e209dc3e"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Hi.",
                        "VernacExtend",
                        "b7959f73b24cea8febda147e5d8d404627f1652f"
                    ]
                },
                {
                    "command": [
                        "now apply extEqualOneParamList.",
                        "VernacExtend",
                        "40445aaa1e86629d83b24e3fad8bbba326a88aa9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extEqualCompose2",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn]; simpl in |- *; intros.",
                        "VernacExtend",
                        "51bd88ded8722029048b757ffb577841c2e26b54"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn; simpl in |- *; intros; auto.",
                        "VernacExtend",
                        "7667836ccab2d713bf9fa45db05e7e2abb726228"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extEqualPrimRec",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut (extEqual n (evalPrimRecFunc n g1 h1 c) (evalPrimRecFunc n g2 h2 c)).",
                        "VernacExtend",
                        "041c3bca9273ca4bad2e12cabc7721998309f727"
                    ]
                },
                {
                    "command": [
                        "cut (extEqual (S n) (h1 c) (h2 c)).",
                        "VernacExtend",
                        "6f101b32546024c14f57bf061b342ff849fbe399"
                    ]
                },
                {
                    "command": [
                        "generalize (h1 c) (h2 c) (evalPrimRecFunc n g1 h1 c) (evalPrimRecFunc n g2 h2 c).",
                        "VernacExtend",
                        "d1d58871179376f359432993e1df1587c8d3c9be"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc (S n)) in |- *.",
                        "VernacExtend",
                        "896ce7fc93450ce2ccb62ec676d2dd211fa921ae"
                    ]
                },
                {
                    "command": [
                        "clear Hrecc H0 h1 h2 g1 g2 H.",
                        "VernacExtend",
                        "c8b9c1585a24f990c63dc7c5f05087a8b94397f6"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in H0.",
                        "VernacExtend",
                        "a4a6a8421870dbf7255f8d031744eec32f12a941"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succIsPR",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "exists succFunc.",
                        "VernacExtend",
                        "cc10084bf444deee1fc49c8d32b3453c7af59a47"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const0_NIsPR",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "exists zeroFunc.",
                        "VernacExtend",
                        "9b8894192874b27c012217ee4b6f4d92e210305e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) succFunc).",
                        "VernacExtend",
                        "ee0a6fa3194718024cf70505c8428cf41c393c07"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "const1_NIsPR",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 0 n).",
                        "VernacExtend",
                        "03b8644a3e318cfbd602f16a80629426d86c7958"
                    ]
                },
                {
                    "command": [
                        "apply const0_NIsPR.",
                        "VernacExtend",
                        "8a427edf922f9ef42dce08bace80762af444ae94"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc 1 _ (PRnil _) x).",
                        "VernacExtend",
                        "261cc3fa5df91f1725941103c001449f0dc0001d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idIsPR",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "assert (0 < 1).",
                        "VernacExtend",
                        "acf5a1655ca45e2d8fd17ee915cbc58e6badb8e4"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi1_2IsPR",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "assert (1 < 2).",
                        "VernacExtend",
                        "2260ccbdd314bc4ac62f9b5ba5635c927360b16e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi2_2IsPR",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "assert (0 < 2).",
                        "VernacExtend",
                        "4b6791f8aa3fed7ef44a223c8ebbc7abe8c16199"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi1_3IsPR",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "assert (2 < 3).",
                        "VernacExtend",
                        "070e4f5df152fbf407c3f05f0fe1edec992ecd9d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi2_3IsPR",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "assert (1 < 3).",
                        "VernacExtend",
                        "c102e19b2ce4f626589e7919eb1305355f615038"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi3_3IsPR",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "assert (0 < 3).",
                        "VernacExtend",
                        "69266d4ff172165aafc0f812f0e89be243038dcc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi1_4IsPR",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "assert (3 < 4).",
                        "VernacExtend",
                        "849ed08c3deabb6da77fe1e23010de6ddec2b57c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi2_4IsPR",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "assert (2 < 4).",
                        "VernacExtend",
                        "2d849360429c1e7278378b60245b1233512bb6ad"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi3_4IsPR",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "assert (1 < 4).",
                        "VernacExtend",
                        "6bfc8c999bf693ea177b0bfc0ead721bc7b43929"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pi4_4IsPR",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "assert (0 < 4).",
                        "VernacExtend",
                        "40127bbe5219a08f17884935afe20034fcdbf31d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (projFunc _ _ H).",
                        "VernacExtend",
                        "60e17da737dffd95f2d4583cf44466562e898b2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter01IsPR",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 (fun a b : nat => b)).",
                        "VernacExtend",
                        "56c3123399dd5b9c2626337ef70abf5580ac7b4f"
                    ]
                },
                {
                    "command": [
                        "apply pi2_2IsPR.",
                        "VernacExtend",
                        "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
                        "VernacExtend",
                        "6462b90fbb4520692fa494786a68b568391e5feb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c0) with (g (evalPrimRec 2 x0 c c0)).",
                        "VernacExtend",
                        "8886419e7c80ee9767d33d3b68f13e47ec7dde61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter10IsPR",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 (fun a b : nat => a)).",
                        "VernacExtend",
                        "a6809aab71358467c4f2f35d9cbba7fe42fd9af3"
                    ]
                },
                {
                    "command": [
                        "apply pi1_2IsPR.",
                        "VernacExtend",
                        "de83e3a673d46ec194b97a67a98b94cf405137bf"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
                        "VernacExtend",
                        "6462b90fbb4520692fa494786a68b568391e5feb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c) with (g (evalPrimRec 2 x0 c c0)).",
                        "VernacExtend",
                        "5fc0d9947830b63da578da85aee176578c590cf0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter100IsPR",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => a)).",
                        "VernacExtend",
                        "dce7b7a55a332b6f48dccdade150b267c52e0b02"
                    ]
                },
                {
                    "command": [
                        "apply pi1_3IsPR.",
                        "VernacExtend",
                        "69ded56cb54e46793815f38a229f810bef22ec17"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
                        "VernacExtend",
                        "6462b90fbb4520692fa494786a68b568391e5feb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c) with (g (evalPrimRec 3 x0 c c0 c1)).",
                        "VernacExtend",
                        "ff8ab44d215834979297ce594f784b5e5aa24cfc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter010IsPR",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => b)).",
                        "VernacExtend",
                        "3f762d1fdf69ada9094023c38c30086732ab0cc3"
                    ]
                },
                {
                    "command": [
                        "apply pi2_3IsPR.",
                        "VernacExtend",
                        "b556a10eda38792ce0fb0989e9246a2b09b60d23"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
                        "VernacExtend",
                        "6462b90fbb4520692fa494786a68b568391e5feb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c0) with (g (evalPrimRec 3 x0 c c0 c1)).",
                        "VernacExtend",
                        "a64895445e100b215065da07599b6772e4eaad8c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter001IsPR",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => c)).",
                        "VernacExtend",
                        "28db0c9c8262a9cfbcd84ceb97e748000dd9bd44"
                    ]
                },
                {
                    "command": [
                        "apply pi3_3IsPR.",
                        "VernacExtend",
                        "6100d98550fd9fe7006e8e40ada8e774ce795e62"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
                        "VernacExtend",
                        "6462b90fbb4520692fa494786a68b568391e5feb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c1) with (g (evalPrimRec 3 x0 c c0 c1)).",
                        "VernacExtend",
                        "ddde6feb34b75e50e4db2f6b862243109e934c86"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter011IsPR",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => b)).",
                        "VernacExtend",
                        "3f762d1fdf69ada9094023c38c30086732ab0cc3"
                    ]
                },
                {
                    "command": [
                        "apply pi2_3IsPR.",
                        "VernacExtend",
                        "b556a10eda38792ce0fb0989e9246a2b09b60d23"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => c)).",
                        "VernacExtend",
                        "28db0c9c8262a9cfbcd84ceb97e748000dd9bd44"
                    ]
                },
                {
                    "command": [
                        "apply pi3_3IsPR.",
                        "VernacExtend",
                        "6100d98550fd9fe7006e8e40ada8e774ce795e62"
                    ]
                },
                {
                    "command": [
                        "induction H as (x1, p1).",
                        "VernacExtend",
                        "3c7a69edeee426de8520701da581094158fd43c9"
                    ]
                },
                {
                    "command": [
                        "simpl in p1.",
                        "VernacExtend",
                        "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
                        "VernacExtend",
                        "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c0 c1) with (g (evalPrimRec 3 x0 c c0 c1) (evalPrimRec 3 x1 c c0 c1)).",
                        "VernacExtend",
                        "430adba04dd56c62f5afb5be434d0208123d632d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "rewrite p1.",
                        "VernacExtend",
                        "8e2199ae6271b1221500c939b89a4565c1d09137"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter110IsPR",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => a)).",
                        "VernacExtend",
                        "dce7b7a55a332b6f48dccdade150b267c52e0b02"
                    ]
                },
                {
                    "command": [
                        "apply pi1_3IsPR.",
                        "VernacExtend",
                        "69ded56cb54e46793815f38a229f810bef22ec17"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => b)).",
                        "VernacExtend",
                        "3f762d1fdf69ada9094023c38c30086732ab0cc3"
                    ]
                },
                {
                    "command": [
                        "apply pi2_3IsPR.",
                        "VernacExtend",
                        "b556a10eda38792ce0fb0989e9246a2b09b60d23"
                    ]
                },
                {
                    "command": [
                        "induction H as (x1, p1).",
                        "VernacExtend",
                        "3c7a69edeee426de8520701da581094158fd43c9"
                    ]
                },
                {
                    "command": [
                        "simpl in p1.",
                        "VernacExtend",
                        "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
                        "VernacExtend",
                        "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c c0) with (g (evalPrimRec 3 x0 c c0 c1) (evalPrimRec 3 x1 c c0 c1)).",
                        "VernacExtend",
                        "4dca33562aeb7d4e8ab82065fda19fc912b08df5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "rewrite p1.",
                        "VernacExtend",
                        "8e2199ae6271b1221500c939b89a4565c1d09137"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter101IsPR",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => a)).",
                        "VernacExtend",
                        "dce7b7a55a332b6f48dccdade150b267c52e0b02"
                    ]
                },
                {
                    "command": [
                        "apply pi1_3IsPR.",
                        "VernacExtend",
                        "69ded56cb54e46793815f38a229f810bef22ec17"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => c)).",
                        "VernacExtend",
                        "28db0c9c8262a9cfbcd84ceb97e748000dd9bd44"
                    ]
                },
                {
                    "command": [
                        "apply pi3_3IsPR.",
                        "VernacExtend",
                        "6100d98550fd9fe7006e8e40ada8e774ce795e62"
                    ]
                },
                {
                    "command": [
                        "induction H as (x1, p1).",
                        "VernacExtend",
                        "3c7a69edeee426de8520701da581094158fd43c9"
                    ]
                },
                {
                    "command": [
                        "simpl in p1.",
                        "VernacExtend",
                        "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
                        "VernacExtend",
                        "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c c1) with (g (evalPrimRec 3 x0 c c0 c1) (evalPrimRec 3 x1 c c0 c1)).",
                        "VernacExtend",
                        "675fcc1eb704b6c1cb5b05e9570a003abac3ba17"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "rewrite p1.",
                        "VernacExtend",
                        "8e2199ae6271b1221500c939b89a4565c1d09137"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter0011IsPR",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => c)).",
                        "VernacExtend",
                        "83f236ef9827e9a29d8b49b5fe7e3e9a25320b93"
                    ]
                },
                {
                    "command": [
                        "apply pi3_4IsPR.",
                        "VernacExtend",
                        "4d47efad201e96236b3b103926c176f186dde800"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => d)).",
                        "VernacExtend",
                        "89bc17aa505ff9333d446b4733f194276b739c2f"
                    ]
                },
                {
                    "command": [
                        "apply pi4_4IsPR.",
                        "VernacExtend",
                        "a6c3c8af3301656a228eb20037eb1216fb3bbe65"
                    ]
                },
                {
                    "command": [
                        "induction H as (x1, p1).",
                        "VernacExtend",
                        "3c7a69edeee426de8520701da581094158fd43c9"
                    ]
                },
                {
                    "command": [
                        "simpl in p1.",
                        "VernacExtend",
                        "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
                        "VernacExtend",
                        "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c1 c2) with (g (evalPrimRec 4 x0 c c0 c1 c2) (evalPrimRec 4 x1 c c0 c1 c2)).",
                        "VernacExtend",
                        "fbf27eafa46a6814d8694a21e8cc22af08b318af"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "rewrite p1.",
                        "VernacExtend",
                        "8e2199ae6271b1221500c939b89a4565c1d09137"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter1000IsPR",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => a)).",
                        "VernacExtend",
                        "b1a4dbf850fd4b3dc5802a1db5bb597db2322e13"
                    ]
                },
                {
                    "command": [
                        "apply pi1_4IsPR.",
                        "VernacExtend",
                        "df635b73dcfba3d6b3a87ba4a5579d402f179c7b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRnil _)) x).",
                        "VernacExtend",
                        "6462b90fbb4520692fa494786a68b568391e5feb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c) with (g (evalPrimRec 4 x0 c c0 c1 c2)).",
                        "VernacExtend",
                        "7559d72db3bfe668fee85ea9630d33104c31c13a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter1011IsPR",
            "line_nb": 406,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => a)).",
                        "VernacExtend",
                        "b1a4dbf850fd4b3dc5802a1db5bb597db2322e13"
                    ]
                },
                {
                    "command": [
                        "apply pi1_4IsPR.",
                        "VernacExtend",
                        "df635b73dcfba3d6b3a87ba4a5579d402f179c7b"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => c)).",
                        "VernacExtend",
                        "83f236ef9827e9a29d8b49b5fe7e3e9a25320b93"
                    ]
                },
                {
                    "command": [
                        "apply pi3_4IsPR.",
                        "VernacExtend",
                        "4d47efad201e96236b3b103926c176f186dde800"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => d)).",
                        "VernacExtend",
                        "89bc17aa505ff9333d446b4733f194276b739c2f"
                    ]
                },
                {
                    "command": [
                        "apply pi4_4IsPR.",
                        "VernacExtend",
                        "a6c3c8af3301656a228eb20037eb1216fb3bbe65"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x1, p1).",
                        "VernacExtend",
                        "8e7bf48e799685c88b1579f195bbc2d5b65ba28d"
                    ]
                },
                {
                    "command": [
                        "simpl in p1.",
                        "VernacExtend",
                        "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x2, p2).",
                        "VernacExtend",
                        "7c1a1b68ab8699c0a1bb5065f64f35bfcc867be7"
                    ]
                },
                {
                    "command": [
                        "simpl in p2.",
                        "VernacExtend",
                        "415e3f1e2ba7c6627303802fac802ff63223f818"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRcons _ _ x2 (PRnil _)))) x).",
                        "VernacExtend",
                        "50245cbfed97978455c36acaea25e800be2b61cd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c c1 c2) with (g (evalPrimRec 4 x0 c c0 c1 c2) (evalPrimRec 4 x1 c c0 c1 c2) (evalPrimRec 4 x2 c c0 c1 c2)).",
                        "VernacExtend",
                        "0aed26dcbf7bc43d9b8cec7bd164a5b85c5c3425"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter1100IsPR",
            "line_nb": 431,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => a)).",
                        "VernacExtend",
                        "b1a4dbf850fd4b3dc5802a1db5bb597db2322e13"
                    ]
                },
                {
                    "command": [
                        "apply pi1_4IsPR.",
                        "VernacExtend",
                        "df635b73dcfba3d6b3a87ba4a5579d402f179c7b"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 4 (fun a b c d : nat => b)).",
                        "VernacExtend",
                        "b3bf0c52f8a9b2fc4f8942d28cd9289e24e1a560"
                    ]
                },
                {
                    "command": [
                        "apply pi2_4IsPR.",
                        "VernacExtend",
                        "9a963479d1f35ba2f63682b1b725787b4390c3ee"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x1, p1).",
                        "VernacExtend",
                        "8e7bf48e799685c88b1579f195bbc2d5b65ba28d"
                    ]
                },
                {
                    "command": [
                        "simpl in p1.",
                        "VernacExtend",
                        "32c1bc81aa78c5acf9b68c3781b5d0c591a9464f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _))) x).",
                        "VernacExtend",
                        "1c9bd8cb349a308ae50b3b5a9bafe09253d1bc85"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (g c c0) with (g (evalPrimRec 4 x0 c c0 c1 c2) (evalPrimRec 4 x1 c c0 c1 c2)).",
                        "VernacExtend",
                        "88257ea344d704dd68a07aa656977c80f2157fe8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose1_1IsPR",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
                        "VernacExtend",
                        "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose1_2IsPR",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
                        "VernacExtend",
                        "7633a35c3e2d0efb6278a9eae198279f8ba96511"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose1_3IsPR",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (x2, p2); simpl in p2.",
                        "VernacExtend",
                        "12374b3183bfa921b9edbee4d0d809c550a368bd"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
                        "VernacExtend",
                        "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p2.",
                        "VernacExtend",
                        "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose2_1IsPR",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
                        "VernacExtend",
                        "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose2_2IsPR",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
                        "VernacExtend",
                        "7633a35c3e2d0efb6278a9eae198279f8ba96511"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose2_3IsPR",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (x2, p2); simpl in p2.",
                        "VernacExtend",
                        "12374b3183bfa921b9edbee4d0d809c550a368bd"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
                        "VernacExtend",
                        "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p2.",
                        "VernacExtend",
                        "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose2_4IsPR",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (x2, p2); simpl in p2.",
                        "VernacExtend",
                        "12374b3183bfa921b9edbee4d0d809c550a368bd"
                    ]
                },
                {
                    "command": [
                        "induction H3 as (x3, p3); simpl in p3.",
                        "VernacExtend",
                        "a8d8f765d22938f27425dd7f52b6d79ed4cb751d"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRcons _ _ x2 (PRnil _))))) x3).",
                        "VernacExtend",
                        "d97e9c084fb855c80ad1d8417cb900bd3537eb2a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p2.",
                        "VernacExtend",
                        "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p3.",
                        "VernacExtend",
                        "b104cf4352fc54c90f557b45c881ffe5786e0e81"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose3_1IsPR",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
                        "VernacExtend",
                        "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose3_2IsPR",
            "line_nb": 557,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
                        "VernacExtend",
                        "7633a35c3e2d0efb6278a9eae198279f8ba96511"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose3_3IsPR",
            "line_nb": 570,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (x2, p2); simpl in p2.",
                        "VernacExtend",
                        "12374b3183bfa921b9edbee4d0d809c550a368bd"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
                        "VernacExtend",
                        "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p2.",
                        "VernacExtend",
                        "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose4_2IsPR",
            "line_nb": 585,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
                        "VernacExtend",
                        "7633a35c3e2d0efb6278a9eae198279f8ba96511"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose4_3IsPR",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p); simpl in p.",
                        "VernacExtend",
                        "c73ccd10ebc52390bad71b3f223756aacc72271d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0); simpl in p0.",
                        "VernacExtend",
                        "a191e4b8f9369fccd99bb811c0f9b5d5dc41ee1f"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x1, p1); simpl in p1.",
                        "VernacExtend",
                        "d945ff960588d9a0ea0fb73ed2258b8eb7920606"
                    ]
                },
                {
                    "command": [
                        "induction H2 as (x2, p2); simpl in p2.",
                        "VernacExtend",
                        "12374b3183bfa921b9edbee4d0d809c550a368bd"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRcons _ _ x1 (PRnil _)))) x2).",
                        "VernacExtend",
                        "71a8825fb5825652f03e2c0d3862205c3b0b9d2d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p1.",
                        "VernacExtend",
                        "9d3a60c9ea542b2b3fa98bd37d412a0d50a090c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p2.",
                        "VernacExtend",
                        "a7207b8f795b8757ca46583dfc4d5c1aa239a0f9"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "swapIsPR",
            "line_nb": 613,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply compose2_2IsPR with (f := fun a b : nat => b) (g := fun a b : nat => a).",
                        "VernacExtend",
                        "a6cd9bfea36dc29fcc3981ddb8e0e7aa5db0e386"
                    ]
                },
                {
                    "command": [
                        "apply pi2_2IsPR.",
                        "VernacExtend",
                        "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
                    ]
                },
                {
                    "command": [
                        "apply pi1_2IsPR.",
                        "VernacExtend",
                        "de83e3a673d46ec194b97a67a98b94cf405137bf"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "indIsPR",
            "line_nb": 620,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "induction (const0_NIsPR g).",
                        "VernacExtend",
                        "630fb72361596cff2da0514905f113a38e1a928e"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (primRecFunc _ x0 x).",
                        "VernacExtend",
                        "28ce1862be335a94b0013295d60ff6751c72bb23"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simple induction c.",
                        "VernacExtend",
                        "55a1a00a6d6a7629189492cced687c138ce2fcd8"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p0.",
                        "VernacExtend",
                        "9a3a27a23f2379edb87ebff7dbef50390898f65a"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- p.",
                        "VernacExtend",
                        "388bccc4339b5f5d63163534189e8e2fc069dd7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ind1ParamIsPR",
            "line_nb": 638,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0).",
                        "VernacExtend",
                        "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (primRecFunc _ x0 x).",
                        "VernacExtend",
                        "28ce1862be335a94b0013295d60ff6751c72bb23"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply p0.",
                        "VernacExtend",
                        "0522b06301b27388d7eda1294f7572093cabc0a4"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecc.",
                        "VernacExtend",
                        "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ind2ParamIsPR",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0).",
                        "VernacExtend",
                        "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
                    ]
                },
                {
                    "command": [
                        "simpl in p0.",
                        "VernacExtend",
                        "ef0b801918c0adfa4fa3b58e85f28ad569f12283"
                    ]
                },
                {
                    "command": [
                        "exists (primRecFunc _ x0 x).",
                        "VernacExtend",
                        "28ce1862be335a94b0013295d60ff6751c72bb23"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simple induction c.",
                        "VernacExtend",
                        "55a1a00a6d6a7629189492cced687c138ce2fcd8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite p0.",
                        "VernacExtend",
                        "cbb596989a4b040b29a0cf4abee8c6bd552d73cf"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusIndIsPR",
            "line_nb": 674,
            "steps": [
                {
                    "command": [
                        "apply (filter010IsPR _ succIsPR).",
                        "VernacExtend",
                        "02ba8008ae04fc672a73f71e7ee9e303f9cc76be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusIsPR",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "assert (isPR 2 (fun a b : nat => nat_rec (fun n : nat => nat) b (fun x y : nat => S y) a)).",
                        "VernacExtend",
                        "ddc980c7d57d632727c8d04d5efbc7b16884560f"
                    ]
                },
                {
                    "command": [
                        "apply (ind1ParamIsPR _ plusIndIsPR _ idIsPR).",
                        "VernacExtend",
                        "34fcd46199f794918587dfb72add45a95b805114"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecc.",
                        "VernacExtend",
                        "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multIndIsPR",
            "line_nb": 692,
            "steps": [
                {
                    "command": [
                        "apply (filter011IsPR _ plusIsPR).",
                        "VernacExtend",
                        "bfc57918054773f43ddf315a29b1fb8e553e0c79"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multIsPR",
            "line_nb": 695,
            "steps": [
                {
                    "command": [
                        "assert (isPR 2 (fun a b : nat => nat_rec (fun n : nat => nat) 0 (fun x y : nat => y + b) a)).",
                        "VernacExtend",
                        "c4418cace84b18363eff837617026290267f9971"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 1 (fun _ => 0)).",
                        "VernacExtend",
                        "548f12188061c641b2afff65c27807a4e3b41bf1"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply (ind1ParamIsPR _ multIndIsPR _ H).",
                        "VernacExtend",
                        "f62171e3236b9ce1d8da58d63f40589539f3d5d3"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecc.",
                        "VernacExtend",
                        "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
                    ]
                },
                {
                    "command": [
                        "apply plus_comm.",
                        "VernacExtend",
                        "12475eb4e354334e12b009d49112b8335e8ec9d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predIsPR",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "assert (isPR 1 (fun a : nat => nat_rec (fun n : nat => nat) 0 (fun x y : nat => x) a)).",
                        "VernacExtend",
                        "36350bc0dd3ac9f7e50afe9a5627e5a4a350da5f"
                    ]
                },
                {
                    "command": [
                        "apply (indIsPR _ pi1_2IsPR 0).",
                        "VernacExtend",
                        "a199f7fd8cb8d9690519032b2b87430fe74955c5"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minusIndIsPR",
            "line_nb": 725,
            "steps": [
                {
                    "command": [
                        "apply (filter010IsPR _ predIsPR).",
                        "VernacExtend",
                        "b4dc94892f9522cc12615875a87bcd57e6a1c540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minusIsPR",
            "line_nb": 728,
            "steps": [
                {
                    "command": [
                        "assert (isPR 2 (fun b a : nat => nat_rec (fun n : nat => nat) b (fun x y : nat => pred y) a)).",
                        "VernacExtend",
                        "1e18eea2c619c0d9dc5eefb35703d35a5f9a70ab"
                    ]
                },
                {
                    "command": [
                        "apply swapIsPR with (f := fun a b : nat => nat_rec (fun n : nat => nat) b (fun x y : nat => pred y) a).",
                        "VernacExtend",
                        "30df277ef3be6d4f07a4a6d5b145ce4c1a558165"
                    ]
                },
                {
                    "command": [
                        "apply (ind1ParamIsPR _ minusIndIsPR _ idIsPR).",
                        "VernacExtend",
                        "94d1571fe8bdbf07dbc2edc9aed0567c0e4f81f9"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "induction c0 as [| c0 Hrecc0].",
                        "VernacExtend",
                        "35d7be1430ef9394d1deb0f54c43b7e7b7d8a401"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply minus_n_O.",
                        "VernacExtend",
                        "4cd3664cd8ce93a91bb4c4c41d6f774baaa59eac"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecc0.",
                        "VernacExtend",
                        "2bc1a004997e309d7f913219cf370c8a6555702b"
                    ]
                },
                {
                    "command": [
                        "generalize c c0.",
                        "VernacExtend",
                        "ab5f8833375be5adeffa4760b930a344a67bcca0"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction c1 as [| c1 Hrecc1].",
                        "VernacExtend",
                        "d4f94844bea0e4e446bec8ebdad1de67098af31d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction c2 as [| c2 Hrecc2].",
                        "VernacExtend",
                        "7ce3d1708757cf615ff43bdee4790678764dc929"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply minus_n_O.",
                        "VernacExtend",
                        "4cd3664cd8ce93a91bb4c4c41d6f774baaa59eac"
                    ]
                },
                {
                    "command": [
                        "apply Hrecc1.",
                        "VernacExtend",
                        "f309ad042646e738f2577ae49f4f45fa10542c4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notZeroIsPR",
            "line_nb": 756,
            "steps": [
                {
                    "command": [
                        "unfold notZero in |- *.",
                        "VernacExtend",
                        "a64055a4b5578fd427c20d1d381831894f2608aa"
                    ]
                },
                {
                    "command": [
                        "apply indIsPR with (f := fun _ _ : nat => 1).",
                        "VernacExtend",
                        "4736dba517140371459b605d001c4605cac0937b"
                    ]
                },
                {
                    "command": [
                        "apply filter10IsPR with (g := fun _ : nat => 1).",
                        "VernacExtend",
                        "b23baeb83b401cb3543a338ae23a5f8c3e580492"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltBool",
            "line_nb": 762,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_lt_dec b a).",
                        "VernacExtend",
                        "8b8f17adde605b740d024b1d0674d01a424dfcee"
                    ]
                },
                {
                    "command": [
                        "exact false.",
                        "VernacExtend",
                        "0494187fd8a52673bed730144ed26c9a7c743063"
                    ]
                },
                {
                    "command": [
                        "exact true.",
                        "VernacExtend",
                        "4be0afa4107470999b2797dd1e3397668121c2c5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ltBoolTrue",
            "line_nb": 768,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ltBool in H.",
                        "VernacExtend",
                        "5c8876a2032dfabdfc85afee0788ee2029e7116d"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec b a).",
                        "VernacExtend",
                        "821425e51b8979db56016dc8956604119785ebb5"
                    ]
                },
                {
                    "command": [
                        "discriminate H.",
                        "VernacExtend",
                        "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltBoolFalse",
            "line_nb": 775,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold ltBool in H.",
                        "VernacExtend",
                        "5c8876a2032dfabdfc85afee0788ee2029e7116d"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec b a).",
                        "VernacExtend",
                        "821425e51b8979db56016dc8956604119785ebb5"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "elim (le_not_lt _ _ a0).",
                        "VernacExtend",
                        "33509f251a66b6db42abefae669e9894f167dc40"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "discriminate H.",
                        "VernacExtend",
                        "f00d7179963a09be7462e0ca3723e1bc13cd6c39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltIsPR",
            "line_nb": 784,
            "steps": [
                {
                    "command": [
                        "unfold isPRrel in |- *.",
                        "VernacExtend",
                        "6d98e12be7c05bdc572e2f26b0ae95c605885208"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 (fun a b : nat => notZero (b - a))).",
                        "VernacExtend",
                        "d45d9c51e27e7b1ea9a6246f7ea2b804ce36c5c6"
                    ]
                },
                {
                    "command": [
                        "apply swapIsPR with (f := fun a b : nat => notZero (a - b)).",
                        "VernacExtend",
                        "ef3f1f41ef3cb4843201392f3502d809c3012cfa"
                    ]
                },
                {
                    "command": [
                        "apply compose2_1IsPR.",
                        "VernacExtend",
                        "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
                    ]
                },
                {
                    "command": [
                        "apply minusIsPR.",
                        "VernacExtend",
                        "065f2551340f5d516a958dedbc9b9d09920c86cc"
                    ]
                },
                {
                    "command": [
                        "apply notZeroIsPR.",
                        "VernacExtend",
                        "d560836695e6a004a1fd240990803d448a999c93"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "unfold ltBool in |- *.",
                        "VernacExtend",
                        "07c8d350ffd107125252f58f321a6237cfc1aaf1"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec c0 c).",
                        "VernacExtend",
                        "ee2217a59c32efef089500362f84d93cff3bd54c"
                    ]
                },
                {
                    "command": [
                        "cut (c0 <= c).",
                        "VernacExtend",
                        "dd07f1f07c9b2e14d1acb1b27e8897bb9c563bcc"
                    ]
                },
                {
                    "command": [
                        "generalize c.",
                        "VernacExtend",
                        "a805df29ab482041b1df850bac2970392e984dbc"
                    ]
                },
                {
                    "command": [
                        "clear c a.",
                        "VernacExtend",
                        "613771d7ab45146d26e3109de9adc3e85b6f3688"
                    ]
                },
                {
                    "command": [
                        "induction c0 as [| c0 Hrecc0].",
                        "VernacExtend",
                        "35d7be1430ef9394d1deb0f54c43b7e7b7d8a401"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "elim (le_Sn_O _ H).",
                        "VernacExtend",
                        "89790f2f1d51f4861a2af9e5f0ced1b7d5f48c8e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Hrecc0.",
                        "VernacExtend",
                        "267213424d456d927f79554d7934cd94a6cc1ce4"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "cut (c < c0).",
                        "VernacExtend",
                        "4e1a53dce3c3a49959ae1b84466c6cf2a48732b4"
                    ]
                },
                {
                    "command": [
                        "generalize c.",
                        "VernacExtend",
                        "a805df29ab482041b1df850bac2970392e984dbc"
                    ]
                },
                {
                    "command": [
                        "clear c b.",
                        "VernacExtend",
                        "300511b30280162f277fd630ae7b766a0926d1bf"
                    ]
                },
                {
                    "command": [
                        "induction c0 as [| c0 Hrecc0].",
                        "VernacExtend",
                        "35d7be1430ef9394d1deb0f54c43b7e7b7d8a401"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ H).",
                        "VernacExtend",
                        "b93451b1a30fa3f24613ad7b0441907b3427a80f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Hrecc0.",
                        "VernacExtend",
                        "267213424d456d927f79554d7934cd94a6cc1ce4"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n.",
                        "VernacExtend",
                        "0207638f6e9dea4c2a8a3945f23446b376d8318e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtIsPR",
            "line_nb": 858,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold isPRrel in |- *.",
                        "VernacExtend",
                        "6d98e12be7c05bdc572e2f26b0ae95c605885208"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply swapIsPR with (f := fun a0 a : nat => if ltBool a0 a then 1 else 0).",
                        "VernacExtend",
                        "d4d9bab93d1275e3f669f95bcc37e81a53bae0e1"
                    ]
                },
                {
                    "command": [
                        "apply ltIsPR.",
                        "VernacExtend",
                        "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "replaceCompose2",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orRel",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "apply (R || S).",
                        "VernacExtend",
                        "04480cec0090e9900e18b8d53d40ed82e7248f4e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "apply (R H).",
                        "VernacExtend",
                        "7b5b0d47746420cf0d016ebfedf4a3690fb3e157"
                    ]
                },
                {
                    "command": [
                        "apply (S H).",
                        "VernacExtend",
                        "9d3e375b25603320e32bb96876362faa055aed12"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "orRelPR",
            "line_nb": 883,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0).",
                        "VernacExtend",
                        "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 (fun a b : nat => notZero (a + b))).",
                        "VernacExtend",
                        "b58f837e62fcc157f5cbee155c5fae1f405e8dfe"
                    ]
                },
                {
                    "command": [
                        "apply compose2_1IsPR.",
                        "VernacExtend",
                        "445bc7d854d3d7e2a09e4a95de2fd77f9491716b"
                    ]
                },
                {
                    "command": [
                        "apply plusIsPR.",
                        "VernacExtend",
                        "3b0a74ba0921212c33f63b79cd048faf8df5a016"
                    ]
                },
                {
                    "command": [
                        "apply notZeroIsPR.",
                        "VernacExtend",
                        "d560836695e6a004a1fd240990803d448a999c93"
                    ]
                },
                {
                    "command": [
                        "induction H as (x1, p1).",
                        "VernacExtend",
                        "3c7a69edeee426de8520701da581094158fd43c9"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
                        "VernacExtend",
                        "7633a35c3e2d0efb6278a9eae198279f8ba96511"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n 2 (Vector.cons (naryFunc n) (charFunction n R) 1 (Vector.cons (naryFunc n) (charFunction n R') 0 (Vector.nil (naryFunc n)))) (fun a b : nat => notZero (a + b))).",
                        "VernacExtend",
                        "c00a53d7b90d1ceddfcd93130b5eaf43ee58fb57"
                    ]
                },
                {
                    "command": [
                        "apply replaceCompose2; auto.",
                        "VernacExtend",
                        "6a6c4228d540486bc4b59ad18796d15e955cfc92"
                    ]
                },
                {
                    "command": [
                        "clear x p x0 p0 x1 p1.",
                        "VernacExtend",
                        "6e7c80beca4873f6ccfaaa567e9b0944d9de906b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction R.",
                        "VernacExtend",
                        "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "induction R'.",
                        "VernacExtend",
                        "6c27fb5d567ef3980262154e7b554474b8d923e2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (Hrecn (R c) (R' c)).",
                        "VernacExtend",
                        "2c813432225cf50219b7f83af813130c3942b11a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andRel",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "exact (R && S).",
                        "VernacExtend",
                        "a1ba36395dd88ecfe2bd4f5634d297d1e05d1cfd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "apply (R H).",
                        "VernacExtend",
                        "7b5b0d47746420cf0d016ebfedf4a3690fb3e157"
                    ]
                },
                {
                    "command": [
                        "apply (S H).",
                        "VernacExtend",
                        "9d3e375b25603320e32bb96876362faa055aed12"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "andRelPR",
            "line_nb": 919,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x0, p0).",
                        "VernacExtend",
                        "2db0eda5cd726f76c67ec942ba4023ff9d89952d"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 mult).",
                        "VernacExtend",
                        "723359fa2adea2477376dd11706532fa44c99998"
                    ]
                },
                {
                    "command": [
                        "apply multIsPR.",
                        "VernacExtend",
                        "e81beaf90a6eafd17be42571cffda5efa424c833"
                    ]
                },
                {
                    "command": [
                        "induction H as (x1, p1).",
                        "VernacExtend",
                        "3c7a69edeee426de8520701da581094158fd43c9"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRcons _ _ x0 (PRnil _))) x1).",
                        "VernacExtend",
                        "7633a35c3e2d0efb6278a9eae198279f8ba96511"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n 2 (Vector.cons (naryFunc n) (charFunction n R) 1 (Vector.cons (naryFunc n) (charFunction n R') 0 (Vector.nil (naryFunc n)))) mult).",
                        "VernacExtend",
                        "5fbf95f9c8c4489af81966cdaa800dcd17b4983f"
                    ]
                },
                {
                    "command": [
                        "apply replaceCompose2; auto.",
                        "VernacExtend",
                        "6a6c4228d540486bc4b59ad18796d15e955cfc92"
                    ]
                },
                {
                    "command": [
                        "clear x p x0 p0 x1 p1.",
                        "VernacExtend",
                        "6e7c80beca4873f6ccfaaa567e9b0944d9de906b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction R.",
                        "VernacExtend",
                        "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
                    ]
                },
                {
                    "command": [
                        "induction R'.",
                        "VernacExtend",
                        "6c27fb5d567ef3980262154e7b554474b8d923e2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (Hrecn (R c) (R' c)).",
                        "VernacExtend",
                        "2c813432225cf50219b7f83af813130c3942b11a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "notRel",
            "line_nb": 943,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "exact (negb R).",
                        "VernacExtend",
                        "8fd22bd53a3fd73758385d6034cbdf611f0d84fe"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "apply (R H).",
                        "VernacExtend",
                        "7b5b0d47746420cf0d016ebfedf4a3690fb3e157"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "notRelPR",
            "line_nb": 952,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 1 (fun x : nat => 1 - x)).",
                        "VernacExtend",
                        "8540f9ea4a8ae40b832c371e78d86d205b9e976f"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (f := fun x : nat => 1) (f' := fun x : nat => x).",
                        "VernacExtend",
                        "a10cffa1c013a45e7245b23946011ae5290cd2f2"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply minusIsPR.",
                        "VernacExtend",
                        "065f2551340f5d516a958dedbc9b9d09920c86cc"
                    ]
                },
                {
                    "command": [
                        "induction H as (x0, p0).",
                        "VernacExtend",
                        "46cb231ef3dea56c312e1e61371db4b0e3c4fa1a"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (PRnil _)) x0).",
                        "VernacExtend",
                        "3e9b5db86a4248884e0e6b8b2aec3c5e5529b7ef"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n 1 (Vector.cons _ (charFunction n R) _ (Vector.nil _)) (fun x : nat => 1 - x)).",
                        "VernacExtend",
                        "5fdb0ebf4fa31f5bab368064c3fb03cb490dc471"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "clear p0 x0 p x.",
                        "VernacExtend",
                        "70c89d69bce8ba3cba3eed6923babe7309f725a5"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction R.",
                        "VernacExtend",
                        "ccf36ad8d7ba0d1a9fa5cf82b55453227db1dd5e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boddIsPR",
            "line_nb": 981,
            "steps": [
                {
                    "command": [
                        "assert (isPR 2 (fun _ rec : nat => 1 - rec)).",
                        "VernacExtend",
                        "a80f466fd812e67cd16edb694dc4513ec756728f"
                    ]
                },
                {
                    "command": [
                        "apply filter01IsPR with (g := fun rec : nat => 1 - rec).",
                        "VernacExtend",
                        "991bd14f65df02ec1eae1e5d23c33ab783c1e946"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (f := fun _ : nat => 1) (f' := fun x : nat => x).",
                        "VernacExtend",
                        "d1d7e04f5be10d6d7a2bccc9c566f6e20ba6a4f4"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply minusIsPR.",
                        "VernacExtend",
                        "065f2551340f5d516a958dedbc9b9d09920c86cc"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "exists (primRecFunc 0 zeroFunc x).",
                        "VernacExtend",
                        "0d435b2f5e45bf39231c0e07dfb86083b5837e62"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecc.",
                        "VernacExtend",
                        "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
                    ]
                },
                {
                    "command": [
                        "clear Hrecc.",
                        "VernacExtend",
                        "e0f6c664f1120bbdff285fc60b104728d13f50f2"
                    ]
                },
                {
                    "command": [
                        "induction (bodd c).",
                        "VernacExtend",
                        "cf7498ce27f4b26fc91a9d9087e5bdac05ac926e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "beq_nat_not_refl",
            "line_nb": 1004,
            "steps": [
                {
                    "command": [
                        "double induction a b.",
                        "VernacExtend",
                        "378a5044742eadc6ee8211fa155f3f5a42b71643"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neqIsPR",
            "line_nb": 1015,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (isPRrel 2 (orRel 2 ltBool (fun a b : nat => ltBool b a))).",
                        "VernacExtend",
                        "be57b6ff3e1b6ca249d5429c1e9561d425f02a03"
                    ]
                },
                {
                    "command": [
                        "apply orRelPR.",
                        "VernacExtend",
                        "f03401cd3375fa450ffbb4b72c01bf3e5b47da6c"
                    ]
                },
                {
                    "command": [
                        "apply ltIsPR.",
                        "VernacExtend",
                        "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
                    ]
                },
                {
                    "command": [
                        "apply gtIsPR.",
                        "VernacExtend",
                        "80cb702c072a14c7a0c7c267501041248e257acc"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "clear p.",
                        "VernacExtend",
                        "5f73d163168e7a544792b1dfd7eff9cdb7659426"
                    ]
                },
                {
                    "command": [
                        "unfold ltBool in |- *.",
                        "VernacExtend",
                        "07c8d350ffd107125252f58f321a6237cfc1aaf1"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec c c0).",
                        "VernacExtend",
                        "84fd54b5afee590fc5c06402de9e43a3fe1bf511"
                    ]
                },
                {
                    "command": [
                        "rewrite a.",
                        "VernacExtend",
                        "905c705a182fa776d319d2bbb7fe34c13fe7d244"
                    ]
                },
                {
                    "command": [
                        "rewrite <- beq_nat_refl.",
                        "VernacExtend",
                        "6483e653b28875693c3c92037ba92da24c711ae3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec c0 c0).",
                        "VernacExtend",
                        "463af36a89e7f0b97a19d0634ddf49cfdf6c7362"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl _ b).",
                        "VernacExtend",
                        "a35fadf1dca1683abd0594b5b9602426c9cfd4b0"
                    ]
                },
                {
                    "command": [
                        "rewrite beq_nat_not_refl.",
                        "VernacExtend",
                        "1233302f99cf1c86d83f4544c8d696eababc6902"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec c0 c).",
                        "VernacExtend",
                        "ee2217a59c32efef089500362f84d93cff3bd54c"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec c c0).",
                        "VernacExtend",
                        "a89473dc5544eabddeba3772ad929838e20e5096"
                    ]
                },
                {
                    "command": [
                        "induction (nat_total_order _ _ b).",
                        "VernacExtend",
                        "d089d19eb468aa82e618ae887773104057efd1de"
                    ]
                },
                {
                    "command": [
                        "elim (lt_not_le _ _ H).",
                        "VernacExtend",
                        "1f0dcfc525ad36870fb69998e58845954642906c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "elim (lt_not_le _ _ H).",
                        "VernacExtend",
                        "1f0dcfc525ad36870fb69998e58845954642906c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqIsPR",
            "line_nb": 1050,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (isPRrel 2 (notRel 2 (fun a b : nat => negb (beq_nat a b)))).",
                        "VernacExtend",
                        "d479d7eaa5eacfba7d9d324c6c22bb3a6fd51be0"
                    ]
                },
                {
                    "command": [
                        "apply notRelPR.",
                        "VernacExtend",
                        "b514198d3ee3f888f030aa803106a8af01eb6d6d"
                    ]
                },
                {
                    "command": [
                        "apply neqIsPR.",
                        "VernacExtend",
                        "0aaf9cf29f792fd9b3bffa550de688747994251d"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "clear p.",
                        "VernacExtend",
                        "5f73d163168e7a544792b1dfd7eff9cdb7659426"
                    ]
                },
                {
                    "command": [
                        "induction (beq_nat c c0).",
                        "VernacExtend",
                        "3e605cdf05783b0c6aa8ac4441cecf6755a08ce7"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leBool",
            "line_nb": 1067,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_lt_dec a b).",
                        "VernacExtend",
                        "5019ba5a4f4f1d91155c96de81767ab378fa8680"
                    ]
                },
                {
                    "command": [
                        "exact true.",
                        "VernacExtend",
                        "4be0afa4107470999b2797dd1e3397668121c2c5"
                    ]
                },
                {
                    "command": [
                        "exact false.",
                        "VernacExtend",
                        "0494187fd8a52673bed730144ed26c9a7c743063"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "leIsPR",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "assert (isPRrel 2 (orRel 2 ltBool beq_nat)).",
                        "VernacExtend",
                        "889dda3271a62b9572cf7f028f6a2292e6ba8dfa"
                    ]
                },
                {
                    "command": [
                        "apply orRelPR.",
                        "VernacExtend",
                        "f03401cd3375fa450ffbb4b72c01bf3e5b47da6c"
                    ]
                },
                {
                    "command": [
                        "apply ltIsPR.",
                        "VernacExtend",
                        "32e433e061f44d6b41ba97a34d3e6d8da2fb8184"
                    ]
                },
                {
                    "command": [
                        "apply eqIsPR.",
                        "VernacExtend",
                        "493018d16fb870ceb55150454019ccac18f41f8a"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite p.",
                        "VernacExtend",
                        "db195a5f78ab09cc2d93dfe2cf5c2fa5e5019229"
                    ]
                },
                {
                    "command": [
                        "clear p x.",
                        "VernacExtend",
                        "40fdab52d26e2832a3bb99ac4d21f82c6bc01250"
                    ]
                },
                {
                    "command": [
                        "unfold leBool in |- *.",
                        "VernacExtend",
                        "da8afa09a716117767f4fe4c7eab9bad0af9e8f5"
                    ]
                },
                {
                    "command": [
                        "unfold ltBool in |- *.",
                        "VernacExtend",
                        "07c8d350ffd107125252f58f321a6237cfc1aaf1"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec c0 c).",
                        "VernacExtend",
                        "ee2217a59c32efef089500362f84d93cff3bd54c"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec c c0).",
                        "VernacExtend",
                        "a89473dc5544eabddeba3772ad929838e20e5096"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace c0 with c.",
                        "VernacExtend",
                        "0f9081088f0b8cbea14b62e72d1b89c80af17f63"
                    ]
                },
                {
                    "command": [
                        "rewrite <- beq_nat_refl.",
                        "VernacExtend",
                        "6483e653b28875693c3c92037ba92da24c711ae3"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec c c0).",
                        "VernacExtend",
                        "84fd54b5afee590fc5c06402de9e43a3fe1bf511"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (nat_total_order _ _ b).",
                        "VernacExtend",
                        "d089d19eb468aa82e618ae887773104057efd1de"
                    ]
                },
                {
                    "command": [
                        "elim (lt_not_le _ _ H).",
                        "VernacExtend",
                        "1f0dcfc525ad36870fb69998e58845954642906c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "elim (lt_not_le _ _ H).",
                        "VernacExtend",
                        "1f0dcfc525ad36870fb69998e58845954642906c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite beq_nat_not_refl.",
                        "VernacExtend",
                        "1233302f99cf1c86d83f4544c8d696eababc6902"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold not in |- *; intros.",
                        "VernacExtend",
                        "a373869c1c99731a8797825160ba5f5ab7a057a9"
                    ]
                },
                {
                    "command": [
                        "rewrite H in b.",
                        "VernacExtend",
                        "dcc916f0a821c964d0ede35a77684fc10fac86d3"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl _ b).",
                        "VernacExtend",
                        "a35fadf1dca1683abd0594b5b9602426c9cfd4b0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_dec c c0).",
                        "VernacExtend",
                        "a89473dc5544eabddeba3772ad929838e20e5096"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl c).",
                        "VernacExtend",
                        "ac1929f1a072911a4254dc7155273efdd238c908"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with c0; auto.",
                        "VernacExtend",
                        "db5a205f59f193744193274f50ec7080c1ba476f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projectionListPR",
            "line_nb": 1114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction m as [| m Hrecm].",
                        "VernacExtend",
                        "93d2b60c268fff5d958c27bdb803738ea66bba5b"
                    ]
                },
                {
                    "command": [
                        "exact (PRnil n).",
                        "VernacExtend",
                        "8322c4401a2d71d34b73d27d2485f21e9b79cfee"
                    ]
                },
                {
                    "command": [
                        "assert (m < n).",
                        "VernacExtend",
                        "bbbe73e8958ba24139e5557789042c98ee9abe83"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n.",
                        "VernacExtend",
                        "0207638f6e9dea4c2a8a3945f23446b376d8318e"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_n_Sm.",
                        "VernacExtend",
                        "f92329fc5a21d6fff46401efc5d5a45be946b12c"
                    ]
                },
                {
                    "command": [
                        "apply p.",
                        "VernacExtend",
                        "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
                    ]
                },
                {
                    "command": [
                        "apply (PRcons _ m (projFunc _ _ H)).",
                        "VernacExtend",
                        "5c5c8bc1f0e7408c64aa0cfb91d520f7752e2076"
                    ]
                },
                {
                    "command": [
                        "apply Hrecm.",
                        "VernacExtend",
                        "9d632fd684a6e3b27b37a617bb0fc9cbbce47171"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "apply le_S.",
                        "VernacExtend",
                        "dfa151dba71c734eeb3c5ffb45ae15b3c0a88486"
                    ]
                },
                {
                    "command": [
                        "apply p.",
                        "VernacExtend",
                        "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "projectionListInd",
            "line_nb": 1129,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold projectionList in |- *.",
                        "VernacExtend",
                        "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
                    ]
                },
                {
                    "command": [
                        "induction m as [| m Hrecm].",
                        "VernacExtend",
                        "93d2b60c268fff5d958c27bdb803738ea66bba5b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite (Hrecm (le_S_n m n (le_S (S m) n p1)) (le_S_n m n (le_S (S m) n p2))).",
                        "VernacExtend",
                        "129a64e79912a2608009722f8c787ae223629ff0"
                    ]
                },
                {
                    "command": [
                        "rewrite (evalProjFuncInd _ _ (lt_S_n m n (le_lt_n_Sm (S m) n p1)) (lt_S_n m n (le_lt_n_Sm (S m) n p2))).",
                        "VernacExtend",
                        "b506f3e8b10c095e842c1462e10e4ed2656bb9e5"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projectionListApplyParam",
            "line_nb": 1140,
            "steps": [
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "unfold projectionList in |- *.",
                        "VernacExtend",
                        "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
                    ]
                },
                {
                    "command": [
                        "simple induction m.",
                        "VernacExtend",
                        "c6b53704a73119c9ff4383bfeec236079504e73a"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n n0).",
                        "VernacExtend",
                        "01b6be4c2892cf9f70e0db461abb99bbbdbd17cf"
                    ]
                },
                {
                    "command": [
                        "elim (lt_not_le n (S n)).",
                        "VernacExtend",
                        "5a8c6a146707278bb4dfbb271951b55733f821e8"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "rewrite <- a in p1.",
                        "VernacExtend",
                        "dc2dfdbe291a85eefbbcc8e8764413eaef5bbdfe"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite (evalProjFuncInd _ _ (lt_S_n n n0 (le_lt_n_Sm (S n) n0 p1)) match le_lt_or_eq n n0 (lt_n_Sm_le n n0 (lt_S_n n (S n0) (le_lt_n_Sm (S n) (S n0) p2))) with | or_introl l2 => l2 | or_intror l2 => False_ind (n < n0) (b l2) end).",
                        "VernacExtend",
                        "e378de46d6e03c5fbc2db3582444ca4eb3726946"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projectionListId",
            "line_nb": 1158,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n n).",
                        "VernacExtend",
                        "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n (S n) (Vector.cons (naryFunc n) (evalConstFunc n c) n (projectionList n n (le_n n))) f).",
                        "VernacExtend",
                        "ffad4f8528a903298d502413b22f3a3e510964a8"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n n (projectionList n n (le_n n)) (f c)).",
                        "VernacExtend",
                        "49840c509f9415b5ebbf5f8d304eaca098f98c43"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "clear Hrecn a p.",
                        "VernacExtend",
                        "72193b570eb93ed1b23e7170de1f29431818f82f"
                    ]
                },
                {
                    "command": [
                        "generalize (projectionList n n (le_n n)).",
                        "VernacExtend",
                        "c519175a0a70a7129d5561794e5abc0d6fc56af3"
                    ]
                },
                {
                    "command": [
                        "generalize f c.",
                        "VernacExtend",
                        "4330a6a3ceb211c54b7d16ed4620536168205c49"
                    ]
                },
                {
                    "command": [
                        "clear f c.",
                        "VernacExtend",
                        "9bc06e66012703be2db4368ff9eab9a97ae60d93"
                    ]
                },
                {
                    "command": [
                        "assert (forall (m : nat) (f : naryFunc (S m)) (c : nat) (v : Vector.t (naryFunc n) m), extEqual n (evalComposeFunc n m v (f c)) (evalComposeFunc n (S m) (Vector.cons (naryFunc n) (evalConstFunc n c) m v) f)).",
                        "VernacExtend",
                        "b56fa093ce655040574a77ebeaa4cf95311c82ab"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply (projectionListApplyParam n n c (le_n n) (le_S_n n (S n) (le_S (S n) (S n) p))).",
                        "VernacExtend",
                        "abe3d95486e4dfc86e4ec60b30cf71a6002a0372"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ignoreParamsIsPR",
            "line_nb": 1194,
            "steps": [
                {
                    "command": [
                        "assert (forall (n m : nat) (pr : m <= n) (f : naryFunc m) (p : n - m + m = n), extEqual _ (eq_rec (n - m + m) naryFunc (ignoreParams m (n - m) f) _ p) (evalComposeFunc _ _ (projectionList n m pr) f)).",
                        "VernacExtend",
                        "84e0f99c9632b05a04309d519c99d9156cfd7988"
                    ]
                },
                {
                    "command": [
                        "unfold projectionList in |- *.",
                        "VernacExtend",
                        "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn]; intros.",
                        "VernacExtend",
                        "d515ddee41ca4e4124c87df7f7ee535606506467"
                    ]
                },
                {
                    "command": [
                        "destruct m as [| n].",
                        "VernacExtend",
                        "1d85b85bc8a8633d178139d5357a5e3cd404df02"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "elim p using K_dec_set.",
                        "VernacExtend",
                        "34b336491c4f17a03da1c1abc51efb1b32c7e076"
                    ]
                },
                {
                    "command": [
                        "apply eq_nat_dec.",
                        "VernacExtend",
                        "536650fad05f5969715904f755cca79b8956a9cb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "elim (le_Sn_O _ pr).",
                        "VernacExtend",
                        "5db78d2a06cd060521d2e08204a1fd0124014618"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_or_eq _ _ pr).",
                        "VernacExtend",
                        "8f2cdba58ba9bcbd9179ae3289daf9d54c479d35"
                    ]
                },
                {
                    "command": [
                        "assert (m <= n).",
                        "VernacExtend",
                        "706f6660639c7393b5730543a246139c189529a1"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sm_le.",
                        "VernacExtend",
                        "354c1d072708776c26f2aab2afa0945822d0815b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize p.",
                        "VernacExtend",
                        "de434a1dd41d3101cdc3a131ce71f229369637c3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_Sn_m.",
                        "VernacExtend",
                        "808a21c00826f53fd5122068d41d20a5b1758aff"
                    ]
                },
                {
                    "command": [
                        "clear p.",
                        "VernacExtend",
                        "5f73d163168e7a544792b1dfd7eff9cdb7659426"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (n - m + m = n).",
                        "VernacExtend",
                        "83c1f65c490948b70787e12987210567bd718a6f"
                    ]
                },
                {
                    "command": [
                        "simpl in p.",
                        "VernacExtend",
                        "758a283616e7f958e765c456c9c1fef6ebb53020"
                    ]
                },
                {
                    "command": [
                        "injection p.",
                        "VernacExtend",
                        "6231ba8fc007bc44cc55655f26b610c585a72751"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "replace (eq_rec (S (n - m + m)) naryFunc (fun _ : nat => ignoreParams m (n - m) f) (S n) p c) with (eq_rec (n - m + m) naryFunc (ignoreParams m (n - m) f) n H1).",
                        "VernacExtend",
                        "18981c2c2b9decde05ae0fc25a545434c92e2afb"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n m (projectionList n m H0) f).",
                        "VernacExtend",
                        "4225c61647df7d8a7b7ab8cfd8b1a9d4c1f293cb"
                    ]
                },
                {
                    "command": [
                        "unfold projectionList in |- *.",
                        "VernacExtend",
                        "593d33046a1e99d60f9cb12191c0dc7fb94f1b44"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "apply (projectionListApplyParam m n c H0 pr).",
                        "VernacExtend",
                        "ab69d6f1e01a5f885b0b8cbd0d781842408e6515"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "generalize H1.",
                        "VernacExtend",
                        "8fbf8ce69bc96bbf42354d178d7f19b503824d7c"
                    ]
                },
                {
                    "command": [
                        "generalize p.",
                        "VernacExtend",
                        "de434a1dd41d3101cdc3a131ce71f229369637c3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (ignoreParams m (n - m) f).",
                        "VernacExtend",
                        "215934f6250453eb0ef0d9c8a6d2ec54706e28b8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H2 using K_dec_set.",
                        "VernacExtend",
                        "1991b420facbe0ce0fafd1fa207cb8333b508b89"
                    ]
                },
                {
                    "command": [
                        "apply eq_nat_dec.",
                        "VernacExtend",
                        "536650fad05f5969715904f755cca79b8956a9cb"
                    ]
                },
                {
                    "command": [
                        "elim p0 using K_dec_set.",
                        "VernacExtend",
                        "cd7e0009bbfb165d7c25e990d674b8217729c643"
                    ]
                },
                {
                    "command": [
                        "apply eq_nat_dec.",
                        "VernacExtend",
                        "536650fad05f5969715904f755cca79b8956a9cb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize p.",
                        "VernacExtend",
                        "de434a1dd41d3101cdc3a131ce71f229369637c3"
                    ]
                },
                {
                    "command": [
                        "generalize pr.",
                        "VernacExtend",
                        "bb6d5735c399111decf58d0d77a146378cdcb795"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "clear H p.",
                        "VernacExtend",
                        "e87546921f8279ce26d52837984f53b17aba034f"
                    ]
                },
                {
                    "command": [
                        "replace (m - m) with 0.",
                        "VernacExtend",
                        "ac95f85acbeac85e6083b4a23cc32693758c70d2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim p using K_dec_set.",
                        "VernacExtend",
                        "34b336491c4f17a03da1c1abc51efb1b32c7e076"
                    ]
                },
                {
                    "command": [
                        "apply eq_nat_dec.",
                        "VernacExtend",
                        "536650fad05f5969715904f755cca79b8956a9cb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "clear p pr.",
                        "VernacExtend",
                        "aa8ff6cab26f254535025d0e910b0bd3ad5102ba"
                    ]
                },
                {
                    "command": [
                        "apply (projectionListId m f pr0).",
                        "VernacExtend",
                        "fb38abf9691f9d4dd03cec34bcbf0fddfc6ca400"
                    ]
                },
                {
                    "command": [
                        "apply minus_n_n.",
                        "VernacExtend",
                        "5673e8ab55081f922675dcf1780f93530ec33746"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold projectionList in H.",
                        "VernacExtend",
                        "67b6bb715715374076e9dea854ce3fb068aa4b24"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, p).",
                        "VernacExtend",
                        "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc (m + n) n (projectionListPR _ _ (le_plus_r _ _)) x).",
                        "VernacExtend",
                        "0ecbd6cda3d96bc08440a528ffca2529c18ef210"
                    ]
                },
                {
                    "command": [
                        "apply extEqualSym.",
                        "VernacExtend",
                        "8139d37ad614cdf54a9a845deca0627767f9a131"
                    ]
                },
                {
                    "command": [
                        "assert (m + n - n + n = m + n).",
                        "VernacExtend",
                        "eeb28a0502385a5d9cf142fafc652779063f0e08"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm m n).",
                        "VernacExtend",
                        "8d0d37b04aa5a1da22933785060a1cfa93f89e8a"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_plus.",
                        "VernacExtend",
                        "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
                    ]
                },
                {
                    "command": [
                        "apply plus_comm.",
                        "VernacExtend",
                        "12475eb4e354334e12b009d49112b8335e8ec9d3"
                    ]
                },
                {
                    "command": [
                        "assert (extEqual (m + n) (eq_rec (m + n - n + n) naryFunc (ignoreParams n (m + n - n) f) (m + n) H0) (evalComposeFunc (m + n) _ (evalPrimRecs (m + n) n (projectionListPR (m + n) n (le_plus_r m n))) f)).",
                        "VernacExtend",
                        "9cf08245f23a8020af163e143429c659742a7a47"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "replace (ignoreParams n m f) with (eq_rec (m + n - n + n) naryFunc (ignoreParams n (m + n - n) f) (m + n) H0).",
                        "VernacExtend",
                        "0f433254179b659280c4397b1f9d2c414f516624"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc (m + n) _ (evalPrimRecs (m + n) n (projectionListPR (m + n) n (le_plus_r m n))) f).",
                        "VernacExtend",
                        "fbde6f7e079e8f393abd424ac1db43869b23628c"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "generalize (evalPrimRecs (m + n) n (projectionListPR (m + n) n (le_plus_r m n))).",
                        "VernacExtend",
                        "87c2fdd82bd636574fed93f31139129e69dcdef4"
                    ]
                },
                {
                    "command": [
                        "generalize (m + n).",
                        "VernacExtend",
                        "b7dfbb31685579454f920fc7b097f71b17bb6a95"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extEqualVectorRefl.",
                        "VernacExtend",
                        "37eb606254b7fdd25f0280c92c56c0e93860002e"
                    ]
                },
                {
                    "command": [
                        "apply extEqualSym.",
                        "VernacExtend",
                        "8139d37ad614cdf54a9a845deca0627767f9a131"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "generalize H0.",
                        "VernacExtend",
                        "83d8c9bf832ff69c91cc4428b24355f2bade716e"
                    ]
                },
                {
                    "command": [
                        "replace (m + n - n) with m.",
                        "VernacExtend",
                        "c0275cbd25dade153989aaccf8f5c049e41d1b64"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim H2 using K_dec_set.",
                        "VernacExtend",
                        "1991b420facbe0ce0fafd1fa207cb8333b508b89"
                    ]
                },
                {
                    "command": [
                        "apply eq_nat_dec.",
                        "VernacExtend",
                        "536650fad05f5969715904f755cca79b8956a9cb"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_plus.",
                        "VernacExtend",
                        "ccf1bd634b5d1325b2656115ef59f73c6fc1c79f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduce1stCompose",
            "line_nb": 1287,
            "steps": [
                {
                    "command": [
                        "intros c n.",
                        "VernacExtend",
                        "79fe6b592df100e844cecedc467e48f554d3955f"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "reduce2ndCompose",
            "line_nb": 1297,
            "steps": [
                {
                    "command": [
                        "intros c n.",
                        "VernacExtend",
                        "79fe6b592df100e844cecedc467e48f554d3955f"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "evalPrimRecParam",
            "line_nb": 1307,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose2.",
                        "VernacExtend",
                        "a95d1fdec19facca5e1f9999f86ec1ba0a2b3307"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compose2IsPR",
            "line_nb": 1317,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction p as (x, p).",
                        "VernacExtend",
                        "bbe8f680287b2bde9232007e906d506e2b6a6e8e"
                    ]
                },
                {
                    "command": [
                        "induction q as (x0, p0).",
                        "VernacExtend",
                        "7585cdd671df24c0b48e238270a11074a09e6b7b"
                    ]
                },
                {
                    "command": [
                        "exists (composeFunc _ _ (PRcons _ _ x (projectionListPR n n (le_n n))) x0).",
                        "VernacExtend",
                        "76149b0de5fb381ce6ac36f3934ce2aa2ffe76fd"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n (S n) (Vector.cons (naryFunc n) f n (evalPrimRecs n n (projectionListPR n n (le_n n)))) g).",
                        "VernacExtend",
                        "61bd7ef3bbb1a35774d04f1b8bd283068ca9e955"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply extEqualVectorRefl.",
                        "VernacExtend",
                        "37eb606254b7fdd25f0280c92c56c0e93860002e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "clear p0 x0 p x.",
                        "VernacExtend",
                        "70c89d69bce8ba3cba3eed6923babe7309f725a5"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec n n).",
                        "VernacExtend",
                        "6ccc47547000c0b7cb892d2ededd81abedde2d1d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n (S (S n)) (Vector.cons (naryFunc n) (f c) (S n) (Vector.cons (naryFunc n) (evalConstFunc n c) n (projectionList n n (le_n n)))) g).",
                        "VernacExtend",
                        "9ed095e1dcd37cba34267ef8acf79a7c62c4ce72"
                    ]
                },
                {
                    "command": [
                        "apply extEqualSym.",
                        "VernacExtend",
                        "8139d37ad614cdf54a9a845deca0627767f9a131"
                    ]
                },
                {
                    "command": [
                        "apply extEqualCompose.",
                        "VernacExtend",
                        "2dbe0f2e00c93592a91603a5f8f0b4bad5535e18"
                    ]
                },
                {
                    "command": [
                        "unfold extEqualVector in |- *.",
                        "VernacExtend",
                        "5b01fb0016e7e4517efd4c72a8a4d39515a08ee2"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply (projectionListApplyParam n n c (le_n n) (le_S_n n (S n) (le_S (S n) (S n) (le_n (S n))))).",
                        "VernacExtend",
                        "b54594da8f4ac9754b400bcfbe50448542e0941e"
                    ]
                },
                {
                    "command": [
                        "apply extEqualRefl.",
                        "VernacExtend",
                        "a88a89e31f744cf42ff156368cc638b721a63df2"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (evalComposeFunc n (S n) (Vector.cons (naryFunc n) (f c) n (evalPrimRecs n n (projectionListPR n n (le_n n)))) (fun x : nat => g x c)).",
                        "VernacExtend",
                        "9a66455b9b42613c31d42854141f2abe0068e39f"
                    ]
                },
                {
                    "command": [
                        "clear a Hrecn.",
                        "VernacExtend",
                        "42ef097e085215f9ad5f2ee3770b0c30f0037d28"
                    ]
                },
                {
                    "command": [
                        "generalize (f c).",
                        "VernacExtend",
                        "6fccca63bb711374fa2d8798aa958f2bffcc49c8"
                    ]
                },
                {
                    "command": [
                        "fold (naryFunc n) in |- *.",
                        "VernacExtend",
                        "1746ff37c333d14829a01aee24645ac0c87da96c"
                    ]
                },
                {
                    "command": [
                        "fold (projectionList n n (le_n n)) in |- *.",
                        "VernacExtend",
                        "0b288c7574a1f3fd709e6375558c03ea3d21173b"
                    ]
                },
                {
                    "command": [
                        "generalize (projectionList n n (le_n n)).",
                        "VernacExtend",
                        "c519175a0a70a7129d5561794e5abc0d6fc56af3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (reduce2ndCompose c n n t n0).",
                        "VernacExtend",
                        "48807b3f2ab5acd4c69b2c8915a5122d7878dfbb"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "switchPR",
            "line_nb": 1399,
            "steps": [
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as [| n].",
                        "VernacExtend",
                        "04b8b20a4692c4606b627fdb37d3152ea55d5ec9"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "switchIsPR",
            "line_nb": 1406,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun a b c : nat => nat_rec (fun _ : nat => nat) c (fun (n : nat) (_ : (fun _ : nat => nat) n) => b) a)).",
                        "VernacExtend",
                        "5461661d530811e51faf6a7dfc98a6ff7c9ee8cd"
                    ]
                },
                {
                    "command": [
                        "apply ind2ParamIsPR with (f := fun _ _ b c : nat => b) (g := fun b c : nat => c).",
                        "VernacExtend",
                        "8b48de6e404af83fe019c60e9490197f73f2a272"
                    ]
                },
                {
                    "command": [
                        "apply pi3_4IsPR.",
                        "VernacExtend",
                        "4d47efad201e96236b3b103926c176f186dde800"
                    ]
                },
                {
                    "command": [
                        "apply pi2_2IsPR.",
                        "VernacExtend",
                        "0862bd39580a3d0b83fb77cdd507ddcf5e34cc7f"
                    ]
                },
                {
                    "command": [
                        "induction H as (x, p).",
                        "VernacExtend",
                        "8e365c7e75bd074d4b6834825d45e1c02288e71d"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (fun a b c : nat => nat_rec (fun _ : nat => nat) c (fun _ _ : nat => b) a).",
                        "VernacExtend",
                        "7620cef8cac068adece5fdbd963a7385b2769524"
                    ]
                },
                {
                    "command": [
                        "apply p.",
                        "VernacExtend",
                        "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
                    ]
                },
                {
                    "command": [
                        "unfold switchPR in |- *.",
                        "VernacExtend",
                        "2b8d77a15cf79a75ac598fd4909e05bd13dfb7e7"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction c; reflexivity.",
                        "VernacExtend",
                        "abdf85891f4eb571a0dabf24b44d5c376c2fd652"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boundedSearch1",
            "line_nb": 1423,
            "steps": [
                {
                    "command": [
                        "unfold boundedSearch in |- *.",
                        "VernacExtend",
                        "99b344d594e431598b24d037d4c611a70f6fd3d1"
                    ]
                },
                {
                    "command": [
                        "intros P b.",
                        "VernacExtend",
                        "0190c54b2fda298ad10062b6e094e3a1087133b6"
                    ]
                },
                {
                    "command": [
                        "generalize (P b).",
                        "VernacExtend",
                        "709801f4d5c5c8d7c5d70a8425b18cbd357515d1"
                    ]
                },
                {
                    "command": [
                        "intros b0 x H.",
                        "VernacExtend",
                        "f16c494b774346774e5f697325dae93d1e78bd3b"
                    ]
                },
                {
                    "command": [
                        "clear P.",
                        "VernacExtend",
                        "09979dc635f62a4144acc1997516dcd0750123f1"
                    ]
                },
                {
                    "command": [
                        "induction b as [| b Hrecb].",
                        "VernacExtend",
                        "fec7634b02a794607b0227223842e0197019a2f0"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ H).",
                        "VernacExtend",
                        "b93451b1a30fa3f24613ad7b0441907b3427a80f"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec (boundedSearchHelp b0 b) b).",
                        "VernacExtend",
                        "30dd0a4024dc43ba2130519658f7dcbb4e8325bb"
                    ]
                },
                {
                    "command": [
                        "rewrite a in Hrecb.",
                        "VernacExtend",
                        "f70db42e6d6af760d6d3799f1d6d8db06911f44f"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec x b).",
                        "VernacExtend",
                        "06f800cd87a3dd04434059de01acb417c58cdc0e"
                    ]
                },
                {
                    "command": [
                        "rewrite a0.",
                        "VernacExtend",
                        "878ace771130763fd02fc3b15d151f261e4941ca"
                    ]
                },
                {
                    "command": [
                        "induction (b0 b).",
                        "VernacExtend",
                        "b02f929bae8d08ea5640200582248f4eabd23e9b"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl b).",
                        "VernacExtend",
                        "166bbfaac3d914249d6cd330c7758b70159d0def"
                    ]
                },
                {
                    "command": [
                        "rewrite a0 in H.",
                        "VernacExtend",
                        "854a6a990bc2c07be9d35073c8e1e5f476078718"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Hrecb.",
                        "VernacExtend",
                        "80670c41dde2e82ba232122d512977ca4333ade0"
                    ]
                },
                {
                    "command": [
                        "induction (b0 b).",
                        "VernacExtend",
                        "b02f929bae8d08ea5640200582248f4eabd23e9b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (x <= b).",
                        "VernacExtend",
                        "5b6ee2f458d00381f957f9114912acc7266502dc"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sm_le.",
                        "VernacExtend",
                        "354c1d072708776c26f2aab2afa0945822d0815b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction (le_lt_or_eq _ _ H0).",
                        "VernacExtend",
                        "86cf13b389eca13e2e02416cb22c7982f40bd28d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "elim b1.",
                        "VernacExtend",
                        "e56693198c91ed42bdd9da7d5e65f768de914997"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Hrecb.",
                        "VernacExtend",
                        "80670c41dde2e82ba232122d512977ca4333ade0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boundedSearch2",
            "line_nb": 1455,
            "steps": [
                {
                    "command": [
                        "unfold boundedSearch in |- *.",
                        "VernacExtend",
                        "99b344d594e431598b24d037d4c611a70f6fd3d1"
                    ]
                },
                {
                    "command": [
                        "intros P b.",
                        "VernacExtend",
                        "0190c54b2fda298ad10062b6e094e3a1087133b6"
                    ]
                },
                {
                    "command": [
                        "assert (forall P : naryRel 1, boundedSearchHelp P b = b \\/ P (boundedSearchHelp P b) = true).",
                        "VernacExtend",
                        "efd27a96b471996c9ef79a1690bccc950cdcf1c0"
                    ]
                },
                {
                    "command": [
                        "clear P.",
                        "VernacExtend",
                        "09979dc635f62a4144acc1997516dcd0750123f1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction b as [| b Hrecb].",
                        "VernacExtend",
                        "fec7634b02a794607b0227223842e0197019a2f0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (P b = true \\/ P b = false).",
                        "VernacExtend",
                        "0a58338c76404b77b196b2c1174a09e6733d9864"
                    ]
                },
                {
                    "command": [
                        "induction (P b); auto.",
                        "VernacExtend",
                        "a10b43cbbc1c815990495eed8d62e4ac916f9bc4"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec (boundedSearchHelp P b) b).",
                        "VernacExtend",
                        "d7187f7ffc50a221b4b840c482b525a3a8b68db1"
                    ]
                },
                {
                    "command": [
                        "induction H as [H| H].",
                        "VernacExtend",
                        "f091deeed9e9331b9e5f76b40f2e2dd9e1892475"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "induction Hrecb as [H0| H0].",
                        "VernacExtend",
                        "18eb445c893e76ac8ac10762bff89904f9e52f69"
                    ]
                },
                {
                    "command": [
                        "elim b0.",
                        "VernacExtend",
                        "4506652c796867e8c9be690f8925bec68461304f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boundSearchIsPR",
            "line_nb": 1480,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold boundedSearch in |- *.",
                        "VernacExtend",
                        "99b344d594e431598b24d037d4c611a70f6fd3d1"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 (fun b c : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b)).",
                        "VernacExtend",
                        "1d089c6cf403a5dee69389ede4379d411e4fc9d0"
                    ]
                },
                {
                    "command": [
                        "apply ind1ParamIsPR with (g := fun _ : nat => 0) (f := fun b0 Hrecb c : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)).",
                        "VernacExtend",
                        "b12dab7c70ef99c5045c7c1bbfb835b45328d636"
                    ]
                },
                {
                    "command": [
                        "unfold isPRrel in H.",
                        "VernacExtend",
                        "36ad334b6765ff7d5190d32c9b21dd518e2a171a"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 3 (fun b0 Hrecb c : nat => switchPR (charFunction 2 beq_nat Hrecb b0) (bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) Hrecb)).",
                        "VernacExtend",
                        "5c2d909ce4f47ee3675a1f8fd716acaa25006803"
                    ]
                },
                {
                    "command": [
                        "apply compose3_3IsPR with (g := switchPR) (f1 := fun b0 Hrecb c : nat => charFunction 2 beq_nat Hrecb b0) (f2 := fun b0 Hrecb c : nat => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (f3 := fun b0 Hrecb c : nat => Hrecb).",
                        "VernacExtend",
                        "691e36dfbb8779f2e6101e1642aac759248e1006"
                    ]
                },
                {
                    "command": [
                        "apply filter110IsPR with (g := fun b0 Hrecb : nat => charFunction 2 beq_nat Hrecb b0).",
                        "VernacExtend",
                        "d28d5b07480de685e41238aca623bebceb87f575"
                    ]
                },
                {
                    "command": [
                        "apply swapIsPR.",
                        "VernacExtend",
                        "df1101069b402c0319f06625614023d04b616873"
                    ]
                },
                {
                    "command": [
                        "apply eqIsPR.",
                        "VernacExtend",
                        "493018d16fb870ceb55150454019ccac18f41f8a"
                    ]
                },
                {
                    "command": [
                        "apply filter101IsPR with (g := fun b0 c : nat => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)).",
                        "VernacExtend",
                        "01522420e07b2653ffb565caf1e3835f0e2c2699"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 2 (fun b0 c : nat => switchPR (charFunction 2 P c b0) b0 (S b0))).",
                        "VernacExtend",
                        "618f42ebfc9e9562f9c11d3e833617835aded771"
                    ]
                },
                {
                    "command": [
                        "apply compose2_3IsPR with (g := switchPR) (f1 := fun b0 c : nat => charFunction 2 P c b0) (f2 := fun b0 c : nat => b0) (f3 := fun b0 c : nat => S b0).",
                        "VernacExtend",
                        "9d5280a5df6eb3a30c529cbd4352e9f6b33e9cd0"
                    ]
                },
                {
                    "command": [
                        "apply swapIsPR.",
                        "VernacExtend",
                        "df1101069b402c0319f06625614023d04b616873"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply pi1_2IsPR.",
                        "VernacExtend",
                        "de83e3a673d46ec194b97a67a98b94cf405137bf"
                    ]
                },
                {
                    "command": [
                        "apply filter10IsPR.",
                        "VernacExtend",
                        "a511891d7a43751c68939783b674e14f242f8594"
                    ]
                },
                {
                    "command": [
                        "apply succIsPR.",
                        "VernacExtend",
                        "8bfc3f4d0ef3b0bdd90dab2898a992eb6e87c92c"
                    ]
                },
                {
                    "command": [
                        "apply switchIsPR.",
                        "VernacExtend",
                        "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, p).",
                        "VernacExtend",
                        "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (fun b0 c : nat => switchPR (charFunction 2 P c b0) b0 (S b0)).",
                        "VernacExtend",
                        "59304f2d7c31f344200fefa5e9788cf7d668860f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (P c0 c); reflexivity.",
                        "VernacExtend",
                        "d156fbbee713379b621dc938985edcac07fb87b6"
                    ]
                },
                {
                    "command": [
                        "apply pi2_3IsPR.",
                        "VernacExtend",
                        "b556a10eda38792ce0fb0989e9246a2b09b60d23"
                    ]
                },
                {
                    "command": [
                        "apply switchIsPR.",
                        "VernacExtend",
                        "7b5d2ec2b1d37cbe480c313dc5f99ab6809a396f"
                    ]
                },
                {
                    "command": [
                        "induction H0 as (x, p).",
                        "VernacExtend",
                        "2c132cc6baf80dd683b88abacb86bc40e7ba18c4"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (fun b0 Hrecb c : nat => switchPR (charFunction 2 beq_nat Hrecb b0) (bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) Hrecb).",
                        "VernacExtend",
                        "cb2aad3fb7aa8a6e63b340ebedcb5ce8842d8fda"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec c0 c).",
                        "VernacExtend",
                        "aebd0b531e95afd05a03625515e09cc8e74f66d5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- a.",
                        "VernacExtend",
                        "fb92fcc7bca1026dd96419778714d1fefc86a2fb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- beq_nat_refl.",
                        "VernacExtend",
                        "6483e653b28875693c3c92037ba92da24c711ae3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite beq_nat_not_refl.",
                        "VernacExtend",
                        "1233302f99cf1c86d83f4544c8d696eababc6902"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply const1_NIsPR.",
                        "VernacExtend",
                        "00c0b76d6f6c60e4e2e3bfe166558fe58f636da3"
                    ]
                },
                {
                    "command": [
                        "assert (isPR 1 (fun b : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P b b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b)).",
                        "VernacExtend",
                        "5e39437518ea1670e791b095bde5b6708802b0bd"
                    ]
                },
                {
                    "command": [
                        "apply compose1_2IsPR with (g := fun b c : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P c b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b) (f := fun b : nat => b) (f' := fun b : nat => b).",
                        "VernacExtend",
                        "67d8122cc4975d73007eac1e2f91e593cb350578"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "apply idIsPR.",
                        "VernacExtend",
                        "53dbd586054559f4d155667fb58fd24add718135"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "clear H0.",
                        "VernacExtend",
                        "fe72360cf92275fb4ba47f89dfeb905e6d21c4a9"
                    ]
                },
                {
                    "command": [
                        "induction H1 as (x, p).",
                        "VernacExtend",
                        "08ec86c4cca942236e8111200b8e9a72133604f9"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "apply extEqualTrans with (fun b : nat => nat_rec (fun _ : nat => nat) 0 (fun b0 Hrecb : nat => sumbool_rec (fun _ : {Hrecb = b0} + {Hrecb <> b0} => nat) (fun _ : Hrecb = b0 => bool_rec (fun _ : bool => nat) b0 (S b0) (P b b0)) (fun _ : Hrecb <> b0 => Hrecb) (eq_nat_dec Hrecb b0)) b).",
                        "VernacExtend",
                        "d3e14b89e3ca95da0e48411d564db4f70b7215c2"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "clear H x p.",
                        "VernacExtend",
                        "638d65388730b826678d4e1cfb468c05f73c91a6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (P c).",
                        "VernacExtend",
                        "53c5a5d19aea3b14ddb1cee77a3e843bf37ec048"
                    ]
                },
                {
                    "command": [
                        "intros b.",
                        "VernacExtend",
                        "45476e0fc5a2ecbf4e254186332d285aa1668368"
                    ]
                },
                {
                    "command": [
                        "clear P.",
                        "VernacExtend",
                        "09979dc635f62a4144acc1997516dcd0750123f1"
                    ]
                },
                {
                    "command": [
                        "induction c as [| c Hrecc].",
                        "VernacExtend",
                        "775b22ff02d1bbc4d4afdb9b0405050cad715144"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecc.",
                        "VernacExtend",
                        "e5ae9ab2bf5f243297131463c8547e6e43dfc524"
                    ]
                },
                {
                    "command": [
                        "induction (eq_nat_dec (boundedSearchHelp b c) c).",
                        "VernacExtend",
                        "3adf27659209cef361f443103e13a419d80b4a54"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (b c).",
                        "VernacExtend",
                        "79d3f035ff8cce04641ba5ae099de30f5f65a7f8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}