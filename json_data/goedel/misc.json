{
    "filename": "misc.v",
    "coq_project": "goedel",
    "vernac_cmds": [
        [
            "Require Import Eqdep_dec.",
            "VernacRequire",
            "3df4d5c5706856734a53d6d3e96f8d8cd6d87f23"
        ],
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Lemma inj_right_pair2 : forall A : Set, (forall x y : A, {x = y} + {x <> y}) -> forall (x : A) (P : A -> Set) (y y' : P x), existS P x y = existS P x y' -> y = y'.",
            "VernacStartTheoremProof",
            "352f43958ada64d0c1785ffb1a46ffb33f94b161"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (Proj := fun (e : sigS P) (def : P x) => match e with | existS x' dep => match H x' x with | left eqdep => eq_rec x' P dep x eqdep | _ => def end end) in *.",
            "VernacExtend",
            "55c80f2292144539004ae7e0d2b3be3b4489e9f7"
        ],
        [
            "cut (Proj (existS P x y) y = Proj (existS P x y') y).",
            "VernacExtend",
            "f3e252ca40c4462e0f54b40ff63cc07ed85d86df"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "induction (H x x).",
            "VernacExtend",
            "f2b5465c2ec03dd10729c692b7e4737f90938aed"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "set (B := K_dec_set H (fun z : x = x => eq_rec x P y x z = eq_rec x P y' x z -> eq_rec x P y x (refl_equal x) = eq_rec x P y' x (refl_equal x)) (fun z : eq_rec x P y x (refl_equal x) = eq_rec x P y' x (refl_equal x) => z) a e) in *.",
            "VernacExtend",
            "c6ff7471ccd708f23854ec6ea1ac839d92a10de4"
        ],
        [
            "apply B.",
            "VernacExtend",
            "e417e76f39dab20395efc4e3a702498d4330ce62"
        ],
        [
            "elim b.",
            "VernacExtend",
            "954e73d8a25006d790022abb5978a50d3a888a56"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "inj_right_pair2",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (Proj := fun (e : sigS P) (def : P x) => match e with | existS x' dep => match H x' x with | left eqdep => eq_rec x' P dep x eqdep | _ => def end end) in *.",
                        "VernacExtend",
                        "55c80f2292144539004ae7e0d2b3be3b4489e9f7"
                    ]
                },
                {
                    "command": [
                        "cut (Proj (existS P x y) y = Proj (existS P x y') y).",
                        "VernacExtend",
                        "f3e252ca40c4462e0f54b40ff63cc07ed85d86df"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "induction (H x x).",
                        "VernacExtend",
                        "f2b5465c2ec03dd10729c692b7e4737f90938aed"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "set (B := K_dec_set H (fun z : x = x => eq_rec x P y x z = eq_rec x P y' x z -> eq_rec x P y x (refl_equal x) = eq_rec x P y' x (refl_equal x)) (fun z : eq_rec x P y x (refl_equal x) = eq_rec x P y' x (refl_equal x) => z) a e) in *.",
                        "VernacExtend",
                        "c6ff7471ccd708f23854ec6ea1ac839d92a10de4"
                    ]
                },
                {
                    "command": [
                        "apply B.",
                        "VernacExtend",
                        "e417e76f39dab20395efc4e3a702498d4330ce62"
                    ]
                },
                {
                    "command": [
                        "elim b.",
                        "VernacExtend",
                        "954e73d8a25006d790022abb5978a50d3a888a56"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}